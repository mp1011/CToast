635311001714615632,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311001715083633,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311001715083633,"Parsed as literal","import"
635311001715083633,"Parsed as literal","file"
635311001715083633,"Parsed as literal"," 0"
635311001715083633,"Invalid operator","@import(file) -> 0","0"
635311001715083633,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311001715083633,"Parsed as literal","import"
635311001715083633,"Parsed as literal","file"
635311001715083633,"Parsed as literal"," 0"
635311001715239633,"StepEvaluate","->","Changed","Declared @import"
635311001715239633,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311001715239633,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311001715239633,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311001715239633,"Parsed as literal","operator"
635311001715239633,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311001715239633,"Parsed as literal","op"
635311001715239633,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311001715239633,"Parsed as literal","fn"
635311001715239633,"Parsed as literal",""
635311001715239633,"Invalid operator","@fn","12"
635311001715239633,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311001715239633,"Parsed as literal","fn"
635311001715239633,"Parsed as literal",""
635311001715239633,"Invalid operator","@fn","12"
635311001715239633,"Parsed as literal","@fn"
635311001715239633,"Parsed as literal"," 0"
635311001715239633,"Invalid operator","@operator(op,@fn) -> 0","0"
635311001715239633,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311001715239633,"Parsed as literal","operator"
635311001715239633,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311001715239633,"Parsed as literal","op"
635311001715239633,"Parsed as literal","@fn"
635311001715239633,"Parsed as literal"," 0"
635311001715239633,"StepEvaluate","->","Changed","Declared @operator"
635311001715239633,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311001715395634,"ParseInternal","'C:\Users\Miko\Documents\Visual Studio 2008\Projects\FPL\FPL\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","99","105","import","main.toast"
635311001715395634,"Parsed as literal","import"
635311001715395634,"Parsed as literal","main.toast"
635311001715395634,"StepEvaluate","@","Changed","@"
635311001715551634,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001715551634,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001715551634,"StepEvaluate",",","Unchanged",","
635311001715551634,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001715551634,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001715551634,"StepEvaluate","PAT@-M","Changed","[]"
635311001715551634,"StepEvaluate","SEL@import","Changed","[]"
635311001715551634,"StepEvaluate","@","Changed","[]"
635311001715551634,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311001715551634,"Parsed as literal","import"
635311001715707634,"Parsed as literal","'core.toast'"
635311001715707634,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311001715707634,"Parsed as literal","import"
635311001715707634,"Parsed as literal","'list.toast'"
635311001715707634,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311001715707634,"Parsed as literal","import"
635311001715707634,"Parsed as literal","'math.toast'"
635311001715707634,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311001715707634,"Parsed as literal","import"
635311001715707634,"Parsed as literal","'sorting.toast'"
635311001715707634,"ParseInternal","@makeList() -> 1,2,3","0","AssignmentOperator","0","14","@makeList() "," 1,2,3"
635311001715707634,"ParseInternal","@makeList() ","0","FunctionCallOperator","1","9","makeList","[]"
635311001715707634,"Parsed as literal","makeList"
635311001715707634,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311001715707634,"Parsed as literal",""
635311001715707634,"Parsed as literal",""
635311001715707634,"ParseInternal"," 1,2,3","14","CommaOperator","14","17"," 1","2,3"
635311001715707634,"Parsed as literal"," 1"
635311001715707634,"ParseInternal","2,3","17","CommaOperator","17","19","2","3"
635311001715707634,"Parsed as literal","2"
635311001715707634,"Parsed as literal","3"
635311001715707634,"Invalid operator","@makeList() -> 1,2,3","0"
635311001715707634,"ParseInternal","@makeList() ","0","FunctionDeclarationOperator","1","9","makeList","[]"
635311001715707634,"Parsed as literal","makeList"
635311001715707634,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311001715707634,"Parsed as literal",""
635311001715707634,"Parsed as literal",""
635311001715707634,"ParseInternal"," 1,2,3","14","CommaOperator","14","17"," 1","2,3"
635311001715707634,"Parsed as literal"," 1"
635311001715707634,"ParseInternal","2,3","17","CommaOperator","17","19","2","3"
635311001715707634,"Parsed as literal","2"
635311001715707634,"Parsed as literal","3"
635311001715707634,"StepEvaluate","@","Changed","@"
635311001715707634,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001715707634,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001715707634,"StepEvaluate",",","Unchanged",","
635311001715707634,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001715707634,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001715707634,"StepEvaluate","PAT@-M","Changed","[]"
635311001715707634,"StepEvaluate","SEL@import","Changed","[]"
635311001715707634,"StepEvaluate","@","Changed","[]"
635311001715707634,"ParseInternal","@ident(x)-> x","0","AssignmentOperator","0","11","@ident(x)"," x"
635311001715707634,"ParseInternal","@ident(x)","0","FunctionCallOperator","1","6","ident","x"
635311001715707634,"Parsed as literal","ident"
635311001715707634,"Parsed as literal","x"
635311001715707634,"Parsed as literal"," x"
635311001715707634,"Invalid operator","@ident(x)-> x","0"
635311001715707634,"ParseInternal","@ident(x)","0","FunctionDeclarationOperator","1","6","ident","x"
635311001715707634,"Parsed as literal","ident"
635311001715707634,"Parsed as literal","x"
635311001715707634,"Parsed as literal"," x"
635311001715707634,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311001715707634,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311001715863634,"Parsed as literal","map"
635311001715863634,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311001715863634,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311001715863634,"Parsed as literal","func"
635311001715863634,"Parsed as literal",""
635311001715863634,"Invalid operator","@func","4"
635311001715863634,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311001715863634,"Parsed as literal","func"
635311001715863634,"Parsed as literal",""
635311001715863634,"Invalid operator","@func","4"
635311001715863634,"Parsed as literal","@func"
635311001715863634,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311001715863634,"Parsed as literal",""
635311001715863634,"Parsed as literal",""
635311001715863634,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311001715863634,"Parsed as literal",""
635311001715863634,"Parsed as literal",""
635311001715863634,"Invalid operator","@map(@func, []) -> []","0"
635311001715863634,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311001715863634,"Parsed as literal","map"
635311001715863634,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311001715863634,"Parsed as literal","@func"
635311001715863634,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311001715863634,"Parsed as literal",""
635311001715863634,"Parsed as literal",""
635311001715863634,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311001715863634,"Parsed as literal",""
635311001715863634,"Parsed as literal",""
635311001715863634,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311001715863634,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311001715863634,"Parsed as literal","map"
635311001715863634,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311001715863634,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311001715863634,"Parsed as literal","func"
635311001715863634,"Parsed as literal",""
635311001715863634,"Invalid operator","@func","4"
635311001715863634,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311001715863634,"Parsed as literal","func"
635311001715863634,"Parsed as literal",""
635311001715863634,"Invalid operator","@func","4"
635311001715863634,"Parsed as literal","@func"
635311001715863634,"Parsed as literal"," list"
635311001715863634,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311001715863634,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311001715863634,"Parsed as literal","func"
635311001715863634,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311001715863634,"Parsed as literal",""
635311001715863634,"Parsed as literal","list"
635311001715863634,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311001715863634,"Parsed as literal","map"
635311001715863634,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311001715863634,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311001715863634,"Parsed as literal","func"
635311001715863634,"Parsed as literal",""
635311001716019635,"Invalid operator","@func","41"
635311001716019635,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311001716019635,"Parsed as literal","func"
635311001716019635,"Parsed as literal",""
635311001716019635,"Invalid operator","@func","41"
635311001716019635,"Parsed as literal","@func"
635311001716019635,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311001716019635,"Parsed as literal",""
635311001716019635,"Parsed as literal","list"
635311001716019635,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311001716019635,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311001716019635,"Parsed as literal","map"
635311001716019635,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311001716019635,"Parsed as literal","@func"
635311001716019635,"Parsed as literal"," list"
635311001716019635,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311001716019635,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311001716019635,"Parsed as literal","func"
635311001716019635,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311001716019635,"Parsed as literal",""
635311001716019635,"Parsed as literal","list"
635311001716019635,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311001716019635,"Parsed as literal","map"
635311001716019635,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311001716019635,"Parsed as literal","@func"
635311001716019635,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311001716019635,"Parsed as literal",""
635311001716019635,"Parsed as literal","list"
635311001716019635,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311001716019635,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311001716019635,"Parsed as literal","filter"
635311001716019635,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311001716019635,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311001716019635,"Parsed as literal","pred"
635311001716019635,"Parsed as literal",""
635311001716019635,"Invalid operator","@pred","7"
635311001716019635,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311001716019635,"Parsed as literal","pred"
635311001716019635,"Parsed as literal",""
635311001716019635,"Invalid operator","@pred","7"
635311001716019635,"Parsed as literal","@pred"
635311001716019635,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311001716019635,"Parsed as literal",""
635311001716019635,"Parsed as literal",""
635311001716019635,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311001716019635,"Parsed as literal",""
635311001716019635,"Parsed as literal",""
635311001716019635,"Invalid operator","@filter(@pred,[]) -> []","0"
635311001716019635,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311001716019635,"Parsed as literal","filter"
635311001716019635,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311001716019635,"Parsed as literal","@pred"
635311001716019635,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311001716019635,"Parsed as literal",""
635311001716019635,"Parsed as literal",""
635311001716175635,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311001716175635,"Parsed as literal",""
635311001716175635,"Parsed as literal",""
635311001716175635,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311001716175635,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311001716175635,"Parsed as literal","filter"
635311001716175635,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311001716175635,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311001716175635,"Parsed as literal","pred"
635311001716175635,"Parsed as literal",""
635311001716175635,"Invalid operator","@pred","7"
635311001716175635,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311001716175635,"Parsed as literal","pred"
635311001716175635,"Parsed as literal",""
635311001716175635,"Invalid operator","@pred","7"
635311001716175635,"Parsed as literal","@pred"
635311001716175635,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311001716175635,"Parsed as literal"," list "
635311001716175635,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311001716175635,"Parsed as literal","pred"
635311001716175635,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311001716175635,"Parsed as literal",""
635311001716175635,"Parsed as literal","list"
635311001716175635,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311001716175635,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311001716175635,"Parsed as literal"," "
635311001716175635,"Parsed as literal","list "
635311001716175635,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311001716175635,"Parsed as literal","filter"
635311001716175635,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311001716175635,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311001716175635,"Parsed as literal","pred"
635311001716175635,"Parsed as literal",""
635311001716175635,"Invalid operator","@pred","56"
635311001716175635,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311001716175635,"Parsed as literal","pred"
635311001716175635,"Parsed as literal",""
635311001716175635,"Invalid operator","@pred","56"
635311001716175635,"Parsed as literal","@pred"
635311001716175635,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311001716175635,"Parsed as literal"," "
635311001716175635,"Parsed as literal","list"
635311001716175635,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311001716175635,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311001716175635,"Parsed as literal","filter"
635311001716175635,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311001716175635,"Parsed as literal","@pred"
635311001716175635,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311001716175635,"Parsed as literal"," list "
635311001716331635,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311001716331635,"Parsed as literal","pred"
635311001716331635,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311001716331635,"Parsed as literal",""
635311001716331635,"Parsed as literal","list"
635311001716331635,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311001716331635,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311001716331635,"Parsed as literal"," "
635311001716331635,"Parsed as literal","list "
635311001716331635,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311001716331635,"Parsed as literal","filter"
635311001716331635,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311001716331635,"Parsed as literal","@pred"
635311001716331635,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311001716331635,"Parsed as literal"," "
635311001716331635,"Parsed as literal","list"
635311001716331635,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311001716331635,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311001716331635,"Parsed as literal","filter"
635311001716331635,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311001716331635,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311001716331635,"Parsed as literal","pred"
635311001716331635,"Parsed as literal",""
635311001716331635,"Invalid operator","@pred","7"
635311001716331635,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311001716331635,"Parsed as literal","pred"
635311001716331635,"Parsed as literal",""
635311001716331635,"Invalid operator","@pred","7"
635311001716331635,"Parsed as literal","@pred"
635311001716331635,"Parsed as literal","list"
635311001716331635,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311001716331635,"Parsed as literal","filter"
635311001716331635,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311001716331635,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311001716331635,"Parsed as literal","pred"
635311001716331635,"Parsed as literal",""
635311001716331635,"Invalid operator","@pred","30"
635311001716331635,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311001716331635,"Parsed as literal","pred"
635311001716331635,"Parsed as literal",""
635311001716331635,"Invalid operator","@pred","30"
635311001716331635,"Parsed as literal","@pred"
635311001716331635,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311001716331635,"Parsed as literal",""
635311001716331635,"Parsed as literal","list"
635311001716331635,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311001716331635,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311001716331635,"Parsed as literal","filter"
635311001716331635,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311001716331635,"Parsed as literal","@pred"
635311001716331635,"Parsed as literal","list"
635311001716331635,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311001716331635,"Parsed as literal","filter"
635311001716331635,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311001716487636,"Parsed as literal","@pred"
635311001716487636,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311001716487636,"Parsed as literal",""
635311001716487636,"Parsed as literal","list"
635311001716487636,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311001716487636,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311001716487636,"Parsed as literal","call"
635311001716487636,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311001716487636,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311001716487636,"Parsed as literal","fun"
635311001716487636,"Parsed as literal",""
635311001716487636,"Invalid operator","@fun","5"
635311001716487636,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311001716487636,"Parsed as literal","fun"
635311001716487636,"Parsed as literal",""
635311001716487636,"Invalid operator","@fun","5"
635311001716487636,"Parsed as literal","@fun"
635311001716487636,"Parsed as literal","arg"
635311001716487636,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311001716487636,"Parsed as literal","fun"
635311001716487636,"Parsed as literal","arg"
635311001716487636,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311001716487636,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311001716487636,"Parsed as literal","call"
635311001716487636,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311001716487636,"Parsed as literal","@fun"
635311001716487636,"Parsed as literal","arg"
635311001716487636,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311001716487636,"Parsed as literal","fun"
635311001716487636,"Parsed as literal","arg"
635311001716487636,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311001716487636,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311001716487636,"Parsed as literal","curry"
635311001716487636,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311001716487636,"Parsed as literal","seed"
635311001716487636,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311001716487636,"Parsed as literal",""
635311001716487636,"Parsed as literal",""
635311001716487636,"Parsed as literal"," seed"
635311001716487636,"Invalid operator","@curry(seed,[]) -> seed","0"
635311001716487636,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311001716487636,"Parsed as literal","curry"
635311001716487636,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311001716487636,"Parsed as literal","seed"
635311001716487636,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311001716487636,"Parsed as literal",""
635311001716487636,"Parsed as literal",""
635311001716487636,"Parsed as literal"," seed"
635311001716487636,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311001716487636,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311001716487636,"Parsed as literal","curry"
635311001716487636,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311001716487636,"Parsed as literal","seed"
635311001716487636,"Parsed as literal"," funcList"
635311001716643636,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311001716643636,"Parsed as literal","curry"
635311001716643636,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311001716643636,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311001716643636,"Parsed as literal","call"
635311001716643636,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311001716643636,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311001716643636,"Parsed as literal",""
635311001716643636,"Parsed as literal","funcList"
635311001716643636,"Parsed as literal","seed"
635311001716643636,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311001716643636,"Parsed as literal",""
635311001716643636,"Parsed as literal","funcList"
635311001716643636,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311001716643636,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311001716643636,"Parsed as literal","curry"
635311001716643636,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311001716643636,"Parsed as literal","seed"
635311001716643636,"Parsed as literal"," funcList"
635311001716643636,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311001716643636,"Parsed as literal","curry"
635311001716643636,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311001716643636,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311001716643636,"Parsed as literal","call"
635311001716643636,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311001716643636,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311001716643636,"Parsed as literal",""
635311001716643636,"Parsed as literal","funcList"
635311001716643636,"Parsed as literal","seed"
635311001716643636,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311001716643636,"Parsed as literal",""
635311001716643636,"Parsed as literal","funcList"
635311001716643636,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311001716643636,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311001716643636,"Parsed as literal","fold"
635311001716643636,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311001716643636,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311001716643636,"Parsed as literal","func"
635311001716643636,"Parsed as literal",""
635311001716643636,"Invalid operator","@func","5"
635311001716643636,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311001716643636,"Parsed as literal","func"
635311001716643636,"Parsed as literal",""
635311001716643636,"Invalid operator","@func","5"
635311001716643636,"Parsed as literal","@func"
635311001716643636,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311001716643636,"Parsed as literal",""
635311001716643636,"Parsed as literal",""
635311001716643636,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311001716643636,"Parsed as literal",""
635311001716643636,"Parsed as literal",""
635311001716643636,"Invalid operator","@fold(@func,[]) -> []","0"
635311001716643636,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311001716643636,"Parsed as literal","fold"
635311001716643636,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311001716643636,"Parsed as literal","@func"
635311001716799636,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311001716799636,"Parsed as literal",""
635311001716799636,"Parsed as literal",""
635311001716799636,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311001716799636,"Parsed as literal",""
635311001716799636,"Parsed as literal",""
635311001716799636,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311001716799636,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311001716799636,"Parsed as literal","fold"
635311001716799636,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311001716799636,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311001716799636,"Parsed as literal","func"
635311001716799636,"Parsed as literal",""
635311001716799636,"Invalid operator","@func","5"
635311001716799636,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311001716799636,"Parsed as literal","func"
635311001716799636,"Parsed as literal",""
635311001716799636,"Invalid operator","@func","5"
635311001716799636,"Parsed as literal","@func"
635311001716799636,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311001716799636,"Parsed as literal","list"
635311001716799636,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311001716799636,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311001716799636,"Parsed as literal",""
635311001716799636,"Parsed as literal","list"
635311001716799636,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311001716799636,"Parsed as literal",""
635311001716799636,"Parsed as literal",""
635311001716799636,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311001716799636,"Parsed as literal"," "
635311001716799636,"Parsed as literal","list"
635311001716799636,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311001716799636,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311001716799636,"Parsed as literal","fold"
635311001716799636,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311001716799636,"Parsed as literal","@func"
635311001716799636,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311001716799636,"Parsed as literal","list"
635311001716799636,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311001716799636,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311001716799636,"Parsed as literal",""
635311001716799636,"Parsed as literal","list"
635311001716799636,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311001716799636,"Parsed as literal",""
635311001716799636,"Parsed as literal",""
635311001716799636,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311001716799636,"Parsed as literal"," "
635311001716799636,"Parsed as literal","list"
635311001716799636,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311001716799636,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311001716799636,"Parsed as literal","fold"
635311001716799636,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311001716799636,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311001716799636,"Parsed as literal","func"
635311001716799636,"Parsed as literal",""
635311001716955636,"Invalid operator","@func","5"
635311001716955636,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311001716955636,"Parsed as literal","func"
635311001716955636,"Parsed as literal",""
635311001716955636,"Invalid operator","@func","5"
635311001716955636,"Parsed as literal","@func"
635311001716955636,"Parsed as literal","list"
635311001716955636,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311001716955636,"Parsed as literal","fold"
635311001716955636,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311001716955636,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311001716955636,"Parsed as literal","func"
635311001716955636,"Parsed as literal",""
635311001716955636,"Invalid operator","@func","26"
635311001716955636,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311001716955636,"Parsed as literal","func"
635311001716955636,"Parsed as literal",""
635311001716955636,"Invalid operator","@func","26"
635311001716955636,"Parsed as literal","@func"
635311001716955636,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311001716955636,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311001716955636,"Parsed as literal","func"
635311001716955636,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311001716955636,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311001716955636,"Parsed as literal",""
635311001716955636,"Parsed as literal","list"
635311001716955636,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311001716955636,"Parsed as literal",""
635311001716955636,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311001716955636,"Parsed as literal",""
635311001716955636,"Parsed as literal","list"
635311001716955636,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311001716955636,"Parsed as literal"," "
635311001716955636,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311001716955636,"Parsed as literal",""
635311001716955636,"Parsed as literal","list"
635311001716955636,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311001716955636,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311001716955636,"Parsed as literal","fold"
635311001716955636,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311001716955636,"Parsed as literal","@func"
635311001716955636,"Parsed as literal","list"
635311001716955636,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311001716955636,"Parsed as literal","fold"
635311001716955636,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311001716955636,"Parsed as literal","@func"
635311001716955636,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311001716955636,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311001716955636,"Parsed as literal","func"
635311001716955636,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311001716955636,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311001716955636,"Parsed as literal",""
635311001716955636,"Parsed as literal","list"
635311001716955636,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311001716955636,"Parsed as literal",""
635311001717111637,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311001717111637,"Parsed as literal",""
635311001717111637,"Parsed as literal","list"
635311001717111637,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311001717111637,"Parsed as literal"," "
635311001717111637,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311001717111637,"Parsed as literal",""
635311001717111637,"Parsed as literal","list"
635311001717111637,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311001717111637,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311001717111637,"Parsed as literal","foldr"
635311001717111637,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311001717111637,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311001717111637,"Parsed as literal","func"
635311001717111637,"Parsed as literal",""
635311001717111637,"Invalid operator","@func","6"
635311001717111637,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311001717111637,"Parsed as literal","func"
635311001717111637,"Parsed as literal",""
635311001717111637,"Invalid operator","@func","6"
635311001717111637,"Parsed as literal","@func"
635311001717111637,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311001717111637,"Parsed as literal",""
635311001717111637,"Parsed as literal",""
635311001717111637,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311001717111637,"Parsed as literal",""
635311001717111637,"Parsed as literal",""
635311001717111637,"Invalid operator","@foldr(@func,[]) -> []","0"
635311001717111637,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311001717111637,"Parsed as literal","foldr"
635311001717111637,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311001717111637,"Parsed as literal","@func"
635311001717111637,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311001717111637,"Parsed as literal",""
635311001717111637,"Parsed as literal",""
635311001717111637,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311001717111637,"Parsed as literal",""
635311001717111637,"Parsed as literal",""
635311001717111637,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311001717111637,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311001717111637,"Parsed as literal","foldr"
635311001717111637,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311001717111637,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311001717111637,"Parsed as literal","func"
635311001717111637,"Parsed as literal",""
635311001717111637,"Invalid operator","@func","6"
635311001717111637,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311001717111637,"Parsed as literal","func"
635311001717111637,"Parsed as literal",""
635311001717111637,"Invalid operator","@func","6"
635311001717111637,"Parsed as literal","@func"
635311001717111637,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311001717111637,"Parsed as literal","list"
635311001717111637,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311001717267637,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311001717267637,"Parsed as literal",""
635311001717267637,"Parsed as literal","list"
635311001717267637,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311001717267637,"Parsed as literal",""
635311001717267637,"Parsed as literal",""
635311001717267637,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311001717267637,"Parsed as literal"," "
635311001717267637,"Parsed as literal","list"
635311001717267637,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311001717267637,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311001717267637,"Parsed as literal","foldr"
635311001717267637,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311001717267637,"Parsed as literal","@func"
635311001717267637,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311001717267637,"Parsed as literal","list"
635311001717267637,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311001717267637,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311001717267637,"Parsed as literal",""
635311001717267637,"Parsed as literal","list"
635311001717267637,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311001717267637,"Parsed as literal",""
635311001717267637,"Parsed as literal",""
635311001717267637,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311001717267637,"Parsed as literal"," "
635311001717267637,"Parsed as literal","list"
635311001717267637,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311001717267637,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311001717267637,"Parsed as literal","foldr"
635311001717267637,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311001717267637,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311001717267637,"Parsed as literal","func"
635311001717267637,"Parsed as literal",""
635311001717267637,"Invalid operator","@func","6"
635311001717267637,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311001717267637,"Parsed as literal","func"
635311001717267637,"Parsed as literal",""
635311001717267637,"Invalid operator","@func","6"
635311001717267637,"Parsed as literal","@func"
635311001717267637,"Parsed as literal","list"
635311001717267637,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311001717267637,"Parsed as literal","func"
635311001717267637,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311001717267637,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311001717267637,"Parsed as literal","foldr"
635311001717267637,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311001717267637,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311001717267637,"Parsed as literal","func"
635311001717423637,"Parsed as literal",""
635311001717423637,"Invalid operator","@func","33"
635311001717423637,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311001717423637,"Parsed as literal","func"
635311001717423637,"Parsed as literal",""
635311001717423637,"Invalid operator","@func","33"
635311001717423637,"Parsed as literal","@func"
635311001717423637,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311001717423637,"Parsed as literal","superHead"
635311001717423637,"Parsed as literal","list"
635311001717423637,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311001717423637,"Parsed as literal","last"
635311001717423637,"Parsed as literal","list"
635311001717423637,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311001717423637,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311001717423637,"Parsed as literal","foldr"
635311001717423637,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311001717423637,"Parsed as literal","@func"
635311001717423637,"Parsed as literal","list"
635311001717423637,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311001717423637,"Parsed as literal","func"
635311001717423637,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311001717423637,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311001717423637,"Parsed as literal","foldr"
635311001717423637,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311001717423637,"Parsed as literal","@func"
635311001717423637,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311001717423637,"Parsed as literal","superHead"
635311001717423637,"Parsed as literal","list"
635311001717423637,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311001717423637,"Parsed as literal","last"
635311001717423637,"Parsed as literal","list"
635311001717423637,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311001717423637,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311001717423637,"Parsed as literal","superHead"
635311001717423637,"Parsed as literal","list"
635311001717423637,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311001717423637,"Parsed as literal","reverse"
635311001717423637,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311001717423637,"Parsed as literal",""
635311001717423637,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311001717423637,"Parsed as literal","reverse"
635311001717423637,"Parsed as literal","list"
635311001717423637,"StepEvaluate","->","Changed","Declared @ident"
635311001717423637,"StepEvaluate","Declared @ident","Unchanged","Declared @ident"
635311001717423637,"StepEvaluate","->","Changed","Declared @map"
635311001717423637,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311001717579637,"StepEvaluate","->","Changed","Declared @map"
635311001717579637,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311001717579637,"StepEvaluate","->","Changed","Declared @filter"
635311001717579637,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311001717579637,"StepEvaluate","->","Changed","Declared @filter"
635311001717579637,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311001717579637,"StepEvaluate","->","Changed","Declared @filter"
635311001717579637,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311001717579637,"StepEvaluate","->","Changed","Declared @call"
635311001717579637,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311001717579637,"StepEvaluate","->","Changed","Declared @curry"
635311001717579637,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311001717579637,"StepEvaluate","->","Changed","Declared @curry"
635311001717579637,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311001717579637,"StepEvaluate","->","Changed","Declared @fold"
635311001717579637,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311001717579637,"StepEvaluate","->","Changed","Declared @fold"
635311001717579637,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311001717579637,"StepEvaluate","->","Changed","Declared @fold"
635311001717579637,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311001717579637,"StepEvaluate","->","Changed","Declared @foldr"
635311001717579637,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311001717579637,"StepEvaluate","->","Changed","Declared @foldr"
635311001717579637,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311001717579637,"StepEvaluate","->","Changed","Declared @foldr"
635311001717579637,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311001717579637,"StepEvaluate","==","Unchanged","=="
635311001717579637,"StepEvaluate","@","Changed","@"
635311001717579637,"StepEvaluate","@","Changed","@"
635311001717579637,"StepEvaluate","==","Unchanged","=="
635311001717579637,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311001717579637,"StepEvaluate","superHead","Unchanged","superHead"
635311001717579637,"StepEvaluate",",","Unchanged",","
635311001717579637,"StepEvaluate","list","Unchanged","list"
635311001717579637,"StepEvaluate","@","Changed","@"
635311001717579637,"StepEvaluate","==","Unchanged","=="
635311001717579637,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311001717735638,"StepEvaluate","superHead","Unchanged","superHead"
635311001717735638,"StepEvaluate",",","Unchanged",","
635311001717735638,"StepEvaluate","list","Unchanged","list"
635311001717735638,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311001717735638,"StepEvaluate","reverse","Unchanged","reverse"
635311001717735638,"StepEvaluate",",","Unchanged",","
635311001717735638,"StepEvaluate","tail","Unchanged","tail"
635311001717735638,"StepEvaluate","@","Changed","@"
635311001717735638,"StepEvaluate","==","Unchanged","=="
635311001717735638,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311001717735638,"StepEvaluate","superHead","Unchanged","superHead"
635311001717735638,"StepEvaluate",",","Unchanged",","
635311001717735638,"StepEvaluate","list","Unchanged","list"
635311001717735638,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311001717735638,"StepEvaluate","reverse","Unchanged","reverse"
635311001717735638,"StepEvaluate",",","Unchanged",","
635311001717735638,"StepEvaluate","tail","Unchanged","tail"
635311001717735638,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311001717735638,"StepEvaluate","reverse","Unchanged","reverse"
635311001717735638,"StepEvaluate",",","Unchanged",","
635311001717735638,"StepEvaluate","list","Unchanged","list"
635311001717735638,"StepEvaluate","[]","Changed","File imported"
635311001717735638,"StepEvaluate","File imported","Unchanged","File imported"
635311001717735638,"StepEvaluate","@","Changed","@"
635311001717735638,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001717735638,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001717735638,"StepEvaluate",",","Unchanged",","
635311001717735638,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001717735638,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001717735638,"StepEvaluate","PAT@-M","Changed","[]"
635311001717735638,"StepEvaluate","SEL@import","Changed","[]"
635311001717735638,"StepEvaluate","@","Changed","[]"
635311001717735638,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311001717735638,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311001717735638,"Parsed as literal","zipWith"
635311001717735638,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311001717735638,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311001717735638,"Parsed as literal","func"
635311001717735638,"Parsed as literal",""
635311001717735638,"Invalid operator","@func","8"
635311001717735638,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311001717735638,"Parsed as literal","func"
635311001717735638,"Parsed as literal",""
635311001717735638,"Invalid operator","@func","8"
635311001717735638,"Parsed as literal","@func"
635311001717735638,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311001717735638,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311001717735638,"Parsed as literal",""
635311001717735638,"Parsed as literal",""
635311001717735638,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311001717735638,"Parsed as literal",""
635311001717735638,"Parsed as literal",""
635311001717735638,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311001717891638,"Parsed as literal",""
635311001717891638,"Parsed as literal",""
635311001717891638,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311001717891638,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311001717891638,"Parsed as literal","zipWith"
635311001717891638,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311001717891638,"Parsed as literal","@func"
635311001717891638,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311001717891638,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311001717891638,"Parsed as literal",""
635311001717891638,"Parsed as literal",""
635311001717891638,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311001717891638,"Parsed as literal",""
635311001717891638,"Parsed as literal",""
635311001717891638,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311001717891638,"Parsed as literal",""
635311001717891638,"Parsed as literal",""
635311001717891638,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311001717891638,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311001717891638,"Parsed as literal","zipWith"
635311001717891638,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311001717891638,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311001717891638,"Parsed as literal","func"
635311001717891638,"Parsed as literal",""
635311001717891638,"Invalid operator","@func","8"
635311001717891638,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311001717891638,"Parsed as literal","func"
635311001717891638,"Parsed as literal",""
635311001717891638,"Invalid operator","@func","8"
635311001717891638,"Parsed as literal","@func"
635311001717891638,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311001717891638,"Parsed as literal","list1"
635311001717891638,"Parsed as literal","list2"
635311001717891638,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311001717891638,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311001717891638,"Parsed as literal","func"
635311001717891638,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311001717891638,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311001717891638,"Parsed as literal",""
635311001717891638,"Parsed as literal","list1"
635311001717891638,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311001717891638,"Parsed as literal",""
635311001717891638,"Parsed as literal","list2"
635311001717891638,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311001717891638,"Parsed as literal","zipWith"
635311001717891638,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311001717891638,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311001717891638,"Parsed as literal","func"
635311001717891638,"Parsed as literal",""
635311001717891638,"Invalid operator","@func","64"
635311001717891638,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311001717891638,"Parsed as literal","func"
635311001717891638,"Parsed as literal",""
635311001717891638,"Invalid operator","@func","64"
635311001718047638,"Parsed as literal","@func"
635311001718047638,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311001718047638,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal","list1"
635311001718047638,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal","list2"
635311001718047638,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311001718047638,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311001718047638,"Parsed as literal","zipWith"
635311001718047638,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311001718047638,"Parsed as literal","@func"
635311001718047638,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311001718047638,"Parsed as literal","list1"
635311001718047638,"Parsed as literal","list2"
635311001718047638,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311001718047638,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311001718047638,"Parsed as literal","func"
635311001718047638,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311001718047638,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal","list1"
635311001718047638,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal","list2"
635311001718047638,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311001718047638,"Parsed as literal","zipWith"
635311001718047638,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311001718047638,"Parsed as literal","@func"
635311001718047638,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311001718047638,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal","list1"
635311001718047638,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal","list2"
635311001718047638,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311001718047638,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311001718047638,"Parsed as literal","count"
635311001718047638,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal"," 0"
635311001718047638,"Invalid operator","@count([]) -> 0","0"
635311001718047638,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311001718047638,"Parsed as literal","count"
635311001718047638,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal",""
635311001718047638,"Parsed as literal"," 0"
635311001718047638,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311001718047638,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311001718047638,"Parsed as literal","count"
635311001718203639,"Parsed as literal","list"
635311001718203639,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311001718203639,"Parsed as literal"," 1 "
635311001718203639,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311001718203639,"Parsed as literal","count"
635311001718203639,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311001718203639,"Parsed as literal",""
635311001718203639,"Parsed as literal","list"
635311001718203639,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311001718203639,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311001718203639,"Parsed as literal","count"
635311001718203639,"Parsed as literal","list"
635311001718203639,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311001718203639,"Parsed as literal"," 1 "
635311001718203639,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311001718203639,"Parsed as literal","count"
635311001718203639,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311001718203639,"Parsed as literal",""
635311001718203639,"Parsed as literal","list"
635311001718203639,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311001718203639,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311001718203639,"Parsed as literal","skip"
635311001718203639,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311001718203639,"Parsed as literal","0"
635311001718203639,"Parsed as literal","list"
635311001718203639,"Parsed as literal"," list"
635311001718203639,"Invalid operator","@skip(0,list) -> list","0"
635311001718203639,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311001718203639,"Parsed as literal","skip"
635311001718203639,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311001718203639,"Parsed as literal","0"
635311001718203639,"Parsed as literal","list"
635311001718203639,"Parsed as literal"," list"
635311001718203639,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311001718203639,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311001718203639,"Parsed as literal","skip"
635311001718203639,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311001718203639,"Parsed as literal","n"
635311001718203639,"Parsed as literal","list"
635311001718203639,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311001718203639,"Parsed as literal","skip"
635311001718203639,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311001718203639,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311001718203639,"Parsed as literal","n"
635311001718203639,"Parsed as literal","1"
635311001718203639,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311001718203639,"Parsed as literal",""
635311001718203639,"Parsed as literal","list"
635311001718203639,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311001718203639,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311001718203639,"Parsed as literal","skip"
635311001718203639,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311001718203639,"Parsed as literal","n"
635311001718359639,"Parsed as literal","list"
635311001718359639,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311001718359639,"Parsed as literal","skip"
635311001718359639,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311001718359639,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311001718359639,"Parsed as literal","n"
635311001718359639,"Parsed as literal","1"
635311001718359639,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311001718359639,"Parsed as literal",""
635311001718359639,"Parsed as literal","list"
635311001718359639,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311001718359639,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311001718359639,"Parsed as literal","take"
635311001718359639,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311001718359639,"Parsed as literal","1"
635311001718359639,"Parsed as literal","list"
635311001718359639,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311001718359639,"Parsed as literal"," "
635311001718359639,"Parsed as literal","list"
635311001718359639,"Invalid operator","@take(1,list) -> h:list","0"
635311001718359639,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311001718359639,"Parsed as literal","take"
635311001718359639,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311001718359639,"Parsed as literal","1"
635311001718359639,"Parsed as literal","list"
635311001718359639,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311001718359639,"Parsed as literal"," "
635311001718359639,"Parsed as literal","list"
635311001718359639,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311001718359639,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311001718359639,"Parsed as literal","take"
635311001718359639,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311001718359639,"Parsed as literal","n"
635311001718359639,"Parsed as literal","list"
635311001718359639,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311001718359639,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311001718359639,"Parsed as literal"," "
635311001718359639,"Parsed as literal","list "
635311001718359639,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311001718359639,"Parsed as literal","take"
635311001718359639,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311001718359639,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311001718359639,"Parsed as literal","n"
635311001718359639,"Parsed as literal","1"
635311001718359639,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311001718359639,"Parsed as literal",""
635311001718359639,"Parsed as literal","list"
635311001718359639,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311001718359639,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311001718359639,"Parsed as literal","take"
635311001718359639,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311001718359639,"Parsed as literal","n"
635311001718359639,"Parsed as literal","list"
635311001718359639,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311001718515639,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311001718515639,"Parsed as literal"," "
635311001718515639,"Parsed as literal","list "
635311001718515639,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311001718515639,"Parsed as literal","take"
635311001718515639,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311001718515639,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311001718515639,"Parsed as literal","n"
635311001718515639,"Parsed as literal","1"
635311001718515639,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311001718515639,"Parsed as literal",""
635311001718515639,"Parsed as literal","list"
635311001718515639,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311001718515639,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311001718515639,"Parsed as literal","nthItem"
635311001718515639,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311001718515639,"Parsed as literal","list"
635311001718515639,"Parsed as literal","0"
635311001718515639,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311001718515639,"Parsed as literal",""
635311001718515639,"Parsed as literal",""
635311001718515639,"Invalid operator","@nthItem(list,0) -> []","0"
635311001718515639,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311001718515639,"Parsed as literal","nthItem"
635311001718515639,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311001718515639,"Parsed as literal","list"
635311001718515639,"Parsed as literal","0"
635311001718515639,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311001718515639,"Parsed as literal",""
635311001718515639,"Parsed as literal",""
635311001718515639,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311001718515639,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311001718515639,"Parsed as literal","nthItem"
635311001718515639,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311001718515639,"Parsed as literal","list"
635311001718515639,"Parsed as literal","1"
635311001718515639,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311001718515639,"Parsed as literal"," "
635311001718515639,"Parsed as literal","list"
635311001718515639,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311001718515639,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311001718515639,"Parsed as literal","nthItem"
635311001718515639,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311001718515639,"Parsed as literal","list"
635311001718515639,"Parsed as literal","1"
635311001718515639,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311001718515639,"Parsed as literal"," "
635311001718515639,"Parsed as literal","list"
635311001718515639,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311001718515639,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311001718515639,"Parsed as literal","nthItem"
635311001718515639,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311001718515639,"Parsed as literal","list"
635311001718671639,"Parsed as literal","n"
635311001718671639,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311001718671639,"Parsed as literal","nthItem"
635311001718671639,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311001718671639,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311001718671639,"Parsed as literal",""
635311001718671639,"Parsed as literal","list"
635311001718671639,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311001718671639,"Parsed as literal","n"
635311001718671639,"Parsed as literal","1"
635311001718671639,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311001718671639,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311001718671639,"Parsed as literal","nthItem"
635311001718671639,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311001718671639,"Parsed as literal","list"
635311001718671639,"Parsed as literal","n"
635311001718671639,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311001718671639,"Parsed as literal","nthItem"
635311001718671639,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311001718671639,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311001718671639,"Parsed as literal",""
635311001718671639,"Parsed as literal","list"
635311001718671639,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311001718671639,"Parsed as literal","n"
635311001718671639,"Parsed as literal","1"
635311001718671639,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311001718671639,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311001718671639,"Parsed as literal","makeRange"
635311001718671639,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311001718671639,"Parsed as literal","a"
635311001718671639,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311001718671639,"Parsed as literal","b"
635311001718671639,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311001718671639,"Parsed as literal","a"
635311001718671639,"Parsed as literal","b"
635311001718671639,"Parsed as literal"," a"
635311001718671639,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311001718671639,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311001718671639,"Parsed as literal","makeRange"
635311001718671639,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311001718671639,"Parsed as literal","a"
635311001718671639,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311001718671639,"Parsed as literal","b"
635311001718671639,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311001718671639,"Parsed as literal","a"
635311001718671639,"Parsed as literal","b"
635311001718671639,"Parsed as literal"," a"
635311001718671639,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311001718671639,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311001718671639,"Parsed as literal","makeRange"
635311001718671639,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311001718671639,"Parsed as literal","a"
635311001718671639,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311001718671639,"Parsed as literal","b"
635311001718827640,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311001718827640,"Parsed as literal","a"
635311001718827640,"Parsed as literal","b"
635311001718827640,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311001718827640,"Parsed as literal"," a "
635311001718827640,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311001718827640,"Parsed as literal","makeRange"
635311001718827640,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311001718827640,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311001718827640,"Parsed as literal","a"
635311001718827640,"Parsed as literal","1"
635311001718827640,"Parsed as literal","b"
635311001718827640,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311001718827640,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311001718827640,"Parsed as literal","makeRange"
635311001718827640,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311001718827640,"Parsed as literal","a"
635311001718827640,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311001718827640,"Parsed as literal","b"
635311001718827640,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311001718827640,"Parsed as literal","a"
635311001718827640,"Parsed as literal","b"
635311001718827640,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311001718827640,"Parsed as literal"," a "
635311001718827640,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311001718827640,"Parsed as literal","makeRange"
635311001718827640,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311001718827640,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311001718827640,"Parsed as literal","a"
635311001718827640,"Parsed as literal","1"
635311001718827640,"Parsed as literal","b"
635311001718827640,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311001718827640,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311001718827640,"Parsed as literal","reverse"
635311001718827640,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311001718827640,"Parsed as literal",""
635311001718827640,"Parsed as literal",""
635311001718827640,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311001718827640,"Parsed as literal",""
635311001718827640,"Parsed as literal",""
635311001718827640,"Invalid operator","@reverse([]) -> []","0"
635311001718827640,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311001718827640,"Parsed as literal","reverse"
635311001718827640,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311001718827640,"Parsed as literal",""
635311001718827640,"Parsed as literal",""
635311001718827640,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311001718827640,"Parsed as literal",""
635311001718827640,"Parsed as literal",""
635311001718827640,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311001718827640,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311001718827640,"Parsed as literal","reverse"
635311001718827640,"Parsed as literal","list"
635311001718827640,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311001718827640,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311001718983640,"Parsed as literal","reverse"
635311001718983640,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311001718983640,"Parsed as literal",""
635311001718983640,"Parsed as literal","list"
635311001718983640,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311001718983640,"Parsed as literal"," "
635311001718983640,"Parsed as literal","list"
635311001718983640,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311001718983640,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311001718983640,"Parsed as literal","reverse"
635311001718983640,"Parsed as literal","list"
635311001718983640,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311001718983640,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311001718983640,"Parsed as literal","reverse"
635311001718983640,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311001718983640,"Parsed as literal",""
635311001718983640,"Parsed as literal","list"
635311001718983640,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311001718983640,"Parsed as literal"," "
635311001718983640,"Parsed as literal","list"
635311001718983640,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311001718983640,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311001718983640,"Parsed as literal","max"
635311001718983640,"Parsed as literal","list"
635311001718983640,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311001718983640,"Parsed as literal","fold"
635311001718983640,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311001718983640,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311001718983640,"Parsed as literal","max"
635311001718983640,"Parsed as literal",""
635311001718983640,"Invalid operator","@max","19"
635311001718983640,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311001718983640,"Parsed as literal","max"
635311001718983640,"Parsed as literal",""
635311001718983640,"Invalid operator","@max","19"
635311001718983640,"Parsed as literal","@max"
635311001718983640,"Parsed as literal","list"
635311001718983640,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311001718983640,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311001718983640,"Parsed as literal","max"
635311001718983640,"Parsed as literal","list"
635311001718983640,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311001718983640,"Parsed as literal","fold"
635311001718983640,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311001718983640,"Parsed as literal","@max"
635311001718983640,"Parsed as literal","list"
635311001718983640,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311001718983640,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311001718983640,"Parsed as literal","elementAt"
635311001718983640,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311001718983640,"Parsed as literal","0"
635311001718983640,"Parsed as literal","list"
635311001718983640,"Parsed as literal"," 'list"
635311001718983640,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311001719139640,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311001719139640,"Parsed as literal","elementAt"
635311001719139640,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311001719139640,"Parsed as literal","n"
635311001719139640,"Parsed as literal","list"
635311001719139640,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311001719139640,"Parsed as literal","elementAt"
635311001719139640,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311001719139640,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311001719139640,"Parsed as literal","n"
635311001719139640,"Parsed as literal","1"
635311001719139640,"Parsed as literal","list'"
635311001719139640,"StepEvaluate","->","Changed","Declared @zipWith"
635311001719139640,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311001719139640,"StepEvaluate","->","Changed","Declared @zipWith"
635311001719139640,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311001719139640,"StepEvaluate","->","Changed","Declared @count"
635311001719139640,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311001719139640,"StepEvaluate","->","Changed","Declared @count"
635311001719139640,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311001719139640,"StepEvaluate","->","Changed","Declared @skip"
635311001719139640,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311001719139640,"StepEvaluate","->","Changed","Declared @skip"
635311001719139640,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311001719139640,"StepEvaluate","->","Changed","Declared @take"
635311001719139640,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311001719139640,"StepEvaluate","->","Changed","Declared @take"
635311001719139640,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311001719139640,"StepEvaluate","->","Changed","Declared @nthItem"
635311001719139640,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311001719139640,"StepEvaluate","->","Changed","Declared @nthItem"
635311001719139640,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311001719139640,"StepEvaluate","->","Changed","Declared @nthItem"
635311001719139640,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311001719139640,"StepEvaluate","->","Changed","Declared @makeRange"
635311001719139640,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311001719139640,"StepEvaluate","->","Changed","Declared @makeRange"
635311001719139640,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311001719139640,"StepEvaluate","->","Changed","Declared @reverse"
635311001719139640,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311001719139640,"StepEvaluate","->","Changed","Declared @reverse"
635311001719139640,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311001719139640,"StepEvaluate","->","Changed","Declared @max"
635311001719139640,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311001719139640,"StepEvaluate","==","Unchanged","=="
635311001719139640,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311001719139640,"StepEvaluate","elementAt","Unchanged","elementAt"
635311001719139640,"StepEvaluate",",","Unchanged",","
635311001719139640,"StepEvaluate","0","Unchanged","0"
635311001719139640,"StepEvaluate",",","Unchanged",","
635311001719139640,"StepEvaluate","list","Unchanged","list"
635311001719139640,"StepEvaluate","'list","Unchanged","'list"
635311001719139640,"StepEvaluate","==","Unchanged","=="
635311001719139640,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311001719139640,"StepEvaluate","elementAt","Unchanged","elementAt"
635311001719139640,"StepEvaluate",",","Unchanged",","
635311001719139640,"StepEvaluate","n","Unchanged","n"
635311001719295640,"StepEvaluate",",","Unchanged",","
635311001719295640,"StepEvaluate","list","Unchanged","list"
635311001719295640,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311001719295640,"StepEvaluate","elementAt","Unchanged","elementAt"
635311001719295640,"StepEvaluate",",","Unchanged",","
635311001719295640,"StepEvaluate","-","Unchanged","-"
635311001719295640,"StepEvaluate","n","Unchanged","n"
635311001719295640,"StepEvaluate","1","Unchanged","1"
635311001719295640,"StepEvaluate",",","Unchanged",","
635311001719295640,"StepEvaluate","list'","Unchanged","list'"
635311001719295640,"StepEvaluate","[]","Changed","File imported"
635311001719295640,"StepEvaluate","File imported","Unchanged","File imported"
635311001719295640,"StepEvaluate","@","Changed","@"
635311001719295640,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001719295640,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001719295640,"StepEvaluate",",","Unchanged",","
635311001719295640,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001719295640,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001719295640,"StepEvaluate","PAT@-M","Changed","[]"
635311001719295640,"StepEvaluate","SEL@import","Changed","[]"
635311001719295640,"StepEvaluate","@","Changed","[]"
635311001719295640,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311001719295640,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311001719295640,"Parsed as literal","naturalNumbers"
635311001719295640,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311001719295640,"Parsed as literal",""
635311001719295640,"Parsed as literal",""
635311001719295640,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311001719295640,"Parsed as literal","naturalNumbers"
635311001719295640,"Parsed as literal","0"
635311001719295640,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311001719295640,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311001719295640,"Parsed as literal","naturalNumbers"
635311001719295640,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311001719295640,"Parsed as literal",""
635311001719295640,"Parsed as literal",""
635311001719295640,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311001719295640,"Parsed as literal","naturalNumbers"
635311001719295640,"Parsed as literal","0"
635311001719295640,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311001719295640,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311001719295640,"Parsed as literal","naturalNumbers"
635311001719295640,"Parsed as literal","n"
635311001719295640,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311001719295640,"Parsed as literal"," n "
635311001719295640,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311001719295640,"Parsed as literal","naturalNumbers"
635311001719295640,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311001719295640,"Parsed as literal","n"
635311001719295640,"Parsed as literal","1"
635311001719451641,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311001719451641,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311001719451641,"Parsed as literal","naturalNumbers"
635311001719451641,"Parsed as literal","n"
635311001719451641,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311001719451641,"Parsed as literal"," n "
635311001719451641,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311001719451641,"Parsed as literal","naturalNumbers"
635311001719451641,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311001719451641,"Parsed as literal","n"
635311001719451641,"Parsed as literal","1"
635311001719451641,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311001719451641,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311001719451641,"Parsed as literal","max"
635311001719451641,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311001719451641,"Parsed as literal","b"
635311001719451641,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"Parsed as literal","b"
635311001719451641,"Parsed as literal","b"
635311001719451641,"Invalid operator","@max(a,b|a<b)->b","0"
635311001719451641,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311001719451641,"Parsed as literal","max"
635311001719451641,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311001719451641,"Parsed as literal","b"
635311001719451641,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"Parsed as literal","b"
635311001719451641,"Parsed as literal","b"
635311001719451641,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311001719451641,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311001719451641,"Parsed as literal","max"
635311001719451641,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"Parsed as literal","b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"Invalid operator","@max(a,b)->a","0"
635311001719451641,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311001719451641,"Parsed as literal","max"
635311001719451641,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"Parsed as literal","b"
635311001719451641,"Parsed as literal","a"
635311001719451641,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311001719451641,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311001719451641,"Parsed as literal","random"
635311001719451641,"Parsed as literal","0"
635311001719451641,"Parsed as literal"," 0"
635311001719451641,"Invalid operator","@random(0) -> 0","0"
635311001719451641,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311001719607641,"Parsed as literal","random"
635311001719607641,"Parsed as literal","0"
635311001719607641,"Parsed as literal"," 0"
635311001719607641,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311001719607641,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311001719607641,"Parsed as literal","random"
635311001719607641,"Parsed as literal","n"
635311001719607641,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311001719607641,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311001719607641,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311001719607641,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311001719607641,"Parsed as literal","1664525 "
635311001719607641,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311001719607641,"Parsed as literal","random"
635311001719607641,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311001719607641,"Parsed as literal","n"
635311001719607641,"Parsed as literal","1"
635311001719607641,"Parsed as literal"," 1013904223"
635311001719607641,"Parsed as literal",""
635311001719607641,"Parsed as literal"," 4294967296"
635311001719607641,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311001719607641,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311001719607641,"Parsed as literal","random"
635311001719607641,"Parsed as literal","n"
635311001719607641,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311001719607641,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311001719607641,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311001719607641,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311001719607641,"Parsed as literal","1664525 "
635311001719607641,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311001719607641,"Parsed as literal","random"
635311001719607641,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311001719607641,"Parsed as literal","n"
635311001719607641,"Parsed as literal","1"
635311001719607641,"Parsed as literal"," 1013904223"
635311001719607641,"Parsed as literal",""
635311001719607641,"Parsed as literal"," 4294967296"
635311001719607641,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311001719607641,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311001719607641,"Parsed as literal","gcd"
635311001719607641,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311001719607641,"Parsed as literal","a"
635311001719607641,"Parsed as literal","0"
635311001719607641,"Parsed as literal"," a"
635311001719607641,"Invalid operator","@gcd(a,0) -> a","0"
635311001719607641,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311001719607641,"Parsed as literal","gcd"
635311001719607641,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311001719607641,"Parsed as literal","a"
635311001719607641,"Parsed as literal","0"
635311001719607641,"Parsed as literal"," a"
635311001719763641,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311001719763641,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311001719763641,"Parsed as literal","a"
635311001719763641,"Parsed as literal","b"
635311001719763641,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311001719763641,"Parsed as literal","b"
635311001719763641,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311001719763641,"Parsed as literal","a "
635311001719763641,"Parsed as literal"," b"
635311001719763641,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311001719763641,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311001719763641,"Parsed as literal","a"
635311001719763641,"Parsed as literal","b"
635311001719763641,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311001719763641,"Parsed as literal","b"
635311001719763641,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311001719763641,"Parsed as literal","a "
635311001719763641,"Parsed as literal"," b"
635311001719763641,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311001719763641,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"Parsed as literal","list"
635311001719763641,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311001719763641,"Parsed as literal","fold"
635311001719763641,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311001719763641,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"Parsed as literal",""
635311001719763641,"Invalid operator","@gcd","19"
635311001719763641,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"Parsed as literal",""
635311001719763641,"Invalid operator","@gcd","19"
635311001719763641,"Parsed as literal","@gcd"
635311001719763641,"Parsed as literal","list"
635311001719763641,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311001719763641,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311001719763641,"Parsed as literal","gcd"
635311001719763641,"Parsed as literal","list"
635311001719763641,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311001719763641,"Parsed as literal","fold"
635311001719763641,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311001719763641,"Parsed as literal","@gcd"
635311001719763641,"Parsed as literal","list"
635311001719763641,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311001719763641,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"Parsed as literal","0"
635311001719919642,"Parsed as literal"," 1"
635311001719919642,"Invalid operator","@fib(0) -> 1","0"
635311001719919642,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"Parsed as literal","0"
635311001719919642,"Parsed as literal"," 1"
635311001719919642,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311001719919642,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"Parsed as literal","1"
635311001719919642,"Parsed as literal"," 1"
635311001719919642,"Invalid operator","@fib(1) -> 1","0"
635311001719919642,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"Parsed as literal","1"
635311001719919642,"Parsed as literal"," 1"
635311001719919642,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311001719919642,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"Parsed as literal","n"
635311001719919642,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311001719919642,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311001719919642,"Parsed as literal","n"
635311001719919642,"Parsed as literal","2"
635311001719919642,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311001719919642,"Parsed as literal","n"
635311001719919642,"Parsed as literal","1"
635311001719919642,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311001719919642,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"Parsed as literal","n"
635311001719919642,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311001719919642,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311001719919642,"Parsed as literal","n"
635311001719919642,"Parsed as literal","2"
635311001719919642,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311001719919642,"Parsed as literal","fib"
635311001719919642,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311001719919642,"Parsed as literal","n"
635311001719919642,"Parsed as literal","1"
635311001719919642,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311001719919642,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311001719919642,"Parsed as literal","fib2"
635311001719919642,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311001719919642,"Parsed as literal",""
635311001719919642,"Parsed as literal",""
635311001720075642,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311001720075642,"Parsed as literal"," 0 "
635311001720075642,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311001720075642,"Parsed as literal"," 1 "
635311001720075642,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311001720075642,"Parsed as literal","zipWith"
635311001720075642,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311001720075642,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311001720075642,"Parsed as literal",""
635311001720075642,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311001720075642,"Parsed as literal","a"
635311001720075642,"Parsed as literal","b"
635311001720075642,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311001720075642,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311001720075642,"Parsed as literal","a"
635311001720075642,"Parsed as literal","b"
635311001720075642,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311001720075642,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311001720075642,"Parsed as literal","fib2"
635311001720075642,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311001720075642,"Parsed as literal",""
635311001720075642,"Parsed as literal",""
635311001720075642,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311001720075642,"Parsed as literal"," "
635311001720075642,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311001720075642,"Parsed as literal","fib2"
635311001720075642,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311001720075642,"Parsed as literal",""
635311001720075642,"Parsed as literal",""
635311001720075642,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311001720075642,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311001720075642,"Parsed as literal",""
635311001720075642,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311001720075642,"Parsed as literal","a"
635311001720075642,"Parsed as literal","b"
635311001720075642,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311001720075642,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311001720075642,"Parsed as literal","a"
635311001720075642,"Parsed as literal","b"
635311001720075642,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311001720075642,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311001720075642,"Parsed as literal","fib2"
635311001720075642,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311001720075642,"Parsed as literal",""
635311001720075642,"Parsed as literal",""
635311001720075642,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311001720075642,"Parsed as literal"," "
635311001720075642,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311001720075642,"Parsed as literal","fib2"
635311001720075642,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311001720075642,"Parsed as literal",""
635311001720075642,"Parsed as literal",""
635311001720075642,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311001720075642,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311001720231642,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311001720231642,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311001720231642,"Parsed as literal",""
635311001720231642,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311001720231642,"Parsed as literal","a"
635311001720231642,"Parsed as literal","b"
635311001720231642,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311001720231642,"Parsed as literal","a"
635311001720231642,"Parsed as literal","b"
635311001720231642,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311001720231642,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311001720231642,"Parsed as literal","fib2"
635311001720231642,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311001720231642,"Parsed as literal",""
635311001720231642,"Parsed as literal",""
635311001720231642,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311001720231642,"Parsed as literal"," "
635311001720231642,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311001720231642,"Parsed as literal","fib2"
635311001720231642,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311001720231642,"Parsed as literal",""
635311001720231642,"Parsed as literal",""
635311001720231642,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311001720231642,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311001720231642,"Parsed as literal","fib2"
635311001720231642,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311001720231642,"Parsed as literal",""
635311001720231642,"Parsed as literal",""
635311001720231642,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311001720231642,"Parsed as literal"," 0 "
635311001720231642,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311001720231642,"Parsed as literal"," 1 "
635311001720231642,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311001720231642,"Parsed as literal","zipWith"
635311001720231642,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311001720231642,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311001720231642,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311001720231642,"Parsed as literal",""
635311001720231642,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311001720231642,"Parsed as literal","a"
635311001720231642,"Parsed as literal","b"
635311001720231642,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311001720231642,"Parsed as literal","a"
635311001720231642,"Parsed as literal","b"
635311001720231642,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311001720231642,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311001720231642,"Parsed as literal","fib2"
635311001720231642,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311001720231642,"Parsed as literal",""
635311001720231642,"Parsed as literal",""
635311001720231642,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311001720387642,"Parsed as literal"," "
635311001720387642,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311001720387642,"Parsed as literal","fib2"
635311001720387642,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311001720387642,"Parsed as literal",""
635311001720387642,"Parsed as literal",""
635311001720387642,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311001720387642,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311001720387642,"Parsed as literal","fib2"
635311001720387642,"Parsed as literal","n"
635311001720387642,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311001720387642,"Parsed as literal","take"
635311001720387642,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311001720387642,"Parsed as literal","n"
635311001720387642,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311001720387642,"Parsed as literal","fib2"
635311001720387642,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311001720387642,"Parsed as literal",""
635311001720387642,"Parsed as literal",""
635311001720387642,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311001720387642,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311001720387642,"Parsed as literal","fib2"
635311001720387642,"Parsed as literal","n"
635311001720387642,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311001720387642,"Parsed as literal","take"
635311001720387642,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311001720387642,"Parsed as literal","n"
635311001720387642,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311001720387642,"Parsed as literal","fib2"
635311001720387642,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311001720387642,"Parsed as literal",""
635311001720387642,"Parsed as literal",""
635311001720387642,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311001720387642,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311001720387642,"Parsed as literal","pow"
635311001720387642,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311001720387642,"Parsed as literal","num"
635311001720387642,"Parsed as literal","0"
635311001720387642,"Parsed as literal"," 1"
635311001720387642,"Invalid operator","@pow(num,0) -> 1","0"
635311001720387642,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311001720387642,"Parsed as literal","pow"
635311001720387642,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311001720387642,"Parsed as literal","num"
635311001720387642,"Parsed as literal","0"
635311001720387642,"Parsed as literal"," 1"
635311001720387642,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311001720387642,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311001720387642,"Parsed as literal","pow"
635311001720387642,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311001720387642,"Parsed as literal","num"
635311001720387642,"Parsed as literal","1"
635311001720387642,"Parsed as literal"," num"
635311001720387642,"Invalid operator","@pow(num,1) -> num","0"
635311001720387642,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311001720543643,"Parsed as literal","pow"
635311001720543643,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311001720543643,"Parsed as literal","num"
635311001720543643,"Parsed as literal","1"
635311001720543643,"Parsed as literal"," num"
635311001720543643,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311001720543643,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311001720543643,"Parsed as literal","pow"
635311001720543643,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311001720543643,"Parsed as literal","num"
635311001720543643,"Parsed as literal"," power"
635311001720543643,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311001720543643,"Parsed as literal"," num "
635311001720543643,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311001720543643,"Parsed as literal","pow"
635311001720543643,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311001720543643,"Parsed as literal","num"
635311001720543643,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311001720543643,"Parsed as literal","power"
635311001720543643,"Parsed as literal","1"
635311001720543643,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311001720543643,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311001720543643,"Parsed as literal","pow"
635311001720543643,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311001720543643,"Parsed as literal","num"
635311001720543643,"Parsed as literal"," power"
635311001720543643,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311001720543643,"Parsed as literal"," num "
635311001720543643,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311001720543643,"Parsed as literal","pow"
635311001720543643,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311001720543643,"Parsed as literal","num"
635311001720543643,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311001720543643,"Parsed as literal","power"
635311001720543643,"Parsed as literal","1"
635311001720543643,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311001720543643,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311001720543643,"Parsed as literal","upArrow"
635311001720543643,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311001720543643,"Parsed as literal","a"
635311001720543643,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311001720543643,"Parsed as literal","b"
635311001720543643,"Parsed as literal","1"
635311001720543643,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311001720543643,"Parsed as literal","pow"
635311001720543643,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311001720543643,"Parsed as literal","a"
635311001720543643,"Parsed as literal","b"
635311001720543643,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311001720543643,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311001720543643,"Parsed as literal","upArrow"
635311001720543643,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311001720699643,"Parsed as literal","a"
635311001720699643,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311001720699643,"Parsed as literal","b"
635311001720699643,"Parsed as literal","1"
635311001720699643,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311001720699643,"Parsed as literal","pow"
635311001720699643,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311001720699643,"Parsed as literal","a"
635311001720699643,"Parsed as literal","b"
635311001720699643,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311001720699643,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311001720699643,"Parsed as literal","upArrow"
635311001720699643,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311001720699643,"Parsed as literal","a"
635311001720699643,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311001720699643,"Parsed as literal","1"
635311001720699643,"Parsed as literal","n"
635311001720699643,"Parsed as literal"," a"
635311001720699643,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311001720699643,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311001720699643,"Parsed as literal","upArrow"
635311001720699643,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311001720699643,"Parsed as literal","a"
635311001720699643,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311001720699643,"Parsed as literal","1"
635311001720699643,"Parsed as literal","n"
635311001720699643,"Parsed as literal"," a"
635311001720699643,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311001720699643,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311001720699643,"Parsed as literal","upArrow"
635311001720699643,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311001720699643,"Parsed as literal","a"
635311001720699643,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311001720699643,"Parsed as literal","b"
635311001720699643,"Parsed as literal","n"
635311001720699643,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311001720699643,"Parsed as literal","upArrow"
635311001720699643,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311001720699643,"Parsed as literal","a"
635311001720699643,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311001720699643,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311001720699643,"Parsed as literal","upArrow"
635311001720699643,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311001720699643,"Parsed as literal","a"
635311001720699643,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311001720699643,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311001720699643,"Parsed as literal","b"
635311001720699643,"Parsed as literal","1"
635311001720699643,"Parsed as literal","n"
635311001720699643,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311001720699643,"Parsed as literal","n"
635311001720699643,"Parsed as literal","1"
635311001720699643,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311001720699643,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311001720855643,"Parsed as literal","upArrow"
635311001720855643,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311001720855643,"Parsed as literal","a"
635311001720855643,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311001720855643,"Parsed as literal","b"
635311001720855643,"Parsed as literal","n"
635311001720855643,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311001720855643,"Parsed as literal","upArrow"
635311001720855643,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311001720855643,"Parsed as literal","a"
635311001720855643,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311001720855643,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311001720855643,"Parsed as literal","upArrow"
635311001720855643,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311001720855643,"Parsed as literal","a"
635311001720855643,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311001720855643,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311001720855643,"Parsed as literal","b"
635311001720855643,"Parsed as literal","1"
635311001720855643,"Parsed as literal","n"
635311001720855643,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311001720855643,"Parsed as literal","n"
635311001720855643,"Parsed as literal","1"
635311001720855643,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311001720855643,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311001720855643,"Parsed as literal","graham"
635311001720855643,"Parsed as literal","0"
635311001720855643,"Parsed as literal"," 4"
635311001720855643,"Invalid operator","@graham(0) -> 4","0"
635311001720855643,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311001720855643,"Parsed as literal","graham"
635311001720855643,"Parsed as literal","0"
635311001720855643,"Parsed as literal"," 4"
635311001720855643,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311001720855643,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311001720855643,"Parsed as literal","graham"
635311001720855643,"Parsed as literal","n"
635311001720855643,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311001720855643,"Parsed as literal","upArrow"
635311001720855643,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311001720855643,"Parsed as literal","3"
635311001720855643,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311001720855643,"Parsed as literal","3"
635311001720855643,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311001720855643,"Parsed as literal","graham"
635311001720855643,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311001720855643,"Parsed as literal","n"
635311001720855643,"Parsed as literal","1"
635311001720855643,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311001720855643,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311001720855643,"Parsed as literal","graham"
635311001720855643,"Parsed as literal","n"
635311001720855643,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311001721011643,"Parsed as literal","upArrow"
635311001721011643,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311001721011643,"Parsed as literal","3"
635311001721011643,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311001721011643,"Parsed as literal","3"
635311001721011643,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311001721011643,"Parsed as literal","graham"
635311001721011643,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311001721011643,"Parsed as literal","n"
635311001721011643,"Parsed as literal","1"
635311001721011643,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311001721011643,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311001721011643,"Parsed as literal","grahamsNumber"
635311001721011643,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311001721011643,"Parsed as literal",""
635311001721011643,"Parsed as literal",""
635311001721011643,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311001721011643,"Parsed as literal","graham"
635311001721011643,"Parsed as literal","64"
635311001721011643,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311001721011643,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311001721011643,"Parsed as literal","grahamsNumber"
635311001721011643,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311001721011643,"Parsed as literal",""
635311001721011643,"Parsed as literal",""
635311001721011643,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311001721011643,"Parsed as literal","graham"
635311001721011643,"Parsed as literal","64"
635311001721011643,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311001721011643,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311001721011643,"Parsed as literal","ack"
635311001721011643,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311001721011643,"Parsed as literal","0"
635311001721011643,"Parsed as literal","n"
635311001721011643,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311001721011643,"Parsed as literal"," n "
635311001721011643,"Parsed as literal"," 1"
635311001721011643,"Invalid operator","@ack(0,n) -> n + 1","0"
635311001721011643,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311001721011643,"Parsed as literal","ack"
635311001721011643,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311001721011643,"Parsed as literal","0"
635311001721011643,"Parsed as literal","n"
635311001721011643,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311001721011643,"Parsed as literal"," n "
635311001721011643,"Parsed as literal"," 1"
635311001721011643,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311001721011643,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311001721011643,"Parsed as literal","ack"
635311001721011643,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311001721011643,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311001721011643,"Parsed as literal","m"
635311001721011643,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311001721011643,"Parsed as literal","m"
635311001721167644,"Parsed as literal","0"
635311001721167644,"Parsed as literal","0"
635311001721167644,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311001721167644,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311001721167644,"Parsed as literal","m"
635311001721167644,"Parsed as literal","1"
635311001721167644,"Parsed as literal","1"
635311001721167644,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311001721167644,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311001721167644,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311001721167644,"Parsed as literal","m"
635311001721167644,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311001721167644,"Parsed as literal","m"
635311001721167644,"Parsed as literal","0"
635311001721167644,"Parsed as literal","0"
635311001721167644,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311001721167644,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311001721167644,"Parsed as literal","m"
635311001721167644,"Parsed as literal","1"
635311001721167644,"Parsed as literal","1"
635311001721167644,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311001721167644,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311001721167644,"Parsed as literal","m"
635311001721167644,"Parsed as literal","n"
635311001721167644,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311001721167644,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311001721167644,"Parsed as literal","m"
635311001721167644,"Parsed as literal","1"
635311001721167644,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311001721167644,"Parsed as literal","m"
635311001721167644,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311001721167644,"Parsed as literal","n"
635311001721167644,"Parsed as literal","1"
635311001721167644,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311001721167644,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311001721167644,"Parsed as literal","m"
635311001721167644,"Parsed as literal","n"
635311001721167644,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311001721167644,"Parsed as literal","ack"
635311001721167644,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311001721323644,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311001721323644,"Parsed as literal","m"
635311001721323644,"Parsed as literal","1"
635311001721323644,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311001721323644,"Parsed as literal","ack"
635311001721323644,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311001721323644,"Parsed as literal","m"
635311001721323644,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311001721323644,"Parsed as literal","n"
635311001721323644,"Parsed as literal","1"
635311001721323644,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311001721323644,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311001721323644,"Parsed as literal","acker"
635311001721323644,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311001721323644,"Parsed as literal","m"
635311001721323644,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311001721323644,"Parsed as literal","n"
635311001721323644,"Parsed as literal","0"
635311001721323644,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311001721323644,"Parsed as literal"," m"
635311001721323644,"Parsed as literal","n"
635311001721323644,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311001721323644,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311001721323644,"Parsed as literal","acker"
635311001721323644,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311001721323644,"Parsed as literal","m"
635311001721323644,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311001721323644,"Parsed as literal","n"
635311001721323644,"Parsed as literal","0"
635311001721323644,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311001721323644,"Parsed as literal"," m"
635311001721323644,"Parsed as literal","n"
635311001721323644,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311001721323644,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311001721323644,"Parsed as literal","acker"
635311001721323644,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311001721323644,"Parsed as literal","m"
635311001721323644,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311001721323644,"Parsed as literal","0"
635311001721323644,"Parsed as literal","1"
635311001721323644,"Parsed as literal"," 0"
635311001721323644,"Invalid operator","@acker(m,0,1) -> 0","0"
635311001721323644,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311001721323644,"Parsed as literal","acker"
635311001721323644,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311001721323644,"Parsed as literal","m"
635311001721323644,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311001721323644,"Parsed as literal","0"
635311001721323644,"Parsed as literal","1"
635311001721323644,"Parsed as literal"," 0"
635311001721323644,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311001721323644,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311001721323644,"Parsed as literal","acker"
635311001721323644,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311001721323644,"Parsed as literal","m"
635311001721479644,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311001721479644,"Parsed as literal","0"
635311001721479644,"Parsed as literal","2"
635311001721479644,"Parsed as literal"," 1"
635311001721479644,"Invalid operator","@acker(m,0,2) -> 1","0"
635311001721479644,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311001721479644,"Parsed as literal","acker"
635311001721479644,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311001721479644,"Parsed as literal","m"
635311001721479644,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311001721479644,"Parsed as literal","0"
635311001721479644,"Parsed as literal","2"
635311001721479644,"Parsed as literal"," 1"
635311001721479644,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311001721479644,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311001721479644,"Parsed as literal","acker"
635311001721479644,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311001721479644,"Parsed as literal","m"
635311001721479644,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311001721479644,"Parsed as literal","0"
635311001721479644,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311001721479644,"Parsed as literal","p"
635311001721479644,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311001721479644,"Parsed as literal","p"
635311001721479644,"Parsed as literal","2"
635311001721479644,"Parsed as literal"," m"
635311001721479644,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311001721479644,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311001721479644,"Parsed as literal","acker"
635311001721479644,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311001721479644,"Parsed as literal","m"
635311001721479644,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311001721479644,"Parsed as literal","0"
635311001721479644,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311001721479644,"Parsed as literal","p"
635311001721479644,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311001721479644,"Parsed as literal","p"
635311001721479644,"Parsed as literal","2"
635311001721479644,"Parsed as literal"," m"
635311001721479644,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311001721479644,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311001721479644,"Parsed as literal","acker"
635311001721479644,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311001721479644,"Parsed as literal","m"
635311001721479644,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311001721479644,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311001721479644,"Parsed as literal","n"
635311001721479644,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311001721479644,"Parsed as literal","n"
635311001721479644,"Parsed as literal","0"
635311001721479644,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311001721479644,"Parsed as literal","p"
635311001721479644,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311001721635645,"Parsed as literal","p"
635311001721635645,"Parsed as literal","0"
635311001721635645,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311001721635645,"Parsed as literal","acker"
635311001721635645,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311001721635645,"Parsed as literal","m"
635311001721635645,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311001721635645,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311001721635645,"Parsed as literal","acker"
635311001721635645,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311001721635645,"Parsed as literal","m"
635311001721635645,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311001721635645,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311001721635645,"Parsed as literal","n"
635311001721635645,"Parsed as literal","1"
635311001721635645,"Parsed as literal","p"
635311001721635645,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311001721635645,"Parsed as literal","p"
635311001721635645,"Parsed as literal","1"
635311001721635645,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311001721635645,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311001721635645,"Parsed as literal","acker"
635311001721635645,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311001721635645,"Parsed as literal","m"
635311001721635645,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311001721635645,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311001721635645,"Parsed as literal","n"
635311001721635645,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311001721635645,"Parsed as literal","n"
635311001721635645,"Parsed as literal","0"
635311001721635645,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311001721635645,"Parsed as literal","p"
635311001721635645,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311001721635645,"Parsed as literal","p"
635311001721635645,"Parsed as literal","0"
635311001721635645,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311001721635645,"Parsed as literal","acker"
635311001721635645,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311001721635645,"Parsed as literal","m"
635311001721635645,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311001721635645,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311001721635645,"Parsed as literal","acker"
635311001721635645,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311001721635645,"Parsed as literal","m"
635311001721635645,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311001721635645,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311001721635645,"Parsed as literal","n"
635311001721635645,"Parsed as literal","1"
635311001721635645,"Parsed as literal","p"
635311001721635645,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311001721635645,"Parsed as literal","p"
635311001721635645,"Parsed as literal","1"
635311001721635645,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311001721635645,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311001721791645,"Parsed as literal","hyper"
635311001721791645,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311001721791645,"Parsed as literal","0"
635311001721791645,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311001721791645,"Parsed as literal","a"
635311001721791645,"Parsed as literal","b"
635311001721791645,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311001721791645,"Parsed as literal"," b"
635311001721791645,"Parsed as literal","1"
635311001721791645,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311001721791645,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311001721791645,"Parsed as literal","hyper"
635311001721791645,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311001721791645,"Parsed as literal","0"
635311001721791645,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311001721791645,"Parsed as literal","a"
635311001721791645,"Parsed as literal","b"
635311001721791645,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311001721791645,"Parsed as literal"," b"
635311001721791645,"Parsed as literal","1"
635311001721791645,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311001721791645,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311001721791645,"Parsed as literal","hyper"
635311001721791645,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311001721791645,"Parsed as literal","1"
635311001721791645,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311001721791645,"Parsed as literal","a"
635311001721791645,"Parsed as literal","0"
635311001721791645,"Parsed as literal"," a"
635311001721791645,"Invalid operator","@hyper(1,a,0) -> a","0"
635311001721791645,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311001721791645,"Parsed as literal","hyper"
635311001721791645,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311001721791645,"Parsed as literal","1"
635311001721791645,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311001721791645,"Parsed as literal","a"
635311001721791645,"Parsed as literal","0"
635311001721791645,"Parsed as literal"," a"
635311001721791645,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311001721791645,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311001721791645,"Parsed as literal","hyper"
635311001721791645,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311001721791645,"Parsed as literal","2"
635311001721791645,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311001721791645,"Parsed as literal","a"
635311001721791645,"Parsed as literal","0"
635311001721791645,"Parsed as literal"," 0"
635311001721791645,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311001721791645,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311001721791645,"Parsed as literal","hyper"
635311001721791645,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311001721791645,"Parsed as literal","2"
635311001721791645,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311001721791645,"Parsed as literal","a"
635311001721947645,"Parsed as literal","0"
635311001721947645,"Parsed as literal"," 0"
635311001721947645,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311001721947645,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311001721947645,"Parsed as literal","hyper"
635311001721947645,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311001721947645,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311001721947645,"Parsed as literal","n"
635311001721947645,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311001721947645,"Parsed as literal","n"
635311001721947645,"Parsed as literal","2"
635311001721947645,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311001721947645,"Parsed as literal","a"
635311001721947645,"Parsed as literal","0"
635311001721947645,"Parsed as literal"," 1"
635311001721947645,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311001721947645,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311001721947645,"Parsed as literal","hyper"
635311001721947645,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311001721947645,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311001721947645,"Parsed as literal","n"
635311001721947645,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311001721947645,"Parsed as literal","n"
635311001721947645,"Parsed as literal","2"
635311001721947645,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311001721947645,"Parsed as literal","a"
635311001721947645,"Parsed as literal","0"
635311001721947645,"Parsed as literal"," 1"
635311001721947645,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311001721947645,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311001721947645,"Parsed as literal","hyper"
635311001721947645,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311001721947645,"Parsed as literal","n"
635311001721947645,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311001721947645,"Parsed as literal","a"
635311001721947645,"Parsed as literal","b"
635311001721947645,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311001721947645,"Parsed as literal","hyper"
635311001721947645,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311001721947645,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311001721947645,"Parsed as literal","n"
635311001721947645,"Parsed as literal","1"
635311001721947645,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311001721947645,"Parsed as literal","a"
635311001721947645,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311001721947645,"Parsed as literal","hyper"
635311001721947645,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311001721947645,"Parsed as literal","n"
635311001721947645,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311001721947645,"Parsed as literal","a"
635311001721947645,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311001721947645,"Parsed as literal","b"
635311001721947645,"Parsed as literal","1"
635311001721947645,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311001721947645,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311001722103645,"Parsed as literal","hyper"
635311001722103645,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311001722103645,"Parsed as literal","n"
635311001722103645,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311001722103645,"Parsed as literal","a"
635311001722103645,"Parsed as literal","b"
635311001722103645,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311001722103645,"Parsed as literal","hyper"
635311001722103645,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311001722103645,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311001722103645,"Parsed as literal","n"
635311001722103645,"Parsed as literal","1"
635311001722103645,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311001722103645,"Parsed as literal","a"
635311001722103645,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311001722103645,"Parsed as literal","hyper"
635311001722103645,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311001722103645,"Parsed as literal","n"
635311001722103645,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311001722103645,"Parsed as literal","a"
635311001722103645,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311001722103645,"Parsed as literal","b"
635311001722103645,"Parsed as literal","1"
635311001722103645,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311001722103645,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311001722103645,"Parsed as literal","sudan"
635311001722103645,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311001722103645,"Parsed as literal","0"
635311001722103645,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311001722103645,"Parsed as literal","x"
635311001722103645,"Parsed as literal","y"
635311001722103645,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311001722103645,"Parsed as literal"," x "
635311001722103645,"Parsed as literal"," y"
635311001722103645,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311001722103645,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311001722103645,"Parsed as literal","sudan"
635311001722103645,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311001722103645,"Parsed as literal","0"
635311001722103645,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311001722103645,"Parsed as literal","x"
635311001722103645,"Parsed as literal","y"
635311001722103645,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311001722103645,"Parsed as literal"," x "
635311001722103645,"Parsed as literal"," y"
635311001722103645,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311001722103645,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311001722103645,"Parsed as literal","sudan"
635311001722103645,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311001722103645,"Parsed as literal","n"
635311001722103645,"Parsed as literal","0"
635311001722103645,"Parsed as literal"," x"
635311001722103645,"Invalid operator","@sudan(n,0) -> x","0"
635311001722103645,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311001722103645,"Parsed as literal","sudan"
635311001722259646,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311001722259646,"Parsed as literal","n"
635311001722259646,"Parsed as literal","0"
635311001722259646,"Parsed as literal"," x"
635311001722259646,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311001722259646,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311001722259646,"Parsed as literal","sudan"
635311001722259646,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311001722259646,"Parsed as literal","n"
635311001722259646,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311001722259646,"Parsed as literal","x"
635311001722259646,"Parsed as literal","y"
635311001722259646,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311001722259646,"Parsed as literal","sudan"
635311001722259646,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311001722259646,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311001722259646,"Parsed as literal","n"
635311001722259646,"Parsed as literal","1"
635311001722259646,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311001722259646,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311001722259646,"Parsed as literal","sudan"
635311001722259646,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311001722259646,"Parsed as literal","n"
635311001722259646,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311001722259646,"Parsed as literal","x"
635311001722259646,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311001722259646,"Parsed as literal","y"
635311001722259646,"Parsed as literal","1"
635311001722259646,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311001722259646,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311001722259646,"Parsed as literal","sudan"
635311001722259646,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311001722259646,"Parsed as literal","n"
635311001722259646,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311001722259646,"Parsed as literal","x"
635311001722259646,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311001722259646,"Parsed as literal","y"
635311001722259646,"Parsed as literal","1"
635311001722259646,"Parsed as literal","y"
635311001722259646,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311001722259646,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311001722259646,"Parsed as literal","sudan"
635311001722259646,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311001722259646,"Parsed as literal","n"
635311001722259646,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311001722259646,"Parsed as literal","x"
635311001722259646,"Parsed as literal","y"
635311001722259646,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311001722259646,"Parsed as literal","sudan"
635311001722259646,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311001722259646,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311001722259646,"Parsed as literal","n"
635311001722259646,"Parsed as literal","1"
635311001722259646,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311001722415646,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311001722415646,"Parsed as literal","sudan"
635311001722415646,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311001722415646,"Parsed as literal","n"
635311001722415646,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311001722415646,"Parsed as literal","x"
635311001722415646,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311001722415646,"Parsed as literal","y"
635311001722415646,"Parsed as literal","1"
635311001722415646,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311001722415646,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311001722415646,"Parsed as literal","sudan"
635311001722415646,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311001722415646,"Parsed as literal","n"
635311001722415646,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311001722415646,"Parsed as literal","x"
635311001722415646,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311001722415646,"Parsed as literal","y"
635311001722415646,"Parsed as literal","1"
635311001722415646,"Parsed as literal","y"
635311001722415646,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311001722415646,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311001722415646,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311001722415646,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311001722415646,"StepEvaluate","->","Changed","Declared @max"
635311001722415646,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311001722415646,"StepEvaluate","->","Changed","Declared @max"
635311001722415646,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311001722415646,"StepEvaluate","->","Changed","Declared @random"
635311001722415646,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311001722415646,"StepEvaluate","->","Changed","Declared @random"
635311001722415646,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311001722415646,"StepEvaluate","->","Changed","Declared @gcd"
635311001722415646,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311001722415646,"StepEvaluate","->","Changed","Declared @gcd"
635311001722415646,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311001722415646,"StepEvaluate","->","Changed","Declared @gcd"
635311001722415646,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311001722415646,"StepEvaluate","->","Changed","Declared @fib"
635311001722415646,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311001722415646,"StepEvaluate","->","Changed","Declared @fib"
635311001722415646,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311001722415646,"StepEvaluate","->","Changed","Declared @fib"
635311001722415646,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311001722415646,"StepEvaluate","->","Changed","Declared @fib2"
635311001722415646,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311001722415646,"StepEvaluate","->","Changed","Declared @fib2"
635311001722415646,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311001722415646,"StepEvaluate","->","Changed","Declared @pow"
635311001722415646,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311001722415646,"StepEvaluate","->","Changed","Declared @pow"
635311001722415646,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311001722415646,"StepEvaluate","->","Changed","Declared @pow"
635311001722415646,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311001722415646,"StepEvaluate","->","Changed","Declared @upArrow"
635311001722415646,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311001722415646,"StepEvaluate","->","Changed","Declared @upArrow"
635311001722415646,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311001722571646,"StepEvaluate","->","Changed","Declared @upArrow"
635311001722571646,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311001722571646,"StepEvaluate","->","Changed","Declared @graham"
635311001722571646,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311001722571646,"StepEvaluate","->","Changed","Declared @graham"
635311001722571646,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311001722571646,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311001722571646,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311001722571646,"StepEvaluate","->","Changed","Declared @ack"
635311001722571646,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311001722571646,"StepEvaluate","->","Changed","Declared @ack"
635311001722571646,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311001722571646,"StepEvaluate","->","Changed","Declared @ack"
635311001722571646,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311001722571646,"StepEvaluate","->","Changed","Declared @acker"
635311001722571646,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311001722571646,"StepEvaluate","->","Changed","Declared @acker"
635311001722571646,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311001722571646,"StepEvaluate","->","Changed","Declared @acker"
635311001722571646,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311001722571646,"StepEvaluate","->","Changed","Declared @acker"
635311001722571646,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311001722571646,"StepEvaluate","->","Changed","Declared @acker"
635311001722571646,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311001722571646,"StepEvaluate","->","Changed","Declared @hyper"
635311001722571646,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311001722571646,"StepEvaluate","->","Changed","Declared @hyper"
635311001722571646,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311001722571646,"StepEvaluate","->","Changed","Declared @hyper"
635311001722571646,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311001722571646,"StepEvaluate","->","Changed","Declared @hyper"
635311001722571646,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311001722571646,"StepEvaluate","->","Changed","Declared @hyper"
635311001722571646,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311001722571646,"StepEvaluate","->","Changed","Declared @sudan"
635311001722571646,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311001722571646,"StepEvaluate","->","Changed","Declared @sudan"
635311001722571646,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311001722571646,"StepEvaluate","->","Changed","Declared @sudan"
635311001722571646,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311001722571646,"StepEvaluate","[]","Changed","File imported"
635311001722571646,"StepEvaluate","File imported","Unchanged","File imported"
635311001722571646,"StepEvaluate","@","Changed","@"
635311001722571646,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001722571646,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001722571646,"StepEvaluate",",","Unchanged",","
635311001722571646,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001722571646,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311001722571646,"StepEvaluate","PAT@-M","Changed","[]"
635311001722571646,"StepEvaluate","SEL@import","Changed","[]"
635311001722571646,"StepEvaluate","@","Changed","[]"
635311001722571646,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311001722571646,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311001722571646,"Parsed as literal","quickSort"
635311001722571646,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311001722571646,"Parsed as literal",""
635311001722571646,"Parsed as literal",""
635311001722727646,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal",""
635311001722727646,"Invalid operator","@quickSort([]) -> []","0"
635311001722727646,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311001722727646,"Parsed as literal","quickSort"
635311001722727646,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal",""
635311001722727646,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal",""
635311001722727646,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311001722727646,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311001722727646,"Parsed as literal","quickSort"
635311001722727646,"Parsed as literal","list"
635311001722727646,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311001722727646,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311001722727646,"Parsed as literal","quickSort"
635311001722727646,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311001722727646,"Parsed as literal","filter"
635311001722727646,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311001722727646,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal","i"
635311001722727646,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311001722727646,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311001722727646,"Parsed as literal"," i "
635311001722727646,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311001722727646,"Parsed as literal"," "
635311001722727646,"Parsed as literal","list"
635311001722727646,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal","list"
635311001722727646,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311001722727646,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal","i"
635311001722727646,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311001722727646,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311001722727646,"Parsed as literal"," i "
635311001722727646,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311001722727646,"Parsed as literal"," "
635311001722727646,"Parsed as literal","list"
635311001722727646,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal","list"
635311001722727646,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311001722727646,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311001722727646,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311001722727646,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311001722727646,"Parsed as literal",""
635311001722727646,"Parsed as literal","i"
635311001722727646,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311001722883647,"Parsed as literal"," i "
635311001722883647,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311001722883647,"Parsed as literal"," "
635311001722883647,"Parsed as literal","list"
635311001722883647,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311001722883647,"Parsed as literal",""
635311001722883647,"Parsed as literal","list"
635311001722883647,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311001722883647,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311001722883647,"Parsed as literal"," "
635311001722883647,"Parsed as literal","list "
635311001722883647,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311001722883647,"Parsed as literal","quickSort"
635311001722883647,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311001722883647,"Parsed as literal","filter"
635311001722883647,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311001722883647,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311001722883647,"Parsed as literal",""
635311001722883647,"Parsed as literal","i"
635311001722883647,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311001722883647,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311001722883647,"Parsed as literal"," i "
635311001722883647,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311001722883647,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311001722883647,"Parsed as literal"," "
635311001722883647,"Parsed as literal","list"
635311001722883647,"Parsed as literal","1"
635311001722883647,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311001722883647,"Parsed as literal",""
635311001722883647,"Parsed as literal","list"
635311001722883647,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311001722883647,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311001722883647,"Parsed as literal",""
635311001722883647,"Parsed as literal","i"
635311001722883647,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311001722883647,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311001722883647,"Parsed as literal"," i "
635311001722883647,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311001722883647,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311001722883647,"Parsed as literal"," "
635311001722883647,"Parsed as literal","list"
635311001722883647,"Parsed as literal","1"
635311001722883647,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311001722883647,"Parsed as literal",""
635311001722883647,"Parsed as literal","list"
635311001722883647,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311001722883647,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311001722883647,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311001722883647,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311001722883647,"Parsed as literal",""
635311001722883647,"Parsed as literal","i"
635311001722883647,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311001722883647,"Parsed as literal"," i "
635311001722883647,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311001722883647,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311001723039647,"Parsed as literal"," "
635311001723039647,"Parsed as literal","list"
635311001723039647,"Parsed as literal","1"
635311001723039647,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311001723039647,"Parsed as literal",""
635311001723039647,"Parsed as literal","list"
635311001723039647,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311001723039647,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311001723039647,"Parsed as literal","quickSort"
635311001723039647,"Parsed as literal","list"
635311001723039647,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311001723039647,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311001723039647,"Parsed as literal","quickSort"
635311001723039647,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311001723039647,"Parsed as literal","filter"
635311001723039647,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311001723039647,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311001723039647,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311001723039647,"Parsed as literal",""
635311001723039647,"Parsed as literal","i"
635311001723039647,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311001723039647,"Parsed as literal"," i "
635311001723039647,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311001723039647,"Parsed as literal"," "
635311001723039647,"Parsed as literal","list"
635311001723039647,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311001723039647,"Parsed as literal",""
635311001723039647,"Parsed as literal","list"
635311001723039647,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311001723039647,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311001723039647,"Parsed as literal"," "
635311001723039647,"Parsed as literal","list "
635311001723039647,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311001723039647,"Parsed as literal","quickSort"
635311001723039647,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311001723039647,"Parsed as literal","filter"
635311001723039647,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311001723039647,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311001723039647,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311001723039647,"Parsed as literal",""
635311001723039647,"Parsed as literal","i"
635311001723039647,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311001723039647,"Parsed as literal"," i "
635311001723039647,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311001723039647,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311001723039647,"Parsed as literal"," "
635311001723039647,"Parsed as literal","list"
635311001723039647,"Parsed as literal","1"
635311001723039647,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311001723039647,"Parsed as literal",""
635311001723039647,"Parsed as literal","list"
635311001723039647,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311001723039647,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311001723195647,"Parsed as literal","mergeSort"
635311001723195647,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal",""
635311001723195647,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal",""
635311001723195647,"Invalid operator","@mergeSort([]) -> []","0"
635311001723195647,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311001723195647,"Parsed as literal","mergeSort"
635311001723195647,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal",""
635311001723195647,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal",""
635311001723195647,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311001723195647,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311001723195647,"Parsed as literal","mergeSort"
635311001723195647,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311001723195647,"Parsed as literal","list"
635311001723195647,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311001723195647,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal","list"
635311001723195647,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal",""
635311001723195647,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311001723195647,"Parsed as literal"," "
635311001723195647,"Parsed as literal","list"
635311001723195647,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311001723195647,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311001723195647,"Parsed as literal","mergeSort"
635311001723195647,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311001723195647,"Parsed as literal","list"
635311001723195647,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311001723195647,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal","list"
635311001723195647,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311001723195647,"Parsed as literal",""
635311001723195647,"Parsed as literal",""
635311001723195647,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311001723195647,"Parsed as literal"," "
635311001723195647,"Parsed as literal","list"
635311001723195647,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311001723195647,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311001723195647,"Parsed as literal","mergeSort"
635311001723195647,"Parsed as literal","list"
635311001723195647,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311001723195647,"Parsed as literal","merge"
635311001723195647,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311001723195647,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311001723195647,"Parsed as literal","mergeSort"
635311001723351648,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311001723351648,"Parsed as literal","take"
635311001723351648,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311001723351648,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311001723351648,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311001723351648,"Parsed as literal","count"
635311001723351648,"Parsed as literal","list"
635311001723351648,"Parsed as literal","2"
635311001723351648,"Parsed as literal","list"
635311001723351648,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311001723351648,"Parsed as literal","mergeSort"
635311001723351648,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311001723351648,"Parsed as literal","skip"
635311001723351648,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311001723351648,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311001723351648,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311001723351648,"Parsed as literal","count"
635311001723351648,"Parsed as literal","list"
635311001723351648,"Parsed as literal","2"
635311001723351648,"Parsed as literal","list"
635311001723351648,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311001723351648,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311001723351648,"Parsed as literal","mergeSort"
635311001723351648,"Parsed as literal","list"
635311001723351648,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311001723351648,"Parsed as literal","merge"
635311001723351648,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311001723351648,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311001723351648,"Parsed as literal","mergeSort"
635311001723351648,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311001723351648,"Parsed as literal","take"
635311001723351648,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311001723351648,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311001723351648,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311001723351648,"Parsed as literal","count"
635311001723351648,"Parsed as literal","list"
635311001723351648,"Parsed as literal","2"
635311001723351648,"Parsed as literal","list"
635311001723351648,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311001723351648,"Parsed as literal","mergeSort"
635311001723351648,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311001723351648,"Parsed as literal","skip"
635311001723351648,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311001723351648,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311001723351648,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311001723351648,"Parsed as literal","count"
635311001723351648,"Parsed as literal","list"
635311001723351648,"Parsed as literal","2"
635311001723351648,"Parsed as literal","list"
635311001723351648,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311001723507648,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311001723507648,"Parsed as literal","merge"
635311001723507648,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311001723507648,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal","list"
635311001723507648,"Parsed as literal"," list"
635311001723507648,"Invalid operator","@merge([],list) -> list","0"
635311001723507648,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311001723507648,"Parsed as literal","merge"
635311001723507648,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311001723507648,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal","list"
635311001723507648,"Parsed as literal"," list"
635311001723507648,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311001723507648,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311001723507648,"Parsed as literal","merge"
635311001723507648,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311001723507648,"Parsed as literal","list"
635311001723507648,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal"," list"
635311001723507648,"Invalid operator","@merge(list,[]) -> list","0"
635311001723507648,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311001723507648,"Parsed as literal","merge"
635311001723507648,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311001723507648,"Parsed as literal","list"
635311001723507648,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal"," list"
635311001723507648,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311001723507648,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311001723507648,"Parsed as literal","merge"
635311001723507648,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311001723507648,"Parsed as literal","left"
635311001723507648,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311001723507648,"Parsed as literal","right "
635311001723507648,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311001723507648,"Parsed as literal"," "
635311001723507648,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311001723507648,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311001723507648,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311001723507648,"Parsed as literal",""
635311001723507648,"Parsed as literal","left "
635311001723507648,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311001723507648,"Parsed as literal"," "
635311001723507648,"Parsed as literal","right"
635311001723507648,"Parsed as literal",""
635311001723507648,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311001723663648,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311001723663648,"Parsed as literal"," "
635311001723663648,"Parsed as literal","left "
635311001723663648,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311001723663648,"Parsed as literal","merge"
635311001723663648,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311001723663648,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311001723663648,"Parsed as literal",""
635311001723663648,"Parsed as literal","left"
635311001723663648,"Parsed as literal","right"
635311001723663648,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311001723663648,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311001723663648,"Parsed as literal","merge"
635311001723663648,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311001723663648,"Parsed as literal","left"
635311001723663648,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311001723663648,"Parsed as literal","right "
635311001723663648,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311001723663648,"Parsed as literal"," "
635311001723663648,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311001723663648,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311001723663648,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311001723663648,"Parsed as literal",""
635311001723663648,"Parsed as literal","left "
635311001723663648,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311001723663648,"Parsed as literal"," "
635311001723663648,"Parsed as literal","right"
635311001723663648,"Parsed as literal",""
635311001723663648,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311001723663648,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311001723663648,"Parsed as literal"," "
635311001723663648,"Parsed as literal","left "
635311001723663648,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311001723663648,"Parsed as literal","merge"
635311001723663648,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311001723663648,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311001723663648,"Parsed as literal",""
635311001723663648,"Parsed as literal","left"
635311001723663648,"Parsed as literal","right"
635311001723663648,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311001723663648,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311001723663648,"Parsed as literal","merge"
635311001723663648,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311001723663648,"Parsed as literal","left"
635311001723663648,"Parsed as literal","right"
635311001723663648,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311001723663648,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311001723663648,"Parsed as literal"," "
635311001723663648,"Parsed as literal","right "
635311001723663648,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311001723663648,"Parsed as literal","merge"
635311001723663648,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311001723663648,"Parsed as literal","left"
635311001723663648,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311001723663648,"Parsed as literal",""
635311001723819648,"Parsed as literal","right"
635311001723819648,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311001723819648,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311001723819648,"Parsed as literal","merge"
635311001723819648,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311001723819648,"Parsed as literal","left"
635311001723819648,"Parsed as literal","right"
635311001723819648,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311001723819648,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311001723819648,"Parsed as literal"," "
635311001723819648,"Parsed as literal","right "
635311001723819648,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311001723819648,"Parsed as literal","merge"
635311001723819648,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311001723819648,"Parsed as literal","left"
635311001723819648,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311001723819648,"Parsed as literal",""
635311001723819648,"Parsed as literal","right"
635311001723819648,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311001723819648,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311001723819648,"Parsed as literal","bubbleSort"
635311001723819648,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311001723819648,"Parsed as literal","list"
635311001723819648,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311001723819648,"Parsed as literal","isSorted"
635311001723819648,"Parsed as literal","list"
635311001723819648,"Parsed as literal"," list"
635311001723819648,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311001723819648,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311001723819648,"Parsed as literal","bubbleSort"
635311001723819648,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311001723819648,"Parsed as literal","list"
635311001723819648,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311001723819648,"Parsed as literal","isSorted"
635311001723819648,"Parsed as literal","list"
635311001723819648,"Parsed as literal"," list"
635311001723819648,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311001723819648,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311001723819648,"Parsed as literal","bubbleSort"
635311001723819648,"Parsed as literal","list"
635311001723819648,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311001723819648,"Parsed as literal","bubbleSort"
635311001723819648,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311001723819648,"Parsed as literal","bubbleSortPass"
635311001723819648,"Parsed as literal","list"
635311001723819648,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311001723819648,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311001723819648,"Parsed as literal","bubbleSort"
635311001723819648,"Parsed as literal","list"
635311001723819648,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311001723819648,"Parsed as literal","bubbleSort"
635311001723819648,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311001723819648,"Parsed as literal","bubbleSortPass"
635311001723819648,"Parsed as literal","list"
635311001723975649,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311001723975649,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311001723975649,"Parsed as literal","bubbleSortPass"
635311001723975649,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal",""
635311001723975649,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal",""
635311001723975649,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311001723975649,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311001723975649,"Parsed as literal","bubbleSortPass"
635311001723975649,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal",""
635311001723975649,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal",""
635311001723975649,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311001723975649,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311001723975649,"Parsed as literal","bubbleSortPass"
635311001723975649,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311001723975649,"Parsed as literal","list"
635311001723975649,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311001723975649,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal","list "
635311001723975649,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal",""
635311001723975649,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311001723975649,"Parsed as literal"," "
635311001723975649,"Parsed as literal","list"
635311001723975649,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311001723975649,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311001723975649,"Parsed as literal","bubbleSortPass"
635311001723975649,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311001723975649,"Parsed as literal","list"
635311001723975649,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311001723975649,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal","list "
635311001723975649,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311001723975649,"Parsed as literal",""
635311001723975649,"Parsed as literal",""
635311001723975649,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311001723975649,"Parsed as literal"," "
635311001723975649,"Parsed as literal","list"
635311001723975649,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311001723975649,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311001723975649,"Parsed as literal","bubbleSortPass"
635311001723975649,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311001723975649,"Parsed as literal","list"
635311001723975649,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311001723975649,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311001723975649,"Parsed as literal",""
635311001724131649,"Parsed as literal","list "
635311001724131649,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311001724131649,"Parsed as literal"," "
635311001724131649,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311001724131649,"Parsed as literal",""
635311001724131649,"Parsed as literal","list"
635311001724131649,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311001724131649,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311001724131649,"Parsed as literal"," "
635311001724131649,"Parsed as literal","list "
635311001724131649,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311001724131649,"Parsed as literal","bubbleSortPass"
635311001724131649,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311001724131649,"Parsed as literal",""
635311001724131649,"Parsed as literal","list"
635311001724131649,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311001724131649,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311001724131649,"Parsed as literal","bubbleSortPass"
635311001724131649,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311001724131649,"Parsed as literal","list"
635311001724131649,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311001724131649,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311001724131649,"Parsed as literal",""
635311001724131649,"Parsed as literal","list "
635311001724131649,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311001724131649,"Parsed as literal"," "
635311001724131649,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311001724131649,"Parsed as literal",""
635311001724131649,"Parsed as literal","list"
635311001724131649,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311001724131649,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311001724131649,"Parsed as literal"," "
635311001724131649,"Parsed as literal","list "
635311001724131649,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311001724131649,"Parsed as literal","bubbleSortPass"
635311001724131649,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311001724131649,"Parsed as literal",""
635311001724131649,"Parsed as literal","list"
635311001724131649,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311001724131649,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311001724131649,"Parsed as literal","bubbleSortPass"
635311001724131649,"Parsed as literal","list"
635311001724131649,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311001724131649,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311001724131649,"Parsed as literal"," "
635311001724131649,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311001724131649,"Parsed as literal",""
635311001724131649,"Parsed as literal","list "
635311001724131649,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311001724131649,"Parsed as literal","bubbleSortPass"
635311001724131649,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311001724287649,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal","list "
635311001724287649,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311001724287649,"Parsed as literal"," "
635311001724287649,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal","list"
635311001724287649,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311001724287649,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311001724287649,"Parsed as literal","bubbleSortPass"
635311001724287649,"Parsed as literal","list"
635311001724287649,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311001724287649,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311001724287649,"Parsed as literal"," "
635311001724287649,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal","list "
635311001724287649,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311001724287649,"Parsed as literal","bubbleSortPass"
635311001724287649,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311001724287649,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal","list "
635311001724287649,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311001724287649,"Parsed as literal"," "
635311001724287649,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal","list"
635311001724287649,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311001724287649,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311001724287649,"Parsed as literal","isSorted"
635311001724287649,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal"," true"
635311001724287649,"Invalid operator","@isSorted([]) -> true","0"
635311001724287649,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311001724287649,"Parsed as literal","isSorted"
635311001724287649,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal"," true"
635311001724287649,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311001724287649,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311001724287649,"Parsed as literal","isSorted"
635311001724287649,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311001724287649,"Parsed as literal","list"
635311001724287649,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311001724287649,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311001724287649,"Parsed as literal",""
635311001724287649,"Parsed as literal","list "
635311001724287649,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal"," true"
635311001724443650,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311001724443650,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311001724443650,"Parsed as literal","isSorted"
635311001724443650,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311001724443650,"Parsed as literal","list"
635311001724443650,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311001724443650,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal","list "
635311001724443650,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal"," true"
635311001724443650,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311001724443650,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311001724443650,"Parsed as literal","isSorted"
635311001724443650,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311001724443650,"Parsed as literal","list"
635311001724443650,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311001724443650,"Parsed as literal",""
635311001724443650,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311001724443650,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311001724443650,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal","list "
635311001724443650,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311001724443650,"Parsed as literal"," "
635311001724443650,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal","list"
635311001724443650,"Parsed as literal",""
635311001724443650,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311001724443650,"Parsed as literal","isSorted"
635311001724443650,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal","list"
635311001724443650,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311001724443650,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311001724443650,"Parsed as literal","isSorted"
635311001724443650,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311001724443650,"Parsed as literal","list"
635311001724443650,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311001724443650,"Parsed as literal",""
635311001724443650,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311001724443650,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311001724443650,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311001724443650,"Parsed as literal",""
635311001724443650,"Parsed as literal","list "
635311001724443650,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311001724599650,"Parsed as literal"," "
635311001724599650,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311001724599650,"Parsed as literal",""
635311001724599650,"Parsed as literal","list"
635311001724599650,"Parsed as literal",""
635311001724599650,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311001724599650,"Parsed as literal","isSorted"
635311001724599650,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311001724599650,"Parsed as literal",""
635311001724599650,"Parsed as literal","list"
635311001724599650,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311001724599650,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311001724599650,"Parsed as literal","isSorted"
635311001724599650,"Parsed as literal","list"
635311001724599650,"Parsed as literal"," false"
635311001724599650,"Invalid operator","@isSorted(list) -> false","0"
635311001724599650,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311001724599650,"Parsed as literal","isSorted"
635311001724599650,"Parsed as literal","list"
635311001724599650,"Parsed as literal"," false"
635311001724599650,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311001724599650,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311001724599650,"Parsed as literal","insertionSort"
635311001724599650,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311001724599650,"Parsed as literal",""
635311001724599650,"Parsed as literal",""
635311001724599650,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311001724599650,"Parsed as literal",""
635311001724599650,"Parsed as literal",""
635311001724599650,"Invalid operator","@insertionSort([]) -> []","0"
635311001724599650,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311001724599650,"Parsed as literal","insertionSort"
635311001724599650,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311001724599650,"Parsed as literal",""
635311001724599650,"Parsed as literal",""
635311001724599650,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311001724599650,"Parsed as literal",""
635311001724599650,"Parsed as literal",""
635311001724599650,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311001724599650,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311001724599650,"Parsed as literal","insertionSort"
635311001724599650,"Parsed as literal","list"
635311001724599650,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311001724599650,"Parsed as literal","insert"
635311001724599650,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311001724599650,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311001724599650,"Parsed as literal",""
635311001724599650,"Parsed as literal","list"
635311001724599650,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311001724599650,"Parsed as literal","insertionSort"
635311001724599650,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311001724755650,"Parsed as literal",""
635311001724755650,"Parsed as literal","list"
635311001724755650,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311001724755650,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311001724755650,"Parsed as literal","insertionSort"
635311001724755650,"Parsed as literal","list"
635311001724755650,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311001724755650,"Parsed as literal","insert"
635311001724755650,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311001724755650,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311001724755650,"Parsed as literal",""
635311001724755650,"Parsed as literal","list"
635311001724755650,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311001724755650,"Parsed as literal","insertionSort"
635311001724755650,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311001724755650,"Parsed as literal",""
635311001724755650,"Parsed as literal","list"
635311001724755650,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311001724755650,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311001724755650,"Parsed as literal","insert"
635311001724755650,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311001724755650,"Parsed as literal","item"
635311001724755650,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311001724755650,"Parsed as literal",""
635311001724755650,"Parsed as literal",""
635311001724755650,"Parsed as literal"," item"
635311001724755650,"Invalid operator","@insert(item,[]) -> item","0"
635311001724755650,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311001724755650,"Parsed as literal","insert"
635311001724755650,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311001724755650,"Parsed as literal","item"
635311001724755650,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311001724755650,"Parsed as literal",""
635311001724755650,"Parsed as literal",""
635311001724755650,"Parsed as literal"," item"
635311001724755650,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311001724755650,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311001724755650,"Parsed as literal","insert"
635311001724755650,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311001724755650,"Parsed as literal","item"
635311001724755650,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311001724755650,"Parsed as literal","list "
635311001724755650,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311001724755650,"Parsed as literal"," item "
635311001724755650,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311001724755650,"Parsed as literal"," "
635311001724755650,"Parsed as literal","list"
635311001724755650,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311001724755650,"Parsed as literal"," item "
635311001724755650,"Parsed as literal"," list"
635311001724755650,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311001724755650,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311001724755650,"Parsed as literal","insert"
635311001724755650,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311001724911650,"Parsed as literal","item"
635311001724911650,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311001724911650,"Parsed as literal","list "
635311001724911650,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311001724911650,"Parsed as literal"," item "
635311001724911650,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311001724911650,"Parsed as literal"," "
635311001724911650,"Parsed as literal","list"
635311001724911650,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311001724911650,"Parsed as literal"," item "
635311001724911650,"Parsed as literal"," list"
635311001724911650,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311001724911650,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311001724911650,"Parsed as literal","insert"
635311001724911650,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311001724911650,"Parsed as literal","item"
635311001724911650,"Parsed as literal","list"
635311001724911650,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311001724911650,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311001724911650,"Parsed as literal"," "
635311001724911650,"Parsed as literal","list "
635311001724911650,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311001724911650,"Parsed as literal","insert"
635311001724911650,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311001724911650,"Parsed as literal","item"
635311001724911650,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311001724911650,"Parsed as literal",""
635311001724911650,"Parsed as literal","list"
635311001724911650,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311001724911650,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311001724911650,"Parsed as literal","insert"
635311001724911650,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311001724911650,"Parsed as literal","item"
635311001724911650,"Parsed as literal","list"
635311001724911650,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311001724911650,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311001724911650,"Parsed as literal"," "
635311001724911650,"Parsed as literal","list "
635311001724911650,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311001724911650,"Parsed as literal","insert"
635311001724911650,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311001724911650,"Parsed as literal","item"
635311001724911650,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311001724911650,"Parsed as literal",""
635311001724911650,"Parsed as literal","list"
635311001724911650,"StepEvaluate","->","Changed","Declared @quickSort"
635311001724911650,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311001724911650,"StepEvaluate","->","Changed","Declared @quickSort"
635311001724911650,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311001724911650,"StepEvaluate","->","Changed","Declared @mergeSort"
635311001724911650,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311001724911650,"StepEvaluate","->","Changed","Declared @mergeSort"
635311001724911650,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311001724911650,"StepEvaluate","->","Changed","Declared @mergeSort"
635311001724911650,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311001724911650,"StepEvaluate","->","Changed","Declared @merge"
635311001725067651,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311001725067651,"StepEvaluate","->","Changed","Declared @merge"
635311001725067651,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311001725067651,"StepEvaluate","->","Changed","Declared @merge"
635311001725067651,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311001725067651,"StepEvaluate","->","Changed","Declared @merge"
635311001725067651,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311001725067651,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311001725067651,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311001725067651,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311001725067651,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311001725067651,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311001725067651,"StepEvaluate","->","Changed","Declared @isSorted"
635311001725067651,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311001725067651,"StepEvaluate","->","Changed","Declared @isSorted"
635311001725067651,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311001725067651,"StepEvaluate","->","Changed","Declared @isSorted"
635311001725067651,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311001725067651,"StepEvaluate","->","Changed","Declared @isSorted"
635311001725067651,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311001725067651,"StepEvaluate","->","Changed","Declared @insertionSort"
635311001725067651,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311001725067651,"StepEvaluate","->","Changed","Declared @insertionSort"
635311001725067651,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311001725067651,"StepEvaluate","->","Changed","Declared @insert"
635311001725067651,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311001725067651,"StepEvaluate","->","Changed","Declared @insert"
635311001725067651,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311001725067651,"StepEvaluate","->","Changed","Declared @insert"
635311001725067651,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311001725067651,"StepEvaluate","[]","Changed","File imported"
635311001725067651,"StepEvaluate","File imported","Unchanged","File imported"
635311001725067651,"StepEvaluate","->","Changed","Declared @makeList"
635311001725067651,"StepEvaluate","Declared @makeList","Unchanged","Declared @makeList"
635311001725067651,"StepEvaluate","[]","Changed","File imported"
635311001725067651,"StepEvaluate","File imported","Unchanged","File imported"
635311001725067651,"ParseInternal","@take(8,@fib2())","0","FunctionCallOperator","1","5","take","8,@fib2()"
635311001725067651,"Parsed as literal","take"
635311001725067651,"ParseInternal","8,@fib2()","5","CommaOperator","5","7","8","@fib2()"
635311001725067651,"Parsed as literal","8"
635311001725067651,"ParseInternal","@fib2()","7","FunctionCallOperator","8","12","fib2","[]"
635311001725067651,"Parsed as literal","fib2"
635311001725067651,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311001725067651,"Parsed as literal",""
635311001725067651,"Parsed as literal",""
635311001801195784,"StepEvaluate","@","Changed","@"
635311001801351785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801351785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801351785,"StepEvaluate",",","Unchanged",","
635311001801351785,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001801351785,"StepEvaluate",",","Unchanged",","
635311001801351785,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801351785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801351785,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311001801351785,"StepEvaluate","SEL@take","Changed","SEL@take"
635311001801351785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801351785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801351785,"StepEvaluate",",","Unchanged",","
635311001801351785,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801351785,"StepEvaluate",",","Unchanged",","
635311001801351785,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801507785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801507785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801507785,"StepEvaluate",",","Unchanged",","
635311001801507785,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001801507785,"StepEvaluate",",","Unchanged",","
635311001801507785,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801507785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801507785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801507785,"StepEvaluate",",","Unchanged",","
635311001801507785,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001801507785,"StepEvaluate",",","Unchanged",","
635311001801507785,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801507785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801507785,"StepEvaluate","PAT@-M","Changed","&"
635311001801507785,"StepEvaluate","SEL@take","Changed","&"
635311001801507785,"StepEvaluate","@","Changed","&"
635311001801663785,"StepEvaluate","&","Unchanged","&"
635311001801663785,"StepEvaluate","head","Unchanged","head"
635311001801663785,"StepEvaluate","@","Changed","@"
635311001801663785,"StepEvaluate","@","Changed","@"
635311001801663785,"StepEvaluate","&","Unchanged","&"
635311001801663785,"StepEvaluate","head","Unchanged","head"
635311001801663785,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001801663785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801663785,"StepEvaluate",",","Unchanged",","
635311001801663785,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801663785,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001801663785,"StepEvaluate","PAT@-M","Changed","&"
635311001801663785,"StepEvaluate","SEL@fib2","Changed","&"
635311001801663785,"StepEvaluate","@","Changed","&"
635311001801663785,"StepEvaluate","@","Changed","@"
635311001801663785,"StepEvaluate","&","Unchanged","&"
635311001801663785,"StepEvaluate","head","Changed","0"
635311001801819785,"StepEvaluate","@","Changed","@"
635311001801819785,"StepEvaluate","&","Unchanged","&"
635311001801819785,"StepEvaluate","0","Unchanged","0"
635311001801819785,"StepEvaluate","@","Changed","@"
635311001801819785,"StepEvaluate","&","Unchanged","&"
635311001801819785,"StepEvaluate","0","Unchanged","0"
635311001801819785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801819785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801819785,"StepEvaluate",",","Unchanged",","
635311001801819785,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001801819785,"StepEvaluate","1","Unchanged","1"
635311001801819785,"StepEvaluate",",","Unchanged",","
635311001801819785,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801819785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801819785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801819785,"StepEvaluate",",","Unchanged",","
635311001801819785,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001801819785,"StepEvaluate","1","Unchanged","1"
635311001801819785,"StepEvaluate",",","Unchanged",","
635311001801819785,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001801819785,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801819785,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801819785,"StepEvaluate",",","Unchanged",","
635311001801819785,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001801819785,"StepEvaluate","1","Unchanged","1"
635311001801819785,"StepEvaluate",",","Unchanged",","
635311001801819785,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001801819785,"StepEvaluate","@","Unchanged","@"
635311001801819785,"StepEvaluate","take","Unchanged","take"
635311001801819785,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","-","Changed","7"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","tail","Unchanged","tail"
635311001801975786,"StepEvaluate","@","Changed","@"
635311001801975786,"StepEvaluate","&","Unchanged","&"
635311001801975786,"StepEvaluate","0","Unchanged","0"
635311001801975786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801975786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801975786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801975786,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311001801975786,"StepEvaluate","SEL@take","Changed","SEL@take"
635311001801975786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801975786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801975786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801975786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801975786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801975786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001801975786,"StepEvaluate",",","Unchanged",","
635311001801975786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001801975786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001801975786,"StepEvaluate","PAT@-M","Changed","&"
635311001801975786,"StepEvaluate","SEL@take","Changed","&"
635311001801975786,"StepEvaluate","@","Changed","&"
635311001801975786,"StepEvaluate","&","Unchanged","&"
635311001801975786,"StepEvaluate","0","Unchanged","0"
635311001801975786,"StepEvaluate","&","Unchanged","&"
635311001801975786,"StepEvaluate","head","Unchanged","head"
635311001801975786,"StepEvaluate","tail","Unchanged","tail"
635311001801975786,"StepEvaluate","@","Changed","@"
635311001801975786,"StepEvaluate","@","Changed","@"
635311001801975786,"StepEvaluate","&","Unchanged","&"
635311001801975786,"StepEvaluate","0","Unchanged","0"
635311001801975786,"StepEvaluate","&","Unchanged","&"
635311001801975786,"StepEvaluate","head","Unchanged","head"
635311001801975786,"StepEvaluate","tail","Unchanged","tail"
635311001802131786,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001802131786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802131786,"StepEvaluate",",","Unchanged",","
635311001802131786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802131786,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001802131786,"StepEvaluate","PAT@-M","Changed","&"
635311001802131786,"StepEvaluate","SEL@fib2","Changed","&"
635311001802131786,"StepEvaluate","@","Changed","&"
635311001802131786,"StepEvaluate","@","Changed","@"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","0","Unchanged","0"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","head","Unchanged","head"
635311001802131786,"StepEvaluate","tail","Changed","&"
635311001802131786,"StepEvaluate","@","Changed","@"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","0","Unchanged","0"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","head","Changed","1"
635311001802131786,"StepEvaluate","@","Changed","@"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","0","Unchanged","0"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","1","Unchanged","1"
635311001802131786,"StepEvaluate","@","Changed","@"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","0","Unchanged","0"
635311001802131786,"StepEvaluate","&","Unchanged","&"
635311001802131786,"StepEvaluate","1","Unchanged","1"
635311001802131786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802131786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802131786,"StepEvaluate",",","Unchanged",","
635311001802131786,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802131786,"StepEvaluate","1","Unchanged","1"
635311001802131786,"StepEvaluate",",","Unchanged",","
635311001802131786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802131786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802131786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802131786,"StepEvaluate",",","Unchanged",","
635311001802131786,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802131786,"StepEvaluate","1","Unchanged","1"
635311001802131786,"StepEvaluate",",","Unchanged",","
635311001802131786,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001802131786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802131786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802131786,"StepEvaluate",",","Unchanged",","
635311001802131786,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802131786,"StepEvaluate","1","Unchanged","1"
635311001802131786,"StepEvaluate",",","Unchanged",","
635311001802131786,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001802287786,"StepEvaluate","@","Unchanged","@"
635311001802287786,"StepEvaluate","take","Unchanged","take"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","-","Changed","6"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","tail","Unchanged","tail"
635311001802287786,"StepEvaluate","tail","Unchanged","tail"
635311001802287786,"StepEvaluate","@","Changed","@"
635311001802287786,"StepEvaluate","&","Unchanged","&"
635311001802287786,"StepEvaluate","0","Unchanged","0"
635311001802287786,"StepEvaluate","&","Unchanged","&"
635311001802287786,"StepEvaluate","1","Unchanged","1"
635311001802287786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802287786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802287786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802287786,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311001802287786,"StepEvaluate","SEL@take","Changed","SEL@take"
635311001802287786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802287786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802287786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802287786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802287786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802287786,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001802287786,"StepEvaluate",",","Unchanged",","
635311001802287786,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802287786,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001802287786,"StepEvaluate","PAT@-M","Changed","&"
635311001802287786,"StepEvaluate","SEL@take","Changed","&"
635311001802287786,"StepEvaluate","@","Changed","&"
635311001802287786,"StepEvaluate","&","Unchanged","&"
635311001802287786,"StepEvaluate","0","Unchanged","0"
635311001802287786,"StepEvaluate","&","Unchanged","&"
635311001802287786,"StepEvaluate","1","Unchanged","1"
635311001802287786,"StepEvaluate","&","Unchanged","&"
635311001802287786,"StepEvaluate","head","Unchanged","head"
635311001802287786,"StepEvaluate","tail","Unchanged","tail"
635311001802287786,"StepEvaluate","tail","Unchanged","tail"
635311001802287786,"StepEvaluate","@","Changed","@"
635311001802443787,"StepEvaluate","@","Changed","@"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","0","Unchanged","0"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","1","Unchanged","1"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","head","Unchanged","head"
635311001802443787,"StepEvaluate","tail","Unchanged","tail"
635311001802443787,"StepEvaluate","tail","Unchanged","tail"
635311001802443787,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001802443787,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802443787,"StepEvaluate",",","Unchanged",","
635311001802443787,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001802443787,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001802443787,"StepEvaluate","PAT@-M","Changed","&"
635311001802443787,"StepEvaluate","SEL@fib2","Changed","&"
635311001802443787,"StepEvaluate","@","Changed","&"
635311001802443787,"StepEvaluate","@","Changed","@"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","0","Unchanged","0"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","1","Unchanged","1"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","head","Unchanged","head"
635311001802443787,"StepEvaluate","tail","Unchanged","tail"
635311001802443787,"StepEvaluate","tail","Changed","&"
635311001802443787,"StepEvaluate","@","Changed","@"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","0","Unchanged","0"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","1","Unchanged","1"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","head","Unchanged","head"
635311001802443787,"StepEvaluate","tail","Changed","@"
635311001802443787,"StepEvaluate","@","Changed","@"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","0","Unchanged","0"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","1","Unchanged","1"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","head","Unchanged","head"
635311001802443787,"StepEvaluate","@","Changed","@"
635311001802443787,"StepEvaluate","@","Changed","@"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","0","Unchanged","0"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","1","Unchanged","1"
635311001802443787,"StepEvaluate","&","Unchanged","&"
635311001802443787,"StepEvaluate","head","Unchanged","head"
635311001802599787,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001802599787,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802599787,"StepEvaluate","@func","Unchanged","@func"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802599787,"StepEvaluate","[]","Unchanged","[]"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802599787,"StepEvaluate","[]","Unchanged","[]"
635311001802599787,"StepEvaluate","@","Unchanged","@"
635311001802599787,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","a->","Changed","a->"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@","Changed","@"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","tail","Unchanged","tail"
635311001802599787,"StepEvaluate","@","Changed","@"
635311001802599787,"StepEvaluate","@","Changed","@"
635311001802599787,"StepEvaluate","&","Unchanged","&"
635311001802599787,"StepEvaluate","0","Unchanged","0"
635311001802599787,"StepEvaluate","&","Unchanged","&"
635311001802599787,"StepEvaluate","1","Unchanged","1"
635311001802599787,"StepEvaluate","&","Unchanged","&"
635311001802599787,"StepEvaluate","head","Unchanged","head"
635311001802599787,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001802599787,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802599787,"StepEvaluate","@func","Unchanged","@func"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802599787,"StepEvaluate","[]","Unchanged","[]"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001802599787,"StepEvaluate","[]","Unchanged","[]"
635311001802599787,"StepEvaluate","@","Unchanged","@"
635311001802599787,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","a->","Changed","#@"
635311001802599787,"StepEvaluate",",","Unchanged",","
635311001802599787,"StepEvaluate","@","Changed","@"
635311001802755787,"StepEvaluate",",","Unchanged",","
635311001802755787,"StepEvaluate","tail","Unchanged","tail"
635311001802755787,"StepEvaluate","@","Changed","@"
635311001802755787,"StepEvaluate","@","Changed","@"
635311001802755787,"StepEvaluate","&","Unchanged","&"
635311001802755787,"StepEvaluate","0","Unchanged","0"
635311001802755787,"StepEvaluate","&","Unchanged","&"
635311001802755787,"StepEvaluate","1","Unchanged","1"
635311001802755787,"StepEvaluate","&","Unchanged","&"
635311001802755787,"StepEvaluate","head","Unchanged","head"
635311001802755787,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803067788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803067788,"StepEvaluate","[]","Unchanged","[]"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803067788,"StepEvaluate","[]","Unchanged","[]"
635311001803067788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803067788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803067788,"StepEvaluate","[]","Unchanged","[]"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803067788,"StepEvaluate","[]","Unchanged","[]"
635311001803067788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803067788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803067788,"StepEvaluate","[]","Unchanged","[]"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803067788,"StepEvaluate","[]","Unchanged","[]"
635311001803067788,"StepEvaluate","@","Unchanged","@"
635311001803067788,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","#@","Unchanged","#@"
635311001803067788,"StepEvaluate","ANON_0","Unchanged","ANON_0"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","a","Unchanged","a"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","b","Unchanged","b"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","@","Changed","@"
635311001803067788,"StepEvaluate",",","Unchanged",","
635311001803067788,"StepEvaluate","tail","Unchanged","tail"
635311001803067788,"StepEvaluate","@","Changed","@"
635311001803067788,"StepEvaluate","@","Changed","@"
635311001803067788,"StepEvaluate","&","Unchanged","&"
635311001803067788,"StepEvaluate","0","Unchanged","0"
635311001803067788,"StepEvaluate","&","Unchanged","&"
635311001803067788,"StepEvaluate","1","Unchanged","1"
635311001803223788,"StepEvaluate","&","Unchanged","&"
635311001803223788,"StepEvaluate","head","Unchanged","head"
635311001803223788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803223788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803223788,"StepEvaluate","[]","Unchanged","[]"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803223788,"StepEvaluate","[]","Unchanged","[]"
635311001803223788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803223788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803223788,"StepEvaluate","[]","Unchanged","[]"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803223788,"StepEvaluate","[]","Unchanged","[]"
635311001803223788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803223788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803223788,"StepEvaluate","[]","Unchanged","[]"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803223788,"StepEvaluate","[]","Unchanged","[]"
635311001803223788,"StepEvaluate","@","Unchanged","@"
635311001803223788,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","#@","Unchanged","#@"
635311001803223788,"StepEvaluate","ANON_0","Unchanged","ANON_0"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","a","Unchanged","a"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","b","Unchanged","b"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001803223788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803223788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803223788,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001803223788,"StepEvaluate","PAT@-M","Changed","&"
635311001803223788,"StepEvaluate","SEL@fib2","Changed","&"
635311001803223788,"StepEvaluate","@","Changed","&"
635311001803223788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","tail","Unchanged","tail"
635311001803379788,"StepEvaluate","@","Changed","@"
635311001803379788,"StepEvaluate","@","Changed","@"
635311001803379788,"StepEvaluate","&","Unchanged","&"
635311001803379788,"StepEvaluate","0","Unchanged","0"
635311001803379788,"StepEvaluate","&","Unchanged","&"
635311001803379788,"StepEvaluate","1","Unchanged","1"
635311001803379788,"StepEvaluate","&","Unchanged","&"
635311001803379788,"StepEvaluate","head","Unchanged","head"
635311001803379788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803379788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803379788,"StepEvaluate","[]","Unchanged","[]"
635311001803379788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803379788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803379788,"StepEvaluate","[]","Unchanged","[]"
635311001803379788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803379788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001803379788,"StepEvaluate","[]","Unchanged","[]"
635311001803379788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803379788,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311001803379788,"StepEvaluate","SEL@zipWith","Changed","SEL@zipWith"
635311001803379788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803379788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803379788,"StepEvaluate",",","Unchanged",","
635311001803379788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803379788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803379788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803535788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803535788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803535788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803535788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803535788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803535788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803535788,"StepEvaluate",",","Unchanged",","
635311001803535788,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803535788,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001803535788,"StepEvaluate","PAT@-M","Changed","&"
635311001803535788,"StepEvaluate","SEL@zipWith","Changed","&"
635311001803535788,"StepEvaluate","@","Changed","&"
635311001803535788,"StepEvaluate","@","Changed","@"
635311001803535788,"StepEvaluate","&","Unchanged","&"
635311001803535788,"StepEvaluate","0","Unchanged","0"
635311001803535788,"StepEvaluate","&","Unchanged","&"
635311001803535788,"StepEvaluate","1","Unchanged","1"
635311001803535788,"StepEvaluate","&","Unchanged","&"
635311001803535788,"StepEvaluate","head","Changed","@"
635311001803535788,"StepEvaluate","@","Changed","@"
635311001803535788,"StepEvaluate","&","Unchanged","&"
635311001803535788,"StepEvaluate","0","Unchanged","0"
635311001803535788,"StepEvaluate","&","Unchanged","&"
635311001803535788,"StepEvaluate","1","Unchanged","1"
635311001803535788,"StepEvaluate","&","Unchanged","&"
635311001803535788,"StepEvaluate","SEL@ANON_0","Unchanged","SEL@ANON_0"
635311001803535788,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803691789,"StepEvaluate",",","Unchanged",","
635311001803691789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803691789,"StepEvaluate",",","Unchanged",","
635311001803691789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803691789,"StepEvaluate","SEL@ANON_0","Unchanged","SEL@ANON_0"
635311001803691789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803691789,"StepEvaluate",",","Unchanged",","
635311001803691789,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001803691789,"StepEvaluate",",","Unchanged",","
635311001803691789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803691789,"StepEvaluate","SEL@ANON_0","Unchanged","SEL@ANON_0"
635311001803691789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803691789,"StepEvaluate",",","Unchanged",","
635311001803691789,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001803691789,"StepEvaluate",",","Unchanged",","
635311001803691789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803691789,"StepEvaluate","SEL@ANON_0","Unchanged","SEL@ANON_0"
635311001803691789,"StepEvaluate","PAT@-M","Changed","+"
635311001803691789,"StepEvaluate","SEL@ANON_0","Changed","+"
635311001803691789,"StepEvaluate","@","Changed","+"
635311001803691789,"StepEvaluate","@","Changed","@"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","0","Unchanged","0"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","1","Unchanged","1"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","+","Unchanged","+"
635311001803691789,"StepEvaluate","head","Changed","0"
635311001803691789,"StepEvaluate","head","Unchanged","head"
635311001803691789,"StepEvaluate","tail","Unchanged","tail"
635311001803691789,"StepEvaluate","@","Changed","@"
635311001803691789,"StepEvaluate","@","Changed","@"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","0","Unchanged","0"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","1","Unchanged","1"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","+","Unchanged","+"
635311001803691789,"StepEvaluate","0","Unchanged","0"
635311001803691789,"StepEvaluate","head","Unchanged","head"
635311001803691789,"StepEvaluate","tail","Unchanged","tail"
635311001803691789,"StepEvaluate","@","Changed","@"
635311001803691789,"StepEvaluate","@","Changed","@"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","0","Unchanged","0"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","1","Unchanged","1"
635311001803691789,"StepEvaluate","&","Unchanged","&"
635311001803691789,"StepEvaluate","+","Unchanged","+"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","head","Unchanged","head"
635311001803847789,"StepEvaluate","tail","Unchanged","tail"
635311001803847789,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001803847789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001803847789,"StepEvaluate",",","Unchanged",","
635311001803847789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001803847789,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001803847789,"StepEvaluate","PAT@-M","Changed","&"
635311001803847789,"StepEvaluate","SEL@fib2","Changed","&"
635311001803847789,"StepEvaluate","@","Changed","&"
635311001803847789,"StepEvaluate","@","Changed","@"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","1","Unchanged","1"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","+","Unchanged","+"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","head","Unchanged","head"
635311001803847789,"StepEvaluate","tail","Changed","&"
635311001803847789,"StepEvaluate","@","Changed","@"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","1","Unchanged","1"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","+","Unchanged","+"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","head","Changed","1"
635311001803847789,"StepEvaluate","@","Changed","@"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","1","Unchanged","1"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","+","Changed","1"
635311001803847789,"StepEvaluate","@","Changed","@"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","1","Unchanged","1"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","1","Unchanged","1"
635311001803847789,"StepEvaluate","@","Changed","@"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","0","Unchanged","0"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","1","Unchanged","1"
635311001803847789,"StepEvaluate","&","Unchanged","&"
635311001803847789,"StepEvaluate","1","Unchanged","1"
635311001804003789,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804003789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804003789,"StepEvaluate","1","Unchanged","1"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804003789,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804003789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804003789,"StepEvaluate","1","Unchanged","1"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001804003789,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804003789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804003789,"StepEvaluate","1","Unchanged","1"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001804003789,"StepEvaluate","@","Unchanged","@"
635311001804003789,"StepEvaluate","take","Unchanged","take"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","-","Changed","5"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","tail","Unchanged","tail"
635311001804003789,"StepEvaluate","tail","Unchanged","tail"
635311001804003789,"StepEvaluate","tail","Unchanged","tail"
635311001804003789,"StepEvaluate","@","Changed","@"
635311001804003789,"StepEvaluate","&","Unchanged","&"
635311001804003789,"StepEvaluate","0","Unchanged","0"
635311001804003789,"StepEvaluate","&","Unchanged","&"
635311001804003789,"StepEvaluate","1","Unchanged","1"
635311001804003789,"StepEvaluate","&","Unchanged","&"
635311001804003789,"StepEvaluate","1","Unchanged","1"
635311001804003789,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804003789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804003789,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804003789,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311001804003789,"StepEvaluate","SEL@take","Changed","SEL@take"
635311001804003789,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804003789,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804003789,"StepEvaluate",",","Unchanged",","
635311001804003789,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804003789,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804159790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804159790,"StepEvaluate",",","Unchanged",","
635311001804159790,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001804159790,"StepEvaluate",",","Unchanged",","
635311001804159790,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804159790,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804159790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804159790,"StepEvaluate",",","Unchanged",","
635311001804159790,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001804159790,"StepEvaluate",",","Unchanged",","
635311001804159790,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804159790,"StepEvaluate","SEL@take","Unchanged","SEL@take"
635311001804159790,"StepEvaluate","PAT@-M","Changed","&"
635311001804159790,"StepEvaluate","SEL@take","Changed","&"
635311001804159790,"StepEvaluate","@","Changed","&"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","0","Unchanged","0"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","1","Unchanged","1"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","1","Unchanged","1"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","head","Unchanged","head"
635311001804159790,"StepEvaluate","tail","Unchanged","tail"
635311001804159790,"StepEvaluate","tail","Unchanged","tail"
635311001804159790,"StepEvaluate","tail","Unchanged","tail"
635311001804159790,"StepEvaluate","@","Changed","@"
635311001804159790,"StepEvaluate","@","Changed","@"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","0","Unchanged","0"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","1","Unchanged","1"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","1","Unchanged","1"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","head","Unchanged","head"
635311001804159790,"StepEvaluate","tail","Unchanged","tail"
635311001804159790,"StepEvaluate","tail","Unchanged","tail"
635311001804159790,"StepEvaluate","tail","Unchanged","tail"
635311001804159790,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001804159790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804159790,"StepEvaluate",",","Unchanged",","
635311001804159790,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804159790,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001804159790,"StepEvaluate","PAT@-M","Changed","&"
635311001804159790,"StepEvaluate","SEL@fib2","Changed","&"
635311001804159790,"StepEvaluate","@","Changed","&"
635311001804159790,"StepEvaluate","@","Changed","@"
635311001804159790,"StepEvaluate","&","Unchanged","&"
635311001804159790,"StepEvaluate","0","Unchanged","0"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","head","Unchanged","head"
635311001804315790,"StepEvaluate","tail","Unchanged","tail"
635311001804315790,"StepEvaluate","tail","Unchanged","tail"
635311001804315790,"StepEvaluate","tail","Changed","&"
635311001804315790,"StepEvaluate","@","Changed","@"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","0","Unchanged","0"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","head","Unchanged","head"
635311001804315790,"StepEvaluate","tail","Unchanged","tail"
635311001804315790,"StepEvaluate","tail","Changed","@"
635311001804315790,"StepEvaluate","@","Changed","@"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","0","Unchanged","0"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","head","Unchanged","head"
635311001804315790,"StepEvaluate","tail","Unchanged","tail"
635311001804315790,"StepEvaluate","@","Changed","@"
635311001804315790,"StepEvaluate","@","Changed","@"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","0","Unchanged","0"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","1","Unchanged","1"
635311001804315790,"StepEvaluate","&","Unchanged","&"
635311001804315790,"StepEvaluate","head","Unchanged","head"
635311001804315790,"StepEvaluate","tail","Unchanged","tail"
635311001804315790,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804315790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804315790,"StepEvaluate",",","Unchanged",","
635311001804315790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804315790,"StepEvaluate","@func","Unchanged","@func"
635311001804315790,"StepEvaluate",",","Unchanged",","
635311001804315790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804315790,"StepEvaluate","[]","Unchanged","[]"
635311001804315790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804471790,"StepEvaluate","[]","Unchanged","[]"
635311001804471790,"StepEvaluate","@","Unchanged","@"
635311001804471790,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","a->","Changed","a->"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","@","Changed","@"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","tail","Unchanged","tail"
635311001804471790,"StepEvaluate","@","Changed","@"
635311001804471790,"StepEvaluate","@","Changed","@"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","0","Unchanged","0"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","1","Unchanged","1"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","1","Unchanged","1"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","head","Unchanged","head"
635311001804471790,"StepEvaluate","tail","Unchanged","tail"
635311001804471790,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804471790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804471790,"StepEvaluate","@func","Unchanged","@func"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804471790,"StepEvaluate","[]","Unchanged","[]"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804471790,"StepEvaluate","[]","Unchanged","[]"
635311001804471790,"StepEvaluate","@","Unchanged","@"
635311001804471790,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","a->","Changed","#@"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","@","Changed","@"
635311001804471790,"StepEvaluate",",","Unchanged",","
635311001804471790,"StepEvaluate","tail","Unchanged","tail"
635311001804471790,"StepEvaluate","@","Changed","@"
635311001804471790,"StepEvaluate","@","Changed","@"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","0","Unchanged","0"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","1","Unchanged","1"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","1","Unchanged","1"
635311001804471790,"StepEvaluate","&","Unchanged","&"
635311001804471790,"StepEvaluate","head","Unchanged","head"
635311001804471790,"StepEvaluate","tail","Unchanged","tail"
635311001804627790,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804627790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804627790,"StepEvaluate","[]","Unchanged","[]"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804627790,"StepEvaluate","[]","Unchanged","[]"
635311001804627790,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804627790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804627790,"StepEvaluate","[]","Unchanged","[]"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804627790,"StepEvaluate","[]","Unchanged","[]"
635311001804627790,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804627790,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804627790,"StepEvaluate","[]","Unchanged","[]"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804627790,"StepEvaluate","[]","Unchanged","[]"
635311001804627790,"StepEvaluate","@","Unchanged","@"
635311001804627790,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","#@","Unchanged","#@"
635311001804627790,"StepEvaluate","ANON_1","Unchanged","ANON_1"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","a","Unchanged","a"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","b","Unchanged","b"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","@","Changed","@"
635311001804627790,"StepEvaluate",",","Unchanged",","
635311001804627790,"StepEvaluate","tail","Unchanged","tail"
635311001804627790,"StepEvaluate","@","Changed","@"
635311001804627790,"StepEvaluate","@","Changed","@"
635311001804627790,"StepEvaluate","&","Unchanged","&"
635311001804627790,"StepEvaluate","0","Unchanged","0"
635311001804627790,"StepEvaluate","&","Unchanged","&"
635311001804627790,"StepEvaluate","1","Unchanged","1"
635311001804627790,"StepEvaluate","&","Unchanged","&"
635311001804627790,"StepEvaluate","1","Unchanged","1"
635311001804627790,"StepEvaluate","&","Unchanged","&"
635311001804783791,"StepEvaluate","head","Unchanged","head"
635311001804783791,"StepEvaluate","tail","Unchanged","tail"
635311001804783791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804783791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804783791,"StepEvaluate","[]","Unchanged","[]"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804783791,"StepEvaluate","[]","Unchanged","[]"
635311001804783791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804783791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804783791,"StepEvaluate","[]","Unchanged","[]"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804783791,"StepEvaluate","[]","Unchanged","[]"
635311001804783791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804783791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804783791,"StepEvaluate","[]","Unchanged","[]"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804783791,"StepEvaluate","[]","Unchanged","[]"
635311001804783791,"StepEvaluate","@","Unchanged","@"
635311001804783791,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","#@","Unchanged","#@"
635311001804783791,"StepEvaluate","ANON_1","Unchanged","ANON_1"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","a","Unchanged","a"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","b","Unchanged","b"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001804783791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804783791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804783791,"StepEvaluate","SEL@fib2","Unchanged","SEL@fib2"
635311001804783791,"StepEvaluate","PAT@-M","Changed","&"
635311001804783791,"StepEvaluate","SEL@fib2","Changed","&"
635311001804783791,"StepEvaluate","@","Changed","&"
635311001804783791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","tail","Unchanged","tail"
635311001804939791,"StepEvaluate","@","Changed","@"
635311001804939791,"StepEvaluate","@","Changed","@"
635311001804939791,"StepEvaluate","&","Unchanged","&"
635311001804939791,"StepEvaluate","0","Unchanged","0"
635311001804939791,"StepEvaluate","&","Unchanged","&"
635311001804939791,"StepEvaluate","1","Unchanged","1"
635311001804939791,"StepEvaluate","&","Unchanged","&"
635311001804939791,"StepEvaluate","1","Unchanged","1"
635311001804939791,"StepEvaluate","&","Unchanged","&"
635311001804939791,"StepEvaluate","head","Unchanged","head"
635311001804939791,"StepEvaluate","tail","Unchanged","tail"
635311001804939791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804939791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804939791,"StepEvaluate","[]","Unchanged","[]"
635311001804939791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804939791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804939791,"StepEvaluate","[]","Unchanged","[]"
635311001804939791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804939791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001804939791,"StepEvaluate","[]","Unchanged","[]"
635311001804939791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804939791,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311001804939791,"StepEvaluate","SEL@zipWith","Changed","SEL@zipWith"
635311001804939791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001804939791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001804939791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001804939791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805095791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805095791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805095791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805095791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805095791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805095791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805095791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805095791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805095791,"StepEvaluate",",","Unchanged",","
635311001805095791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805095791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805095791,"StepEvaluate","PAT@-M","Changed","&"
635311001805095791,"StepEvaluate","SEL@zipWith","Changed","&"
635311001805095791,"StepEvaluate","@","Changed","&"
635311001805095791,"StepEvaluate","@","Changed","@"
635311001805095791,"StepEvaluate","&","Unchanged","&"
635311001805095791,"StepEvaluate","0","Unchanged","0"
635311001805095791,"StepEvaluate","&","Unchanged","&"
635311001805095791,"StepEvaluate","1","Unchanged","1"
635311001805095791,"StepEvaluate","&","Unchanged","&"
635311001805095791,"StepEvaluate","1","Unchanged","1"
635311001805095791,"StepEvaluate","&","Unchanged","&"
635311001805095791,"StepEvaluate","head","Unchanged","head"
635311001805095791,"StepEvaluate","tail","Changed","@"
635311001805095791,"StepEvaluate","@","Changed","@"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","0","Unchanged","0"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","1","Unchanged","1"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","1","Unchanged","1"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","head","Unchanged","head"
635311001805251791,"StepEvaluate","@","Changed","@"
635311001805251791,"StepEvaluate","@","Changed","@"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","0","Unchanged","0"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","1","Unchanged","1"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","1","Unchanged","1"
635311001805251791,"StepEvaluate","&","Unchanged","&"
635311001805251791,"StepEvaluate","head","Unchanged","head"
635311001805251791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805251791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805251791,"StepEvaluate",",","Unchanged",","
635311001805251791,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805251791,"StepEvaluate",",","Unchanged",","
635311001805251791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805251791,"StepEvaluate","[]","Unchanged","[]"
635311001805251791,"StepEvaluate",",","Unchanged",","
635311001805251791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805251791,"StepEvaluate","[]","Unchanged","[]"
635311001805251791,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805251791,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805251791,"StepEvaluate",",","Unchanged",","
635311001805251791,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001805251791,"StepEvaluate",",","Unchanged",","
635311001805251791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805251791,"StepEvaluate","[]","Unchanged","[]"
635311001805251791,"StepEvaluate",",","Unchanged",","
635311001805251791,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805251791,"StepEvaluate","[]","Unchanged","[]"
635311001805407792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805407792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805407792,"StepEvaluate","[]","Unchanged","[]"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805407792,"StepEvaluate","[]","Unchanged","[]"
635311001805407792,"StepEvaluate","@","Unchanged","@"
635311001805407792,"StepEvaluate","zipWith","Unchanged","zipWith"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","#@","Unchanged","#@"
635311001805407792,"StepEvaluate","ANON_1","Unchanged","ANON_1"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","a","Unchanged","a"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","b","Unchanged","b"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","tail","Changed","&"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","tail","Unchanged","tail"
635311001805407792,"StepEvaluate","tail","Unchanged","tail"
635311001805407792,"StepEvaluate","@","Changed","@"
635311001805407792,"StepEvaluate","@","Changed","@"
635311001805407792,"StepEvaluate","&","Unchanged","&"
635311001805407792,"StepEvaluate","0","Unchanged","0"
635311001805407792,"StepEvaluate","&","Unchanged","&"
635311001805407792,"StepEvaluate","1","Unchanged","1"
635311001805407792,"StepEvaluate","&","Unchanged","&"
635311001805407792,"StepEvaluate","1","Unchanged","1"
635311001805407792,"StepEvaluate","&","Unchanged","&"
635311001805407792,"StepEvaluate","head","Unchanged","head"
635311001805407792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805407792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805407792,"StepEvaluate","[]","Unchanged","[]"
635311001805407792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805407792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805407792,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001805407792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805563792,"StepEvaluate","[]","Unchanged","[]"
635311001805563792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805563792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-X"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Unchanged","@Arg"
635311001805563792,"StepEvaluate","[]","Unchanged","[]"
635311001805563792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805563792,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311001805563792,"StepEvaluate","SEL@zipWith","Changed","SEL@zipWith"
635311001805563792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805563792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805563792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805563792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805563792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805563792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805563792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805563792,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311001805563792,"StepEvaluate",",","Unchanged",","
635311001805719792,"StepEvaluate","@Arg","Changed","@Arg-M"
635311001805719792,"StepEvaluate","SEL@zipWith","Unchanged","SEL@zipWith"
635311001805719792,"StepEvaluate","PAT@-M","Changed","&"
635311001805719792,"StepEvaluate","SEL@zipWith","Changed","&"
635311001805719792,"StepEvaluate","@","Changed","&"
635311001805719792,"StepEvaluate","@","Changed","@"
