635311199315658843,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311199315678844,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311199315688845,"Parsed as literal","import"
635311199315708846,"Parsed as literal","file"
635311199315718847,"Parsed as literal"," 0"
635311199315728847,"Invalid operator","@import(file) -> 0","0"
635311199315748848,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311199315748848,"Parsed as literal","import"
635311199315748848,"Parsed as literal","file"
635311199315748848,"Parsed as literal"," 0"
635311199315838853,"StepEvaluate","->","Changed","Declared @import"
635311199315848854,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311199315858855,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311199315858855,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311199315858855,"Parsed as literal","operator"
635311199315868855,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311199315868855,"Parsed as literal","op"
635311199315868855,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311199315868855,"Parsed as literal","fn"
635311199315878856,"Parsed as literal",""
635311199315878856,"Invalid operator","@fn","12"
635311199315878856,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311199315878856,"Parsed as literal","fn"
635311199315888856,"Parsed as literal",""
635311199315888856,"Invalid operator","@fn","12"
635311199315888856,"Parsed as literal","@fn"
635311199315898857,"Parsed as literal"," 0"
635311199315908857,"Invalid operator","@operator(op,@fn) -> 0","0"
635311199315908857,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311199315908857,"Parsed as literal","operator"
635311199315918858,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311199315918858,"Parsed as literal","op"
635311199315918858,"Parsed as literal","@fn"
635311199315928859,"Parsed as literal"," 0"
635311199315928859,"StepEvaluate","->","Changed","Declared @operator"
635311199315928859,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311199315968861,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311199315978861,"Parsed as literal","import"
635311199315978861,"Parsed as literal","main.toast"
635311199316008863,"StepEvaluate","@","Changed","@"
635311199316148871,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199316178873,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199316198874,"StepEvaluate",",","Unchanged",","
635311199316238876,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199316248877,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199316248877,"StepEvaluate","PAT@-M","Changed","[]"
635311199316248877,"StepEvaluate","SEL@import","Changed","[]"
635311199316258877,"StepEvaluate","@","Changed","[]"
635311199316278879,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311199316278879,"Parsed as literal","import"
635311199316288879,"Parsed as literal","'core.toast'"
635311199316288879,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311199316288879,"Parsed as literal","import"
635311199316288879,"Parsed as literal","'list.toast'"
635311199316298880,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311199316298880,"Parsed as literal","import"
635311199316298880,"Parsed as literal","'math.toast'"
635311199316308880,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311199316308880,"Parsed as literal","import"
635311199316308880,"Parsed as literal","'sorting.toast'"
635311199316308880,"StepEvaluate","@","Changed","@"
635311199316318881,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199316318881,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199316318881,"StepEvaluate",",","Unchanged",","
635311199316328881,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199316328881,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199316328881,"StepEvaluate","PAT@-M","Changed","[]"
635311199316328881,"StepEvaluate","SEL@import","Changed","[]"
635311199316338882,"StepEvaluate","@","Changed","[]"
635311199316338882,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311199316338882,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311199316348883,"Parsed as literal","map"
635311199316348883,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311199316348883,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311199316348883,"Parsed as literal","func"
635311199316358883,"Parsed as literal",""
635311199316358883,"Invalid operator","@func","4"
635311199316358883,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311199316358883,"Parsed as literal","func"
635311199316368884,"Parsed as literal",""
635311199316368884,"Invalid operator","@func","4"
635311199316368884,"Parsed as literal","@func"
635311199316378884,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311199316378884,"Parsed as literal",""
635311199316378884,"Parsed as literal",""
635311199316378884,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199316388885,"Parsed as literal",""
635311199316388885,"Parsed as literal",""
635311199316388885,"Invalid operator","@map(@func, []) -> []","0"
635311199316388885,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311199316398885,"Parsed as literal","map"
635311199316398885,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311199316398885,"Parsed as literal","@func"
635311199316408886,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311199316408886,"Parsed as literal",""
635311199316408886,"Parsed as literal",""
635311199316408886,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199316418887,"Parsed as literal",""
635311199316418887,"Parsed as literal",""
635311199316428887,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311199316428887,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311199316428887,"Parsed as literal","map"
635311199316438888,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311199316438888,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311199316438888,"Parsed as literal","func"
635311199316438888,"Parsed as literal",""
635311199316448888,"Invalid operator","@func","4"
635311199316448888,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311199316448888,"Parsed as literal","func"
635311199316448888,"Parsed as literal",""
635311199316458889,"Invalid operator","@func","4"
635311199316458889,"Parsed as literal","@func"
635311199316458889,"Parsed as literal"," list"
635311199316468889,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311199316468889,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311199316468889,"Parsed as literal","func"
635311199316478890,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199316478890,"Parsed as literal",""
635311199316478890,"Parsed as literal","list"
635311199316478890,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311199316488891,"Parsed as literal","map"
635311199316488891,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311199316488891,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311199316488891,"Parsed as literal","func"
635311199316498891,"Parsed as literal",""
635311199316498891,"Invalid operator","@func","41"
635311199316498891,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311199316508892,"Parsed as literal","func"
635311199316508892,"Parsed as literal",""
635311199316508892,"Invalid operator","@func","41"
635311199316508892,"Parsed as literal","@func"
635311199316518892,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311199316518892,"Parsed as literal",""
635311199316518892,"Parsed as literal","list"
635311199316528893,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311199316528893,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311199316528893,"Parsed as literal","map"
635311199316528893,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311199316538893,"Parsed as literal","@func"
635311199316538893,"Parsed as literal"," list"
635311199316538893,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311199316548894,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311199316548894,"Parsed as literal","func"
635311199316548894,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199316548894,"Parsed as literal",""
635311199316558895,"Parsed as literal","list"
635311199316558895,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311199316558895,"Parsed as literal","map"
635311199316568895,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311199316568895,"Parsed as literal","@func"
635311199316568895,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311199316568895,"Parsed as literal",""
635311199316578896,"Parsed as literal","list"
635311199316578896,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311199316578896,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311199316588896,"Parsed as literal","filter"
635311199316588896,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311199316588896,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311199316588896,"Parsed as literal","pred"
635311199316598897,"Parsed as literal",""
635311199316598897,"Invalid operator","@pred","7"
635311199316598897,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311199316608897,"Parsed as literal","pred"
635311199316608897,"Parsed as literal",""
635311199316608897,"Invalid operator","@pred","7"
635311199316608897,"Parsed as literal","@pred"
635311199316618898,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311199316618898,"Parsed as literal",""
635311199316618898,"Parsed as literal",""
635311199316618898,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311199316628899,"Parsed as literal",""
635311199316628899,"Parsed as literal",""
635311199316628899,"Invalid operator","@filter(@pred,[]) -> []","0"
635311199316638899,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311199316638899,"Parsed as literal","filter"
635311199316638899,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311199316638899,"Parsed as literal","@pred"
635311199316648900,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311199316648900,"Parsed as literal",""
635311199316648900,"Parsed as literal",""
635311199316648900,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311199316658900,"Parsed as literal",""
635311199316658900,"Parsed as literal",""
635311199316658900,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311199316668901,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311199316668901,"Parsed as literal","filter"
635311199316668901,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311199316678901,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311199316678901,"Parsed as literal","pred"
635311199316678901,"Parsed as literal",""
635311199316678901,"Invalid operator","@pred","7"
635311199316688902,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311199316688902,"Parsed as literal","pred"
635311199316688902,"Parsed as literal",""
635311199316688902,"Invalid operator","@pred","7"
635311199316698903,"Parsed as literal","@pred"
635311199316698903,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311199316698903,"Parsed as literal"," list "
635311199316708903,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311199316708903,"Parsed as literal","pred"
635311199316708903,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199316708903,"Parsed as literal",""
635311199316718904,"Parsed as literal","list"
635311199316718904,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311199316718904,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311199316728904,"Parsed as literal"," "
635311199316728904,"Parsed as literal","list "
635311199316728904,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311199316728904,"Parsed as literal","filter"
635311199316738905,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311199316738905,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311199316738905,"Parsed as literal","pred"
635311199316738905,"Parsed as literal",""
635311199316748905,"Invalid operator","@pred","56"
635311199316748905,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311199316748905,"Parsed as literal","pred"
635311199316758906,"Parsed as literal",""
635311199316758906,"Invalid operator","@pred","56"
635311199316758906,"Parsed as literal","@pred"
635311199316758906,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311199316768907,"Parsed as literal"," "
635311199316768907,"Parsed as literal","list"
635311199316768907,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311199316778907,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311199316778907,"Parsed as literal","filter"
635311199316778907,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311199316778907,"Parsed as literal","@pred"
635311199316798908,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311199316798908,"Parsed as literal"," list "
635311199316798908,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311199316808909,"Parsed as literal","pred"
635311199316808909,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199316808909,"Parsed as literal",""
635311199316808909,"Parsed as literal","list"
635311199316818909,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311199316818909,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311199316818909,"Parsed as literal"," "
635311199316828910,"Parsed as literal","list "
635311199316828910,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311199316828910,"Parsed as literal","filter"
635311199316838911,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311199316838911,"Parsed as literal","@pred"
635311199316838911,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311199316838911,"Parsed as literal"," "
635311199316848911,"Parsed as literal","list"
635311199316848911,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311199316848911,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311199316858912,"Parsed as literal","filter"
635311199316858912,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311199316858912,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311199316858912,"Parsed as literal","pred"
635311199316868912,"Parsed as literal",""
635311199316868912,"Invalid operator","@pred","7"
635311199316868912,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311199316878913,"Parsed as literal","pred"
635311199316878913,"Parsed as literal",""
635311199316878913,"Invalid operator","@pred","7"
635311199316878913,"Parsed as literal","@pred"
635311199316888913,"Parsed as literal","list"
635311199316888913,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311199316888913,"Parsed as literal","filter"
635311199316898914,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311199316898914,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311199316898914,"Parsed as literal","pred"
635311199316898914,"Parsed as literal",""
635311199316908915,"Invalid operator","@pred","30"
635311199316908915,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311199316908915,"Parsed as literal","pred"
635311199316908915,"Parsed as literal",""
635311199316918915,"Invalid operator","@pred","30"
635311199316918915,"Parsed as literal","@pred"
635311199316918915,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311199316918915,"Parsed as literal",""
635311199316928916,"Parsed as literal","list"
635311199316928916,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311199316928916,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311199316938916,"Parsed as literal","filter"
635311199316938916,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311199316938916,"Parsed as literal","@pred"
635311199316938916,"Parsed as literal","list"
635311199316948917,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311199316948917,"Parsed as literal","filter"
635311199316948917,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311199316958918,"Parsed as literal","@pred"
635311199316958918,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311199316958918,"Parsed as literal",""
635311199316958918,"Parsed as literal","list"
635311199316968918,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311199316968918,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311199316968918,"Parsed as literal","call"
635311199316978919,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311199316978919,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311199316978919,"Parsed as literal","fun"
635311199316978919,"Parsed as literal",""
635311199316988919,"Invalid operator","@fun","5"
635311199316988919,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311199316988919,"Parsed as literal","fun"
635311199316988919,"Parsed as literal",""
635311199316998920,"Invalid operator","@fun","5"
635311199316998920,"Parsed as literal","@fun"
635311199316998920,"Parsed as literal","arg"
635311199317008920,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311199317008920,"Parsed as literal","fun"
635311199317008920,"Parsed as literal","arg"
635311199317008920,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311199317018921,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311199317018921,"Parsed as literal","call"
635311199317018921,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311199317028922,"Parsed as literal","@fun"
635311199317028922,"Parsed as literal","arg"
635311199317028922,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311199317028922,"Parsed as literal","fun"
635311199317038922,"Parsed as literal","arg"
635311199317038922,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311199317038922,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311199317048923,"Parsed as literal","curry"
635311199317048923,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311199317048923,"Parsed as literal","seed"
635311199317048923,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199317058923,"Parsed as literal",""
635311199317058923,"Parsed as literal",""
635311199317058923,"Parsed as literal"," seed"
635311199317058923,"Invalid operator","@curry(seed,[]) -> seed","0"
635311199317068924,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311199317068924,"Parsed as literal","curry"
635311199317068924,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311199317078924,"Parsed as literal","seed"
635311199317078924,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199317078924,"Parsed as literal",""
635311199317078924,"Parsed as literal",""
635311199317088925,"Parsed as literal"," seed"
635311199317088925,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311199317088925,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311199317098926,"Parsed as literal","curry"
635311199317098926,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311199317098926,"Parsed as literal","seed"
635311199317098926,"Parsed as literal"," funcList"
635311199317108926,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311199317108926,"Parsed as literal","curry"
635311199317108926,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311199317118927,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311199317118927,"Parsed as literal","call"
635311199317118927,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311199317128927,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311199317128927,"Parsed as literal",""
635311199317128927,"Parsed as literal","funcList"
635311199317128927,"Parsed as literal","seed"
635311199317138928,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311199317138928,"Parsed as literal",""
635311199317138928,"Parsed as literal","funcList"
635311199317138928,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311199317148928,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311199317148928,"Parsed as literal","curry"
635311199317148928,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311199317158929,"Parsed as literal","seed"
635311199317158929,"Parsed as literal"," funcList"
635311199317158929,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311199317158929,"Parsed as literal","curry"
635311199317168930,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311199317168930,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311199317168930,"Parsed as literal","call"
635311199317178930,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311199317178930,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311199317178930,"Parsed as literal",""
635311199317178930,"Parsed as literal","funcList"
635311199317188931,"Parsed as literal","seed"
635311199317188931,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311199317188931,"Parsed as literal",""
635311199317198931,"Parsed as literal","funcList"
635311199317198931,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311199317198931,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311199317198931,"Parsed as literal","fold"
635311199317208932,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311199317208932,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311199317208932,"Parsed as literal","func"
635311199317208932,"Parsed as literal",""
635311199317218932,"Invalid operator","@func","5"
635311199317218932,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311199317218932,"Parsed as literal","func"
635311199317228933,"Parsed as literal",""
635311199317228933,"Invalid operator","@func","5"
635311199317228933,"Parsed as literal","@func"
635311199317228933,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199317238934,"Parsed as literal",""
635311199317238934,"Parsed as literal",""
635311199317238934,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199317238934,"Parsed as literal",""
635311199317248934,"Parsed as literal",""
635311199317248934,"Invalid operator","@fold(@func,[]) -> []","0"
635311199317248934,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311199317258935,"Parsed as literal","fold"
635311199317258935,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311199317258935,"Parsed as literal","@func"
635311199317258935,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199317268935,"Parsed as literal",""
635311199317268935,"Parsed as literal",""
635311199317268935,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199317268935,"Parsed as literal",""
635311199317278936,"Parsed as literal",""
635311199317278936,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311199317278936,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311199317288936,"Parsed as literal","fold"
635311199317288936,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311199317288936,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311199317298937,"Parsed as literal","func"
635311199317298937,"Parsed as literal",""
635311199317298937,"Invalid operator","@func","5"
635311199317298937,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311199317308938,"Parsed as literal","func"
635311199317308938,"Parsed as literal",""
635311199317308938,"Invalid operator","@func","5"
635311199317308938,"Parsed as literal","@func"
635311199317318938,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311199317318938,"Parsed as literal","list"
635311199317318938,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311199317318938,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311199317328939,"Parsed as literal",""
635311199317328939,"Parsed as literal","list"
635311199317328939,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311199317338939,"Parsed as literal",""
635311199317338939,"Parsed as literal",""
635311199317338939,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311199317338939,"Parsed as literal"," "
635311199317348940,"Parsed as literal","list"
635311199317348940,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311199317348940,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311199317358940,"Parsed as literal","fold"
635311199317358940,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311199317358940,"Parsed as literal","@func"
635311199317358940,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311199317368941,"Parsed as literal","list"
635311199317368941,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311199317368941,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311199317368941,"Parsed as literal",""
635311199317378942,"Parsed as literal","list"
635311199317378942,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311199317378942,"Parsed as literal",""
635311199317388942,"Parsed as literal",""
635311199317388942,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311199317388942,"Parsed as literal"," "
635311199317388942,"Parsed as literal","list"
635311199317398943,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311199317398943,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311199317398943,"Parsed as literal","fold"
635311199317408943,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311199317408943,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311199317408943,"Parsed as literal","func"
635311199317408943,"Parsed as literal",""
635311199317418944,"Invalid operator","@func","5"
635311199317418944,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311199317418944,"Parsed as literal","func"
635311199317428944,"Parsed as literal",""
635311199317428944,"Invalid operator","@func","5"
635311199317428944,"Parsed as literal","@func"
635311199317428944,"Parsed as literal","list"
635311199317438945,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311199317438945,"Parsed as literal","fold"
635311199317438945,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311199317438945,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311199317448946,"Parsed as literal","func"
635311199317448946,"Parsed as literal",""
635311199317448946,"Invalid operator","@func","26"
635311199317458946,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311199317458946,"Parsed as literal","func"
635311199317458946,"Parsed as literal",""
635311199317458946,"Invalid operator","@func","26"
635311199317468947,"Parsed as literal","@func"
635311199317468947,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311199317468947,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311199317478947,"Parsed as literal","func"
635311199317478947,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311199317478947,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311199317478947,"Parsed as literal",""
635311199317488948,"Parsed as literal","list"
635311199317488948,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311199317488948,"Parsed as literal",""
635311199317488948,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311199317498948,"Parsed as literal",""
635311199317498948,"Parsed as literal","list"
635311199317498948,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311199317498948,"Parsed as literal"," "
635311199317508949,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311199317508949,"Parsed as literal",""
635311199317508949,"Parsed as literal","list"
635311199317518950,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311199317518950,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311199317518950,"Parsed as literal","fold"
635311199317518950,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311199317528950,"Parsed as literal","@func"
635311199317528950,"Parsed as literal","list"
635311199317528950,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311199317538951,"Parsed as literal","fold"
635311199317538951,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311199317538951,"Parsed as literal","@func"
635311199317538951,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311199317548951,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311199317548951,"Parsed as literal","func"
635311199317548951,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311199317558952,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311199317558952,"Parsed as literal",""
635311199317558952,"Parsed as literal","list"
635311199317558952,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311199317568952,"Parsed as literal",""
635311199317568952,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311199317568952,"Parsed as literal",""
635311199317568952,"Parsed as literal","list"
635311199317578953,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311199317578953,"Parsed as literal"," "
635311199317578953,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311199317588954,"Parsed as literal",""
635311199317588954,"Parsed as literal","list"
635311199317588954,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311199317588954,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311199317598954,"Parsed as literal","foldr"
635311199317598954,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311199317598954,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311199317608955,"Parsed as literal","func"
635311199317608955,"Parsed as literal",""
635311199317608955,"Invalid operator","@func","6"
635311199317608955,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311199317618955,"Parsed as literal","func"
635311199317618955,"Parsed as literal",""
635311199317618955,"Invalid operator","@func","6"
635311199317618955,"Parsed as literal","@func"
635311199317628956,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199317628956,"Parsed as literal",""
635311199317628956,"Parsed as literal",""
635311199317638956,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199317638956,"Parsed as literal",""
635311199317638956,"Parsed as literal",""
635311199317638956,"Invalid operator","@foldr(@func,[]) -> []","0"
635311199317648957,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311199317648957,"Parsed as literal","foldr"
635311199317648957,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311199317648957,"Parsed as literal","@func"
635311199317658958,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199317658958,"Parsed as literal",""
635311199317658958,"Parsed as literal",""
635311199317668958,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199317668958,"Parsed as literal",""
635311199317668958,"Parsed as literal",""
635311199317668958,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311199317678959,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311199317678959,"Parsed as literal","foldr"
635311199317678959,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311199317688959,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311199317688959,"Parsed as literal","func"
635311199317688959,"Parsed as literal",""
635311199317688959,"Invalid operator","@func","6"
635311199317698960,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311199317698960,"Parsed as literal","func"
635311199317698960,"Parsed as literal",""
635311199317698960,"Invalid operator","@func","6"
635311199317708960,"Parsed as literal","@func"
635311199317708960,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311199317708960,"Parsed as literal","list"
635311199317708960,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311199317718961,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311199317718961,"Parsed as literal",""
635311199317718961,"Parsed as literal","list"
635311199317718961,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199317728962,"Parsed as literal",""
635311199317728962,"Parsed as literal",""
635311199317728962,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311199317738962,"Parsed as literal"," "
635311199317738962,"Parsed as literal","list"
635311199317738962,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311199317748963,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311199317748963,"Parsed as literal","foldr"
635311199317748963,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311199317748963,"Parsed as literal","@func"
635311199317758963,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311199317758963,"Parsed as literal","list"
635311199317758963,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311199317758963,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311199317768964,"Parsed as literal",""
635311199317768964,"Parsed as literal","list"
635311199317768964,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199317778964,"Parsed as literal",""
635311199317778964,"Parsed as literal",""
635311199317778964,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311199317778964,"Parsed as literal"," "
635311199317788965,"Parsed as literal","list"
635311199317788965,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311199317788965,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311199317798966,"Parsed as literal","foldr"
635311199317798966,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311199317798966,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311199317808966,"Parsed as literal","func"
635311199317808966,"Parsed as literal",""
635311199317808966,"Invalid operator","@func","6"
635311199317808966,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311199317818967,"Parsed as literal","func"
635311199317818967,"Parsed as literal",""
635311199317818967,"Invalid operator","@func","6"
635311199317818967,"Parsed as literal","@func"
635311199317828967,"Parsed as literal","list"
635311199317828967,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311199317828967,"Parsed as literal","func"
635311199317838968,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311199317838968,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311199317838968,"Parsed as literal","foldr"
635311199317848968,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311199317858969,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311199317868970,"Parsed as literal","func"
635311199317868970,"Parsed as literal",""
635311199317868970,"Invalid operator","@func","33"
635311199317878970,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311199317878970,"Parsed as literal","func"
635311199317878970,"Parsed as literal",""
635311199317878970,"Invalid operator","@func","33"
635311199317888971,"Parsed as literal","@func"
635311199317888971,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311199317888971,"Parsed as literal","superHead"
635311199317888971,"Parsed as literal","list"
635311199317898971,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311199317898971,"Parsed as literal","last"
635311199317898971,"Parsed as literal","list"
635311199317908972,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311199317908972,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311199317908972,"Parsed as literal","foldr"
635311199317908972,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311199317918972,"Parsed as literal","@func"
635311199317918972,"Parsed as literal","list"
635311199317918972,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311199317928973,"Parsed as literal","func"
635311199317928973,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311199317928973,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311199317938974,"Parsed as literal","foldr"
635311199317938974,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311199317938974,"Parsed as literal","@func"
635311199317938974,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311199317948974,"Parsed as literal","superHead"
635311199317948974,"Parsed as literal","list"
635311199317948974,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311199317958975,"Parsed as literal","last"
635311199317958975,"Parsed as literal","list"
635311199317958975,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311199317968975,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311199317968975,"Parsed as literal","superHead"
635311199317968975,"Parsed as literal","list"
635311199317968975,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311199317978976,"Parsed as literal","reverse"
635311199317978976,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311199317978976,"Parsed as literal",""
635311199317988976,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311199317988976,"Parsed as literal","reverse"
635311199317988976,"Parsed as literal","list"
635311199317988976,"StepEvaluate","->","Changed","Declared @map"
635311199317998977,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311199318038979,"StepEvaluate","->","Changed","Declared @map"
635311199318038979,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311199318038979,"StepEvaluate","->","Changed","Declared @filter"
635311199318048980,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311199318058980,"StepEvaluate","->","Changed","Declared @filter"
635311199318058980,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311199318058980,"StepEvaluate","->","Changed","Declared @filter"
635311199318068981,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311199318068981,"StepEvaluate","->","Changed","Declared @call"
635311199318068981,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311199318078982,"StepEvaluate","->","Changed","Declared @curry"
635311199318078982,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311199318078982,"StepEvaluate","->","Changed","Declared @curry"
635311199318078982,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311199318088982,"StepEvaluate","->","Changed","Declared @fold"
635311199318088982,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311199318088982,"StepEvaluate","->","Changed","Declared @fold"
635311199318088982,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311199318098983,"StepEvaluate","->","Changed","Declared @fold"
635311199318098983,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311199318098983,"StepEvaluate","->","Changed","Declared @foldr"
635311199318098983,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311199318108983,"StepEvaluate","->","Changed","Declared @foldr"
635311199318108983,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311199318108983,"StepEvaluate","->","Changed","Declared @foldr"
635311199318108983,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311199318138985,"StepEvaluate","==","Unchanged","=="
635311199318138985,"StepEvaluate","@","Changed","@"
635311199318138985,"StepEvaluate","@","Changed","@"
635311199318148986,"StepEvaluate","==","Unchanged","=="
635311199318148986,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311199318158986,"StepEvaluate","superHead","Unchanged","superHead"
635311199318158986,"StepEvaluate",",","Unchanged",","
635311199318158986,"StepEvaluate","list","Unchanged","list"
635311199318158986,"StepEvaluate","@","Changed","@"
635311199318168987,"StepEvaluate","==","Unchanged","=="
635311199318168987,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311199318168987,"StepEvaluate","superHead","Unchanged","superHead"
635311199318178987,"StepEvaluate",",","Unchanged",","
635311199318178987,"StepEvaluate","list","Unchanged","list"
635311199318178987,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311199318178987,"StepEvaluate","reverse","Unchanged","reverse"
635311199318188988,"StepEvaluate",",","Unchanged",","
635311199318198988,"StepEvaluate","tail","Unchanged","tail"
635311199318198988,"StepEvaluate","@","Changed","@"
635311199318198988,"StepEvaluate","==","Unchanged","=="
635311199318208989,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311199318208989,"StepEvaluate","superHead","Unchanged","superHead"
635311199318208989,"StepEvaluate",",","Unchanged",","
635311199318208989,"StepEvaluate","list","Unchanged","list"
635311199318218990,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311199318218990,"StepEvaluate","reverse","Unchanged","reverse"
635311199318218990,"StepEvaluate",",","Unchanged",","
635311199318218990,"StepEvaluate","tail","Unchanged","tail"
635311199318228990,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311199318228990,"StepEvaluate","reverse","Unchanged","reverse"
635311199318228990,"StepEvaluate",",","Unchanged",","
635311199318228990,"StepEvaluate","list","Unchanged","list"
635311199318238991,"StepEvaluate","[]","Changed","File imported"
635311199318238991,"StepEvaluate","File imported","Unchanged","File imported"
635311199318238991,"StepEvaluate","@","Changed","@"
635311199318238991,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199318248991,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199318248991,"StepEvaluate",",","Unchanged",","
635311199318248991,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199318248991,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199318258992,"StepEvaluate","PAT@-M","Changed","[]"
635311199318258992,"StepEvaluate","SEL@import","Changed","[]"
635311199318258992,"StepEvaluate","@","Changed","[]"
635311199318268992,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311199318268992,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311199318268992,"Parsed as literal","zipWith"
635311199318278993,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311199318278993,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311199318278993,"Parsed as literal","func"
635311199318278993,"Parsed as literal",""
635311199318288994,"Invalid operator","@func","8"
635311199318288994,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311199318288994,"Parsed as literal","func"
635311199318288994,"Parsed as literal",""
635311199318298994,"Invalid operator","@func","8"
635311199318298994,"Parsed as literal","@func"
635311199318298994,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311199318298994,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199318308995,"Parsed as literal",""
635311199318308995,"Parsed as literal",""
635311199318308995,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311199318318995,"Parsed as literal",""
635311199318318995,"Parsed as literal",""
635311199318318995,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311199318318995,"Parsed as literal",""
635311199318328996,"Parsed as literal",""
635311199318328996,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311199318328996,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311199318338996,"Parsed as literal","zipWith"
635311199318338996,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311199318338996,"Parsed as literal","@func"
635311199318338996,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311199318348997,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199318348997,"Parsed as literal",""
635311199318348997,"Parsed as literal",""
635311199318348997,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311199318358998,"Parsed as literal",""
635311199318358998,"Parsed as literal",""
635311199318358998,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311199318368998,"Parsed as literal",""
635311199318368998,"Parsed as literal",""
635311199318368998,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311199318378999,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311199318378999,"Parsed as literal","zipWith"
635311199318378999,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311199318378999,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311199318388999,"Parsed as literal","func"
635311199318388999,"Parsed as literal",""
635311199318388999,"Invalid operator","@func","8"
635311199318388999,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311199318399000,"Parsed as literal","func"
635311199318399000,"Parsed as literal",""
635311199318399000,"Invalid operator","@func","8"
635311199318409000,"Parsed as literal","@func"
635311199318409000,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311199318409000,"Parsed as literal","list1"
635311199318409000,"Parsed as literal","list2"
635311199318419001,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311199318419001,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311199318419001,"Parsed as literal","func"
635311199318429002,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311199318429002,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311199318429002,"Parsed as literal",""
635311199318429002,"Parsed as literal","list1"
635311199318439002,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311199318439002,"Parsed as literal",""
635311199318439002,"Parsed as literal","list2"
635311199318449003,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311199318449003,"Parsed as literal","zipWith"
635311199318449003,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311199318459003,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311199318459003,"Parsed as literal","func"
635311199318459003,"Parsed as literal",""
635311199318459003,"Invalid operator","@func","64"
635311199318469004,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311199318469004,"Parsed as literal","func"
635311199318469004,"Parsed as literal",""
635311199318469004,"Invalid operator","@func","64"
635311199318479004,"Parsed as literal","@func"
635311199318479004,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311199318479004,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311199318479004,"Parsed as literal",""
635311199318489005,"Parsed as literal","list1"
635311199318489005,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311199318489005,"Parsed as literal",""
635311199318489005,"Parsed as literal","list2"
635311199318499006,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311199318499006,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311199318499006,"Parsed as literal","zipWith"
635311199318509006,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311199318509006,"Parsed as literal","@func"
635311199318509006,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311199318519007,"Parsed as literal","list1"
635311199318519007,"Parsed as literal","list2"
635311199318519007,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311199318529007,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311199318529007,"Parsed as literal","func"
635311199318529007,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311199318529007,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311199318539008,"Parsed as literal",""
635311199318539008,"Parsed as literal","list1"
635311199318539008,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311199318539008,"Parsed as literal",""
635311199318549008,"Parsed as literal","list2"
635311199318549008,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311199318549008,"Parsed as literal","zipWith"
635311199318559009,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311199318559009,"Parsed as literal","@func"
635311199318559009,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311199318559009,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311199318569010,"Parsed as literal",""
635311199318569010,"Parsed as literal","list1"
635311199318569010,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311199318569010,"Parsed as literal",""
635311199318579010,"Parsed as literal","list2"
635311199318579010,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311199318579010,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311199318589011,"Parsed as literal","count"
635311199318589011,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199318589011,"Parsed as literal",""
635311199318589011,"Parsed as literal",""
635311199318599011,"Parsed as literal"," 0"
635311199318599011,"Invalid operator","@count([]) -> 0","0"
635311199318599011,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311199318609012,"Parsed as literal","count"
635311199318609012,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199318609012,"Parsed as literal",""
635311199318609012,"Parsed as literal",""
635311199318619012,"Parsed as literal"," 0"
635311199318619012,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311199318619012,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311199318629013,"Parsed as literal","count"
635311199318629013,"Parsed as literal","list"
635311199318629013,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311199318629013,"Parsed as literal"," 1 "
635311199318639014,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311199318639014,"Parsed as literal","count"
635311199318639014,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199318649014,"Parsed as literal",""
635311199318649014,"Parsed as literal","list"
635311199318649014,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311199318649014,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311199318659015,"Parsed as literal","count"
635311199318659015,"Parsed as literal","list"
635311199318659015,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311199318659015,"Parsed as literal"," 1 "
635311199318669015,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311199318669015,"Parsed as literal","count"
635311199318669015,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199318679016,"Parsed as literal",""
635311199318679016,"Parsed as literal","list"
635311199318689016,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311199318689016,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311199318689016,"Parsed as literal","skip"
635311199318689016,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311199318699017,"Parsed as literal","0"
635311199318699017,"Parsed as literal","list"
635311199318699017,"Parsed as literal"," list"
635311199318699017,"Invalid operator","@skip(0,list) -> list","0"
635311199318709018,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311199318709018,"Parsed as literal","skip"
635311199318709018,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311199318719018,"Parsed as literal","0"
635311199318719018,"Parsed as literal","list"
635311199318719018,"Parsed as literal"," list"
635311199318719018,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311199318729019,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311199318729019,"Parsed as literal","skip"
635311199318729019,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199318739019,"Parsed as literal","n"
635311199318739019,"Parsed as literal","list"
635311199318739019,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311199318739019,"Parsed as literal","skip"
635311199318749020,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311199318749020,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199318749020,"Parsed as literal","n"
635311199318749020,"Parsed as literal","1"
635311199318759020,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199318759020,"Parsed as literal",""
635311199318759020,"Parsed as literal","list"
635311199318769021,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311199318769021,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311199318769021,"Parsed as literal","skip"
635311199318769021,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199318779022,"Parsed as literal","n"
635311199318779022,"Parsed as literal","list"
635311199318779022,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311199318789022,"Parsed as literal","skip"
635311199318789022,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311199318789022,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199318789022,"Parsed as literal","n"
635311199318799023,"Parsed as literal","1"
635311199318799023,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199318799023,"Parsed as literal",""
635311199318799023,"Parsed as literal","list"
635311199318809023,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311199318809023,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311199318809023,"Parsed as literal","take"
635311199318819024,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311199318819024,"Parsed as literal","1"
635311199318819024,"Parsed as literal","list"
635311199318829024,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311199318829024,"Parsed as literal"," "
635311199318829024,"Parsed as literal","list"
635311199318829024,"Invalid operator","@take(1,list) -> h:list","0"
635311199318839025,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311199318839025,"Parsed as literal","take"
635311199318839025,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311199318849026,"Parsed as literal","1"
635311199318849026,"Parsed as literal","list"
635311199318849026,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311199318849026,"Parsed as literal"," "
635311199318859026,"Parsed as literal","list"
635311199318859026,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311199318859026,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311199318869027,"Parsed as literal","take"
635311199318869027,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199318869027,"Parsed as literal","n"
635311199318869027,"Parsed as literal","list"
635311199318879027,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311199318879027,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311199318879027,"Parsed as literal"," "
635311199318879027,"Parsed as literal","list "
635311199318889028,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311199318889028,"Parsed as literal","take"
635311199318889028,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311199318899028,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199318899028,"Parsed as literal","n"
635311199318899028,"Parsed as literal","1"
635311199318899028,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311199318909029,"Parsed as literal",""
635311199318909029,"Parsed as literal","list"
635311199318909029,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311199318919030,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311199318919030,"Parsed as literal","take"
635311199318919030,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199318919030,"Parsed as literal","n"
635311199318929030,"Parsed as literal","list"
635311199318929030,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311199318929030,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311199318929030,"Parsed as literal"," "
635311199318939031,"Parsed as literal","list "
635311199318939031,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311199318939031,"Parsed as literal","take"
635311199318949031,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311199318949031,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199318949031,"Parsed as literal","n"
635311199318949031,"Parsed as literal","1"
635311199318959032,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311199318959032,"Parsed as literal",""
635311199318959032,"Parsed as literal","list"
635311199318969032,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311199318969032,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311199318969032,"Parsed as literal","nthItem"
635311199318969032,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311199318979033,"Parsed as literal","list"
635311199318979033,"Parsed as literal","0"
635311199318979033,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199318989034,"Parsed as literal",""
635311199318989034,"Parsed as literal",""
635311199318989034,"Invalid operator","@nthItem(list,0) -> []","0"
635311199318989034,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311199318999034,"Parsed as literal","nthItem"
635311199318999034,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311199318999034,"Parsed as literal","list"
635311199318999034,"Parsed as literal","0"
635311199319009035,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199319009035,"Parsed as literal",""
635311199319009035,"Parsed as literal",""
635311199319019035,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311199319019035,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311199319029036,"Parsed as literal","nthItem"
635311199319029036,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311199319029036,"Parsed as literal","list"
635311199319029036,"Parsed as literal","1"
635311199319039036,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311199319039036,"Parsed as literal"," "
635311199319039036,"Parsed as literal","list"
635311199319039036,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311199319049037,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311199319049037,"Parsed as literal","nthItem"
635311199319049037,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311199319059038,"Parsed as literal","list"
635311199319059038,"Parsed as literal","1"
635311199319059038,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311199319059038,"Parsed as literal"," "
635311199319069038,"Parsed as literal","list"
635311199319069038,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311199319069038,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311199319079039,"Parsed as literal","nthItem"
635311199319079039,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311199319079039,"Parsed as literal","list"
635311199319079039,"Parsed as literal","n"
635311199319089039,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311199319089039,"Parsed as literal","nthItem"
635311199319089039,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311199319099040,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311199319099040,"Parsed as literal",""
635311199319099040,"Parsed as literal","list"
635311199319099040,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311199319109040,"Parsed as literal","n"
635311199319109040,"Parsed as literal","1"
635311199319109040,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311199319119041,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311199319119041,"Parsed as literal","nthItem"
635311199319119041,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311199319119041,"Parsed as literal","list"
635311199319129042,"Parsed as literal","n"
635311199319129042,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311199319129042,"Parsed as literal","nthItem"
635311199319139042,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311199319139042,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311199319139042,"Parsed as literal",""
635311199319139042,"Parsed as literal","list"
635311199319149043,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311199319149043,"Parsed as literal","n"
635311199319149043,"Parsed as literal","1"
635311199319149043,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311199319159043,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311199319159043,"Parsed as literal","makeRange"
635311199319159043,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311199319159043,"Parsed as literal","a"
635311199319169044,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311199319169044,"Parsed as literal","b"
635311199319169044,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311199319179044,"Parsed as literal","a"
635311199319179044,"Parsed as literal","b"
635311199319179044,"Parsed as literal"," a"
635311199319179044,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311199319189045,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311199319189045,"Parsed as literal","makeRange"
635311199319189045,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311199319199046,"Parsed as literal","a"
635311199319199046,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311199319199046,"Parsed as literal","b"
635311199319199046,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311199319209046,"Parsed as literal","a"
635311199319209046,"Parsed as literal","b"
635311199319209046,"Parsed as literal"," a"
635311199319219047,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311199319219047,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311199319219047,"Parsed as literal","makeRange"
635311199319219047,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311199319229047,"Parsed as literal","a"
635311199319229047,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311199319229047,"Parsed as literal","b"
635311199319229047,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311199319239048,"Parsed as literal","a"
635311199319239048,"Parsed as literal","b"
635311199319239048,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311199319249048,"Parsed as literal"," a "
635311199319249048,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311199319249048,"Parsed as literal","makeRange"
635311199319249048,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311199319259049,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311199319259049,"Parsed as literal","a"
635311199319259049,"Parsed as literal","1"
635311199319259049,"Parsed as literal","b"
635311199319269050,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311199319269050,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311199319269050,"Parsed as literal","makeRange"
635311199319279050,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311199319279050,"Parsed as literal","a"
635311199319279050,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311199319279050,"Parsed as literal","b"
635311199319289051,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311199319289051,"Parsed as literal","a"
635311199319289051,"Parsed as literal","b"
635311199319299051,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311199319299051,"Parsed as literal"," a "
635311199319299051,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311199319299051,"Parsed as literal","makeRange"
635311199319309052,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311199319309052,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311199319309052,"Parsed as literal","a"
635311199319309052,"Parsed as literal","1"
635311199319319052,"Parsed as literal","b"
635311199319319052,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311199319319052,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311199319329053,"Parsed as literal","reverse"
635311199319329053,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311199319329053,"Parsed as literal",""
635311199319329053,"Parsed as literal",""
635311199319339054,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311199319339054,"Parsed as literal",""
635311199319339054,"Parsed as literal",""
635311199319349054,"Invalid operator","@reverse([]) -> []","0"
635311199319349054,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311199319349054,"Parsed as literal","reverse"
635311199319349054,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311199319359055,"Parsed as literal",""
635311199319359055,"Parsed as literal",""
635311199319359055,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311199319359055,"Parsed as literal",""
635311199319369055,"Parsed as literal",""
635311199319369055,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311199319369055,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311199319379056,"Parsed as literal","reverse"
635311199319379056,"Parsed as literal","list"
635311199319379056,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311199319379056,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311199319389056,"Parsed as literal","reverse"
635311199319389056,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199319389056,"Parsed as literal",""
635311199319389056,"Parsed as literal","list"
635311199319399057,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311199319399057,"Parsed as literal"," "
635311199319399057,"Parsed as literal","list"
635311199319409058,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311199319409058,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311199319409058,"Parsed as literal","reverse"
635311199319409058,"Parsed as literal","list"
635311199319419058,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311199319419058,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311199319419058,"Parsed as literal","reverse"
635311199319429059,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199319429059,"Parsed as literal",""
635311199319429059,"Parsed as literal","list"
635311199319429059,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311199319439059,"Parsed as literal"," "
635311199319439059,"Parsed as literal","list"
635311199319439059,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311199319449060,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311199319449060,"Parsed as literal","max"
635311199319449060,"Parsed as literal","list"
635311199319449060,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311199319459061,"Parsed as literal","fold"
635311199319459061,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311199319459061,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311199319469061,"Parsed as literal","max"
635311199319469061,"Parsed as literal",""
635311199319469061,"Invalid operator","@max","19"
635311199319469061,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311199319479062,"Parsed as literal","max"
635311199319479062,"Parsed as literal",""
635311199319479062,"Invalid operator","@max","19"
635311199319479062,"Parsed as literal","@max"
635311199319489062,"Parsed as literal","list"
635311199319489062,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311199319489062,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311199319499063,"Parsed as literal","max"
635311199319499063,"Parsed as literal","list"
635311199319499063,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311199319499063,"Parsed as literal","fold"
635311199319509063,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311199319509063,"Parsed as literal","@max"
635311199319509063,"Parsed as literal","list"
635311199319519064,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311199319519064,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311199319519064,"Parsed as literal","elementAt"
635311199319519064,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311199319529065,"Parsed as literal","0"
635311199319529065,"Parsed as literal","list"
635311199319529065,"Parsed as literal"," 'list"
635311199319539065,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311199319539065,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311199319539065,"Parsed as literal","elementAt"
635311199319539065,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311199319549066,"Parsed as literal","n"
635311199319549066,"Parsed as literal","list"
635311199319549066,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311199319549066,"Parsed as literal","elementAt"
635311199319559066,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311199319559066,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199319559066,"Parsed as literal","n"
635311199319559066,"Parsed as literal","1"
635311199319569067,"Parsed as literal","list'"
635311199319569067,"StepEvaluate","->","Changed","Declared @zipWith"
635311199319569067,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311199319579067,"StepEvaluate","->","Changed","Declared @zipWith"
635311199319579067,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311199319579067,"StepEvaluate","->","Changed","Declared @count"
635311199319579067,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311199319589068,"StepEvaluate","->","Changed","Declared @count"
635311199319589068,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311199319589068,"StepEvaluate","->","Changed","Declared @skip"
635311199319589068,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311199319599069,"StepEvaluate","->","Changed","Declared @skip"
635311199319599069,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311199319599069,"StepEvaluate","->","Changed","Declared @take"
635311199319599069,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311199319609069,"StepEvaluate","->","Changed","Declared @take"
635311199319609069,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311199319609069,"StepEvaluate","->","Changed","Declared @nthItem"
635311199319609069,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311199319619070,"StepEvaluate","->","Changed","Declared @nthItem"
635311199319619070,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311199319619070,"StepEvaluate","->","Changed","Declared @nthItem"
635311199319629070,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311199319629070,"StepEvaluate","->","Changed","Declared @makeRange"
635311199319629070,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311199319629070,"StepEvaluate","->","Changed","Declared @makeRange"
635311199319639071,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311199319639071,"StepEvaluate","->","Changed","Declared @reverse"
635311199319639071,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311199319639071,"StepEvaluate","->","Changed","Declared @reverse"
635311199319649071,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311199319649071,"StepEvaluate","->","Changed","Declared @max"
635311199319649071,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311199319649071,"StepEvaluate","==","Unchanged","=="
635311199319659072,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311199319659072,"StepEvaluate","elementAt","Unchanged","elementAt"
635311199319659072,"StepEvaluate",",","Unchanged",","
635311199319659072,"StepEvaluate","0","Unchanged","0"
635311199319669073,"StepEvaluate",",","Unchanged",","
635311199319669073,"StepEvaluate","list","Unchanged","list"
635311199319669073,"StepEvaluate","'list","Unchanged","'list"
635311199319679073,"StepEvaluate","==","Unchanged","=="
635311199319679073,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311199319679073,"StepEvaluate","elementAt","Unchanged","elementAt"
635311199319679073,"StepEvaluate",",","Unchanged",","
635311199319689074,"StepEvaluate","n","Unchanged","n"
635311199319689074,"StepEvaluate",",","Unchanged",","
635311199319689074,"StepEvaluate","list","Unchanged","list"
635311199319689074,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311199319699074,"StepEvaluate","elementAt","Unchanged","elementAt"
635311199319699074,"StepEvaluate",",","Unchanged",","
635311199319709075,"StepEvaluate","-","Unchanged","-"
635311199319719075,"StepEvaluate","n","Unchanged","n"
635311199319719075,"StepEvaluate","1","Unchanged","1"
635311199319719075,"StepEvaluate",",","Unchanged",","
635311199319719075,"StepEvaluate","list'","Unchanged","list'"
635311199319729076,"StepEvaluate","[]","Changed","File imported"
635311199319729076,"StepEvaluate","File imported","Unchanged","File imported"
635311199319729076,"StepEvaluate","@","Changed","@"
635311199319729076,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199319739077,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199319739077,"StepEvaluate",",","Unchanged",","
635311199319739077,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199319739077,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199319749077,"StepEvaluate","PAT@-M","Changed","[]"
635311199319749077,"StepEvaluate","SEL@import","Changed","[]"
635311199319749077,"StepEvaluate","@","Changed","[]"
635311199319759078,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311199319759078,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311199319759078,"Parsed as literal","naturalNumbers"
635311199319769078,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199319769078,"Parsed as literal",""
635311199319769078,"Parsed as literal",""
635311199319769078,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311199319779079,"Parsed as literal","naturalNumbers"
635311199319779079,"Parsed as literal","0"
635311199319779079,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311199319779079,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311199319789079,"Parsed as literal","naturalNumbers"
635311199319789079,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199319789079,"Parsed as literal",""
635311199319799080,"Parsed as literal",""
635311199319799080,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311199319799080,"Parsed as literal","naturalNumbers"
635311199319799080,"Parsed as literal","0"
635311199319809081,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311199319809081,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311199319809081,"Parsed as literal","naturalNumbers"
635311199319819081,"Parsed as literal","n"
635311199319819081,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311199319819081,"Parsed as literal"," n "
635311199319819081,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311199319829082,"Parsed as literal","naturalNumbers"
635311199319829082,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311199319829082,"Parsed as literal","n"
635311199319829082,"Parsed as literal","1"
635311199319839082,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311199319839082,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311199319839082,"Parsed as literal","naturalNumbers"
635311199319849083,"Parsed as literal","n"
635311199319849083,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311199319849083,"Parsed as literal"," n "
635311199319849083,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311199319859083,"Parsed as literal","naturalNumbers"
635311199319859083,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311199319859083,"Parsed as literal","n"
635311199319869084,"Parsed as literal","1"
635311199319869084,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311199319869084,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311199319869084,"Parsed as literal","max"
635311199319879085,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311199319879085,"Parsed as literal","a"
635311199319879085,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311199319889085,"Parsed as literal","b"
635311199319889085,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311199319889085,"Parsed as literal","a"
635311199319889085,"Parsed as literal","b"
635311199319899086,"Parsed as literal","b"
635311199319899086,"Invalid operator","@max(a,b|a<b)->b","0"
635311199319899086,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311199319899086,"Parsed as literal","max"
635311199319909086,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311199319909086,"Parsed as literal","a"
635311199319909086,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311199319919087,"Parsed as literal","b"
635311199319919087,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311199319919087,"Parsed as literal","a"
635311199319919087,"Parsed as literal","b"
635311199319929087,"Parsed as literal","b"
635311199319929087,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311199319929087,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311199319939088,"Parsed as literal","max"
635311199319939088,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199319939088,"Parsed as literal","a"
635311199319939088,"Parsed as literal","b"
635311199319949089,"Parsed as literal","a"
635311199319949089,"Invalid operator","@max(a,b)->a","0"
635311199319949089,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311199319949089,"Parsed as literal","max"
635311199319959089,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199319959089,"Parsed as literal","a"
635311199319959089,"Parsed as literal","b"
635311199319969090,"Parsed as literal","a"
635311199319969090,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311199319969090,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311199319969090,"Parsed as literal","random"
635311199319979090,"Parsed as literal","0"
635311199319979090,"Parsed as literal"," 0"
635311199319979090,"Invalid operator","@random(0) -> 0","0"
635311199319989091,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311199319989091,"Parsed as literal","random"
635311199319989091,"Parsed as literal","0"
635311199319989091,"Parsed as literal"," 0"
635311199319999091,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311199319999091,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311199319999091,"Parsed as literal","random"
635311199320009092,"Parsed as literal","n"
635311199320009092,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311199320009092,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311199320009092,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311199320019093,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311199320019093,"Parsed as literal","1664525 "
635311199320019093,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311199320029093,"Parsed as literal","random"
635311199320029093,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199320029093,"Parsed as literal","n"
635311199320029093,"Parsed as literal","1"
635311199320039094,"Parsed as literal"," 1013904223"
635311199320039094,"Parsed as literal",""
635311199320039094,"Parsed as literal"," 4294967296"
635311199320049094,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311199320049094,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311199320049094,"Parsed as literal","random"
635311199320049094,"Parsed as literal","n"
635311199320059095,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311199320059095,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311199320059095,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311199320069095,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311199320069095,"Parsed as literal","1664525 "
635311199320069095,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311199320069095,"Parsed as literal","random"
635311199320079096,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199320079096,"Parsed as literal","n"
635311199320079096,"Parsed as literal","1"
635311199320079096,"Parsed as literal"," 1013904223"
635311199320089097,"Parsed as literal",""
635311199320089097,"Parsed as literal"," 4294967296"
635311199320099097,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311199320099097,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311199320099097,"Parsed as literal","gcd"
635311199320099097,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311199320109098,"Parsed as literal","a"
635311199320109098,"Parsed as literal","0"
635311199320109098,"Parsed as literal"," a"
635311199320119098,"Invalid operator","@gcd(a,0) -> a","0"
635311199320119098,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311199320119098,"Parsed as literal","gcd"
635311199320119098,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311199320129099,"Parsed as literal","a"
635311199320129099,"Parsed as literal","0"
635311199320129099,"Parsed as literal"," a"
635311199320139099,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311199320139099,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311199320139099,"Parsed as literal","gcd"
635311199320149100,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199320149100,"Parsed as literal","a"
635311199320149100,"Parsed as literal","b"
635311199320159101,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311199320159101,"Parsed as literal","gcd"
635311199320159101,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311199320159101,"Parsed as literal","b"
635311199320169101,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311199320169101,"Parsed as literal","a "
635311199320169101,"Parsed as literal"," b"
635311199320169101,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311199320179102,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311199320179102,"Parsed as literal","gcd"
635311199320179102,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199320189102,"Parsed as literal","a"
635311199320189102,"Parsed as literal","b"
635311199320189102,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311199320189102,"Parsed as literal","gcd"
635311199320199103,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311199320199103,"Parsed as literal","b"
635311199320199103,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311199320199103,"Parsed as literal","a "
635311199320209103,"Parsed as literal"," b"
635311199320209103,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311199320209103,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311199320219104,"Parsed as literal","gcd"
635311199320219104,"Parsed as literal","list"
635311199320219104,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311199320229105,"Parsed as literal","fold"
635311199320229105,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311199320229105,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311199320229105,"Parsed as literal","gcd"
635311199320239105,"Parsed as literal",""
635311199320239105,"Invalid operator","@gcd","19"
635311199320239105,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311199320239105,"Parsed as literal","gcd"
635311199320249106,"Parsed as literal",""
635311199320249106,"Invalid operator","@gcd","19"
635311199320249106,"Parsed as literal","@gcd"
635311199320259106,"Parsed as literal","list"
635311199320259106,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311199320259106,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311199320259106,"Parsed as literal","gcd"
635311199320269107,"Parsed as literal","list"
635311199320269107,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311199320269107,"Parsed as literal","fold"
635311199320269107,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311199320279107,"Parsed as literal","@gcd"
635311199320279107,"Parsed as literal","list"
635311199320279107,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311199320289108,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311199320289108,"Parsed as literal","fib"
635311199320289108,"Parsed as literal","0"
635311199320289108,"Parsed as literal"," 1"
635311199320299109,"Invalid operator","@fib(0) -> 1","0"
635311199320299109,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311199320299109,"Parsed as literal","fib"
635311199320309109,"Parsed as literal","0"
635311199320309109,"Parsed as literal"," 1"
635311199320309109,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311199320309109,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311199320319110,"Parsed as literal","fib"
635311199320319110,"Parsed as literal","1"
635311199320319110,"Parsed as literal"," 1"
635311199320329110,"Invalid operator","@fib(1) -> 1","0"
635311199320329110,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311199320329110,"Parsed as literal","fib"
635311199320329110,"Parsed as literal","1"
635311199320339111,"Parsed as literal"," 1"
635311199320339111,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311199320339111,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311199320349111,"Parsed as literal","fib"
635311199320349111,"Parsed as literal","n"
635311199320349111,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311199320349111,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311199320359112,"Parsed as literal","fib"
635311199320359112,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311199320359112,"Parsed as literal","n"
635311199320369113,"Parsed as literal","2"
635311199320369113,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311199320369113,"Parsed as literal","fib"
635311199320369113,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199320379113,"Parsed as literal","n"
635311199320379113,"Parsed as literal","1"
635311199320379113,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311199320379113,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311199320389114,"Parsed as literal","fib"
635311199320389114,"Parsed as literal","n"
635311199320389114,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311199320399114,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311199320399114,"Parsed as literal","fib"
635311199320399114,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311199320399114,"Parsed as literal","n"
635311199320409115,"Parsed as literal","2"
635311199320409115,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311199320409115,"Parsed as literal","fib"
635311199320419115,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199320419115,"Parsed as literal","n"
635311199320419115,"Parsed as literal","1"
635311199320429116,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199320429116,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311199320429116,"Parsed as literal","fib2"
635311199320429116,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311199320439117,"Parsed as literal",""
635311199320439117,"Parsed as literal",""
635311199320439117,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199320449117,"Parsed as literal"," 0 "
635311199320449117,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199320449117,"Parsed as literal"," 1 "
635311199320459118,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311199320459118,"Parsed as literal","zipWith"
635311199320459118,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311199320459118,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311199320469118,"Parsed as literal",""
635311199320469118,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199320469118,"Parsed as literal","a"
635311199320479119,"Parsed as literal","b"
635311199320479119,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311199320479119,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199320479119,"Parsed as literal","a"
635311199320489119,"Parsed as literal","b"
635311199320489119,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199320489119,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199320499120,"Parsed as literal","fib2"
635311199320499120,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199320499120,"Parsed as literal",""
635311199320499120,"Parsed as literal",""
635311199320509121,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199320509121,"Parsed as literal"," "
635311199320509121,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199320509121,"Parsed as literal","fib2"
635311199320519121,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199320519121,"Parsed as literal",""
635311199320519121,"Parsed as literal",""
635311199320529122,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311199320529122,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311199320529122,"Parsed as literal",""
635311199320529122,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199320539122,"Parsed as literal","a"
635311199320539122,"Parsed as literal","b"
635311199320539122,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311199320549123,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199320549123,"Parsed as literal","a"
635311199320549123,"Parsed as literal","b"
635311199320549123,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199320559123,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199320559123,"Parsed as literal","fib2"
635311199320559123,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199320559123,"Parsed as literal",""
635311199320569124,"Parsed as literal",""
635311199320569124,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199320569124,"Parsed as literal"," "
635311199320579125,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199320579125,"Parsed as literal","fib2"
635311199320579125,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199320579125,"Parsed as literal",""
635311199320589125,"Parsed as literal",""
635311199320589125,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311199320589125,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311199320599126,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311199320599126,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311199320599126,"Parsed as literal",""
635311199320599126,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199320609126,"Parsed as literal","a"
635311199320609126,"Parsed as literal","b"
635311199320609126,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199320609126,"Parsed as literal","a"
635311199320619127,"Parsed as literal","b"
635311199320629127,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199320629127,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199320629127,"Parsed as literal","fib2"
635311199320639128,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199320639128,"Parsed as literal",""
635311199320639128,"Parsed as literal",""
635311199320639128,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199320649129,"Parsed as literal"," "
635311199320649129,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199320649129,"Parsed as literal","fib2"
635311199320659129,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199320659129,"Parsed as literal",""
635311199320659129,"Parsed as literal",""
635311199320659129,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311199320669130,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311199320669130,"Parsed as literal","fib2"
635311199320669130,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311199320669130,"Parsed as literal",""
635311199320679130,"Parsed as literal",""
635311199320679130,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199320679130,"Parsed as literal"," 0 "
635311199320689131,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199320689131,"Parsed as literal"," 1 "
635311199320689131,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311199320699131,"Parsed as literal","zipWith"
635311199320699131,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311199320699131,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311199320699131,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311199320709132,"Parsed as literal",""
635311199320709132,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199320709132,"Parsed as literal","a"
635311199320719133,"Parsed as literal","b"
635311199320719133,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199320719133,"Parsed as literal","a"
635311199320719133,"Parsed as literal","b"
635311199320729133,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199320729133,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199320729133,"Parsed as literal","fib2"
635311199320729133,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199320739134,"Parsed as literal",""
635311199320739134,"Parsed as literal",""
635311199320739134,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199320749134,"Parsed as literal"," "
635311199320749134,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199320749134,"Parsed as literal","fib2"
635311199320749134,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199320759135,"Parsed as literal",""
635311199320759135,"Parsed as literal",""
635311199320759135,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311199320769135,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311199320769135,"Parsed as literal","fib2"
635311199320769135,"Parsed as literal","n"
635311199320769135,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311199320779136,"Parsed as literal","take"
635311199320779136,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311199320779136,"Parsed as literal","n"
635311199320789137,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311199320789137,"Parsed as literal","fib2"
635311199320789137,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199320789137,"Parsed as literal",""
635311199320799137,"Parsed as literal",""
635311199320799137,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311199320799137,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311199320799137,"Parsed as literal","fib2"
635311199320809138,"Parsed as literal","n"
635311199320809138,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311199320809138,"Parsed as literal","take"
635311199320819138,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311199320819138,"Parsed as literal","n"
635311199320819138,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311199320819138,"Parsed as literal","fib2"
635311199320829139,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199320829139,"Parsed as literal",""
635311199320829139,"Parsed as literal",""
635311199320839139,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311199320839139,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311199320839139,"Parsed as literal","fac"
635311199320839139,"Parsed as literal","0"
635311199320849140,"Parsed as literal"," 1"
635311199320849140,"Invalid operator","@fac(0) -> 1","0"
635311199320849140,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311199320859141,"Parsed as literal","fac"
635311199320859141,"Parsed as literal","0"
635311199320859141,"Parsed as literal"," 1"
635311199320859141,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311199320869141,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311199320869141,"Parsed as literal","fac"
635311199320869141,"Parsed as literal","n"
635311199320879142,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311199320879142,"Parsed as literal"," n "
635311199320879142,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311199320879142,"Parsed as literal","fac"
635311199320889142,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311199320889142,"Parsed as literal","n"
635311199320889142,"Parsed as literal","1"
635311199320889142,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311199320899143,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311199320899143,"Parsed as literal","fac"
635311199320899143,"Parsed as literal","n"
635311199320909143,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311199320909143,"Parsed as literal"," n "
635311199320909143,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311199320909143,"Parsed as literal","fac"
635311199320919144,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311199320919144,"Parsed as literal","n"
635311199320919144,"Parsed as literal","1"
635311199320929145,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311199320929145,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311199320929145,"Parsed as literal","pow"
635311199320939145,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311199320939145,"Parsed as literal","num"
635311199320939145,"Parsed as literal","0"
635311199320939145,"Parsed as literal"," 1"
635311199320949146,"Invalid operator","@pow(num,0) -> 1","0"
635311199320949146,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311199320949146,"Parsed as literal","pow"
635311199320949146,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311199320959146,"Parsed as literal","num"
635311199320959146,"Parsed as literal","0"
635311199320959146,"Parsed as literal"," 1"
635311199320969147,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311199320969147,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311199320969147,"Parsed as literal","pow"
635311199320969147,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311199320979147,"Parsed as literal","num"
635311199320979147,"Parsed as literal","1"
635311199320979147,"Parsed as literal"," num"
635311199320979147,"Invalid operator","@pow(num,1) -> num","0"
635311199320989148,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311199320989148,"Parsed as literal","pow"
635311199320989148,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311199320999149,"Parsed as literal","num"
635311199320999149,"Parsed as literal","1"
635311199320999149,"Parsed as literal"," num"
635311199321009149,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311199321009149,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311199321019150,"Parsed as literal","pow"
635311199321019150,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311199321019150,"Parsed as literal","num"
635311199321019150,"Parsed as literal"," power"
635311199321029150,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311199321029150,"Parsed as literal"," num "
635311199321029150,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311199321039151,"Parsed as literal","pow"
635311199321039151,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311199321039151,"Parsed as literal","num"
635311199321039151,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311199321049151,"Parsed as literal","power"
635311199321049151,"Parsed as literal","1"
635311199321049151,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311199321059152,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311199321059152,"Parsed as literal","pow"
635311199321059152,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311199321059152,"Parsed as literal","num"
635311199321069153,"Parsed as literal"," power"
635311199321069153,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311199321069153,"Parsed as literal"," num "
635311199321079153,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311199321079153,"Parsed as literal","pow"
635311199321079153,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311199321079153,"Parsed as literal","num"
635311199321089154,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311199321089154,"Parsed as literal","power"
635311199321089154,"Parsed as literal","1"
635311199321099154,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311199321099154,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311199321099154,"Parsed as literal","upArrow"
635311199321109155,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311199321109155,"Parsed as literal","a"
635311199321109155,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311199321109155,"Parsed as literal","b"
635311199321119155,"Parsed as literal","1"
635311199321119155,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311199321119155,"Parsed as literal","pow"
635311199321129156,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311199321129156,"Parsed as literal","a"
635311199321129156,"Parsed as literal","b"
635311199321129156,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311199321139157,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311199321139157,"Parsed as literal","upArrow"
635311199321139157,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311199321149157,"Parsed as literal","a"
635311199321149157,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311199321149157,"Parsed as literal","b"
635311199321149157,"Parsed as literal","1"
635311199321159158,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311199321159158,"Parsed as literal","pow"
635311199321159158,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311199321159158,"Parsed as literal","a"
635311199321169158,"Parsed as literal","b"
635311199321169158,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311199321169158,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311199321179159,"Parsed as literal","upArrow"
635311199321179159,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311199321179159,"Parsed as literal","a"
635311199321179159,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311199321189159,"Parsed as literal","1"
635311199321189159,"Parsed as literal","n"
635311199321189159,"Parsed as literal"," a"
635311199321199160,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311199321199160,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311199321199160,"Parsed as literal","upArrow"
635311199321199160,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311199321209161,"Parsed as literal","a"
635311199321209161,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311199321209161,"Parsed as literal","1"
635311199321209161,"Parsed as literal","n"
635311199321219161,"Parsed as literal"," a"
635311199321219161,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311199321219161,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311199321229162,"Parsed as literal","upArrow"
635311199321229162,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311199321229162,"Parsed as literal","a"
635311199321239162,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311199321239162,"Parsed as literal","b"
635311199321239162,"Parsed as literal","n"
635311199321239162,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311199321249163,"Parsed as literal","upArrow"
635311199321249163,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311199321249163,"Parsed as literal","a"
635311199321259163,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311199321259163,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311199321259163,"Parsed as literal","upArrow"
635311199321259163,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311199321269164,"Parsed as literal","a"
635311199321269164,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311199321269164,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311199321269164,"Parsed as literal","b"
635311199321279165,"Parsed as literal","1"
635311199321279165,"Parsed as literal","n"
635311199321279165,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311199321289165,"Parsed as literal","n"
635311199321289165,"Parsed as literal","1"
635311199321289165,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311199321299166,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311199321299166,"Parsed as literal","upArrow"
635311199321299166,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311199321299166,"Parsed as literal","a"
635311199321309166,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311199321309166,"Parsed as literal","b"
635311199321309166,"Parsed as literal","n"
635311199321309166,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311199321319167,"Parsed as literal","upArrow"
635311199321319167,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311199321319167,"Parsed as literal","a"
635311199321329167,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311199321329167,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311199321329167,"Parsed as literal","upArrow"
635311199321329167,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311199321339168,"Parsed as literal","a"
635311199321339168,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311199321339168,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311199321349169,"Parsed as literal","b"
635311199321349169,"Parsed as literal","1"
635311199321349169,"Parsed as literal","n"
635311199321349169,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311199321359169,"Parsed as literal","n"
635311199321359169,"Parsed as literal","1"
635311199321359169,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311199321369170,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311199321369170,"Parsed as literal","graham"
635311199321369170,"Parsed as literal","0"
635311199321369170,"Parsed as literal"," 4"
635311199321379170,"Invalid operator","@graham(0) -> 4","0"
635311199321379170,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311199321379170,"Parsed as literal","graham"
635311199321379170,"Parsed as literal","0"
635311199321389171,"Parsed as literal"," 4"
635311199321389171,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311199321389171,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311199321399171,"Parsed as literal","graham"
635311199321399171,"Parsed as literal","n"
635311199321399171,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311199321399171,"Parsed as literal","upArrow"
635311199321409172,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311199321409172,"Parsed as literal","3"
635311199321409172,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311199321419173,"Parsed as literal","3"
635311199321419173,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311199321419173,"Parsed as literal","graham"
635311199321429173,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311199321429173,"Parsed as literal","n"
635311199321429173,"Parsed as literal","1"
635311199321459175,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311199321469175,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311199321469175,"Parsed as literal","graham"
635311199321469175,"Parsed as literal","n"
635311199321479176,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311199321479176,"Parsed as literal","upArrow"
635311199321479176,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311199321479176,"Parsed as literal","3"
635311199321489177,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311199321489177,"Parsed as literal","3"
635311199321489177,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311199321499177,"Parsed as literal","graham"
635311199321499177,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311199321499177,"Parsed as literal","n"
635311199321499177,"Parsed as literal","1"
635311199321509178,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311199321509178,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311199321509178,"Parsed as literal","grahamsNumber"
635311199321519178,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199321519178,"Parsed as literal",""
635311199321519178,"Parsed as literal",""
635311199321519178,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311199321529179,"Parsed as literal","graham"
635311199321529179,"Parsed as literal","64"
635311199321529179,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311199321539179,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311199321539179,"Parsed as literal","grahamsNumber"
635311199321539179,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199321539179,"Parsed as literal",""
635311199321549180,"Parsed as literal",""
635311199321549180,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311199321549180,"Parsed as literal","graham"
635311199321559181,"Parsed as literal","64"
635311199321559181,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311199321559181,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311199321559181,"Parsed as literal","ack"
635311199321569181,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311199321569181,"Parsed as literal","0"
635311199321569181,"Parsed as literal","n"
635311199321579182,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311199321579182,"Parsed as literal"," n "
635311199321579182,"Parsed as literal"," 1"
635311199321579182,"Invalid operator","@ack(0,n) -> n + 1","0"
635311199321589182,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311199321589182,"Parsed as literal","ack"
635311199321589182,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311199321589182,"Parsed as literal","0"
635311199321599183,"Parsed as literal","n"
635311199321599183,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311199321599183,"Parsed as literal"," n "
635311199321609183,"Parsed as literal"," 1"
635311199321609183,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311199321609183,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311199321609183,"Parsed as literal","ack"
635311199321619184,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311199321619184,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311199321619184,"Parsed as literal","m"
635311199321629185,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311199321629185,"Parsed as literal","m"
635311199321629185,"Parsed as literal","0"
635311199321629185,"Parsed as literal","0"
635311199321639185,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311199321639185,"Parsed as literal","ack"
635311199321639185,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311199321649186,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311199321649186,"Parsed as literal","m"
635311199321649186,"Parsed as literal","1"
635311199321649186,"Parsed as literal","1"
635311199321659186,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311199321659186,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311199321659186,"Parsed as literal","ack"
635311199321669187,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311199321669187,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311199321669187,"Parsed as literal","m"
635311199321669187,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311199321679187,"Parsed as literal","m"
635311199321679187,"Parsed as literal","0"
635311199321679187,"Parsed as literal","0"
635311199321679187,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311199321689188,"Parsed as literal","ack"
635311199321689188,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311199321689188,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311199321689188,"Parsed as literal","m"
635311199321699189,"Parsed as literal","1"
635311199321699189,"Parsed as literal","1"
635311199321699189,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311199321709189,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311199321709189,"Parsed as literal","ack"
635311199321709189,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311199321709189,"Parsed as literal","m"
635311199321719190,"Parsed as literal","n"
635311199321719190,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311199321719190,"Parsed as literal","ack"
635311199321729190,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311199321729190,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311199321729190,"Parsed as literal","m"
635311199321729190,"Parsed as literal","1"
635311199321739191,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311199321739191,"Parsed as literal","ack"
635311199321739191,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311199321749191,"Parsed as literal","m"
635311199321749191,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199321749191,"Parsed as literal","n"
635311199321749191,"Parsed as literal","1"
635311199321759192,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311199321759192,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311199321759192,"Parsed as literal","ack"
635311199321769193,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311199321769193,"Parsed as literal","m"
635311199321769193,"Parsed as literal","n"
635311199321769193,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311199321779193,"Parsed as literal","ack"
635311199321779193,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311199321779193,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311199321779193,"Parsed as literal","m"
635311199321789194,"Parsed as literal","1"
635311199321789194,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311199321789194,"Parsed as literal","ack"
635311199321799194,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311199321799194,"Parsed as literal","m"
635311199321799194,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199321799194,"Parsed as literal","n"
635311199321809195,"Parsed as literal","1"
635311199321809195,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311199321809195,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311199321819195,"Parsed as literal","acker"
635311199321819195,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311199321819195,"Parsed as literal","m"
635311199321829196,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311199321829196,"Parsed as literal","n"
635311199321829196,"Parsed as literal","0"
635311199321839197,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311199321839197,"Parsed as literal"," m"
635311199321839197,"Parsed as literal","n"
635311199321839197,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311199321849197,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311199321849197,"Parsed as literal","acker"
635311199321849197,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311199321859198,"Parsed as literal","m"
635311199321859198,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311199321859198,"Parsed as literal","n"
635311199321859198,"Parsed as literal","0"
635311199321869198,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311199321869198,"Parsed as literal"," m"
635311199321869198,"Parsed as literal","n"
635311199321879199,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311199321879199,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311199321879199,"Parsed as literal","acker"
635311199321879199,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311199321889199,"Parsed as literal","m"
635311199321889199,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311199321889199,"Parsed as literal","0"
635311199321889199,"Parsed as literal","1"
635311199321899200,"Parsed as literal"," 0"
635311199321899200,"Invalid operator","@acker(m,0,1) -> 0","0"
635311199321899200,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311199321909201,"Parsed as literal","acker"
635311199321909201,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311199321909201,"Parsed as literal","m"
635311199321909201,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311199321919201,"Parsed as literal","0"
635311199321919201,"Parsed as literal","1"
635311199321919201,"Parsed as literal"," 0"
635311199321919201,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311199321929202,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311199321929202,"Parsed as literal","acker"
635311199321929202,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311199321939202,"Parsed as literal","m"
635311199321939202,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311199321939202,"Parsed as literal","0"
635311199321939202,"Parsed as literal","2"
635311199321949203,"Parsed as literal"," 1"
635311199321949203,"Invalid operator","@acker(m,0,2) -> 1","0"
635311199321949203,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311199321959204,"Parsed as literal","acker"
635311199321959204,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311199321959204,"Parsed as literal","m"
635311199321959204,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311199321969204,"Parsed as literal","0"
635311199321969204,"Parsed as literal","2"
635311199321969204,"Parsed as literal"," 1"
635311199321969204,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311199321979205,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311199321979205,"Parsed as literal","acker"
635311199321979205,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311199321989205,"Parsed as literal","m"
635311199321989205,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311199321989205,"Parsed as literal","0"
635311199321989205,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311199321999206,"Parsed as literal","p"
635311199321999206,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311199321999206,"Parsed as literal","p"
635311199321999206,"Parsed as literal","2"
635311199322009206,"Parsed as literal"," m"
635311199322009206,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311199322019207,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311199322019207,"Parsed as literal","acker"
635311199322019207,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311199322029208,"Parsed as literal","m"
635311199322029208,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311199322029208,"Parsed as literal","0"
635311199322029208,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311199322039208,"Parsed as literal","p"
635311199322039208,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311199322039208,"Parsed as literal","p"
635311199322039208,"Parsed as literal","2"
635311199322049209,"Parsed as literal"," m"
635311199322049209,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311199322049209,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311199322059209,"Parsed as literal","acker"
635311199322059209,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311199322059209,"Parsed as literal","m"
635311199322069210,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311199322069210,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311199322069210,"Parsed as literal","n"
635311199322069210,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311199322079210,"Parsed as literal","n"
635311199322079210,"Parsed as literal","0"
635311199322079210,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311199322079210,"Parsed as literal","p"
635311199322089211,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311199322089211,"Parsed as literal","p"
635311199322089211,"Parsed as literal","0"
635311199322099212,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311199322099212,"Parsed as literal","acker"
635311199322099212,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311199322109212,"Parsed as literal","m"
635311199322109212,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311199322109212,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311199322109212,"Parsed as literal","acker"
635311199322119213,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311199322119213,"Parsed as literal","m"
635311199322119213,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311199322119213,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311199322129213,"Parsed as literal","n"
635311199322129213,"Parsed as literal","1"
635311199322129213,"Parsed as literal","p"
635311199322139214,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311199322139214,"Parsed as literal","p"
635311199322139214,"Parsed as literal","1"
635311199322139214,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311199322149214,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311199322149214,"Parsed as literal","acker"
635311199322149214,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311199322149214,"Parsed as literal","m"
635311199322159215,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311199322159215,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311199322159215,"Parsed as literal","n"
635311199322159215,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311199322169216,"Parsed as literal","n"
635311199322169216,"Parsed as literal","0"
635311199322169216,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311199322179216,"Parsed as literal","p"
635311199322179216,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311199322179216,"Parsed as literal","p"
635311199322179216,"Parsed as literal","0"
635311199322189217,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311199322189217,"Parsed as literal","acker"
635311199322189217,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311199322199217,"Parsed as literal","m"
635311199322199217,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311199322199217,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311199322199217,"Parsed as literal","acker"
635311199322209218,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311199322209218,"Parsed as literal","m"
635311199322209218,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311199322209218,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311199322219218,"Parsed as literal","n"
635311199322219218,"Parsed as literal","1"
635311199322219218,"Parsed as literal","p"
635311199322229219,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311199322229219,"Parsed as literal","p"
635311199322229219,"Parsed as literal","1"
635311199322229219,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311199322239220,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311199322239220,"Parsed as literal","hyper"
635311199322239220,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311199322249220,"Parsed as literal","0"
635311199322249220,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199322249220,"Parsed as literal","a"
635311199322249220,"Parsed as literal","b"
635311199322259221,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311199322259221,"Parsed as literal"," b"
635311199322259221,"Parsed as literal","1"
635311199322259221,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311199322269221,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311199322269221,"Parsed as literal","hyper"
635311199322269221,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311199322279222,"Parsed as literal","0"
635311199322279222,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199322279222,"Parsed as literal","a"
635311199322279222,"Parsed as literal","b"
635311199322289222,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311199322289222,"Parsed as literal"," b"
635311199322289222,"Parsed as literal","1"
635311199322299223,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311199322299223,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311199322299223,"Parsed as literal","hyper"
635311199322299223,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311199322309224,"Parsed as literal","1"
635311199322309224,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199322309224,"Parsed as literal","a"
635311199322309224,"Parsed as literal","0"
635311199322319224,"Parsed as literal"," a"
635311199322319224,"Invalid operator","@hyper(1,a,0) -> a","0"
635311199322319224,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311199322329225,"Parsed as literal","hyper"
635311199322329225,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311199322329225,"Parsed as literal","1"
635311199322329225,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199322339225,"Parsed as literal","a"
635311199322339225,"Parsed as literal","0"
635311199322339225,"Parsed as literal"," a"
635311199322349226,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311199322349226,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311199322349226,"Parsed as literal","hyper"
635311199322349226,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311199322359226,"Parsed as literal","2"
635311199322359226,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199322359226,"Parsed as literal","a"
635311199322359226,"Parsed as literal","0"
635311199322369227,"Parsed as literal"," 0"
635311199322369227,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311199322369227,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311199322379228,"Parsed as literal","hyper"
635311199322379228,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311199322379228,"Parsed as literal","2"
635311199322379228,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199322389228,"Parsed as literal","a"
635311199322389228,"Parsed as literal","0"
635311199322389228,"Parsed as literal"," 0"
635311199322389228,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311199322399229,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311199322399229,"Parsed as literal","hyper"
635311199322399229,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311199322409229,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311199322409229,"Parsed as literal","n"
635311199322409229,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311199322409229,"Parsed as literal","n"
635311199322419230,"Parsed as literal","2"
635311199322419230,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311199322419230,"Parsed as literal","a"
635311199322419230,"Parsed as literal","0"
635311199322429230,"Parsed as literal"," 1"
635311199322429230,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311199322429230,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311199322439231,"Parsed as literal","hyper"
635311199322439231,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311199322439231,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311199322439231,"Parsed as literal","n"
635311199322449232,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311199322449232,"Parsed as literal","n"
635311199322449232,"Parsed as literal","2"
635311199322459232,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311199322459232,"Parsed as literal","a"
635311199322459232,"Parsed as literal","0"
635311199322459232,"Parsed as literal"," 1"
635311199322469233,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311199322469233,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311199322469233,"Parsed as literal","hyper"
635311199322479233,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311199322479233,"Parsed as literal","n"
635311199322479233,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199322479233,"Parsed as literal","a"
635311199322489234,"Parsed as literal","b"
635311199322489234,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311199322489234,"Parsed as literal","hyper"
635311199322499234,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311199322499234,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311199322499234,"Parsed as literal","n"
635311199322499234,"Parsed as literal","1"
635311199322509235,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311199322509235,"Parsed as literal","a"
635311199322509235,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311199322519236,"Parsed as literal","hyper"
635311199322519236,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311199322519236,"Parsed as literal","n"
635311199322519236,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311199322529236,"Parsed as literal","a"
635311199322529236,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311199322529236,"Parsed as literal","b"
635311199322529236,"Parsed as literal","1"
635311199322539237,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311199322539237,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311199322539237,"Parsed as literal","hyper"
635311199322549237,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311199322549237,"Parsed as literal","n"
635311199322549237,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199322549237,"Parsed as literal","a"
635311199322559238,"Parsed as literal","b"
635311199322559238,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311199322559238,"Parsed as literal","hyper"
635311199322569238,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311199322569238,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311199322569238,"Parsed as literal","n"
635311199322569238,"Parsed as literal","1"
635311199322579239,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311199322579239,"Parsed as literal","a"
635311199322579239,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311199322579239,"Parsed as literal","hyper"
635311199322589240,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311199322589240,"Parsed as literal","n"
635311199322589240,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311199322599240,"Parsed as literal","a"
635311199322599240,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311199322599240,"Parsed as literal","b"
635311199322599240,"Parsed as literal","1"
635311199322609241,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311199322609241,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311199322609241,"Parsed as literal","sudan"
635311199322619241,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311199322619241,"Parsed as literal","0"
635311199322619241,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199322619241,"Parsed as literal","x"
635311199322629242,"Parsed as literal","y"
635311199322629242,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311199322629242,"Parsed as literal"," x "
635311199322639242,"Parsed as literal"," y"
635311199322639242,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311199322639242,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311199322639242,"Parsed as literal","sudan"
635311199322649243,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311199322649243,"Parsed as literal","0"
635311199322649243,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199322649243,"Parsed as literal","x"
635311199322659244,"Parsed as literal","y"
635311199322659244,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311199322659244,"Parsed as literal"," x "
635311199322669244,"Parsed as literal"," y"
635311199322669244,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311199322669244,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311199322669244,"Parsed as literal","sudan"
635311199322679245,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311199322679245,"Parsed as literal","n"
635311199322679245,"Parsed as literal","0"
635311199322689245,"Parsed as literal"," x"
635311199322689245,"Invalid operator","@sudan(n,0) -> x","0"
635311199322689245,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311199322689245,"Parsed as literal","sudan"
635311199322699246,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311199322699246,"Parsed as literal","n"
635311199322699246,"Parsed as literal","0"
635311199322699246,"Parsed as literal"," x"
635311199322709246,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311199322709246,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311199322709246,"Parsed as literal","sudan"
635311199322719247,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311199322719247,"Parsed as literal","n"
635311199322719247,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199322719247,"Parsed as literal","x"
635311199322729248,"Parsed as literal","y"
635311199322729248,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199322729248,"Parsed as literal","sudan"
635311199322739248,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199322739248,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199322739248,"Parsed as literal","n"
635311199322739248,"Parsed as literal","1"
635311199322749249,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311199322749249,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311199322749249,"Parsed as literal","sudan"
635311199322759249,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311199322759249,"Parsed as literal","n"
635311199322759249,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311199322759249,"Parsed as literal","x"
635311199322769250,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311199322769250,"Parsed as literal","y"
635311199322769250,"Parsed as literal","1"
635311199322779250,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311199322779250,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311199322779250,"Parsed as literal","sudan"
635311199322779250,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311199322789251,"Parsed as literal","n"
635311199322789251,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311199322789251,"Parsed as literal","x"
635311199322789251,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311199322799252,"Parsed as literal","y"
635311199322799252,"Parsed as literal","1"
635311199322799252,"Parsed as literal","y"
635311199322809252,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311199322809252,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311199322809252,"Parsed as literal","sudan"
635311199322809252,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311199322819253,"Parsed as literal","n"
635311199322819253,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199322819253,"Parsed as literal","x"
635311199322819253,"Parsed as literal","y"
635311199322829253,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199322829253,"Parsed as literal","sudan"
635311199322829253,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199322839254,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199322839254,"Parsed as literal","n"
635311199322839254,"Parsed as literal","1"
635311199322849254,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311199322849254,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311199322849254,"Parsed as literal","sudan"
635311199322849254,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311199322859255,"Parsed as literal","n"
635311199322859255,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311199322859255,"Parsed as literal","x"
635311199322859255,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311199322869256,"Parsed as literal","y"
635311199322869256,"Parsed as literal","1"
635311199322869256,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311199322879256,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311199322879256,"Parsed as literal","sudan"
635311199322879256,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311199322879256,"Parsed as literal","n"
635311199322889257,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311199322889257,"Parsed as literal","x"
635311199322889257,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311199322889257,"Parsed as literal","y"
635311199322899257,"Parsed as literal","1"
635311199322899257,"Parsed as literal","y"
635311199322899257,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311199322909258,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311199322909258,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311199322909258,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311199322909258,"StepEvaluate","->","Changed","Declared @max"
635311199322919258,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311199322919258,"StepEvaluate","->","Changed","Declared @max"
635311199322919258,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311199322919258,"StepEvaluate","->","Changed","Declared @random"
635311199322929259,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311199322929259,"StepEvaluate","->","Changed","Declared @random"
635311199322929259,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311199322929259,"StepEvaluate","->","Changed","Declared @gcd"
635311199322939260,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311199322939260,"StepEvaluate","->","Changed","Declared @gcd"
635311199322939260,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311199322949260,"StepEvaluate","->","Changed","Declared @gcd"
635311199322949260,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311199322949260,"StepEvaluate","->","Changed","Declared @fib"
635311199322949260,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311199322959261,"StepEvaluate","->","Changed","Declared @fib"
635311199322959261,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311199322959261,"StepEvaluate","->","Changed","Declared @fib"
635311199322959261,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311199322969261,"StepEvaluate","->","Changed","Declared @fib2"
635311199322969261,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311199322969261,"StepEvaluate","->","Changed","Declared @fib2"
635311199322969261,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311199322979262,"StepEvaluate","->","Changed","Declared @fac"
635311199322979262,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311199322979262,"StepEvaluate","->","Changed","Declared @fac"
635311199322989262,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311199322989262,"StepEvaluate","->","Changed","Declared @pow"
635311199322989262,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311199322999263,"StepEvaluate","->","Changed","Declared @pow"
635311199322999263,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311199322999263,"StepEvaluate","->","Changed","Declared @pow"
635311199322999263,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311199323009264,"StepEvaluate","->","Changed","Declared @upArrow"
635311199323009264,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311199323009264,"StepEvaluate","->","Changed","Declared @upArrow"
635311199323009264,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311199323019264,"StepEvaluate","->","Changed","Declared @upArrow"
635311199323019264,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311199323019264,"StepEvaluate","->","Changed","Declared @graham"
635311199323019264,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311199323029265,"StepEvaluate","->","Changed","Declared @graham"
635311199323029265,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311199323029265,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311199323029265,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311199323039265,"StepEvaluate","->","Changed","Declared @ack"
635311199323039265,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311199323039265,"StepEvaluate","->","Changed","Declared @ack"
635311199323039265,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311199323049266,"StepEvaluate","->","Changed","Declared @ack"
635311199323049266,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311199323049266,"StepEvaluate","->","Changed","Declared @acker"
635311199323049266,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199323059266,"StepEvaluate","->","Changed","Declared @acker"
635311199323059266,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199323059266,"StepEvaluate","->","Changed","Declared @acker"
635311199323059266,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199323069267,"StepEvaluate","->","Changed","Declared @acker"
635311199323069267,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199323069267,"StepEvaluate","->","Changed","Declared @acker"
635311199323069267,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199323079268,"StepEvaluate","->","Changed","Declared @hyper"
635311199323079268,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199323079268,"StepEvaluate","->","Changed","Declared @hyper"
635311199323079268,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199323089268,"StepEvaluate","->","Changed","Declared @hyper"
635311199323089268,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199323089268,"StepEvaluate","->","Changed","Declared @hyper"
635311199323099269,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199323099269,"StepEvaluate","->","Changed","Declared @hyper"
635311199323099269,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199323099269,"StepEvaluate","->","Changed","Declared @sudan"
635311199323109269,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311199323109269,"StepEvaluate","->","Changed","Declared @sudan"
635311199323109269,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311199323109269,"StepEvaluate","->","Changed","Declared @sudan"
635311199323119270,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311199323119270,"StepEvaluate","[]","Changed","File imported"
635311199323119270,"StepEvaluate","File imported","Unchanged","File imported"
635311199323119270,"StepEvaluate","@","Changed","@"
635311199323129270,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199323129270,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199323129270,"StepEvaluate",",","Unchanged",","
635311199323129270,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199323139271,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199323139271,"StepEvaluate","PAT@-M","Changed","[]"
635311199323139271,"StepEvaluate","SEL@import","Changed","[]"
635311199323149272,"StepEvaluate","@","Changed","[]"
635311199323149272,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311199323149272,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311199323159272,"Parsed as literal","quickSort"
635311199323159272,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199323159272,"Parsed as literal",""
635311199323159272,"Parsed as literal",""
635311199323169273,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199323169273,"Parsed as literal",""
635311199323169273,"Parsed as literal",""
635311199323169273,"Invalid operator","@quickSort([]) -> []","0"
635311199323179273,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311199323179273,"Parsed as literal","quickSort"
635311199323179273,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199323179273,"Parsed as literal",""
635311199323189274,"Parsed as literal",""
635311199323189274,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199323189274,"Parsed as literal",""
635311199323199274,"Parsed as literal",""
635311199323199274,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199323199274,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311199323209275,"Parsed as literal","quickSort"
635311199323209275,"Parsed as literal","list"
635311199323209275,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199323219276,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311199323219276,"Parsed as literal","quickSort"
635311199323219276,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311199323229276,"Parsed as literal","filter"
635311199323229276,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311199323229276,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311199323229276,"Parsed as literal",""
635311199323239277,"Parsed as literal","i"
635311199323239277,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311199323239277,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199323249277,"Parsed as literal"," i "
635311199323249277,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199323249277,"Parsed as literal"," "
635311199323249277,"Parsed as literal","list"
635311199323259278,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199323259278,"Parsed as literal",""
635311199323259278,"Parsed as literal","list"
635311199323269278,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311199323269278,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311199323269278,"Parsed as literal",""
635311199323269278,"Parsed as literal","i"
635311199323279279,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311199323279279,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199323279279,"Parsed as literal"," i "
635311199323279279,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199323289280,"Parsed as literal"," "
635311199323289280,"Parsed as literal","list"
635311199323289280,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199323289280,"Parsed as literal",""
635311199323299280,"Parsed as literal","list"
635311199323299280,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311199323299280,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311199323309281,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311199323309281,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311199323309281,"Parsed as literal",""
635311199323309281,"Parsed as literal","i"
635311199323319281,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199323319281,"Parsed as literal"," i "
635311199323319281,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199323319281,"Parsed as literal"," "
635311199323329282,"Parsed as literal","list"
635311199323329282,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199323329282,"Parsed as literal",""
635311199323339282,"Parsed as literal","list"
635311199323339282,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199323339282,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311199323339282,"Parsed as literal"," "
635311199323349283,"Parsed as literal","list "
635311199323349283,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311199323349283,"Parsed as literal","quickSort"
635311199323359284,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311199323359284,"Parsed as literal","filter"
635311199323359284,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311199323369284,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311199323369284,"Parsed as literal",""
635311199323369284,"Parsed as literal","i"
635311199323369284,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311199323379285,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199323379285,"Parsed as literal"," i "
635311199323379285,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199323379285,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199323389285,"Parsed as literal"," "
635311199323389285,"Parsed as literal","list"
635311199323389285,"Parsed as literal","1"
635311199323399286,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199323399286,"Parsed as literal",""
635311199323399286,"Parsed as literal","list"
635311199323399286,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311199323409286,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311199323409286,"Parsed as literal",""
635311199323409286,"Parsed as literal","i"
635311199323409286,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311199323419287,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199323419287,"Parsed as literal"," i "
635311199323419287,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199323429288,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199323429288,"Parsed as literal"," "
635311199323429288,"Parsed as literal","list"
635311199323429288,"Parsed as literal","1"
635311199323439288,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199323439288,"Parsed as literal",""
635311199323439288,"Parsed as literal","list"
635311199323439288,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311199323449289,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311199323449289,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311199323449289,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311199323459289,"Parsed as literal",""
635311199323459289,"Parsed as literal","i"
635311199323459289,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199323459289,"Parsed as literal"," i "
635311199323469290,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199323469290,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199323469290,"Parsed as literal"," "
635311199323469290,"Parsed as literal","list"
635311199323479290,"Parsed as literal","1"
635311199323479290,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199323479290,"Parsed as literal",""
635311199323489291,"Parsed as literal","list"
635311199323489291,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311199323489291,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311199323489291,"Parsed as literal","quickSort"
635311199323499292,"Parsed as literal","list"
635311199323499292,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199323509292,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311199323509292,"Parsed as literal","quickSort"
635311199323509292,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311199323509292,"Parsed as literal","filter"
635311199323519293,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311199323519293,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311199323519293,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311199323519293,"Parsed as literal",""
635311199323529293,"Parsed as literal","i"
635311199323529293,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199323529293,"Parsed as literal"," i "
635311199323539294,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199323539294,"Parsed as literal"," "
635311199323539294,"Parsed as literal","list"
635311199323539294,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199323549294,"Parsed as literal",""
635311199323549294,"Parsed as literal","list"
635311199323549294,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199323559295,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311199323559295,"Parsed as literal"," "
635311199323559295,"Parsed as literal","list "
635311199323559295,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311199323569296,"Parsed as literal","quickSort"
635311199323569296,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311199323569296,"Parsed as literal","filter"
635311199323579296,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311199323579296,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311199323579296,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311199323579296,"Parsed as literal",""
635311199323589297,"Parsed as literal","i"
635311199323589297,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199323589297,"Parsed as literal"," i "
635311199323599297,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199323599297,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199323599297,"Parsed as literal"," "
635311199323599297,"Parsed as literal","list"
635311199323609298,"Parsed as literal","1"
635311199323609298,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199323609298,"Parsed as literal",""
635311199323609298,"Parsed as literal","list"
635311199323619298,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311199323619298,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311199323619298,"Parsed as literal","mergeSort"
635311199323629299,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199323629299,"Parsed as literal",""
635311199323629299,"Parsed as literal",""
635311199323629299,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199323639300,"Parsed as literal",""
635311199323639300,"Parsed as literal",""
635311199323639300,"Invalid operator","@mergeSort([]) -> []","0"
635311199323639300,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311199323649300,"Parsed as literal","mergeSort"
635311199323649300,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199323649300,"Parsed as literal",""
635311199323659301,"Parsed as literal",""
635311199323659301,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199323659301,"Parsed as literal",""
635311199323669301,"Parsed as literal",""
635311199323669301,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311199323669301,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311199323669301,"Parsed as literal","mergeSort"
635311199323679302,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311199323679302,"Parsed as literal","list"
635311199323679302,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311199323679302,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311199323689302,"Parsed as literal",""
635311199323689302,"Parsed as literal","list"
635311199323689302,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311199323699303,"Parsed as literal",""
635311199323699303,"Parsed as literal",""
635311199323699303,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311199323699303,"Parsed as literal"," "
635311199323709304,"Parsed as literal","list"
635311199323709304,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311199323709304,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311199323719304,"Parsed as literal","mergeSort"
635311199323719304,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311199323719304,"Parsed as literal","list"
635311199323719304,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311199323729305,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311199323729305,"Parsed as literal",""
635311199323729305,"Parsed as literal","list"
635311199323729305,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311199323739305,"Parsed as literal",""
635311199323739305,"Parsed as literal",""
635311199323739305,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311199323739305,"Parsed as literal"," "
635311199323749306,"Parsed as literal","list"
635311199323749306,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311199323759306,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311199323759306,"Parsed as literal","mergeSort"
635311199323759306,"Parsed as literal","list"
635311199323759306,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311199323769307,"Parsed as literal","merge"
635311199323769307,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311199323779308,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311199323779308,"Parsed as literal","mergeSort"
635311199323779308,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311199323779308,"Parsed as literal","take"
635311199323789308,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311199323789308,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311199323789308,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311199323789308,"Parsed as literal","count"
635311199323799309,"Parsed as literal","list"
635311199323799309,"Parsed as literal","2"
635311199323799309,"Parsed as literal","list"
635311199323809309,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311199323809309,"Parsed as literal","mergeSort"
635311199323809309,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311199323809309,"Parsed as literal","skip"
635311199323819310,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311199323819310,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311199323829310,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311199323829310,"Parsed as literal","count"
635311199323829310,"Parsed as literal","list"
635311199323839311,"Parsed as literal","2"
635311199323839311,"Parsed as literal","list"
635311199323839311,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311199323839311,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311199323849312,"Parsed as literal","mergeSort"
635311199323849312,"Parsed as literal","list"
635311199323849312,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311199323859312,"Parsed as literal","merge"
635311199323859312,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311199323859312,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311199323869313,"Parsed as literal","mergeSort"
635311199323869313,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311199323869313,"Parsed as literal","take"
635311199323869313,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311199323879313,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311199323879313,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311199323879313,"Parsed as literal","count"
635311199323889314,"Parsed as literal","list"
635311199323889314,"Parsed as literal","2"
635311199323889314,"Parsed as literal","list"
635311199323889314,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311199323899314,"Parsed as literal","mergeSort"
635311199323899314,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311199323899314,"Parsed as literal","skip"
635311199323909315,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311199323909315,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311199323909315,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311199323909315,"Parsed as literal","count"
635311199323919316,"Parsed as literal","list"
635311199323919316,"Parsed as literal","2"
635311199323919316,"Parsed as literal","list"
635311199323929316,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311199323929316,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311199323929316,"Parsed as literal","merge"
635311199323939317,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311199323939317,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199323939317,"Parsed as literal",""
635311199323949317,"Parsed as literal",""
635311199323949317,"Parsed as literal","list"
635311199323949317,"Parsed as literal"," list"
635311199323949317,"Invalid operator","@merge([],list) -> list","0"
635311199323959318,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311199323959318,"Parsed as literal","merge"
635311199323959318,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311199323969318,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199323969318,"Parsed as literal",""
635311199323969318,"Parsed as literal",""
635311199323969318,"Parsed as literal","list"
635311199323979319,"Parsed as literal"," list"
635311199323979319,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311199323979319,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311199323979319,"Parsed as literal","merge"
635311199323989320,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311199323989320,"Parsed as literal","list"
635311199323989320,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199323999320,"Parsed as literal",""
635311199323999320,"Parsed as literal",""
635311199323999320,"Parsed as literal"," list"
635311199323999320,"Invalid operator","@merge(list,[]) -> list","0"
635311199324009321,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311199324009321,"Parsed as literal","merge"
635311199324009321,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311199324019321,"Parsed as literal","list"
635311199324019321,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199324019321,"Parsed as literal",""
635311199324019321,"Parsed as literal",""
635311199324029322,"Parsed as literal"," list"
635311199324029322,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311199324039322,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311199324039322,"Parsed as literal","merge"
635311199324039322,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311199324039322,"Parsed as literal","left"
635311199324049323,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311199324049323,"Parsed as literal","right "
635311199324049323,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311199324059324,"Parsed as literal"," "
635311199324059324,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311199324059324,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311199324059324,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311199324069324,"Parsed as literal",""
635311199324069324,"Parsed as literal","left "
635311199324069324,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311199324069324,"Parsed as literal"," "
635311199324079325,"Parsed as literal","right"
635311199324079325,"Parsed as literal",""
635311199324079325,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311199324089325,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311199324089325,"Parsed as literal"," "
635311199324089325,"Parsed as literal","left "
635311199324099326,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311199324099326,"Parsed as literal","merge"
635311199324099326,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311199324099326,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311199324109326,"Parsed as literal",""
635311199324109326,"Parsed as literal","left"
635311199324109326,"Parsed as literal","right"
635311199324109326,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311199324119327,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311199324119327,"Parsed as literal","merge"
635311199324119327,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311199324129328,"Parsed as literal","left"
635311199324129328,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311199324129328,"Parsed as literal","right "
635311199324129328,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311199324139328,"Parsed as literal"," "
635311199324139328,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311199324139328,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311199324139328,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311199324149329,"Parsed as literal",""
635311199324149329,"Parsed as literal","left "
635311199324149329,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311199324159329,"Parsed as literal"," "
635311199324159329,"Parsed as literal","right"
635311199324159329,"Parsed as literal",""
635311199324159329,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311199324169330,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311199324169330,"Parsed as literal"," "
635311199324169330,"Parsed as literal","left "
635311199324179330,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311199324179330,"Parsed as literal","merge"
635311199324179330,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311199324179330,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311199324189331,"Parsed as literal",""
635311199324189331,"Parsed as literal","left"
635311199324189331,"Parsed as literal","right"
635311199324199332,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311199324199332,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311199324199332,"Parsed as literal","merge"
635311199324199332,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311199324209332,"Parsed as literal","left"
635311199324209332,"Parsed as literal","right"
635311199324209332,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311199324209332,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311199324219333,"Parsed as literal"," "
635311199324219333,"Parsed as literal","right "
635311199324219333,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311199324229333,"Parsed as literal","merge"
635311199324229333,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311199324229333,"Parsed as literal","left"
635311199324229333,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311199324239334,"Parsed as literal",""
635311199324239334,"Parsed as literal","right"
635311199324239334,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311199324249334,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311199324249334,"Parsed as literal","merge"
635311199324249334,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311199324249334,"Parsed as literal","left"
635311199324259335,"Parsed as literal","right"
635311199324259335,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311199324259335,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311199324259335,"Parsed as literal"," "
635311199324269336,"Parsed as literal","right "
635311199324269336,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311199324269336,"Parsed as literal","merge"
635311199324279336,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311199324279336,"Parsed as literal","left"
635311199324279336,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311199324279336,"Parsed as literal",""
635311199324289337,"Parsed as literal","right"
635311199324289337,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311199324289337,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311199324299337,"Parsed as literal","bubbleSort"
635311199324299337,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311199324299337,"Parsed as literal","list"
635311199324299337,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311199324309338,"Parsed as literal","isSorted"
635311199324309338,"Parsed as literal","list"
635311199324309338,"Parsed as literal"," list"
635311199324319338,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311199324319338,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311199324319338,"Parsed as literal","bubbleSort"
635311199324319338,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311199324329339,"Parsed as literal","list"
635311199324329339,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311199324329339,"Parsed as literal","isSorted"
635311199324339340,"Parsed as literal","list"
635311199324339340,"Parsed as literal"," list"
635311199324339340,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311199324349340,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311199324349340,"Parsed as literal","bubbleSort"
635311199324349340,"Parsed as literal","list"
635311199324349340,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311199324359341,"Parsed as literal","bubbleSort"
635311199324359341,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311199324359341,"Parsed as literal","bubbleSortPass"
635311199324359341,"Parsed as literal","list"
635311199324369341,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311199324369341,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311199324369341,"Parsed as literal","bubbleSort"
635311199324369341,"Parsed as literal","list"
635311199324379342,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311199324379342,"Parsed as literal","bubbleSort"
635311199324379342,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311199324389342,"Parsed as literal","bubbleSortPass"
635311199324389342,"Parsed as literal","list"
635311199324389342,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311199324389342,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311199324399343,"Parsed as literal","bubbleSortPass"
635311199324399343,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199324399343,"Parsed as literal",""
635311199324409344,"Parsed as literal",""
635311199324409344,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199324409344,"Parsed as literal",""
635311199324409344,"Parsed as literal",""
635311199324419344,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311199324419344,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311199324419344,"Parsed as literal","bubbleSortPass"
635311199324419344,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199324429345,"Parsed as literal",""
635311199324429345,"Parsed as literal",""
635311199324429345,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199324439345,"Parsed as literal",""
635311199324439345,"Parsed as literal",""
635311199324439345,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311199324439345,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311199324449346,"Parsed as literal","bubbleSortPass"
635311199324449346,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311199324449346,"Parsed as literal","list"
635311199324459347,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311199324459347,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311199324459347,"Parsed as literal",""
635311199324459347,"Parsed as literal","list "
635311199324469347,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311199324469347,"Parsed as literal",""
635311199324469347,"Parsed as literal",""
635311199324479348,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311199324479348,"Parsed as literal"," "
635311199324479348,"Parsed as literal","list"
635311199324479348,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311199324489348,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311199324489348,"Parsed as literal","bubbleSortPass"
635311199324489348,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311199324489348,"Parsed as literal","list"
635311199324499349,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311199324499349,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311199324499349,"Parsed as literal",""
635311199324499349,"Parsed as literal","list "
635311199324509349,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311199324509349,"Parsed as literal",""
635311199324509349,"Parsed as literal",""
635311199324519350,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311199324519350,"Parsed as literal"," "
635311199324519350,"Parsed as literal","list"
635311199324529351,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311199324529351,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311199324529351,"Parsed as literal","bubbleSortPass"
635311199324529351,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311199324539351,"Parsed as literal","list"
635311199324539351,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311199324539351,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311199324539351,"Parsed as literal",""
635311199324549352,"Parsed as literal","list "
635311199324549352,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311199324549352,"Parsed as literal"," "
635311199324549352,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311199324559352,"Parsed as literal",""
635311199324559352,"Parsed as literal","list"
635311199324559352,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311199324569353,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311199324569353,"Parsed as literal"," "
635311199324569353,"Parsed as literal","list "
635311199324579353,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311199324579353,"Parsed as literal","bubbleSortPass"
635311199324579353,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311199324579353,"Parsed as literal",""
635311199324589354,"Parsed as literal","list"
635311199324589354,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311199324589354,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311199324589354,"Parsed as literal","bubbleSortPass"
635311199324599355,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311199324599355,"Parsed as literal","list"
635311199324599355,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311199324599355,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311199324609355,"Parsed as literal",""
635311199324609355,"Parsed as literal","list "
635311199324609355,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311199324619356,"Parsed as literal"," "
635311199324619356,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311199324619356,"Parsed as literal",""
635311199324619356,"Parsed as literal","list"
635311199324629356,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311199324629356,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311199324629356,"Parsed as literal"," "
635311199324639357,"Parsed as literal","list "
635311199324639357,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311199324639357,"Parsed as literal","bubbleSortPass"
635311199324639357,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311199324649357,"Parsed as literal",""
635311199324649357,"Parsed as literal","list"
635311199324659358,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311199324659358,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311199324659358,"Parsed as literal","bubbleSortPass"
635311199324659358,"Parsed as literal","list"
635311199324669359,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311199324669359,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311199324669359,"Parsed as literal"," "
635311199324679359,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311199324679359,"Parsed as literal",""
635311199324679359,"Parsed as literal","list "
635311199324679359,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311199324689360,"Parsed as literal","bubbleSortPass"
635311199324689360,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311199324689360,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311199324699360,"Parsed as literal",""
635311199324699360,"Parsed as literal","list "
635311199324699360,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311199324699360,"Parsed as literal"," "
635311199324709361,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311199324709361,"Parsed as literal",""
635311199324709361,"Parsed as literal","list"
635311199324709361,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311199324719361,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311199324719361,"Parsed as literal","bubbleSortPass"
635311199324719361,"Parsed as literal","list"
635311199324729362,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311199324729362,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311199324729362,"Parsed as literal"," "
635311199324739363,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311199324739363,"Parsed as literal",""
635311199324739363,"Parsed as literal","list "
635311199324739363,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311199324749363,"Parsed as literal","bubbleSortPass"
635311199324749363,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311199324749363,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311199324759364,"Parsed as literal",""
635311199324759364,"Parsed as literal","list "
635311199324759364,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311199324759364,"Parsed as literal"," "
635311199324769364,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311199324769364,"Parsed as literal",""
635311199324769364,"Parsed as literal","list"
635311199324779365,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311199324779365,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311199324779365,"Parsed as literal","isSorted"
635311199324779365,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311199324789365,"Parsed as literal",""
635311199324789365,"Parsed as literal",""
635311199324789365,"Parsed as literal"," true"
635311199324799366,"Invalid operator","@isSorted([]) -> true","0"
635311199324799366,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311199324799366,"Parsed as literal","isSorted"
635311199324809367,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311199324809367,"Parsed as literal",""
635311199324809367,"Parsed as literal",""
635311199324819367,"Parsed as literal"," true"
635311199324819367,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311199324819367,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311199324819367,"Parsed as literal","isSorted"
635311199324829368,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311199324829368,"Parsed as literal","list"
635311199324829368,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311199324839368,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311199324839368,"Parsed as literal",""
635311199324839368,"Parsed as literal","list "
635311199324839368,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199324849369,"Parsed as literal",""
635311199324849369,"Parsed as literal",""
635311199324849369,"Parsed as literal"," true"
635311199324859369,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311199324859369,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311199324859369,"Parsed as literal","isSorted"
635311199324859369,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311199324869370,"Parsed as literal","list"
635311199324869370,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311199324869370,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311199324879371,"Parsed as literal",""
635311199324879371,"Parsed as literal","list "
635311199324879371,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199324879371,"Parsed as literal",""
635311199324889371,"Parsed as literal",""
635311199324889371,"Parsed as literal"," true"
635311199324889371,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311199324899372,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311199324899372,"Parsed as literal","isSorted"
635311199324899372,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311199324899372,"Parsed as literal","list"
635311199324909372,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311199324909372,"Parsed as literal",""
635311199324909372,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311199324919373,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311199324919373,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311199324919373,"Parsed as literal",""
635311199324919373,"Parsed as literal","list "
635311199324929373,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311199324929373,"Parsed as literal"," "
635311199324929373,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311199324939374,"Parsed as literal",""
635311199324939374,"Parsed as literal","list"
635311199324939374,"Parsed as literal",""
635311199324939374,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311199324949375,"Parsed as literal","isSorted"
635311199324949375,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311199324949375,"Parsed as literal",""
635311199324959375,"Parsed as literal","list"
635311199324959375,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311199324959375,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311199324959375,"Parsed as literal","isSorted"
635311199324969376,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311199324969376,"Parsed as literal","list"
635311199324979376,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311199324979376,"Parsed as literal",""
635311199324979376,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311199324979376,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311199324989377,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311199324989377,"Parsed as literal",""
635311199324989377,"Parsed as literal","list "
635311199324999377,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311199324999377,"Parsed as literal"," "
635311199324999377,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311199324999377,"Parsed as literal",""
635311199325009378,"Parsed as literal","list"
635311199325009378,"Parsed as literal",""
635311199325009378,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311199325019379,"Parsed as literal","isSorted"
635311199325019379,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311199325019379,"Parsed as literal",""
635311199325019379,"Parsed as literal","list"
635311199325029379,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311199325029379,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311199325029379,"Parsed as literal","isSorted"
635311199325039380,"Parsed as literal","list"
635311199325039380,"Parsed as literal"," false"
635311199325039380,"Invalid operator","@isSorted(list) -> false","0"
635311199325049380,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311199325049380,"Parsed as literal","isSorted"
635311199325049380,"Parsed as literal","list"
635311199325049380,"Parsed as literal"," false"
635311199325059381,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311199325059381,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311199325059381,"Parsed as literal","insertionSort"
635311199325069381,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199325069381,"Parsed as literal",""
635311199325069381,"Parsed as literal",""
635311199325069381,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311199325079382,"Parsed as literal",""
635311199325079382,"Parsed as literal",""
635311199325079382,"Invalid operator","@insertionSort([]) -> []","0"
635311199325079382,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311199325089383,"Parsed as literal","insertionSort"
635311199325089383,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199325089383,"Parsed as literal",""
635311199325099383,"Parsed as literal",""
635311199325099383,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311199325099383,"Parsed as literal",""
635311199325099383,"Parsed as literal",""
635311199325109384,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311199325109384,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311199325109384,"Parsed as literal","insertionSort"
635311199325119384,"Parsed as literal","list"
635311199325119384,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311199325119384,"Parsed as literal","insert"
635311199325129385,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311199325129385,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311199325129385,"Parsed as literal",""
635311199325139385,"Parsed as literal","list"
635311199325139385,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311199325139385,"Parsed as literal","insertionSort"
635311199325149386,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311199325149386,"Parsed as literal",""
635311199325149386,"Parsed as literal","list"
635311199325159387,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311199325159387,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311199325159387,"Parsed as literal","insertionSort"
635311199325159387,"Parsed as literal","list"
635311199325169387,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311199325169387,"Parsed as literal","insert"
635311199325169387,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311199325179388,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311199325179388,"Parsed as literal",""
635311199325179388,"Parsed as literal","list"
635311199325189388,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311199325189388,"Parsed as literal","insertionSort"
635311199325189388,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311199325189388,"Parsed as literal",""
635311199325199389,"Parsed as literal","list"
635311199325199389,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311199325199389,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311199325209389,"Parsed as literal","insert"
635311199325209389,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311199325209389,"Parsed as literal","item"
635311199325219390,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199325219390,"Parsed as literal",""
635311199325219390,"Parsed as literal",""
635311199325219390,"Parsed as literal"," item"
635311199325229391,"Invalid operator","@insert(item,[]) -> item","0"
635311199325229391,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311199325229391,"Parsed as literal","insert"
635311199325239391,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311199325239391,"Parsed as literal","item"
635311199325239391,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199325249392,"Parsed as literal",""
635311199325249392,"Parsed as literal",""
635311199325249392,"Parsed as literal"," item"
635311199325249392,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311199325259392,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311199325259392,"Parsed as literal","insert"
635311199325259392,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311199325269393,"Parsed as literal","item"
635311199325269393,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311199325269393,"Parsed as literal","list "
635311199325279393,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311199325279393,"Parsed as literal"," item "
635311199325279393,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311199325279393,"Parsed as literal"," "
635311199325289394,"Parsed as literal","list"
635311199325289394,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311199325289394,"Parsed as literal"," item "
635311199325299395,"Parsed as literal"," list"
635311199325299395,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311199325299395,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311199325299395,"Parsed as literal","insert"
635311199325309395,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311199325309395,"Parsed as literal","item"
635311199325309395,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311199325319396,"Parsed as literal","list "
635311199325319396,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311199325319396,"Parsed as literal"," item "
635311199325319396,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311199325329396,"Parsed as literal"," "
635311199325329396,"Parsed as literal","list"
635311199325339397,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311199325339397,"Parsed as literal"," item "
635311199325339397,"Parsed as literal"," list"
635311199325349397,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311199325349397,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311199325349397,"Parsed as literal","insert"
635311199325349397,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311199325359398,"Parsed as literal","item"
635311199325359398,"Parsed as literal","list"
635311199325359398,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311199325369399,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311199325369399,"Parsed as literal"," "
635311199325369399,"Parsed as literal","list "
635311199325369399,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311199325379399,"Parsed as literal","insert"
635311199325379399,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311199325379399,"Parsed as literal","item"
635311199325389400,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311199325389400,"Parsed as literal",""
635311199325389400,"Parsed as literal","list"
635311199325399400,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311199325399400,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311199325399400,"Parsed as literal","insert"
635311199325399400,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311199325409401,"Parsed as literal","item"
635311199325409401,"Parsed as literal","list"
635311199325409401,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311199325419401,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311199325419401,"Parsed as literal"," "
635311199325419401,"Parsed as literal","list "
635311199325429402,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311199325429402,"Parsed as literal","insert"
635311199325429402,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311199325429402,"Parsed as literal","item"
635311199325439403,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311199325439403,"Parsed as literal",""
635311199325439403,"Parsed as literal","list"
635311199325449403,"StepEvaluate","->","Changed","Declared @quickSort"
635311199325449403,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311199325449403,"StepEvaluate","->","Changed","Declared @quickSort"
635311199325459404,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311199325459404,"StepEvaluate","->","Changed","Declared @mergeSort"
635311199325459404,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311199325459404,"StepEvaluate","->","Changed","Declared @mergeSort"
635311199325469404,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311199325469404,"StepEvaluate","->","Changed","Declared @mergeSort"
635311199325469404,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311199325469404,"StepEvaluate","->","Changed","Declared @merge"
635311199325479405,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199325479405,"StepEvaluate","->","Changed","Declared @merge"
635311199325479405,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199325489405,"StepEvaluate","->","Changed","Declared @merge"
635311199325489405,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199325489405,"StepEvaluate","->","Changed","Declared @merge"
635311199325499406,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199325499406,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311199325499406,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311199325499406,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311199325509407,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311199325509407,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199325509407,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199325509407,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199325519407,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199325519407,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199325519407,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199325529408,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199325529408,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199325529408,"StepEvaluate","->","Changed","Declared @isSorted"
635311199325529408,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199325539408,"StepEvaluate","->","Changed","Declared @isSorted"
635311199325539408,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199325539408,"StepEvaluate","->","Changed","Declared @isSorted"
635311199325549409,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199325549409,"StepEvaluate","->","Changed","Declared @isSorted"
635311199325549409,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199325549409,"StepEvaluate","->","Changed","Declared @insertionSort"
635311199325559409,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311199325559409,"StepEvaluate","->","Changed","Declared @insertionSort"
635311199325559409,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311199325569410,"StepEvaluate","->","Changed","Declared @insert"
635311199325569410,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311199325569410,"StepEvaluate","->","Changed","Declared @insert"
635311199325569410,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311199325579411,"StepEvaluate","->","Changed","Declared @insert"
635311199325579411,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311199325579411,"StepEvaluate","[]","Changed","File imported"
635311199325579411,"StepEvaluate","File imported","Unchanged","File imported"
635311199325589411,"StepEvaluate","[]","Changed","File imported"
635311199325589411,"StepEvaluate","File imported","Unchanged","File imported"
635311199325599412,"ParseInternal","1,2,3,4,5","0","CommaOperator","0","2","1","2,3,4,5"
635311199325599412,"Parsed as literal","1"
635311199325599412,"ParseInternal","2,3,4,5","2","CommaOperator","2","4","2","3,4,5"
635311199325599412,"Parsed as literal","2"
635311199325609412,"ParseInternal","3,4,5","4","CommaOperator","4","6","3","4,5"
635311199325609412,"Parsed as literal","3"
635311199325609412,"ParseInternal","4,5","6","CommaOperator","6","8","4","5"
635311199325619413,"Parsed as literal","4"
635311199325619413,"Parsed as literal","5"
635311199441816059,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311199441826059,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311199441836060,"Parsed as literal","import"
635311199441846061,"Parsed as literal","file"
635311199441856061,"Parsed as literal"," 0"
635311199441866062,"Invalid operator","@import(file) -> 0","0"
635311199441876062,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311199441896063,"Parsed as literal","import"
635311199441906064,"Parsed as literal","file"
635311199441906064,"Parsed as literal"," 0"
635311199441916065,"StepEvaluate","->","Changed","Declared @import"
635311199441926065,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311199441926065,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311199441926065,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311199441936066,"Parsed as literal","operator"
635311199441946066,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311199441956067,"Parsed as literal","op"
635311199441956067,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311199441966068,"Parsed as literal","fn"
635311199441966068,"Parsed as literal",""
635311199441976068,"Invalid operator","@fn","12"
635311199441976068,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311199441976068,"Parsed as literal","fn"
635311199441986069,"Parsed as literal",""
635311199441986069,"Invalid operator","@fn","12"
635311199441986069,"Parsed as literal","@fn"
635311199441996069,"Parsed as literal"," 0"
635311199441996069,"Invalid operator","@operator(op,@fn) -> 0","0"
635311199442006070,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311199442006070,"Parsed as literal","operator"
635311199442016070,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311199442016070,"Parsed as literal","op"
635311199442016070,"Parsed as literal","@fn"
635311199442026071,"Parsed as literal"," 0"
635311199442026071,"StepEvaluate","->","Changed","Declared @operator"
635311199442036072,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311199442036072,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311199442036072,"Parsed as literal","import"
635311199442046072,"Parsed as literal","main.toast"
635311199442046072,"StepEvaluate","@","Changed","@"
635311199442056073,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199442056073,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199442056073,"StepEvaluate",",","Unchanged",","
635311199442066073,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199442066073,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199442076074,"StepEvaluate","PAT@-M","Changed","[]"
635311199442076074,"StepEvaluate","SEL@import","Changed","[]"
635311199442076074,"StepEvaluate","@","Changed","[]"
635311199442086074,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311199442086074,"Parsed as literal","import"
635311199442096075,"Parsed as literal","'core.toast'"
635311199442096075,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311199442106076,"Parsed as literal","import"
635311199442106076,"Parsed as literal","'list.toast'"
635311199442106076,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311199442116076,"Parsed as literal","import"
635311199442116076,"Parsed as literal","'math.toast'"
635311199442126077,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311199442126077,"Parsed as literal","import"
635311199442126077,"Parsed as literal","'sorting.toast'"
635311199442136077,"StepEvaluate","@","Changed","@"
635311199442136077,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199442146078,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199442146078,"StepEvaluate",",","Unchanged",","
635311199442146078,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199442156078,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199442156078,"StepEvaluate","PAT@-M","Changed","[]"
635311199442166079,"StepEvaluate","SEL@import","Changed","[]"
635311199442166079,"StepEvaluate","@","Changed","[]"
635311199442176080,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311199442176080,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311199442186080,"Parsed as literal","map"
635311199442186080,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311199442186080,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311199442196081,"Parsed as literal","func"
635311199442196081,"Parsed as literal",""
635311199442196081,"Invalid operator","@func","4"
635311199442206081,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311199442206081,"Parsed as literal","func"
635311199442216082,"Parsed as literal",""
635311199442216082,"Invalid operator","@func","4"
635311199442216082,"Parsed as literal","@func"
635311199442226082,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311199442226082,"Parsed as literal",""
635311199442236083,"Parsed as literal",""
635311199442236083,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199442236083,"Parsed as literal",""
635311199442246084,"Parsed as literal",""
635311199442246084,"Invalid operator","@map(@func, []) -> []","0"
635311199442256084,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311199442256084,"Parsed as literal","map"
635311199442256084,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311199442266085,"Parsed as literal","@func"
635311199442266085,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311199442276085,"Parsed as literal",""
635311199442276085,"Parsed as literal",""
635311199442276085,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199442286086,"Parsed as literal",""
635311199442286086,"Parsed as literal",""
635311199442296086,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311199442296086,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311199442306087,"Parsed as literal","map"
635311199442306087,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311199442306087,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311199442316088,"Parsed as literal","func"
635311199442316088,"Parsed as literal",""
635311199442326088,"Invalid operator","@func","4"
635311199442326088,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311199442326088,"Parsed as literal","func"
635311199442336089,"Parsed as literal",""
635311199442336089,"Invalid operator","@func","4"
635311199442336089,"Parsed as literal","@func"
635311199442346089,"Parsed as literal"," list"
635311199442346089,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311199442356090,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311199442356090,"Parsed as literal","func"
635311199442366090,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199442366090,"Parsed as literal",""
635311199442366090,"Parsed as literal","list"
635311199442376091,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311199442376091,"Parsed as literal","map"
635311199442386092,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311199442386092,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311199442386092,"Parsed as literal","func"
635311199442396092,"Parsed as literal",""
635311199442396092,"Invalid operator","@func","41"
635311199442406093,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311199442406093,"Parsed as literal","func"
635311199442406093,"Parsed as literal",""
635311199442416093,"Invalid operator","@func","41"
635311199442416093,"Parsed as literal","@func"
635311199442426094,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311199442426094,"Parsed as literal",""
635311199442426094,"Parsed as literal","list"
635311199442436094,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311199442436094,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311199442446095,"Parsed as literal","map"
635311199442446095,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311199442446095,"Parsed as literal","@func"
635311199442456096,"Parsed as literal"," list"
635311199442456096,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311199442466096,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311199442466096,"Parsed as literal","func"
635311199442476097,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199442476097,"Parsed as literal",""
635311199442476097,"Parsed as literal","list"
635311199442486097,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311199442486097,"Parsed as literal","map"
635311199442496098,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311199442496098,"Parsed as literal","@func"
635311199442496098,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311199442506098,"Parsed as literal",""
635311199442506098,"Parsed as literal","list"
635311199442516099,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311199442516099,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311199442516099,"Parsed as literal","filter"
635311199442526100,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311199442526100,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311199442536100,"Parsed as literal","pred"
635311199442536100,"Parsed as literal",""
635311199442546101,"Invalid operator","@pred","7"
635311199442546101,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311199442546101,"Parsed as literal","pred"
635311199442556101,"Parsed as literal",""
635311199442556101,"Invalid operator","@pred","7"
635311199442556101,"Parsed as literal","@pred"
635311199442566102,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311199442566102,"Parsed as literal",""
635311199442576102,"Parsed as literal",""
635311199442576102,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311199442576102,"Parsed as literal",""
635311199442586103,"Parsed as literal",""
635311199442586103,"Invalid operator","@filter(@pred,[]) -> []","0"
635311199442596104,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311199442596104,"Parsed as literal","filter"
635311199442596104,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311199442606104,"Parsed as literal","@pred"
635311199442606104,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311199442616105,"Parsed as literal",""
635311199442616105,"Parsed as literal",""
635311199442616105,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311199442626105,"Parsed as literal",""
635311199442626105,"Parsed as literal",""
635311199442636106,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311199442636106,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311199442646106,"Parsed as literal","filter"
635311199442646106,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311199442646106,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311199442656107,"Parsed as literal","pred"
635311199442656107,"Parsed as literal",""
635311199442666108,"Invalid operator","@pred","7"
635311199442666108,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311199442666108,"Parsed as literal","pred"
635311199442676108,"Parsed as literal",""
635311199442676108,"Invalid operator","@pred","7"
635311199442676108,"Parsed as literal","@pred"
635311199442686109,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311199442686109,"Parsed as literal"," list "
635311199442696109,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311199442696109,"Parsed as literal","pred"
635311199442706110,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199442706110,"Parsed as literal",""
635311199442706110,"Parsed as literal","list"
635311199442716110,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311199442716110,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311199442726111,"Parsed as literal"," "
635311199442726111,"Parsed as literal","list "
635311199442726111,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311199442736112,"Parsed as literal","filter"
635311199442736112,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311199442746112,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311199442746112,"Parsed as literal","pred"
635311199442746112,"Parsed as literal",""
635311199442756113,"Invalid operator","@pred","56"
635311199442756113,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311199442756113,"Parsed as literal","pred"
635311199442766113,"Parsed as literal",""
635311199442766113,"Invalid operator","@pred","56"
635311199442776114,"Parsed as literal","@pred"
635311199442776114,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311199442776114,"Parsed as literal"," "
635311199442786114,"Parsed as literal","list"
635311199442786114,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311199442796115,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311199442796115,"Parsed as literal","filter"
635311199442796115,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311199442806116,"Parsed as literal","@pred"
635311199442806116,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311199442816116,"Parsed as literal"," list "
635311199442816116,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311199442816116,"Parsed as literal","pred"
635311199442826117,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311199442826117,"Parsed as literal",""
635311199442836117,"Parsed as literal","list"
635311199442836117,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311199442846118,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311199442846118,"Parsed as literal"," "
635311199442846118,"Parsed as literal","list "
635311199442876120,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311199442876120,"Parsed as literal","filter"
635311199442886120,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311199442886120,"Parsed as literal","@pred"
635311199442896121,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311199442896121,"Parsed as literal"," "
635311199442906121,"Parsed as literal","list"
635311199442906121,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311199442916122,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311199442916122,"Parsed as literal","filter"
635311199442926122,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311199442926122,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311199442926122,"Parsed as literal","pred"
635311199442936123,"Parsed as literal",""
635311199442936123,"Invalid operator","@pred","7"
635311199442936123,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311199442946124,"Parsed as literal","pred"
635311199442946124,"Parsed as literal",""
635311199442956124,"Invalid operator","@pred","7"
635311199442956124,"Parsed as literal","@pred"
635311199442956124,"Parsed as literal","list"
635311199442966125,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311199442966125,"Parsed as literal","filter"
635311199442976125,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311199442976125,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311199442986126,"Parsed as literal","pred"
635311199442986126,"Parsed as literal",""
635311199442986126,"Invalid operator","@pred","30"
635311199442996126,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311199442996126,"Parsed as literal","pred"
635311199442996126,"Parsed as literal",""
635311199443006127,"Invalid operator","@pred","30"
635311199443006127,"Parsed as literal","@pred"
635311199443016128,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311199443016128,"Parsed as literal",""
635311199443016128,"Parsed as literal","list"
635311199443026128,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311199443026128,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311199443036129,"Parsed as literal","filter"
635311199443036129,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311199443036129,"Parsed as literal","@pred"
635311199443046129,"Parsed as literal","list"
635311199443046129,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311199443056130,"Parsed as literal","filter"
635311199443056130,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311199443066130,"Parsed as literal","@pred"
635311199443066130,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311199443066130,"Parsed as literal",""
635311199443076131,"Parsed as literal","list"
635311199443076131,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311199443086132,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311199443086132,"Parsed as literal","call"
635311199443086132,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311199443096132,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311199443096132,"Parsed as literal","fun"
635311199443106133,"Parsed as literal",""
635311199443106133,"Invalid operator","@fun","5"
635311199443106133,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311199443116133,"Parsed as literal","fun"
635311199443116133,"Parsed as literal",""
635311199443116133,"Invalid operator","@fun","5"
635311199443126134,"Parsed as literal","@fun"
635311199443126134,"Parsed as literal","arg"
635311199443136134,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311199443136134,"Parsed as literal","fun"
635311199443146135,"Parsed as literal","arg"
635311199443146135,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311199443146135,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311199443156136,"Parsed as literal","call"
635311199443156136,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311199443156136,"Parsed as literal","@fun"
635311199443166136,"Parsed as literal","arg"
635311199443166136,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311199443176137,"Parsed as literal","fun"
635311199443176137,"Parsed as literal","arg"
635311199443186137,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311199443186137,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311199443186137,"Parsed as literal","curry"
635311199443196138,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311199443196138,"Parsed as literal","seed"
635311199443206138,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199443206138,"Parsed as literal",""
635311199443206138,"Parsed as literal",""
635311199443216139,"Parsed as literal"," seed"
635311199443216139,"Invalid operator","@curry(seed,[]) -> seed","0"
635311199443226140,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311199443226140,"Parsed as literal","curry"
635311199443236140,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311199443236140,"Parsed as literal","seed"
635311199443236140,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199443246141,"Parsed as literal",""
635311199443246141,"Parsed as literal",""
635311199443256141,"Parsed as literal"," seed"
635311199443256141,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311199443266142,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311199443266142,"Parsed as literal","curry"
635311199443266142,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311199443276142,"Parsed as literal","seed"
635311199443276142,"Parsed as literal"," funcList"
635311199443286143,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311199443286143,"Parsed as literal","curry"
635311199443286143,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311199443296144,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311199443296144,"Parsed as literal","call"
635311199443306144,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311199443306144,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311199443306144,"Parsed as literal",""
635311199443316145,"Parsed as literal","funcList"
635311199443316145,"Parsed as literal","seed"
635311199443326145,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311199443326145,"Parsed as literal",""
635311199443326145,"Parsed as literal","funcList"
635311199443336146,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311199443336146,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311199443346146,"Parsed as literal","curry"
635311199443346146,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311199443346146,"Parsed as literal","seed"
635311199443356147,"Parsed as literal"," funcList"
635311199443356147,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311199443366148,"Parsed as literal","curry"
635311199443366148,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311199443376148,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311199443376148,"Parsed as literal","call"
635311199443376148,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311199443386149,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311199443386149,"Parsed as literal",""
635311199443396149,"Parsed as literal","funcList"
635311199443396149,"Parsed as literal","seed"
635311199443396149,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311199443406150,"Parsed as literal",""
635311199443406150,"Parsed as literal","funcList"
635311199443416150,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311199443416150,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311199443416150,"Parsed as literal","fold"
635311199443426151,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311199443426151,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311199443436152,"Parsed as literal","func"
635311199443436152,"Parsed as literal",""
635311199443436152,"Invalid operator","@func","5"
635311199443446152,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311199443446152,"Parsed as literal","func"
635311199443456153,"Parsed as literal",""
635311199443456153,"Invalid operator","@func","5"
635311199443456153,"Parsed as literal","@func"
635311199443466153,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199443466153,"Parsed as literal",""
635311199443476154,"Parsed as literal",""
635311199443476154,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199443476154,"Parsed as literal",""
635311199443486154,"Parsed as literal",""
635311199443486154,"Invalid operator","@fold(@func,[]) -> []","0"
635311199443496155,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311199443496155,"Parsed as literal","fold"
635311199443496155,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311199443506156,"Parsed as literal","@func"
635311199443506156,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199443506156,"Parsed as literal",""
635311199443516156,"Parsed as literal",""
635311199443516156,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311199443526157,"Parsed as literal",""
635311199443526157,"Parsed as literal",""
635311199443536157,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311199443536157,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311199443536157,"Parsed as literal","fold"
635311199443546158,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311199443546158,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311199443556158,"Parsed as literal","func"
635311199443556158,"Parsed as literal",""
635311199443556158,"Invalid operator","@func","5"
635311199443566159,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311199443566159,"Parsed as literal","func"
635311199443566159,"Parsed as literal",""
635311199443576160,"Invalid operator","@func","5"
635311199443576160,"Parsed as literal","@func"
635311199443586160,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311199443586160,"Parsed as literal","list"
635311199443586160,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311199443596161,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311199443596161,"Parsed as literal",""
635311199443606161,"Parsed as literal","list"
635311199443606161,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311199443606161,"Parsed as literal",""
635311199443616162,"Parsed as literal",""
635311199443616162,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311199443626162,"Parsed as literal"," "
635311199443626162,"Parsed as literal","list"
635311199443636163,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311199443636163,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311199443636163,"Parsed as literal","fold"
635311199443646164,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311199443646164,"Parsed as literal","@func"
635311199443656164,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311199443656164,"Parsed as literal","list"
635311199443656164,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311199443666165,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311199443666165,"Parsed as literal",""
635311199443666165,"Parsed as literal","list"
635311199443676165,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311199443676165,"Parsed as literal",""
635311199443686166,"Parsed as literal",""
635311199443686166,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311199443686166,"Parsed as literal"," "
635311199443696166,"Parsed as literal","list"
635311199443706167,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311199443706167,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311199443706167,"Parsed as literal","fold"
635311199443716168,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311199443716168,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311199443726168,"Parsed as literal","func"
635311199443726168,"Parsed as literal",""
635311199443726168,"Invalid operator","@func","5"
635311199443736169,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311199443736169,"Parsed as literal","func"
635311199443736169,"Parsed as literal",""
635311199443746169,"Invalid operator","@func","5"
635311199443746169,"Parsed as literal","@func"
635311199443756170,"Parsed as literal","list"
635311199443756170,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311199443756170,"Parsed as literal","fold"
635311199443766170,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311199443766170,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311199443776171,"Parsed as literal","func"
635311199443776171,"Parsed as literal",""
635311199443786172,"Invalid operator","@func","26"
635311199443786172,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311199443786172,"Parsed as literal","func"
635311199443796172,"Parsed as literal",""
635311199443796172,"Invalid operator","@func","26"
635311199443806173,"Parsed as literal","@func"
635311199443806173,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311199443816173,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311199443816173,"Parsed as literal","func"
635311199443826174,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311199443826174,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311199443826174,"Parsed as literal",""
635311199443836174,"Parsed as literal","list"
635311199443836174,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311199443836174,"Parsed as literal",""
635311199443846175,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311199443846175,"Parsed as literal",""
635311199443856176,"Parsed as literal","list"
635311199443856176,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311199443866176,"Parsed as literal"," "
635311199443866176,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311199443866176,"Parsed as literal",""
635311199443876177,"Parsed as literal","list"
635311199443876177,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311199443886177,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311199443886177,"Parsed as literal","fold"
635311199443886177,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311199443896178,"Parsed as literal","@func"
635311199443896178,"Parsed as literal","list"
635311199443906178,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311199443906178,"Parsed as literal","fold"
635311199443906178,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311199443916179,"Parsed as literal","@func"
635311199443916179,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311199443926180,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311199443926180,"Parsed as literal","func"
635311199443936180,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311199443936180,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311199443936180,"Parsed as literal",""
635311199443946181,"Parsed as literal","list"
635311199443946181,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311199443956181,"Parsed as literal",""
635311199443956181,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311199443956181,"Parsed as literal",""
635311199443966182,"Parsed as literal","list"
635311199443966182,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311199443976182,"Parsed as literal"," "
635311199443976182,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311199443976182,"Parsed as literal",""
635311199443986183,"Parsed as literal","list"
635311199443986183,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311199443996184,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311199443996184,"Parsed as literal","foldr"
635311199443996184,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311199444006184,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311199444006184,"Parsed as literal","func"
635311199444016185,"Parsed as literal",""
635311199444016185,"Invalid operator","@func","6"
635311199444016185,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311199444026185,"Parsed as literal","func"
635311199444026185,"Parsed as literal",""
635311199444036186,"Invalid operator","@func","6"
635311199444036186,"Parsed as literal","@func"
635311199444036186,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199444046186,"Parsed as literal",""
635311199444046186,"Parsed as literal",""
635311199444056187,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199444056187,"Parsed as literal",""
635311199444056187,"Parsed as literal",""
635311199444066188,"Invalid operator","@foldr(@func,[]) -> []","0"
635311199444066188,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311199444076188,"Parsed as literal","foldr"
635311199444076188,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311199444076188,"Parsed as literal","@func"
635311199444086189,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199444086189,"Parsed as literal",""
635311199444096189,"Parsed as literal",""
635311199444096189,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199444106190,"Parsed as literal",""
635311199444106190,"Parsed as literal",""
635311199444106190,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311199444116190,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311199444116190,"Parsed as literal","foldr"
635311199444126191,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311199444126191,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311199444126191,"Parsed as literal","func"
635311199444136192,"Parsed as literal",""
635311199444136192,"Invalid operator","@func","6"
635311199444146192,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311199444146192,"Parsed as literal","func"
635311199444146192,"Parsed as literal",""
635311199444156193,"Invalid operator","@func","6"
635311199444156193,"Parsed as literal","@func"
635311199444166193,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311199444166193,"Parsed as literal","list"
635311199444166193,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311199444176194,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311199444176194,"Parsed as literal",""
635311199444176194,"Parsed as literal","list"
635311199444186194,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199444186194,"Parsed as literal",""
635311199444196195,"Parsed as literal",""
635311199444196195,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311199444196195,"Parsed as literal"," "
635311199444206196,"Parsed as literal","list"
635311199444206196,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311199444216196,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311199444216196,"Parsed as literal","foldr"
635311199444216196,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311199444226197,"Parsed as literal","@func"
635311199444226197,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311199444236197,"Parsed as literal","list"
635311199444256198,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311199444256198,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311199444256198,"Parsed as literal",""
635311199444266199,"Parsed as literal","list"
635311199444266199,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199444276200,"Parsed as literal",""
635311199444276200,"Parsed as literal",""
635311199444286200,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311199444286200,"Parsed as literal"," "
635311199444296201,"Parsed as literal","list"
635311199444296201,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311199444516213,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311199444526214,"Parsed as literal","foldr"
635311199444526214,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311199444536215,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311199444536215,"Parsed as literal","func"
635311199444546215,"Parsed as literal",""
635311199444546215,"Invalid operator","@func","6"
635311199444556216,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311199444556216,"Parsed as literal","func"
635311199444556216,"Parsed as literal",""
635311199444566216,"Invalid operator","@func","6"
635311199444566216,"Parsed as literal","@func"
635311199444576217,"Parsed as literal","list"
635311199444576217,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311199444586217,"Parsed as literal","func"
635311199444586217,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311199444596218,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311199444596218,"Parsed as literal","foldr"
635311199444596218,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311199444606219,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311199444606219,"Parsed as literal","func"
635311199444616219,"Parsed as literal",""
635311199444616219,"Invalid operator","@func","33"
635311199444626220,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311199444636220,"Parsed as literal","func"
635311199444636220,"Parsed as literal",""
635311199444646221,"Invalid operator","@func","33"
635311199444656221,"Parsed as literal","@func"
635311199444656221,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311199444666222,"Parsed as literal","superHead"
635311199444676223,"Parsed as literal","list"
635311199444686223,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311199444686223,"Parsed as literal","last"
635311199444696224,"Parsed as literal","list"
635311199444706224,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311199444706224,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311199444716225,"Parsed as literal","foldr"
635311199444726225,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311199444736226,"Parsed as literal","@func"
635311199444736226,"Parsed as literal","list"
635311199444746227,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311199444756227,"Parsed as literal","func"
635311199444766228,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311199444766228,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311199444776228,"Parsed as literal","foldr"
635311199444786229,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311199444796229,"Parsed as literal","@func"
635311199444796229,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311199444806230,"Parsed as literal","superHead"
635311199444816231,"Parsed as literal","list"
635311199444826231,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311199444826231,"Parsed as literal","last"
635311199444836232,"Parsed as literal","list"
635311199444846232,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311199444856233,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311199444856233,"Parsed as literal","superHead"
635311199444866233,"Parsed as literal","list"
635311199444876234,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311199444876234,"Parsed as literal","reverse"
635311199444886235,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311199444896235,"Parsed as literal",""
635311199444906236,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311199444906236,"Parsed as literal","reverse"
635311199444916236,"Parsed as literal","list"
635311199444926237,"StepEvaluate","->","Changed","Declared @map"
635311199444926237,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311199444936237,"StepEvaluate","->","Changed","Declared @map"
635311199444946238,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311199444946238,"StepEvaluate","->","Changed","Declared @filter"
635311199444956239,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311199444966239,"StepEvaluate","->","Changed","Declared @filter"
635311199444966239,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311199444976240,"StepEvaluate","->","Changed","Declared @filter"
635311199444986240,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311199444986240,"StepEvaluate","->","Changed","Declared @call"
635311199444996241,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311199445006241,"StepEvaluate","->","Changed","Declared @curry"
635311199445006241,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311199445016242,"StepEvaluate","->","Changed","Declared @curry"
635311199445026243,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311199445026243,"StepEvaluate","->","Changed","Declared @fold"
635311199445036243,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311199445046244,"StepEvaluate","->","Changed","Declared @fold"
635311199445046244,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311199445056244,"StepEvaluate","->","Changed","Declared @fold"
635311199445056244,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311199445066245,"StepEvaluate","->","Changed","Declared @foldr"
635311199445076245,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311199445086246,"StepEvaluate","->","Changed","Declared @foldr"
635311199445086246,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311199445096247,"StepEvaluate","->","Changed","Declared @foldr"
635311199445106247,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311199445106247,"StepEvaluate","==","Unchanged","=="
635311199445116248,"StepEvaluate","@","Changed","@"
635311199445126248,"StepEvaluate","@","Changed","@"
635311199445126248,"StepEvaluate","==","Unchanged","=="
635311199445136249,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311199445146249,"StepEvaluate","superHead","Unchanged","superHead"
635311199445146249,"StepEvaluate",",","Unchanged",","
635311199445156250,"StepEvaluate","list","Unchanged","list"
635311199445156250,"StepEvaluate","@","Changed","@"
635311199445166251,"StepEvaluate","==","Unchanged","=="
635311199445176251,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311199445176251,"StepEvaluate","superHead","Unchanged","superHead"
635311199445186252,"StepEvaluate",",","Unchanged",","
635311199445196252,"StepEvaluate","list","Unchanged","list"
635311199445196252,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311199445206253,"StepEvaluate","reverse","Unchanged","reverse"
635311199445206253,"StepEvaluate",",","Unchanged",","
635311199445216253,"StepEvaluate","tail","Unchanged","tail"
635311199445226254,"StepEvaluate","@","Changed","@"
635311199445226254,"StepEvaluate","==","Unchanged","=="
635311199445236255,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311199445236255,"StepEvaluate","superHead","Unchanged","superHead"
635311199445246255,"StepEvaluate",",","Unchanged",","
635311199445246255,"StepEvaluate","list","Unchanged","list"
635311199445256256,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311199445256256,"StepEvaluate","reverse","Unchanged","reverse"
635311199445266256,"StepEvaluate",",","Unchanged",","
635311199445266256,"StepEvaluate","tail","Unchanged","tail"
635311199445276257,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311199445286257,"StepEvaluate","reverse","Unchanged","reverse"
635311199445286257,"StepEvaluate",",","Unchanged",","
635311199445296258,"StepEvaluate","list","Unchanged","list"
635311199445296258,"StepEvaluate","[]","Changed","File imported"
635311199445306259,"StepEvaluate","File imported","Unchanged","File imported"
635311199445306259,"StepEvaluate","@","Changed","@"
635311199445316259,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199445316259,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199445326260,"StepEvaluate",",","Unchanged",","
635311199445336260,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199445336260,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199445346261,"StepEvaluate","PAT@-M","Changed","[]"
635311199445356261,"StepEvaluate","SEL@import","Changed","[]"
635311199445356261,"StepEvaluate","@","Changed","[]"
635311199445366262,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311199445376263,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311199445376263,"Parsed as literal","zipWith"
635311199445386263,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311199445386263,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311199445396264,"Parsed as literal","func"
635311199445406264,"Parsed as literal",""
635311199445406264,"Invalid operator","@func","8"
635311199445416265,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311199445416265,"Parsed as literal","func"
635311199445426265,"Parsed as literal",""
635311199445426265,"Invalid operator","@func","8"
635311199445436266,"Parsed as literal","@func"
635311199445446267,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311199445446267,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199445456267,"Parsed as literal",""
635311199445456267,"Parsed as literal",""
635311199445466268,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311199445476268,"Parsed as literal",""
635311199445476268,"Parsed as literal",""
635311199445486269,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311199445486269,"Parsed as literal",""
635311199445496269,"Parsed as literal",""
635311199445506270,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311199445506270,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311199445516271,"Parsed as literal","zipWith"
635311199445516271,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311199445526271,"Parsed as literal","@func"
635311199445536272,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311199445536272,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199445546272,"Parsed as literal",""
635311199445546272,"Parsed as literal",""
635311199445556273,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311199445556273,"Parsed as literal",""
635311199445566273,"Parsed as literal",""
635311199445576274,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311199445576274,"Parsed as literal",""
635311199445586275,"Parsed as literal",""
635311199445586275,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311199445596275,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311199445606276,"Parsed as literal","zipWith"
635311199445606276,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311199445616276,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311199445626277,"Parsed as literal","func"
635311199445626277,"Parsed as literal",""
635311199445636277,"Invalid operator","@func","8"
635311199445636277,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311199445646278,"Parsed as literal","func"
635311199445646278,"Parsed as literal",""
635311199445656279,"Invalid operator","@func","8"
635311199445656279,"Parsed as literal","@func"
635311199445666279,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311199445676280,"Parsed as literal","list1"
635311199445676280,"Parsed as literal","list2"
635311199445686280,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311199445696281,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311199445696281,"Parsed as literal","func"
635311199445706281,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311199445706281,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311199445716282,"Parsed as literal",""
635311199445716282,"Parsed as literal","list1"
635311199445726283,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311199445736283,"Parsed as literal",""
635311199445736283,"Parsed as literal","list2"
635311199445746284,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311199445746284,"Parsed as literal","zipWith"
635311199445756284,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311199445766285,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311199445766285,"Parsed as literal","func"
635311199445776285,"Parsed as literal",""
635311199445776285,"Invalid operator","@func","64"
635311199445786286,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311199445796287,"Parsed as literal","func"
635311199445796287,"Parsed as literal",""
635311199445806287,"Invalid operator","@func","64"
635311199445806287,"Parsed as literal","@func"
635311199445816288,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311199445816288,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311199445826288,"Parsed as literal",""
635311199445836289,"Parsed as literal","list1"
635311199445836289,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311199445846289,"Parsed as literal",""
635311199445846289,"Parsed as literal","list2"
635311199445856290,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311199445866291,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311199445866291,"Parsed as literal","zipWith"
635311199445876291,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311199445876291,"Parsed as literal","@func"
635311199445886292,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311199445896292,"Parsed as literal","list1"
635311199445896292,"Parsed as literal","list2"
635311199445906293,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311199445916293,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311199445916293,"Parsed as literal","func"
635311199445926294,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311199445936295,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311199445936295,"Parsed as literal",""
635311199445946295,"Parsed as literal","list1"
635311199445946295,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311199445956296,"Parsed as literal",""
635311199445966296,"Parsed as literal","list2"
635311199445966296,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311199445976297,"Parsed as literal","zipWith"
635311199445986297,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311199445986297,"Parsed as literal","@func"
635311199445996298,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311199445996298,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311199446006299,"Parsed as literal",""
635311199446006299,"Parsed as literal","list1"
635311199446016299,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311199446026300,"Parsed as literal",""
635311199446026300,"Parsed as literal","list2"
635311199446036300,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311199446046301,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311199446046301,"Parsed as literal","count"
635311199446056301,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199446056301,"Parsed as literal",""
635311199446066302,"Parsed as literal",""
635311199446066302,"Parsed as literal"," 0"
635311199446076303,"Invalid operator","@count([]) -> 0","0"
635311199446086303,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311199446086303,"Parsed as literal","count"
635311199446096304,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199446096304,"Parsed as literal",""
635311199446106304,"Parsed as literal",""
635311199446116305,"Parsed as literal"," 0"
635311199446116305,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311199446126305,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311199446126305,"Parsed as literal","count"
635311199446136306,"Parsed as literal","list"
635311199446146307,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311199446146307,"Parsed as literal"," 1 "
635311199446156307,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311199446156307,"Parsed as literal","count"
635311199446166308,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199446176308,"Parsed as literal",""
635311199446176308,"Parsed as literal","list"
635311199446186309,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311199446186309,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311199446196309,"Parsed as literal","count"
635311199446196309,"Parsed as literal","list"
635311199446206310,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311199446216311,"Parsed as literal"," 1 "
635311199446216311,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311199446226311,"Parsed as literal","count"
635311199446226311,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199446236312,"Parsed as literal",""
635311199446246312,"Parsed as literal","list"
635311199446246312,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311199446256313,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311199446256313,"Parsed as literal","skip"
635311199446266313,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311199446276314,"Parsed as literal","0"
635311199446276314,"Parsed as literal","list"
635311199446286315,"Parsed as literal"," list"
635311199446286315,"Invalid operator","@skip(0,list) -> list","0"
635311199446296315,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311199446296315,"Parsed as literal","skip"
635311199446306316,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311199446316316,"Parsed as literal","0"
635311199446316316,"Parsed as literal","list"
635311199446326317,"Parsed as literal"," list"
635311199446336317,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311199446336317,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311199446346318,"Parsed as literal","skip"
635311199446346318,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199446356319,"Parsed as literal","n"
635311199446356319,"Parsed as literal","list"
635311199446366319,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311199446376320,"Parsed as literal","skip"
635311199446376320,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311199446386320,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199446386320,"Parsed as literal","n"
635311199446396321,"Parsed as literal","1"
635311199446396321,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199446406321,"Parsed as literal",""
635311199446416322,"Parsed as literal","list"
635311199446416322,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311199446426323,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311199446426323,"Parsed as literal","skip"
635311199446436323,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199446446324,"Parsed as literal","n"
635311199446446324,"Parsed as literal","list"
635311199446456324,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311199446456324,"Parsed as literal","skip"
635311199446466325,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311199446476325,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199446476325,"Parsed as literal","n"
635311199446486326,"Parsed as literal","1"
635311199446486326,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199446496327,"Parsed as literal",""
635311199446496327,"Parsed as literal","list"
635311199446506327,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311199446516328,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311199446516328,"Parsed as literal","take"
635311199446526328,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311199446526328,"Parsed as literal","1"
635311199446536329,"Parsed as literal","list"
635311199446546329,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311199446546329,"Parsed as literal"," "
635311199446556330,"Parsed as literal","list"
635311199446556330,"Invalid operator","@take(1,list) -> h:list","0"
635311199446566331,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311199446576331,"Parsed as literal","take"
635311199446576331,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311199446586332,"Parsed as literal","1"
635311199446586332,"Parsed as literal","list"
635311199446596332,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311199446596332,"Parsed as literal"," "
635311199446606333,"Parsed as literal","list"
635311199446616333,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311199446616333,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311199446626334,"Parsed as literal","take"
635311199446636335,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199446636335,"Parsed as literal","n"
635311199446646335,"Parsed as literal","list"
635311199446646335,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311199446656336,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311199446656336,"Parsed as literal"," "
635311199446666336,"Parsed as literal","list "
635311199446676337,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311199446676337,"Parsed as literal","take"
635311199446686337,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311199446706339,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199446706339,"Parsed as literal","n"
635311199446716339,"Parsed as literal","1"
635311199446726340,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311199446726340,"Parsed as literal",""
635311199446736340,"Parsed as literal","list"
635311199446736340,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311199446746341,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311199446746341,"Parsed as literal","take"
635311199446756341,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311199446756341,"Parsed as literal","n"
635311199446766342,"Parsed as literal","list"
635311199446776343,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311199446776343,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311199446786343,"Parsed as literal"," "
635311199446786343,"Parsed as literal","list "
635311199446796344,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311199446806344,"Parsed as literal","take"
635311199446806344,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311199446816345,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199446816345,"Parsed as literal","n"
635311199446826345,"Parsed as literal","1"
635311199446836346,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311199446836346,"Parsed as literal",""
635311199446846347,"Parsed as literal","list"
635311199446856347,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311199446856347,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311199446866348,"Parsed as literal","nthItem"
635311199446866348,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311199446876348,"Parsed as literal","list"
635311199446876348,"Parsed as literal","0"
635311199446886349,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199446896349,"Parsed as literal",""
635311199446896349,"Parsed as literal",""
635311199446906350,"Invalid operator","@nthItem(list,0) -> []","0"
635311199446906350,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311199446916351,"Parsed as literal","nthItem"
635311199446916351,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311199446926351,"Parsed as literal","list"
635311199446936352,"Parsed as literal","0"
635311199446936352,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311199446946352,"Parsed as literal",""
635311199446946352,"Parsed as literal",""
635311199446956353,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311199446966354,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311199446966354,"Parsed as literal","nthItem"
635311199446976354,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311199446976354,"Parsed as literal","list"
635311199446986355,"Parsed as literal","1"
635311199446996355,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311199446996355,"Parsed as literal"," "
635311199447006356,"Parsed as literal","list"
635311199447006356,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311199447016356,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311199447016356,"Parsed as literal","nthItem"
635311199447026357,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311199447036358,"Parsed as literal","list"
635311199447036358,"Parsed as literal","1"
635311199447046358,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311199447046358,"Parsed as literal"," "
635311199447056359,"Parsed as literal","list"
635311199447066359,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311199447066359,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311199447076360,"Parsed as literal","nthItem"
635311199447076360,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311199447086360,"Parsed as literal","list"
635311199447096361,"Parsed as literal","n"
635311199447096361,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311199447106362,"Parsed as literal","nthItem"
635311199447106362,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311199447116362,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311199447116362,"Parsed as literal",""
635311199447126363,"Parsed as literal","list"
635311199447136363,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311199447136363,"Parsed as literal","n"
635311199447146364,"Parsed as literal","1"
635311199447146364,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311199447156364,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311199447166365,"Parsed as literal","nthItem"
635311199447166365,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311199447176366,"Parsed as literal","list"
635311199447176366,"Parsed as literal","n"
635311199447186366,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311199447196367,"Parsed as literal","nthItem"
635311199447196367,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311199447206367,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311199447206367,"Parsed as literal",""
635311199447216368,"Parsed as literal","list"
635311199447216368,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311199447226368,"Parsed as literal","n"
635311199447236369,"Parsed as literal","1"
635311199447236369,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311199447246370,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311199447246370,"Parsed as literal","makeRange"
635311199447256370,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311199447266371,"Parsed as literal","a"
635311199447266371,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311199447276371,"Parsed as literal","b"
635311199447276371,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311199447286372,"Parsed as literal","a"
635311199447296372,"Parsed as literal","b"
635311199447296372,"Parsed as literal"," a"
635311199447306373,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311199447306373,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311199447316374,"Parsed as literal","makeRange"
635311199447326374,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311199447326374,"Parsed as literal","a"
635311199447336375,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311199447336375,"Parsed as literal","b"
635311199447346375,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311199447346375,"Parsed as literal","a"
635311199447356376,"Parsed as literal","b"
635311199447366376,"Parsed as literal"," a"
635311199447366376,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311199447376377,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311199447386378,"Parsed as literal","makeRange"
635311199447386378,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311199447396378,"Parsed as literal","a"
635311199447396378,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311199447406379,"Parsed as literal","b"
635311199447406379,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311199447416379,"Parsed as literal","a"
635311199447416379,"Parsed as literal","b"
635311199447426380,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311199447436380,"Parsed as literal"," a "
635311199447436380,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311199447446381,"Parsed as literal","makeRange"
635311199447446381,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311199447456382,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311199447466382,"Parsed as literal","a"
635311199447466382,"Parsed as literal","1"
635311199447476383,"Parsed as literal","b"
635311199447476383,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311199447486383,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311199447496384,"Parsed as literal","makeRange"
635311199447496384,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311199447506384,"Parsed as literal","a"
635311199447506384,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311199447516385,"Parsed as literal","b"
635311199447526386,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311199447526386,"Parsed as literal","a"
635311199447536386,"Parsed as literal","b"
635311199447536386,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311199447546387,"Parsed as literal"," a "
635311199447546387,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311199447556387,"Parsed as literal","makeRange"
635311199447566388,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311199447566388,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311199447576388,"Parsed as literal","a"
635311199447576388,"Parsed as literal","1"
635311199447586389,"Parsed as literal","b"
635311199447596390,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311199447596390,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311199447606390,"Parsed as literal","reverse"
635311199447606390,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311199447616391,"Parsed as literal",""
635311199447626391,"Parsed as literal",""
635311199447626391,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311199447636392,"Parsed as literal",""
635311199447636392,"Parsed as literal",""
635311199447646392,"Invalid operator","@reverse([]) -> []","0"
635311199447656393,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311199447656393,"Parsed as literal","reverse"
635311199447666394,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311199447666394,"Parsed as literal",""
635311199447676394,"Parsed as literal",""
635311199447676394,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311199447686395,"Parsed as literal",""
635311199447686395,"Parsed as literal",""
635311199447696395,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311199447706396,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311199447706396,"Parsed as literal","reverse"
635311199447716396,"Parsed as literal","list"
635311199447726397,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311199447726397,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311199447736398,"Parsed as literal","reverse"
635311199447736398,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199447746398,"Parsed as literal",""
635311199447756399,"Parsed as literal","list"
635311199447756399,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311199447766399,"Parsed as literal"," "
635311199447766399,"Parsed as literal","list"
635311199447776400,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311199447786400,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311199447786400,"Parsed as literal","reverse"
635311199447796401,"Parsed as literal","list"
635311199447796401,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311199447806402,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311199447816402,"Parsed as literal","reverse"
635311199447816402,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311199447826403,"Parsed as literal",""
635311199447826403,"Parsed as literal","list"
635311199447836403,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311199447836403,"Parsed as literal"," "
635311199447846404,"Parsed as literal","list"
635311199447856404,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311199447856404,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311199447866405,"Parsed as literal","max"
635311199447876406,"Parsed as literal","list"
635311199447876406,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311199447886406,"Parsed as literal","fold"
635311199447886406,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311199447896407,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311199447906407,"Parsed as literal","max"
635311199447906407,"Parsed as literal",""
635311199447916408,"Invalid operator","@max","19"
635311199447916408,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311199447926408,"Parsed as literal","max"
635311199447926408,"Parsed as literal",""
635311199447936409,"Invalid operator","@max","19"
635311199447946410,"Parsed as literal","@max"
635311199447946410,"Parsed as literal","list"
635311199447956410,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311199447956410,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311199447966411,"Parsed as literal","max"
635311199447966411,"Parsed as literal","list"
635311199447976411,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311199447986412,"Parsed as literal","fold"
635311199447986412,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311199447996412,"Parsed as literal","@max"
635311199447996412,"Parsed as literal","list"
635311199448006413,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311199448016414,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311199448016414,"Parsed as literal","elementAt"
635311199448026414,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311199448026414,"Parsed as literal","0"
635311199448036415,"Parsed as literal","list"
635311199448046415,"Parsed as literal"," 'list"
635311199448046415,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311199448056416,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311199448066416,"Parsed as literal","elementAt"
635311199448066416,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311199448076417,"Parsed as literal","n"
635311199448076417,"Parsed as literal","list"
635311199448086418,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311199448086418,"Parsed as literal","elementAt"
635311199448096418,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311199448106419,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199448106419,"Parsed as literal","n"
635311199448116419,"Parsed as literal","1"
635311199448116419,"Parsed as literal","list'"
635311199448126420,"StepEvaluate","->","Changed","Declared @zipWith"
635311199448136420,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311199448136420,"StepEvaluate","->","Changed","Declared @zipWith"
635311199448146421,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311199448146421,"StepEvaluate","->","Changed","Declared @count"
635311199448156422,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311199448156422,"StepEvaluate","->","Changed","Declared @count"
635311199448166422,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311199448166422,"StepEvaluate","->","Changed","Declared @skip"
635311199448176423,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311199448176423,"StepEvaluate","->","Changed","Declared @skip"
635311199448186423,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311199448186423,"StepEvaluate","->","Changed","Declared @take"
635311199448196424,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311199448206424,"StepEvaluate","->","Changed","Declared @take"
635311199448206424,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311199448216425,"StepEvaluate","->","Changed","Declared @nthItem"
635311199448216425,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311199448226426,"StepEvaluate","->","Changed","Declared @nthItem"
635311199448226426,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311199448236426,"StepEvaluate","->","Changed","Declared @nthItem"
635311199448236426,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311199448246427,"StepEvaluate","->","Changed","Declared @makeRange"
635311199448256427,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311199448256427,"StepEvaluate","->","Changed","Declared @makeRange"
635311199448266428,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311199448266428,"StepEvaluate","->","Changed","Declared @reverse"
635311199448276428,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311199448276428,"StepEvaluate","->","Changed","Declared @reverse"
635311199448286429,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311199448286429,"StepEvaluate","->","Changed","Declared @max"
635311199448296430,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311199448296430,"StepEvaluate","==","Unchanged","=="
635311199448306430,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311199448316431,"StepEvaluate","elementAt","Unchanged","elementAt"
635311199448316431,"StepEvaluate",",","Unchanged",","
635311199448326431,"StepEvaluate","0","Unchanged","0"
635311199448326431,"StepEvaluate",",","Unchanged",","
635311199448336432,"StepEvaluate","list","Unchanged","list"
635311199448336432,"StepEvaluate","'list","Unchanged","'list"
635311199448346432,"StepEvaluate","==","Unchanged","=="
635311199448346432,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311199448356433,"StepEvaluate","elementAt","Unchanged","elementAt"
635311199448356433,"StepEvaluate",",","Unchanged",","
635311199448366434,"StepEvaluate","n","Unchanged","n"
635311199448366434,"StepEvaluate",",","Unchanged",","
635311199448376434,"StepEvaluate","list","Unchanged","list"
635311199448376434,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311199448386435,"StepEvaluate","elementAt","Unchanged","elementAt"
635311199448396435,"StepEvaluate",",","Unchanged",","
635311199448396435,"StepEvaluate","-","Unchanged","-"
635311199448406436,"StepEvaluate","n","Unchanged","n"
635311199448406436,"StepEvaluate","1","Unchanged","1"
635311199448416436,"StepEvaluate",",","Unchanged",","
635311199448416436,"StepEvaluate","list'","Unchanged","list'"
635311199448426437,"StepEvaluate","[]","Changed","File imported"
635311199448426437,"StepEvaluate","File imported","Unchanged","File imported"
635311199448436438,"StepEvaluate","@","Changed","@"
635311199448446438,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199448446438,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199448456439,"StepEvaluate",",","Unchanged",","
635311199448456439,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199448466439,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199448466439,"StepEvaluate","PAT@-M","Changed","[]"
635311199448476440,"StepEvaluate","SEL@import","Changed","[]"
635311199448476440,"StepEvaluate","@","Changed","[]"
635311199448486440,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311199448496441,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311199448496441,"Parsed as literal","naturalNumbers"
635311199448506442,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199448516442,"Parsed as literal",""
635311199448516442,"Parsed as literal",""
635311199448526443,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311199448526443,"Parsed as literal","naturalNumbers"
635311199448536443,"Parsed as literal","0"
635311199448536443,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311199448546444,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311199448556444,"Parsed as literal","naturalNumbers"
635311199448556444,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199448566445,"Parsed as literal",""
635311199448566445,"Parsed as literal",""
635311199448576446,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311199448586446,"Parsed as literal","naturalNumbers"
635311199448586446,"Parsed as literal","0"
635311199448596447,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311199448596447,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311199448606447,"Parsed as literal","naturalNumbers"
635311199448616448,"Parsed as literal","n"
635311199448616448,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311199448626448,"Parsed as literal"," n "
635311199448626448,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311199448636449,"Parsed as literal","naturalNumbers"
635311199448646450,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311199448646450,"Parsed as literal","n"
635311199448656450,"Parsed as literal","1"
635311199448656450,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311199448666451,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311199448676451,"Parsed as literal","naturalNumbers"
635311199448676451,"Parsed as literal","n"
635311199448686452,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311199448686452,"Parsed as literal"," n "
635311199448696452,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311199448696452,"Parsed as literal","naturalNumbers"
635311199448706453,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311199448716454,"Parsed as literal","n"
635311199448716454,"Parsed as literal","1"
635311199448726454,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311199448736455,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311199448736455,"Parsed as literal","max"
635311199448746455,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311199448746455,"Parsed as literal","a"
635311199448756456,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311199448756456,"Parsed as literal","b"
635311199448766456,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311199448776457,"Parsed as literal","a"
635311199448776457,"Parsed as literal","b"
635311199448786458,"Parsed as literal","b"
635311199448796458,"Invalid operator","@max(a,b|a<b)->b","0"
635311199448796458,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311199448806459,"Parsed as literal","max"
635311199448806459,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311199448816459,"Parsed as literal","a"
635311199448816459,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311199448826460,"Parsed as literal","b"
635311199448836460,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311199448836460,"Parsed as literal","a"
635311199448846461,"Parsed as literal","b"
635311199448846461,"Parsed as literal","b"
635311199448856462,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311199448866462,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311199448866462,"Parsed as literal","max"
635311199448876463,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199448876463,"Parsed as literal","a"
635311199448886463,"Parsed as literal","b"
635311199448896464,"Parsed as literal","a"
635311199448896464,"Invalid operator","@max(a,b)->a","0"
635311199448906464,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311199448906464,"Parsed as literal","max"
635311199448916465,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199448926466,"Parsed as literal","a"
635311199448926466,"Parsed as literal","b"
635311199448936466,"Parsed as literal","a"
635311199448936466,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311199448946467,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311199448956467,"Parsed as literal","random"
635311199448956467,"Parsed as literal","0"
635311199448966468,"Parsed as literal"," 0"
635311199448966468,"Invalid operator","@random(0) -> 0","0"
635311199448976468,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311199448986469,"Parsed as literal","random"
635311199448986469,"Parsed as literal","0"
635311199448996470,"Parsed as literal"," 0"
635311199448996470,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311199449006470,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311199449016471,"Parsed as literal","random"
635311199449016471,"Parsed as literal","n"
635311199449026471,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311199449056473,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311199449066474,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311199449066474,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311199449076474,"Parsed as literal","1664525 "
635311199449086475,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311199449086475,"Parsed as literal","random"
635311199449096475,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199449096475,"Parsed as literal","n"
635311199449106476,"Parsed as literal","1"
635311199449116476,"Parsed as literal"," 1013904223"
635311199449116476,"Parsed as literal",""
635311199449126477,"Parsed as literal"," 4294967296"
635311199449126477,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311199449136478,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311199449146478,"Parsed as literal","random"
635311199449146478,"Parsed as literal","n"
635311199449156479,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311199449156479,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311199449166479,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311199449176480,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311199449176480,"Parsed as literal","1664525 "
635311199449186480,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311199449186480,"Parsed as literal","random"
635311199449196481,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311199449206482,"Parsed as literal","n"
635311199449206482,"Parsed as literal","1"
635311199449216482,"Parsed as literal"," 1013904223"
635311199449216482,"Parsed as literal",""
635311199449226483,"Parsed as literal"," 4294967296"
635311199449236483,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311199449236483,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311199449246484,"Parsed as literal","gcd"
635311199449246484,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311199449256484,"Parsed as literal","a"
635311199449266485,"Parsed as literal","0"
635311199449266485,"Parsed as literal"," a"
635311199449276486,"Invalid operator","@gcd(a,0) -> a","0"
635311199449276486,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311199449286486,"Parsed as literal","gcd"
635311199449296487,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311199449296487,"Parsed as literal","a"
635311199449306487,"Parsed as literal","0"
635311199449306487,"Parsed as literal"," a"
635311199449316488,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311199449326488,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311199449326488,"Parsed as literal","gcd"
635311199449336489,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199449336489,"Parsed as literal","a"
635311199449346490,"Parsed as literal","b"
635311199449356490,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311199449356490,"Parsed as literal","gcd"
635311199449366491,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311199449366491,"Parsed as literal","b"
635311199449376491,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311199449386492,"Parsed as literal","a "
635311199449386492,"Parsed as literal"," b"
635311199449396492,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311199449396492,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311199449406493,"Parsed as literal","gcd"
635311199449406493,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311199449416494,"Parsed as literal","a"
635311199449426494,"Parsed as literal","b"
635311199449426494,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311199449436495,"Parsed as literal","gcd"
635311199449446495,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311199449446495,"Parsed as literal","b"
635311199449456496,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311199449456496,"Parsed as literal","a "
635311199449466497,"Parsed as literal"," b"
635311199449476497,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311199449476497,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311199449486498,"Parsed as literal","gcd"
635311199449486498,"Parsed as literal","list"
635311199449496498,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311199449506499,"Parsed as literal","fold"
635311199449506499,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311199449516499,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311199449516499,"Parsed as literal","gcd"
635311199449526500,"Parsed as literal",""
635311199449526500,"Invalid operator","@gcd","19"
635311199449536501,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311199449546501,"Parsed as literal","gcd"
635311199449546501,"Parsed as literal",""
635311199449556502,"Invalid operator","@gcd","19"
635311199449556502,"Parsed as literal","@gcd"
635311199449566502,"Parsed as literal","list"
635311199449576503,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311199449576503,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311199449586503,"Parsed as literal","gcd"
635311199449586503,"Parsed as literal","list"
635311199449596504,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311199449596504,"Parsed as literal","fold"
635311199449606505,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311199449616505,"Parsed as literal","@gcd"
635311199449616505,"Parsed as literal","list"
635311199449626506,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311199449636506,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311199449636506,"Parsed as literal","fib"
635311199449646507,"Parsed as literal","0"
635311199449646507,"Parsed as literal"," 1"
635311199449656507,"Invalid operator","@fib(0) -> 1","0"
635311199449666508,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311199449666508,"Parsed as literal","fib"
635311199449676509,"Parsed as literal","0"
635311199449676509,"Parsed as literal"," 1"
635311199449686509,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311199449696510,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311199449696510,"Parsed as literal","fib"
635311199449706510,"Parsed as literal","1"
635311199449706510,"Parsed as literal"," 1"
635311199449716511,"Invalid operator","@fib(1) -> 1","0"
635311199449716511,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311199449726511,"Parsed as literal","fib"
635311199449736512,"Parsed as literal","1"
635311199449736512,"Parsed as literal"," 1"
635311199449746513,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311199449756513,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311199449756513,"Parsed as literal","fib"
635311199449766514,"Parsed as literal","n"
635311199449766514,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311199449776514,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311199449786515,"Parsed as literal","fib"
635311199449786515,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311199449796515,"Parsed as literal","n"
635311199449796515,"Parsed as literal","2"
635311199449806516,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311199449816517,"Parsed as literal","fib"
635311199449816517,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199449826517,"Parsed as literal","n"
635311199449826517,"Parsed as literal","1"
635311199449836518,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311199449836518,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311199449846518,"Parsed as literal","fib"
635311199449856519,"Parsed as literal","n"
635311199449866519,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311199449866519,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311199449876520,"Parsed as literal","fib"
635311199449876520,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311199449886521,"Parsed as literal","n"
635311199449886521,"Parsed as literal","2"
635311199449896521,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311199449906522,"Parsed as literal","fib"
635311199449906522,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199449916522,"Parsed as literal","n"
635311199449916522,"Parsed as literal","1"
635311199449926523,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199449936523,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311199449946524,"Parsed as literal","fib2"
635311199449946524,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311199449956525,"Parsed as literal",""
635311199449956525,"Parsed as literal",""
635311199449966525,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199449976526,"Parsed as literal"," 0 "
635311199449976526,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199449986526,"Parsed as literal"," 1 "
635311199449996527,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311199449996527,"Parsed as literal","zipWith"
635311199450006527,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311199450006527,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311199450016528,"Parsed as literal",""
635311199450026529,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199450026529,"Parsed as literal","a"
635311199450036529,"Parsed as literal","b"
635311199450046530,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311199450046530,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199450056530,"Parsed as literal","a"
635311199450056530,"Parsed as literal","b"
635311199450066531,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199450066531,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199450076531,"Parsed as literal","fib2"
635311199450086532,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199450086532,"Parsed as literal",""
635311199450096533,"Parsed as literal",""
635311199450096533,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199450106533,"Parsed as literal"," "
635311199450106533,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199450116534,"Parsed as literal","fib2"
635311199450126534,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199450126534,"Parsed as literal",""
635311199450136535,"Parsed as literal",""
635311199450136535,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311199450146535,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311199450156536,"Parsed as literal",""
635311199450156536,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199450166537,"Parsed as literal","a"
635311199450166537,"Parsed as literal","b"
635311199450176537,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311199450186538,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199450186538,"Parsed as literal","a"
635311199450196538,"Parsed as literal","b"
635311199450196538,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199450206539,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199450216539,"Parsed as literal","fib2"
635311199450216539,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199450226540,"Parsed as literal",""
635311199450226540,"Parsed as literal",""
635311199450236541,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199450246541,"Parsed as literal"," "
635311199450246541,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199450256542,"Parsed as literal","fib2"
635311199450266542,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199450266542,"Parsed as literal",""
635311199450276543,"Parsed as literal",""
635311199450276543,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311199450286543,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311199450296544,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311199450296544,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311199450306545,"Parsed as literal",""
635311199450306545,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199450316545,"Parsed as literal","a"
635311199450326546,"Parsed as literal","b"
635311199450326546,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199450336546,"Parsed as literal","a"
635311199450336546,"Parsed as literal","b"
635311199450346547,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199450356547,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199450356547,"Parsed as literal","fib2"
635311199450366548,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199450366548,"Parsed as literal",""
635311199450376549,"Parsed as literal",""
635311199450386549,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199450386549,"Parsed as literal"," "
635311199450396550,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199450396550,"Parsed as literal","fib2"
635311199450406550,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199450406550,"Parsed as literal",""
635311199450416551,"Parsed as literal",""
635311199450426551,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311199450426551,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311199450436552,"Parsed as literal","fib2"
635311199450436552,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311199450446553,"Parsed as literal",""
635311199450456553,"Parsed as literal",""
635311199450456553,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199450466554,"Parsed as literal"," 0 "
635311199450476554,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311199450476554,"Parsed as literal"," 1 "
635311199450486555,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311199450486555,"Parsed as literal","zipWith"
635311199450496555,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311199450506556,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311199450506556,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311199450516557,"Parsed as literal",""
635311199450526557,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311199450526557,"Parsed as literal","a"
635311199450536558,"Parsed as literal","b"
635311199450536558,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311199450546558,"Parsed as literal","a"
635311199450546558,"Parsed as literal","b"
635311199450556559,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311199450566559,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311199450566559,"Parsed as literal","fib2"
635311199450576560,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311199450576560,"Parsed as literal",""
635311199450586561,"Parsed as literal",""
635311199450596561,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311199450606562,"Parsed as literal"," "
635311199450606562,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311199450616562,"Parsed as literal","fib2"
635311199450626563,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311199450626563,"Parsed as literal",""
635311199450636563,"Parsed as literal",""
635311199450646564,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311199450646564,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311199450656565,"Parsed as literal","fib2"
635311199450666565,"Parsed as literal","n"
635311199450666565,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311199450676566,"Parsed as literal","take"
635311199450676566,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311199450686566,"Parsed as literal","n"
635311199450696567,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311199450696567,"Parsed as literal","fib2"
635311199450706567,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199450706567,"Parsed as literal",""
635311199450716568,"Parsed as literal",""
635311199450726569,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311199450726569,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311199450736569,"Parsed as literal","fib2"
635311199450736569,"Parsed as literal","n"
635311199450746570,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311199450756570,"Parsed as literal","take"
635311199450756570,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311199450766571,"Parsed as literal","n"
635311199450766571,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311199450776571,"Parsed as literal","fib2"
635311199450776571,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311199450786572,"Parsed as literal",""
635311199450796573,"Parsed as literal",""
635311199450796573,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311199450806573,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311199450816574,"Parsed as literal","fac"
635311199450816574,"Parsed as literal","0"
635311199450826574,"Parsed as literal"," 1"
635311199450826574,"Invalid operator","@fac(0) -> 1","0"
635311199450836575,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311199450836575,"Parsed as literal","fac"
635311199450846575,"Parsed as literal","0"
635311199450856576,"Parsed as literal"," 1"
635311199450856576,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311199450866577,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311199450876577,"Parsed as literal","fac"
635311199450876577,"Parsed as literal","n"
635311199450886578,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311199450886578,"Parsed as literal"," n "
635311199450896578,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311199450896578,"Parsed as literal","fac"
635311199450916579,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311199450926580,"Parsed as literal","n"
635311199450936581,"Parsed as literal","1"
635311199450936581,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311199450946581,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311199450946581,"Parsed as literal","fac"
635311199450956582,"Parsed as literal","n"
635311199450966582,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311199450966582,"Parsed as literal"," n "
635311199450976583,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311199450976583,"Parsed as literal","fac"
635311199450986583,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311199450986583,"Parsed as literal","n"
635311199450996584,"Parsed as literal","1"
635311199451006585,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311199451016585,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311199451016585,"Parsed as literal","pow"
635311199451026586,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311199451026586,"Parsed as literal","num"
635311199451036586,"Parsed as literal","0"
635311199451036586,"Parsed as literal"," 1"
635311199451046587,"Invalid operator","@pow(num,0) -> 1","0"
635311199451056587,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311199451056587,"Parsed as literal","pow"
635311199451066588,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311199451066588,"Parsed as literal","num"
635311199451076589,"Parsed as literal","0"
635311199451086589,"Parsed as literal"," 1"
635311199451086589,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311199451096590,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311199451096590,"Parsed as literal","pow"
635311199451106590,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311199451116591,"Parsed as literal","num"
635311199451116591,"Parsed as literal","1"
635311199451126591,"Parsed as literal"," num"
635311199451126591,"Invalid operator","@pow(num,1) -> num","0"
635311199451136592,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311199451146593,"Parsed as literal","pow"
635311199451146593,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311199451156593,"Parsed as literal","num"
635311199451156593,"Parsed as literal","1"
635311199451166594,"Parsed as literal"," num"
635311199451176594,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311199451176594,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311199451186595,"Parsed as literal","pow"
635311199451186595,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311199451196595,"Parsed as literal","num"
635311199451206596,"Parsed as literal"," power"
635311199451206596,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311199451216597,"Parsed as literal"," num "
635311199451216597,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311199451226597,"Parsed as literal","pow"
635311199451236598,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311199451236598,"Parsed as literal","num"
635311199451246598,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311199451246598,"Parsed as literal","power"
635311199451256599,"Parsed as literal","1"
635311199451266599,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311199451266599,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311199451276600,"Parsed as literal","pow"
635311199451276600,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311199451286601,"Parsed as literal","num"
635311199451296601,"Parsed as literal"," power"
635311199451296601,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311199451306602,"Parsed as literal"," num "
635311199451306602,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311199451316602,"Parsed as literal","pow"
635311199451326603,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311199451326603,"Parsed as literal","num"
635311199451336603,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311199451336603,"Parsed as literal","power"
635311199451346604,"Parsed as literal","1"
635311199451356605,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311199451356605,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311199451366605,"Parsed as literal","upArrow"
635311199451376606,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311199451376606,"Parsed as literal","a"
635311199451386606,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311199451386606,"Parsed as literal","b"
635311199451396607,"Parsed as literal","1"
635311199451396607,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311199451406607,"Parsed as literal","pow"
635311199451416608,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311199451416608,"Parsed as literal","a"
635311199451426609,"Parsed as literal","b"
635311199451426609,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311199451436609,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311199451446610,"Parsed as literal","upArrow"
635311199451446610,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311199451456610,"Parsed as literal","a"
635311199451456610,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311199451466611,"Parsed as literal","b"
635311199451466611,"Parsed as literal","1"
635311199451476611,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311199451486612,"Parsed as literal","pow"
635311199451486612,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311199451496613,"Parsed as literal","a"
635311199451496613,"Parsed as literal","b"
635311199451506613,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311199451516614,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311199451516614,"Parsed as literal","upArrow"
635311199451526614,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311199451536615,"Parsed as literal","a"
635311199451536615,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311199451546615,"Parsed as literal","1"
635311199451546615,"Parsed as literal","n"
635311199451556616,"Parsed as literal"," a"
635311199451566617,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311199451566617,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311199451576617,"Parsed as literal","upArrow"
635311199451576617,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311199451586618,"Parsed as literal","a"
635311199451586618,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311199451596618,"Parsed as literal","1"
635311199451606619,"Parsed as literal","n"
635311199451606619,"Parsed as literal"," a"
635311199451616619,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311199451626620,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311199451626620,"Parsed as literal","upArrow"
635311199451636621,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311199451636621,"Parsed as literal","a"
635311199451646621,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311199451656622,"Parsed as literal","b"
635311199451656622,"Parsed as literal","n"
635311199451666622,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311199451666622,"Parsed as literal","upArrow"
635311199451676623,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311199451686623,"Parsed as literal","a"
635311199451686623,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311199451696624,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311199451696624,"Parsed as literal","upArrow"
635311199451706625,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311199451706625,"Parsed as literal","a"
635311199451716625,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311199451726626,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311199451726626,"Parsed as literal","b"
635311199451736626,"Parsed as literal","1"
635311199451736626,"Parsed as literal","n"
635311199451746627,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311199451756627,"Parsed as literal","n"
635311199451756627,"Parsed as literal","1"
635311199451766628,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311199451776629,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311199451776629,"Parsed as literal","upArrow"
635311199451786629,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311199451786629,"Parsed as literal","a"
635311199451796630,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311199451796630,"Parsed as literal","b"
635311199451806630,"Parsed as literal","n"
635311199451816631,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311199451816631,"Parsed as literal","upArrow"
635311199451826631,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311199451826631,"Parsed as literal","a"
635311199451836632,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311199451846633,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311199451846633,"Parsed as literal","upArrow"
635311199451856633,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311199451866634,"Parsed as literal","a"
635311199451866634,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311199451876634,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311199451876634,"Parsed as literal","b"
635311199451886635,"Parsed as literal","1"
635311199451896635,"Parsed as literal","n"
635311199451906636,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311199451906636,"Parsed as literal","n"
635311199451916637,"Parsed as literal","1"
635311199451926637,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311199451926637,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311199451936638,"Parsed as literal","graham"
635311199451946638,"Parsed as literal","0"
635311199451946638,"Parsed as literal"," 4"
635311199451956639,"Invalid operator","@graham(0) -> 4","0"
635311199451966640,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311199451976640,"Parsed as literal","graham"
635311199451976640,"Parsed as literal","0"
635311199451986641,"Parsed as literal"," 4"
635311199451996641,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311199451996641,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311199452006642,"Parsed as literal","graham"
635311199452016642,"Parsed as literal","n"
635311199452026643,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311199452026643,"Parsed as literal","upArrow"
635311199452036644,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311199452046644,"Parsed as literal","3"
635311199452046644,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311199452056645,"Parsed as literal","3"
635311199452056645,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311199452066645,"Parsed as literal","graham"
635311199452076646,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311199452086646,"Parsed as literal","n"
635311199452086646,"Parsed as literal","1"
635311199452096647,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311199452106648,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311199452106648,"Parsed as literal","graham"
635311199452116648,"Parsed as literal","n"
635311199452116648,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311199452116648,"Parsed as literal","upArrow"
635311199452126649,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311199452126649,"Parsed as literal","3"
635311199452126649,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311199452136649,"Parsed as literal","3"
635311199452136649,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311199452136649,"Parsed as literal","graham"
635311199452136649,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311199452146650,"Parsed as literal","n"
635311199452146650,"Parsed as literal","1"
635311199452146650,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311199452156650,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311199452156650,"Parsed as literal","grahamsNumber"
635311199452166651,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199452166651,"Parsed as literal",""
635311199452166651,"Parsed as literal",""
635311199452166651,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311199452176652,"Parsed as literal","graham"
635311199452176652,"Parsed as literal","64"
635311199452176652,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311199452186652,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311199452186652,"Parsed as literal","grahamsNumber"
635311199452186652,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199452196653,"Parsed as literal",""
635311199452196653,"Parsed as literal",""
635311199452196653,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311199452196653,"Parsed as literal","graham"
635311199452206653,"Parsed as literal","64"
635311199452206653,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311199452206653,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311199452216654,"Parsed as literal","ack"
635311199452216654,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311199452216654,"Parsed as literal","0"
635311199452226654,"Parsed as literal","n"
635311199452226654,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311199452226654,"Parsed as literal"," n "
635311199452226654,"Parsed as literal"," 1"
635311199452236655,"Invalid operator","@ack(0,n) -> n + 1","0"
635311199452246656,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311199452246656,"Parsed as literal","ack"
635311199452246656,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311199452246656,"Parsed as literal","0"
635311199452256656,"Parsed as literal","n"
635311199452256656,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311199452256656,"Parsed as literal"," n "
635311199452266657,"Parsed as literal"," 1"
635311199452266657,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311199452266657,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311199452266657,"Parsed as literal","ack"
635311199452276657,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311199452276657,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311199452276657,"Parsed as literal","m"
635311199452286658,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311199452286658,"Parsed as literal","m"
635311199452286658,"Parsed as literal","0"
635311199452296658,"Parsed as literal","0"
635311199452296658,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311199452296658,"Parsed as literal","ack"
635311199452296658,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311199452306659,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311199452306659,"Parsed as literal","m"
635311199452306659,"Parsed as literal","1"
635311199452316660,"Parsed as literal","1"
635311199452316660,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311199452316660,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311199452326660,"Parsed as literal","ack"
635311199452326660,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311199452326660,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311199452326660,"Parsed as literal","m"
635311199452336661,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311199452336661,"Parsed as literal","m"
635311199452336661,"Parsed as literal","0"
635311199452336661,"Parsed as literal","0"
635311199452346661,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311199452346661,"Parsed as literal","ack"
635311199452346661,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311199452356662,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311199452356662,"Parsed as literal","m"
635311199452356662,"Parsed as literal","1"
635311199452366662,"Parsed as literal","1"
635311199452366662,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311199452366662,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311199452366662,"Parsed as literal","ack"
635311199452376663,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311199452376663,"Parsed as literal","m"
635311199452376663,"Parsed as literal","n"
635311199452386664,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311199452386664,"Parsed as literal","ack"
635311199452386664,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311199452386664,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311199452396664,"Parsed as literal","m"
635311199452396664,"Parsed as literal","1"
635311199452396664,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311199452406665,"Parsed as literal","ack"
635311199452406665,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311199452406665,"Parsed as literal","m"
635311199452406665,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199452416665,"Parsed as literal","n"
635311199452416665,"Parsed as literal","1"
635311199452416665,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311199452426666,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311199452426666,"Parsed as literal","ack"
635311199452426666,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311199452436666,"Parsed as literal","m"
635311199452436666,"Parsed as literal","n"
635311199452436666,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311199452436666,"Parsed as literal","ack"
635311199452446667,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311199452446667,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311199452446667,"Parsed as literal","m"
635311199452456668,"Parsed as literal","1"
635311199452456668,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311199452456668,"Parsed as literal","ack"
635311199452456668,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311199452466668,"Parsed as literal","m"
635311199452466668,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311199452466668,"Parsed as literal","n"
635311199452466668,"Parsed as literal","1"
635311199452476669,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311199452476669,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311199452486669,"Parsed as literal","acker"
635311199452486669,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311199452486669,"Parsed as literal","m"
635311199452486669,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311199452496670,"Parsed as literal","n"
635311199452496670,"Parsed as literal","0"
635311199452496670,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311199452506670,"Parsed as literal"," m"
635311199452506670,"Parsed as literal","n"
635311199452506670,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311199452506670,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311199452516671,"Parsed as literal","acker"
635311199452516671,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311199452516671,"Parsed as literal","m"
635311199452516671,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311199452526672,"Parsed as literal","n"
635311199452526672,"Parsed as literal","0"
635311199452526672,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311199452536672,"Parsed as literal"," m"
635311199452546673,"Parsed as literal","n"
635311199452546673,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311199452546673,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311199452556673,"Parsed as literal","acker"
635311199452556673,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311199452556673,"Parsed as literal","m"
635311199452556673,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311199452566674,"Parsed as literal","0"
635311199452566674,"Parsed as literal","1"
635311199452566674,"Parsed as literal"," 0"
635311199452576674,"Invalid operator","@acker(m,0,1) -> 0","0"
635311199452576674,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311199452576674,"Parsed as literal","acker"
635311199452576674,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311199452586675,"Parsed as literal","m"
635311199452586675,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311199452586675,"Parsed as literal","0"
635311199452596676,"Parsed as literal","1"
635311199452596676,"Parsed as literal"," 0"
635311199452596676,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311199452606676,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311199452606676,"Parsed as literal","acker"
635311199452606676,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311199452606676,"Parsed as literal","m"
635311199452616677,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311199452616677,"Parsed as literal","0"
635311199452616677,"Parsed as literal","2"
635311199452626677,"Parsed as literal"," 1"
635311199452626677,"Invalid operator","@acker(m,0,2) -> 1","0"
635311199452626677,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311199452626677,"Parsed as literal","acker"
635311199452636678,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311199452636678,"Parsed as literal","m"
635311199452636678,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311199452646678,"Parsed as literal","0"
635311199452646678,"Parsed as literal","2"
635311199452646678,"Parsed as literal"," 1"
635311199452646678,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311199452656679,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311199452656679,"Parsed as literal","acker"
635311199452656679,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311199452666680,"Parsed as literal","m"
635311199452666680,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311199452666680,"Parsed as literal","0"
635311199452666680,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311199452676680,"Parsed as literal","p"
635311199452676680,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311199452676680,"Parsed as literal","p"
635311199452686681,"Parsed as literal","2"
635311199452686681,"Parsed as literal"," m"
635311199452686681,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311199452686681,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311199452696681,"Parsed as literal","acker"
635311199452696681,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311199452696681,"Parsed as literal","m"
635311199452706682,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311199452706682,"Parsed as literal","0"
635311199452706682,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311199452706682,"Parsed as literal","p"
635311199452716682,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311199452716682,"Parsed as literal","p"
635311199452716682,"Parsed as literal","2"
635311199452726683,"Parsed as literal"," m"
635311199452726683,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311199452726683,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311199452736684,"Parsed as literal","acker"
635311199452736684,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311199452736684,"Parsed as literal","m"
635311199452746684,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311199452746684,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311199452746684,"Parsed as literal","n"
635311199452746684,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311199452756685,"Parsed as literal","n"
635311199452756685,"Parsed as literal","0"
635311199452756685,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311199452756685,"Parsed as literal","p"
635311199452766685,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311199452766685,"Parsed as literal","p"
635311199452766685,"Parsed as literal","0"
635311199452776686,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311199452776686,"Parsed as literal","acker"
635311199452776686,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311199452786686,"Parsed as literal","m"
635311199452786686,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311199452786686,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311199452796687,"Parsed as literal","acker"
635311199452796687,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311199452796687,"Parsed as literal","m"
635311199452796687,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311199452806688,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311199452806688,"Parsed as literal","n"
635311199452806688,"Parsed as literal","1"
635311199452806688,"Parsed as literal","p"
635311199452816688,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311199452816688,"Parsed as literal","p"
635311199452816688,"Parsed as literal","1"
635311199452826689,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311199452826689,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311199452826689,"Parsed as literal","acker"
635311199452836689,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311199452836689,"Parsed as literal","m"
635311199452836689,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311199452836689,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311199452846690,"Parsed as literal","n"
635311199452846690,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311199452846690,"Parsed as literal","n"
635311199452846690,"Parsed as literal","0"
635311199452856690,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311199452856690,"Parsed as literal","p"
635311199452856690,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311199452866691,"Parsed as literal","p"
635311199452866691,"Parsed as literal","0"
635311199452866691,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311199452876692,"Parsed as literal","acker"
635311199452876692,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311199452876692,"Parsed as literal","m"
635311199452876692,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311199452886692,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311199452886692,"Parsed as literal","acker"
635311199452886692,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311199452896693,"Parsed as literal","m"
635311199452896693,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311199452896693,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311199452896693,"Parsed as literal","n"
635311199452906693,"Parsed as literal","1"
635311199452906693,"Parsed as literal","p"
635311199452906693,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311199452916694,"Parsed as literal","p"
635311199452916694,"Parsed as literal","1"
635311199452916694,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311199452926694,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311199452926694,"Parsed as literal","hyper"
635311199452926694,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311199452926694,"Parsed as literal","0"
635311199452936695,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199452936695,"Parsed as literal","a"
635311199452936695,"Parsed as literal","b"
635311199452946696,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311199452946696,"Parsed as literal"," b"
635311199452946696,"Parsed as literal","1"
635311199452946696,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311199452956696,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311199452956696,"Parsed as literal","hyper"
635311199452956696,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311199452966697,"Parsed as literal","0"
635311199452966697,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199452966697,"Parsed as literal","a"
635311199452966697,"Parsed as literal","b"
635311199452976697,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311199452976697,"Parsed as literal"," b"
635311199452976697,"Parsed as literal","1"
635311199452986698,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311199452986698,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311199452986698,"Parsed as literal","hyper"
635311199452986698,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311199452996698,"Parsed as literal","1"
635311199452996698,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199452996698,"Parsed as literal","a"
635311199453006699,"Parsed as literal","0"
635311199453006699,"Parsed as literal"," a"
635311199453006699,"Invalid operator","@hyper(1,a,0) -> a","0"
635311199453016700,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311199453016700,"Parsed as literal","hyper"
635311199453016700,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311199453016700,"Parsed as literal","1"
635311199453026700,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199453026700,"Parsed as literal","a"
635311199453026700,"Parsed as literal","0"
635311199453036701,"Parsed as literal"," a"
635311199453036701,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311199453036701,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311199453036701,"Parsed as literal","hyper"
635311199453046701,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311199453046701,"Parsed as literal","2"
635311199453046701,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199453046701,"Parsed as literal","a"
635311199453056702,"Parsed as literal","0"
635311199453056702,"Parsed as literal"," 0"
635311199453056702,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311199453066702,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311199453066702,"Parsed as literal","hyper"
635311199453066702,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311199453076703,"Parsed as literal","2"
635311199453076703,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311199453076703,"Parsed as literal","a"
635311199453076703,"Parsed as literal","0"
635311199453086704,"Parsed as literal"," 0"
635311199453086704,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311199453086704,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311199453096704,"Parsed as literal","hyper"
635311199453096704,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311199453096704,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311199453096704,"Parsed as literal","n"
635311199453106705,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311199453106705,"Parsed as literal","n"
635311199453106705,"Parsed as literal","2"
635311199453116705,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311199453116705,"Parsed as literal","a"
635311199453116705,"Parsed as literal","0"
635311199453116705,"Parsed as literal"," 1"
635311199453126706,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311199453126706,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311199453136706,"Parsed as literal","hyper"
635311199453136706,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311199453136706,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311199453146707,"Parsed as literal","n"
635311199453146707,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311199453146707,"Parsed as literal","n"
635311199453146707,"Parsed as literal","2"
635311199453156708,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311199453156708,"Parsed as literal","a"
635311199453156708,"Parsed as literal","0"
635311199453156708,"Parsed as literal"," 1"
635311199453166708,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311199453166708,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311199453166708,"Parsed as literal","hyper"
635311199453176709,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311199453176709,"Parsed as literal","n"
635311199453176709,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199453186709,"Parsed as literal","a"
635311199453186709,"Parsed as literal","b"
635311199453186709,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311199453196710,"Parsed as literal","hyper"
635311199453196710,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311199453196710,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311199453196710,"Parsed as literal","n"
635311199453206710,"Parsed as literal","1"
635311199453206710,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311199453206710,"Parsed as literal","a"
635311199453216711,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311199453216711,"Parsed as literal","hyper"
635311199453216711,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311199453216711,"Parsed as literal","n"
635311199453226712,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311199453226712,"Parsed as literal","a"
635311199453226712,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311199453226712,"Parsed as literal","b"
635311199453236712,"Parsed as literal","1"
635311199453236712,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311199453236712,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311199453246713,"Parsed as literal","hyper"
635311199453246713,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311199453246713,"Parsed as literal","n"
635311199453256713,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311199453256713,"Parsed as literal","a"
635311199453256713,"Parsed as literal","b"
635311199453256713,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311199453266714,"Parsed as literal","hyper"
635311199453266714,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311199453266714,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311199453276714,"Parsed as literal","n"
635311199453276714,"Parsed as literal","1"
635311199453276714,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311199453276714,"Parsed as literal","a"
635311199453286715,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311199453286715,"Parsed as literal","hyper"
635311199453286715,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311199453296716,"Parsed as literal","n"
635311199453296716,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311199453296716,"Parsed as literal","a"
635311199453296716,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311199453306716,"Parsed as literal","b"
635311199453306716,"Parsed as literal","1"
635311199453316717,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311199453316717,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311199453316717,"Parsed as literal","sudan"
635311199453316717,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311199453326717,"Parsed as literal","0"
635311199453326717,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199453326717,"Parsed as literal","x"
635311199453326717,"Parsed as literal","y"
635311199453336718,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311199453336718,"Parsed as literal"," x "
635311199453336718,"Parsed as literal"," y"
635311199453346718,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311199453346718,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311199453346718,"Parsed as literal","sudan"
635311199453346718,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311199453356719,"Parsed as literal","0"
635311199453356719,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199453356719,"Parsed as literal","x"
635311199453366720,"Parsed as literal","y"
635311199453366720,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311199453366720,"Parsed as literal"," x "
635311199453376720,"Parsed as literal"," y"
635311199453376720,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311199453376720,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311199453376720,"Parsed as literal","sudan"
635311199453386721,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311199453386721,"Parsed as literal","n"
635311199453386721,"Parsed as literal","0"
635311199453396721,"Parsed as literal"," x"
635311199453396721,"Invalid operator","@sudan(n,0) -> x","0"
635311199453396721,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311199453396721,"Parsed as literal","sudan"
635311199453406722,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311199453406722,"Parsed as literal","n"
635311199453406722,"Parsed as literal","0"
635311199453416722,"Parsed as literal"," x"
635311199453416722,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311199453416722,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311199453426723,"Parsed as literal","sudan"
635311199453426723,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311199453426723,"Parsed as literal","n"
635311199453426723,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199453436724,"Parsed as literal","x"
635311199453436724,"Parsed as literal","y"
635311199453436724,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199453446724,"Parsed as literal","sudan"
635311199453446724,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199453446724,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199453456725,"Parsed as literal","n"
635311199453456725,"Parsed as literal","1"
635311199453456725,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311199453466725,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311199453466725,"Parsed as literal","sudan"
635311199453466725,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311199453466725,"Parsed as literal","n"
635311199453476726,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311199453476726,"Parsed as literal","x"
635311199453476726,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311199453486726,"Parsed as literal","y"
635311199453486726,"Parsed as literal","1"
635311199453486726,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311199453496727,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311199453496727,"Parsed as literal","sudan"
635311199453496727,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311199453496727,"Parsed as literal","n"
635311199453506728,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311199453506728,"Parsed as literal","x"
635311199453506728,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311199453506728,"Parsed as literal","y"
635311199453516728,"Parsed as literal","1"
635311199453516728,"Parsed as literal","y"
635311199453526729,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311199453526729,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311199453536729,"Parsed as literal","sudan"
635311199453536729,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311199453536729,"Parsed as literal","n"
635311199453546730,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311199453546730,"Parsed as literal","x"
635311199453546730,"Parsed as literal","y"
635311199453556730,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199453556730,"Parsed as literal","sudan"
635311199453556730,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311199453556730,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311199453566731,"Parsed as literal","n"
635311199453566731,"Parsed as literal","1"
635311199453566731,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311199453576732,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311199453576732,"Parsed as literal","sudan"
635311199453576732,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311199453576732,"Parsed as literal","n"
635311199453586732,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311199453586732,"Parsed as literal","x"
635311199453586732,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311199453596733,"Parsed as literal","y"
635311199453596733,"Parsed as literal","1"
635311199453596733,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311199453606733,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311199453606733,"Parsed as literal","sudan"
635311199453606733,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311199453606733,"Parsed as literal","n"
635311199453616734,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311199453616734,"Parsed as literal","x"
635311199453616734,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311199453616734,"Parsed as literal","y"
635311199453626734,"Parsed as literal","1"
635311199453626734,"Parsed as literal","y"
635311199453626734,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311199453636735,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311199453636735,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311199453636735,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311199453646736,"StepEvaluate","->","Changed","Declared @max"
635311199453646736,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311199453646736,"StepEvaluate","->","Changed","Declared @max"
635311199453646736,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311199453656736,"StepEvaluate","->","Changed","Declared @random"
635311199453656736,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311199453656736,"StepEvaluate","->","Changed","Declared @random"
635311199453666737,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311199453666737,"StepEvaluate","->","Changed","Declared @gcd"
635311199453666737,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311199453666737,"StepEvaluate","->","Changed","Declared @gcd"
635311199453676737,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311199453676737,"StepEvaluate","->","Changed","Declared @gcd"
635311199453676737,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311199453676737,"StepEvaluate","->","Changed","Declared @fib"
635311199453686738,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311199453686738,"StepEvaluate","->","Changed","Declared @fib"
635311199453686738,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311199453686738,"StepEvaluate","->","Changed","Declared @fib"
635311199453696738,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311199453696738,"StepEvaluate","->","Changed","Declared @fib2"
635311199453696738,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311199453706739,"StepEvaluate","->","Changed","Declared @fib2"
635311199453706739,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311199453706739,"StepEvaluate","->","Changed","Declared @fac"
635311199453706739,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311199453716740,"StepEvaluate","->","Changed","Declared @fac"
635311199453716740,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311199453716740,"StepEvaluate","->","Changed","Declared @pow"
635311199453716740,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311199453726740,"StepEvaluate","->","Changed","Declared @pow"
635311199453726740,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311199453726740,"StepEvaluate","->","Changed","Declared @pow"
635311199453726740,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311199453736741,"StepEvaluate","->","Changed","Declared @upArrow"
635311199453736741,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311199453736741,"StepEvaluate","->","Changed","Declared @upArrow"
635311199453746741,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311199453746741,"StepEvaluate","->","Changed","Declared @upArrow"
635311199453746741,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311199453746741,"StepEvaluate","->","Changed","Declared @graham"
635311199453756742,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311199453756742,"StepEvaluate","->","Changed","Declared @graham"
635311199453756742,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311199453756742,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311199453766742,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311199453766742,"StepEvaluate","->","Changed","Declared @ack"
635311199453766742,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311199453776743,"StepEvaluate","->","Changed","Declared @ack"
635311199453776743,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311199453776743,"StepEvaluate","->","Changed","Declared @ack"
635311199453776743,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311199453786744,"StepEvaluate","->","Changed","Declared @acker"
635311199453786744,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199453786744,"StepEvaluate","->","Changed","Declared @acker"
635311199453786744,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199453796744,"StepEvaluate","->","Changed","Declared @acker"
635311199453796744,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199453796744,"StepEvaluate","->","Changed","Declared @acker"
635311199453806745,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199453806745,"StepEvaluate","->","Changed","Declared @acker"
635311199453806745,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311199453806745,"StepEvaluate","->","Changed","Declared @hyper"
635311199453816745,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199453816745,"StepEvaluate","->","Changed","Declared @hyper"
635311199453816745,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199453816745,"StepEvaluate","->","Changed","Declared @hyper"
635311199453826746,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199453826746,"StepEvaluate","->","Changed","Declared @hyper"
635311199453826746,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199453836746,"StepEvaluate","->","Changed","Declared @hyper"
635311199453836746,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311199453836746,"StepEvaluate","->","Changed","Declared @sudan"
635311199453836746,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311199453846747,"StepEvaluate","->","Changed","Declared @sudan"
635311199453846747,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311199453846747,"StepEvaluate","->","Changed","Declared @sudan"
635311199453846747,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311199453856748,"StepEvaluate","[]","Changed","File imported"
635311199453856748,"StepEvaluate","File imported","Unchanged","File imported"
635311199453856748,"StepEvaluate","@","Changed","@"
635311199453856748,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199453866748,"StepEvaluate","PAT@","Unchanged","PAT@"
635311199453866748,"StepEvaluate",",","Unchanged",","
635311199453866748,"StepEvaluate","@Arg","Changed","@Arg-M"
635311199453866748,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311199453876749,"StepEvaluate","PAT@-M","Changed","[]"
635311199453876749,"StepEvaluate","SEL@import","Changed","[]"
635311199453876749,"StepEvaluate","@","Changed","[]"
635311199453886749,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311199453886749,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311199453886749,"Parsed as literal","quickSort"
635311199453896750,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199453896750,"Parsed as literal",""
635311199453896750,"Parsed as literal",""
635311199453896750,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199453906750,"Parsed as literal",""
635311199453906750,"Parsed as literal",""
635311199453906750,"Invalid operator","@quickSort([]) -> []","0"
635311199453916751,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311199453916751,"Parsed as literal","quickSort"
635311199453916751,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199453916751,"Parsed as literal",""
635311199453926752,"Parsed as literal",""
635311199453926752,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199453926752,"Parsed as literal",""
635311199453936752,"Parsed as literal",""
635311199453936752,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199453936752,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311199453946753,"Parsed as literal","quickSort"
635311199453946753,"Parsed as literal","list"
635311199453946753,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199453956753,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311199453956753,"Parsed as literal","quickSort"
635311199453956753,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311199453966754,"Parsed as literal","filter"
635311199453966754,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311199453966754,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311199453976754,"Parsed as literal",""
635311199453976754,"Parsed as literal","i"
635311199453976754,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311199453976754,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199453986755,"Parsed as literal"," i "
635311199453986755,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199453986755,"Parsed as literal"," "
635311199453996756,"Parsed as literal","list"
635311199453996756,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199453996756,"Parsed as literal",""
635311199453996756,"Parsed as literal","list"
635311199454006756,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311199454006756,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311199454006756,"Parsed as literal",""
635311199454016757,"Parsed as literal","i"
635311199454016757,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311199454016757,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199454016757,"Parsed as literal"," i "
635311199454026757,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199454026757,"Parsed as literal"," "
635311199454026757,"Parsed as literal","list"
635311199454026757,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199454036758,"Parsed as literal",""
635311199454036758,"Parsed as literal","list"
635311199454036758,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311199454046758,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311199454046758,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311199454046758,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311199454056759,"Parsed as literal",""
635311199454056759,"Parsed as literal","i"
635311199454056759,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199454056759,"Parsed as literal"," i "
635311199454066760,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199454066760,"Parsed as literal"," "
635311199454066760,"Parsed as literal","list"
635311199454076760,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199454076760,"Parsed as literal",""
635311199454076760,"Parsed as literal","list"
635311199454076760,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199454086761,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311199454086761,"Parsed as literal"," "
635311199454086761,"Parsed as literal","list "
635311199454096761,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311199454096761,"Parsed as literal","quickSort"
635311199454096761,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311199454106762,"Parsed as literal","filter"
635311199454106762,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311199454106762,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311199454106762,"Parsed as literal",""
635311199454116762,"Parsed as literal","i"
635311199454116762,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311199454116762,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199454126763,"Parsed as literal"," i "
635311199454126763,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199454126763,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199454126763,"Parsed as literal"," "
635311199454136764,"Parsed as literal","list"
635311199454136764,"Parsed as literal","1"
635311199454136764,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199454146764,"Parsed as literal",""
635311199454146764,"Parsed as literal","list"
635311199454146764,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311199454146764,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311199454156765,"Parsed as literal",""
635311199454156765,"Parsed as literal","i"
635311199454156765,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311199454166765,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199454166765,"Parsed as literal"," i "
635311199454166765,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199454166765,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199454176766,"Parsed as literal"," "
635311199454176766,"Parsed as literal","list"
635311199454176766,"Parsed as literal","1"
635311199454186766,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199454186766,"Parsed as literal",""
635311199454186766,"Parsed as literal","list"
635311199454186766,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311199454196767,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311199454196767,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311199454196767,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311199454206768,"Parsed as literal",""
635311199454206768,"Parsed as literal","i"
635311199454206768,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199454206768,"Parsed as literal"," i "
635311199454216768,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199454216768,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199454216768,"Parsed as literal"," "
635311199454216768,"Parsed as literal","list"
635311199454226769,"Parsed as literal","1"
635311199454226769,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199454226769,"Parsed as literal",""
635311199454236769,"Parsed as literal","list"
635311199454236769,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311199454236769,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311199454246770,"Parsed as literal","quickSort"
635311199454246770,"Parsed as literal","list"
635311199454246770,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199454256770,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311199454256770,"Parsed as literal","quickSort"
635311199454256770,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311199454266771,"Parsed as literal","filter"
635311199454266771,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311199454266771,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311199454266771,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311199454276772,"Parsed as literal",""
635311199454276772,"Parsed as literal","i"
635311199454276772,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311199454286772,"Parsed as literal"," i "
635311199454286772,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311199454286772,"Parsed as literal"," "
635311199454286772,"Parsed as literal","list"
635311199454296773,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311199454296773,"Parsed as literal",""
635311199454296773,"Parsed as literal","list"
635311199454306773,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311199454306773,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311199454306773,"Parsed as literal"," "
635311199454306773,"Parsed as literal","list "
635311199454316774,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311199454316774,"Parsed as literal","quickSort"
635311199454316774,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311199454326774,"Parsed as literal","filter"
635311199454326774,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311199454326774,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311199454336775,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311199454336775,"Parsed as literal",""
635311199454336775,"Parsed as literal","i"
635311199454336775,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311199454346776,"Parsed as literal"," i "
635311199454346776,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311199454346776,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311199454356776,"Parsed as literal"," "
635311199454356776,"Parsed as literal","list"
635311199454356776,"Parsed as literal","1"
635311199454356776,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311199454366777,"Parsed as literal",""
635311199454366777,"Parsed as literal","list"
635311199454366777,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311199454376777,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311199454376777,"Parsed as literal","mergeSort"
635311199454376777,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199454386778,"Parsed as literal",""
635311199454386778,"Parsed as literal",""
635311199454386778,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199454386778,"Parsed as literal",""
635311199454396778,"Parsed as literal",""
635311199454396778,"Invalid operator","@mergeSort([]) -> []","0"
635311199454396778,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311199454406779,"Parsed as literal","mergeSort"
635311199454406779,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311199454406779,"Parsed as literal",""
635311199454406779,"Parsed as literal",""
635311199454416780,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311199454416780,"Parsed as literal",""
635311199454416780,"Parsed as literal",""
635311199454426780,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311199454426780,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311199454426780,"Parsed as literal","mergeSort"
635311199454426780,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311199454436781,"Parsed as literal","list"
635311199454436781,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311199454436781,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311199454436781,"Parsed as literal",""
635311199454446781,"Parsed as literal","list"
635311199454446781,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311199454446781,"Parsed as literal",""
635311199454456782,"Parsed as literal",""
635311199454456782,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311199454456782,"Parsed as literal"," "
635311199454456782,"Parsed as literal","list"
635311199454466783,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311199454466783,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311199454466783,"Parsed as literal","mergeSort"
635311199454476783,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311199454476783,"Parsed as literal","list"
635311199454476783,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311199454476783,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311199454486784,"Parsed as literal",""
635311199454486784,"Parsed as literal","list"
635311199454486784,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311199454496784,"Parsed as literal",""
635311199454496784,"Parsed as literal",""
635311199454496784,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311199454496784,"Parsed as literal"," "
635311199454506785,"Parsed as literal","list"
635311199454506785,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311199454506785,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311199454526786,"Parsed as literal","mergeSort"
635311199454526786,"Parsed as literal","list"
635311199454526786,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311199454536787,"Parsed as literal","merge"
635311199454536787,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311199454536787,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311199454546787,"Parsed as literal","mergeSort"
635311199454546787,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311199454546787,"Parsed as literal","take"
635311199454546787,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311199454556788,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311199454556788,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311199454556788,"Parsed as literal","count"
635311199454566788,"Parsed as literal","list"
635311199454566788,"Parsed as literal","2"
635311199454566788,"Parsed as literal","list"
635311199454576789,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311199454576789,"Parsed as literal","mergeSort"
635311199454576789,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311199454576789,"Parsed as literal","skip"
635311199454586789,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311199454586789,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311199454586789,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311199454596790,"Parsed as literal","count"
635311199454596790,"Parsed as literal","list"
635311199454596790,"Parsed as literal","2"
635311199454606791,"Parsed as literal","list"
635311199454606791,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311199454606791,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311199454606791,"Parsed as literal","mergeSort"
635311199454616791,"Parsed as literal","list"
635311199454616791,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311199454616791,"Parsed as literal","merge"
635311199454626792,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311199454626792,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311199454626792,"Parsed as literal","mergeSort"
635311199454636792,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311199454636792,"Parsed as literal","take"
635311199454636792,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311199454646793,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311199454646793,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311199454646793,"Parsed as literal","count"
635311199454656793,"Parsed as literal","list"
635311199454656793,"Parsed as literal","2"
635311199454656793,"Parsed as literal","list"
635311199454656793,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311199454666794,"Parsed as literal","mergeSort"
635311199454666794,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311199454666794,"Parsed as literal","skip"
635311199454676795,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311199454676795,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311199454676795,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311199454686795,"Parsed as literal","count"
635311199454686795,"Parsed as literal","list"
635311199454686795,"Parsed as literal","2"
635311199454686795,"Parsed as literal","list"
635311199454696796,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311199454696796,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311199454696796,"Parsed as literal","merge"
635311199454706796,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311199454706796,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199454706796,"Parsed as literal",""
635311199454706796,"Parsed as literal",""
635311199454716797,"Parsed as literal","list"
635311199454716797,"Parsed as literal"," list"
635311199454716797,"Invalid operator","@merge([],list) -> list","0"
635311199454726797,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311199454726797,"Parsed as literal","merge"
635311199454726797,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311199454726797,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311199454736798,"Parsed as literal",""
635311199454736798,"Parsed as literal",""
635311199454736798,"Parsed as literal","list"
635311199454746799,"Parsed as literal"," list"
635311199454746799,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311199454746799,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311199454756799,"Parsed as literal","merge"
635311199454756799,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311199454756799,"Parsed as literal","list"
635311199454756799,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199454766800,"Parsed as literal",""
635311199454766800,"Parsed as literal",""
635311199454766800,"Parsed as literal"," list"
635311199454776800,"Invalid operator","@merge(list,[]) -> list","0"
635311199454776800,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311199454776800,"Parsed as literal","merge"
635311199454776800,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311199454786801,"Parsed as literal","list"
635311199454786801,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311199454786801,"Parsed as literal",""
635311199454786801,"Parsed as literal",""
635311199454796801,"Parsed as literal"," list"
635311199454796801,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311199454796801,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311199454806802,"Parsed as literal","merge"
635311199454806802,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311199454806802,"Parsed as literal","left"
635311199454816803,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311199454816803,"Parsed as literal","right "
635311199454816803,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311199454816803,"Parsed as literal"," "
635311199454826803,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311199454826803,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311199454826803,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311199454836804,"Parsed as literal",""
635311199454836804,"Parsed as literal","left "
635311199454836804,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311199454836804,"Parsed as literal"," "
635311199454846804,"Parsed as literal","right"
635311199454846804,"Parsed as literal",""
635311199454846804,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311199454856805,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311199454856805,"Parsed as literal"," "
635311199454856805,"Parsed as literal","left "
635311199454856805,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311199454866805,"Parsed as literal","merge"
635311199454866805,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311199454866805,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311199454876806,"Parsed as literal",""
635311199454876806,"Parsed as literal","left"
635311199454876806,"Parsed as literal","right"
635311199454876806,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311199454886807,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311199454886807,"Parsed as literal","merge"
635311199454886807,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311199454896807,"Parsed as literal","left"
635311199454896807,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311199454896807,"Parsed as literal","right "
635311199454906808,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311199454906808,"Parsed as literal"," "
635311199454906808,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311199454906808,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311199454916808,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311199454916808,"Parsed as literal",""
635311199454916808,"Parsed as literal","left "
635311199454926809,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311199454926809,"Parsed as literal"," "
635311199454926809,"Parsed as literal","right"
635311199454936809,"Parsed as literal",""
635311199454936809,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311199454936809,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311199454946810,"Parsed as literal"," "
635311199454946810,"Parsed as literal","left "
635311199454946810,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311199454946810,"Parsed as literal","merge"
635311199454956811,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311199454956811,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311199454956811,"Parsed as literal",""
635311199454966811,"Parsed as literal","left"
635311199454966811,"Parsed as literal","right"
635311199454966811,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311199454976812,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311199454976812,"Parsed as literal","merge"
635311199454976812,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311199454976812,"Parsed as literal","left"
635311199454986812,"Parsed as literal","right"
635311199454986812,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311199454986812,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311199454996813,"Parsed as literal"," "
635311199454996813,"Parsed as literal","right "
635311199454996813,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311199454996813,"Parsed as literal","merge"
635311199455006813,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311199455006813,"Parsed as literal","left"
635311199455006813,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311199455016814,"Parsed as literal",""
635311199455016814,"Parsed as literal","right"
635311199455016814,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311199455016814,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311199455026815,"Parsed as literal","merge"
635311199455026815,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311199455026815,"Parsed as literal","left"
635311199455036815,"Parsed as literal","right"
635311199455036815,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311199455036815,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311199455036815,"Parsed as literal"," "
635311199455046816,"Parsed as literal","right "
635311199455046816,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311199455046816,"Parsed as literal","merge"
635311199455056816,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311199455056816,"Parsed as literal","left"
635311199455056816,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311199455056816,"Parsed as literal",""
635311199455066817,"Parsed as literal","right"
635311199455066817,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311199455066817,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311199455076817,"Parsed as literal","bubbleSort"
635311199455076817,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311199455076817,"Parsed as literal","list"
635311199455076817,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311199455086818,"Parsed as literal","isSorted"
635311199455086818,"Parsed as literal","list"
635311199455086818,"Parsed as literal"," list"
635311199455096819,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311199455096819,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311199455096819,"Parsed as literal","bubbleSort"
635311199455096819,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311199455106819,"Parsed as literal","list"
635311199455106819,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311199455106819,"Parsed as literal","isSorted"
635311199455116820,"Parsed as literal","list"
635311199455116820,"Parsed as literal"," list"
635311199455116820,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311199455126820,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311199455126820,"Parsed as literal","bubbleSort"
635311199455126820,"Parsed as literal","list"
635311199455126820,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311199455136821,"Parsed as literal","bubbleSort"
635311199455136821,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311199455136821,"Parsed as literal","bubbleSortPass"
635311199455146821,"Parsed as literal","list"
635311199455146821,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311199455146821,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311199455146821,"Parsed as literal","bubbleSort"
635311199455156822,"Parsed as literal","list"
635311199455156822,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311199455156822,"Parsed as literal","bubbleSort"
635311199455166823,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311199455166823,"Parsed as literal","bubbleSortPass"
635311199455166823,"Parsed as literal","list"
635311199455166823,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311199455176823,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311199455176823,"Parsed as literal","bubbleSortPass"
635311199455176823,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199455186824,"Parsed as literal",""
635311199455186824,"Parsed as literal",""
635311199455186824,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199455186824,"Parsed as literal",""
635311199455196824,"Parsed as literal",""
635311199455196824,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311199455196824,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311199455206825,"Parsed as literal","bubbleSortPass"
635311199455206825,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311199455206825,"Parsed as literal",""
635311199455206825,"Parsed as literal",""
635311199455216825,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199455216825,"Parsed as literal",""
635311199455216825,"Parsed as literal",""
635311199455226826,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311199455226826,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311199455226826,"Parsed as literal","bubbleSortPass"
635311199455226826,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311199455236827,"Parsed as literal","list"
635311199455236827,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311199455236827,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311199455236827,"Parsed as literal",""
635311199455246827,"Parsed as literal","list "
635311199455246827,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311199455246827,"Parsed as literal",""
635311199455256828,"Parsed as literal",""
635311199455256828,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311199455256828,"Parsed as literal"," "
635311199455256828,"Parsed as literal","list"
635311199455266828,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311199455266828,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311199455266828,"Parsed as literal","bubbleSortPass"
635311199455276829,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311199455276829,"Parsed as literal","list"
635311199455276829,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311199455276829,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311199455286829,"Parsed as literal",""
635311199455286829,"Parsed as literal","list "
635311199455286829,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311199455296830,"Parsed as literal",""
635311199455296830,"Parsed as literal",""
635311199455296830,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311199455296830,"Parsed as literal"," "
635311199455306831,"Parsed as literal","list"
635311199455306831,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311199455316831,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311199455316831,"Parsed as literal","bubbleSortPass"
635311199455326832,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311199455326832,"Parsed as literal","list"
635311199455326832,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311199455336832,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311199455336832,"Parsed as literal",""
635311199455336832,"Parsed as literal","list "
635311199455336832,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311199455346833,"Parsed as literal"," "
635311199455346833,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311199455346833,"Parsed as literal",""
635311199455356833,"Parsed as literal","list"
635311199455356833,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311199455356833,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311199455356833,"Parsed as literal"," "
635311199455366834,"Parsed as literal","list "
635311199455366834,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311199455366834,"Parsed as literal","bubbleSortPass"
635311199455376835,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311199455376835,"Parsed as literal",""
635311199455376835,"Parsed as literal","list"
635311199455376835,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311199455386835,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311199455386835,"Parsed as literal","bubbleSortPass"
635311199455386835,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311199455396836,"Parsed as literal","list"
635311199455396836,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311199455396836,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311199455396836,"Parsed as literal",""
635311199455406836,"Parsed as literal","list "
635311199455406836,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311199455406836,"Parsed as literal"," "
635311199455416837,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311199455416837,"Parsed as literal",""
635311199455416837,"Parsed as literal","list"
635311199455416837,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311199455426837,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311199455426837,"Parsed as literal"," "
635311199455426837,"Parsed as literal","list "
635311199455436838,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311199455436838,"Parsed as literal","bubbleSortPass"
635311199455436838,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311199455436838,"Parsed as literal",""
635311199455446839,"Parsed as literal","list"
635311199455446839,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311199455446839,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311199455456839,"Parsed as literal","bubbleSortPass"
635311199455456839,"Parsed as literal","list"
635311199455456839,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311199455466840,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311199455466840,"Parsed as literal"," "
635311199455466840,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311199455466840,"Parsed as literal",""
635311199455476840,"Parsed as literal","list "
635311199455476840,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311199455476840,"Parsed as literal","bubbleSortPass"
635311199455486841,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311199455486841,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311199455486841,"Parsed as literal",""
635311199455486841,"Parsed as literal","list "
635311199455496841,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311199455496841,"Parsed as literal"," "
635311199455496841,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311199455496841,"Parsed as literal",""
635311199455506842,"Parsed as literal","list"
635311199455506842,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311199455506842,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311199455516843,"Parsed as literal","bubbleSortPass"
635311199455516843,"Parsed as literal","list"
635311199455516843,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311199455516843,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311199455526843,"Parsed as literal"," "
635311199455526843,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311199455526843,"Parsed as literal",""
635311199455536844,"Parsed as literal","list "
635311199455536844,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311199455536844,"Parsed as literal","bubbleSortPass"
635311199455536844,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311199455546844,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311199455546844,"Parsed as literal",""
635311199455546844,"Parsed as literal","list "
635311199455556845,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311199455556845,"Parsed as literal"," "
635311199455556845,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311199455556845,"Parsed as literal",""
635311199455566845,"Parsed as literal","list"
635311199455566845,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311199455566845,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311199455576846,"Parsed as literal","isSorted"
635311199455576846,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311199455576846,"Parsed as literal",""
635311199455576846,"Parsed as literal",""
635311199455586847,"Parsed as literal"," true"
635311199455586847,"Invalid operator","@isSorted([]) -> true","0"
635311199455586847,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311199455596847,"Parsed as literal","isSorted"
635311199455596847,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311199455596847,"Parsed as literal",""
635311199455596847,"Parsed as literal",""
635311199455606848,"Parsed as literal"," true"
635311199455606848,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311199455606848,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311199455616848,"Parsed as literal","isSorted"
635311199455616848,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311199455616848,"Parsed as literal","list"
635311199455626849,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311199455626849,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311199455626849,"Parsed as literal",""
635311199455626849,"Parsed as literal","list "
635311199455636849,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199455636849,"Parsed as literal",""
635311199455636849,"Parsed as literal",""
635311199455646850,"Parsed as literal"," true"
635311199455646850,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311199455646850,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311199455646850,"Parsed as literal","isSorted"
635311199455656851,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311199455656851,"Parsed as literal","list"
635311199455656851,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311199455656851,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311199455666851,"Parsed as literal",""
635311199455666851,"Parsed as literal","list "
635311199455666851,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311199455676852,"Parsed as literal",""
635311199455676852,"Parsed as literal",""
635311199455676852,"Parsed as literal"," true"
635311199455676852,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311199455686852,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311199455686852,"Parsed as literal","isSorted"
635311199455686852,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311199455696853,"Parsed as literal","list"
635311199455696853,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311199455696853,"Parsed as literal",""
635311199455696853,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311199455706853,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311199455706853,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311199455706853,"Parsed as literal",""
635311199455716854,"Parsed as literal","list "
635311199455716854,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311199455716854,"Parsed as literal"," "
635311199455716854,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311199455726855,"Parsed as literal",""
635311199455726855,"Parsed as literal","list"
635311199455726855,"Parsed as literal",""
635311199455736855,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311199455736855,"Parsed as literal","isSorted"
635311199455736855,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311199455736855,"Parsed as literal",""
635311199455746856,"Parsed as literal","list"
635311199455746856,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311199455746856,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311199455756856,"Parsed as literal","isSorted"
635311199455756856,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311199455756856,"Parsed as literal","list"
635311199455756856,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311199455766857,"Parsed as literal",""
635311199455766857,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311199455766857,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311199455776857,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311199455776857,"Parsed as literal",""
635311199455776857,"Parsed as literal","list "
635311199455776857,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311199455786858,"Parsed as literal"," "
635311199455786858,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311199455786858,"Parsed as literal",""
635311199455786858,"Parsed as literal","list"
635311199455796859,"Parsed as literal",""
635311199455796859,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311199455796859,"Parsed as literal","isSorted"
635311199455806859,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311199455806859,"Parsed as literal",""
635311199455806859,"Parsed as literal","list"
635311199455816860,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311199455816860,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311199455816860,"Parsed as literal","isSorted"
635311199455816860,"Parsed as literal","list"
635311199455826860,"Parsed as literal"," false"
635311199455826860,"Invalid operator","@isSorted(list) -> false","0"
635311199455826860,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311199455836861,"Parsed as literal","isSorted"
635311199455836861,"Parsed as literal","list"
635311199455836861,"Parsed as literal"," false"
635311199455836861,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311199455846861,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311199455846861,"Parsed as literal","insertionSort"
635311199455846861,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199455856862,"Parsed as literal",""
635311199455856862,"Parsed as literal",""
635311199455856862,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311199455856862,"Parsed as literal",""
635311199455866863,"Parsed as literal",""
635311199455866863,"Invalid operator","@insertionSort([]) -> []","0"
635311199455866863,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311199455866863,"Parsed as literal","insertionSort"
635311199455876863,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311199455876863,"Parsed as literal",""
635311199455876863,"Parsed as literal",""
635311199455886864,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311199455886864,"Parsed as literal",""
635311199455886864,"Parsed as literal",""
635311199455896864,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311199455896864,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311199455896864,"Parsed as literal","insertionSort"
635311199455896864,"Parsed as literal","list"
635311199455906865,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311199455906865,"Parsed as literal","insert"
635311199455906865,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311199455916865,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311199455916865,"Parsed as literal",""
635311199455916865,"Parsed as literal","list"
635311199455916865,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311199455926866,"Parsed as literal","insertionSort"
635311199455926866,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311199455926866,"Parsed as literal",""
635311199455936867,"Parsed as literal","list"
635311199455936867,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311199455936867,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311199455936867,"Parsed as literal","insertionSort"
635311199455946867,"Parsed as literal","list"
635311199455946867,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311199455946867,"Parsed as literal","insert"
635311199455956868,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311199455956868,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311199455956868,"Parsed as literal",""
635311199455956868,"Parsed as literal","list"
635311199455966868,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311199455966868,"Parsed as literal","insertionSort"
635311199455966868,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311199455976869,"Parsed as literal",""
635311199455976869,"Parsed as literal","list"
635311199455976869,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311199455976869,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311199455986869,"Parsed as literal","insert"
635311199455986869,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311199455986869,"Parsed as literal","item"
635311199455996870,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199455996870,"Parsed as literal",""
635311199455996870,"Parsed as literal",""
635311199455996870,"Parsed as literal"," item"
635311199456006871,"Invalid operator","@insert(item,[]) -> item","0"
635311199456006871,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311199456006871,"Parsed as literal","insert"
635311199456016871,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311199456016871,"Parsed as literal","item"
635311199456016871,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311199456016871,"Parsed as literal",""
635311199456026872,"Parsed as literal",""
635311199456026872,"Parsed as literal"," item"
635311199456026872,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311199456036872,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311199456036872,"Parsed as literal","insert"
635311199456036872,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311199456036872,"Parsed as literal","item"
635311199456046873,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311199456046873,"Parsed as literal","list "
635311199456046873,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311199456056873,"Parsed as literal"," item "
635311199456056873,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311199456056873,"Parsed as literal"," "
635311199456056873,"Parsed as literal","list"
635311199456066874,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311199456066874,"Parsed as literal"," item "
635311199456066874,"Parsed as literal"," list"
635311199456076875,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311199456076875,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311199456076875,"Parsed as literal","insert"
635311199456076875,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311199456086875,"Parsed as literal","item"
635311199456086875,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311199456086875,"Parsed as literal","list "
635311199456086875,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311199456096876,"Parsed as literal"," item "
635311199456096876,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311199456096876,"Parsed as literal"," "
635311199456106876,"Parsed as literal","list"
635311199456106876,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311199456106876,"Parsed as literal"," item "
635311199456116877,"Parsed as literal"," list"
635311199456116877,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311199456116877,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311199456126877,"Parsed as literal","insert"
635311199456126877,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311199456126877,"Parsed as literal","item"
635311199456126877,"Parsed as literal","list"
635311199456136878,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311199456136878,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311199456136878,"Parsed as literal"," "
635311199456136878,"Parsed as literal","list "
635311199456146879,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311199456146879,"Parsed as literal","insert"
635311199456146879,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311199456156879,"Parsed as literal","item"
635311199456156879,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311199456156879,"Parsed as literal",""
635311199456156879,"Parsed as literal","list"
635311199456166880,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311199456166880,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311199456166880,"Parsed as literal","insert"
635311199456176880,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311199456176880,"Parsed as literal","item"
635311199456176880,"Parsed as literal","list"
635311199456186881,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311199456186881,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311199456186881,"Parsed as literal"," "
635311199456186881,"Parsed as literal","list "
635311199456196881,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311199456196881,"Parsed as literal","insert"
635311199456196881,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311199456206882,"Parsed as literal","item"
635311199456206882,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311199456206882,"Parsed as literal",""
635311199456206882,"Parsed as literal","list"
635311199456216883,"StepEvaluate","->","Changed","Declared @quickSort"
635311199456216883,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311199456216883,"StepEvaluate","->","Changed","Declared @quickSort"
635311199456216883,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311199456226883,"StepEvaluate","->","Changed","Declared @mergeSort"
635311199456226883,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311199456226883,"StepEvaluate","->","Changed","Declared @mergeSort"
635311199456226883,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311199456236884,"StepEvaluate","->","Changed","Declared @mergeSort"
635311199456236884,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311199456236884,"StepEvaluate","->","Changed","Declared @merge"
635311199456236884,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199456246884,"StepEvaluate","->","Changed","Declared @merge"
635311199456246884,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199456246884,"StepEvaluate","->","Changed","Declared @merge"
635311199456256885,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199456256885,"StepEvaluate","->","Changed","Declared @merge"
635311199456256885,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311199456266885,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311199456266885,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311199456266885,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311199456266885,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311199456276886,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199456276886,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199456276886,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199456276886,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199456286887,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199456286887,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199456286887,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311199456286887,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311199456296887,"StepEvaluate","->","Changed","Declared @isSorted"
635311199456296887,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199456296887,"StepEvaluate","->","Changed","Declared @isSorted"
635311199456306888,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199456306888,"StepEvaluate","->","Changed","Declared @isSorted"
635311199456306888,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199456306888,"StepEvaluate","->","Changed","Declared @isSorted"
635311199456316888,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311199456316888,"StepEvaluate","->","Changed","Declared @insertionSort"
635311199456316888,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311199456316888,"StepEvaluate","->","Changed","Declared @insertionSort"
635311199456326889,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311199456326889,"StepEvaluate","->","Changed","Declared @insert"
635311199456326889,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311199456326889,"StepEvaluate","->","Changed","Declared @insert"
635311199456336889,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311199456336889,"StepEvaluate","->","Changed","Declared @insert"
635311199456336889,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311199456346890,"StepEvaluate","[]","Changed","File imported"
635311199456346890,"StepEvaluate","File imported","Unchanged","File imported"
635311199456346890,"StepEvaluate","[]","Changed","File imported"
635311199456346890,"StepEvaluate","File imported","Unchanged","File imported"
635311199456356891,"ParseInternal","1&2&3&4&5","0","ConcatOperator","0","2","1","2&3&4&5"
635311199456356891,"Parsed as literal","1"
635311199456356891,"ParseInternal","2&3&4&5","2","ConcatOperator","2","4","2","3&4&5"
635311199456356891,"Parsed as literal","2"
635311199456366891,"ParseInternal","3&4&5","4","ConcatOperator","4","6","3","4&5"
635311199456366891,"Parsed as literal","3"
635311199456366891,"ParseInternal","4&5","6","ConcatOperator","6","8","4","5"
635311199456376892,"Parsed as literal","4"
635311199456376892,"Parsed as literal","5"
635311199482528388,"StepEvaluate","&","Unchanged","&"
635311199482548389,"StepEvaluate","1","Unchanged","1"
635311199482558389,"StepEvaluate","&","Unchanged","&"
635311199482568390,"StepEvaluate","2","Unchanged","2"
635311199482568390,"StepEvaluate","&","Unchanged","&"
635311199482578390,"StepEvaluate","3","Unchanged","3"
635311199482588391,"StepEvaluate","&","Changed",","
635311199509149910,"StepEvaluate","&","Changed",","
635311199515380267,"StepEvaluate",",","Unchanged",","
635311199515400268,"StepEvaluate","1","Unchanged","1"
635311199515400268,"StepEvaluate","&","Changed",","
635311199520480558,"StepEvaluate",",","Unchanged",","
635311199520490559,"StepEvaluate","1","Unchanged","1"
635311199520500559,"StepEvaluate",",","Unchanged",","
635311199520500559,"StepEvaluate","2","Unchanged","2"
635311199520510560,"StepEvaluate","&","Changed",","
635311199525640853,"StepEvaluate",",","Unchanged",","
635311199525650854,"StepEvaluate","1","Unchanged","1"
635311199525650854,"StepEvaluate",",","Unchanged",","
635311199525660855,"StepEvaluate","2","Unchanged","2"
635311199525660855,"StepEvaluate",",","Unchanged",","
635311199525860866,"StepEvaluate","3","Unchanged","3"
635311199526080879,"StepEvaluate",",","Unchanged",","
635311199526090879,"StepEvaluate","4","Unchanged","4"
635311199526100880,"StepEvaluate",",","Unchanged",","
635311199526110880,"StepEvaluate","5","Unchanged","5"
635311200212460137,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311200212480138,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311200212490139,"Parsed as literal","import"
635311200212500140,"Parsed as literal","file"
635311200212510140,"Parsed as literal"," 0"
635311200212520141,"Invalid operator","@import(file) -> 0","0"
635311200212520141,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311200212530141,"Parsed as literal","import"
635311200212540142,"Parsed as literal","file"
635311200212550142,"Parsed as literal"," 0"
635311200212550142,"StepEvaluate","->","Changed","Declared @import"
635311200212560143,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311200212570144,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311200212580144,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311200212590145,"Parsed as literal","operator"
635311200212590145,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311200212600145,"Parsed as literal","op"
635311200212610146,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311200212610146,"Parsed as literal","fn"
635311200212620146,"Parsed as literal",""
635311200212620146,"Invalid operator","@fn","12"
635311200212630147,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311200212630147,"Parsed as literal","fn"
635311200212640148,"Parsed as literal",""
635311200212640148,"Invalid operator","@fn","12"
635311200212650148,"Parsed as literal","@fn"
635311200212650148,"Parsed as literal"," 0"
635311200212660149,"Invalid operator","@operator(op,@fn) -> 0","0"
635311200212660149,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311200212660149,"Parsed as literal","operator"
635311200212670149,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311200212670149,"Parsed as literal","op"
635311200212680150,"Parsed as literal","@fn"
635311200212680150,"Parsed as literal"," 0"
635311200212690150,"StepEvaluate","->","Changed","Declared @operator"
635311200212690150,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311200212700151,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311200212700151,"Parsed as literal","import"
635311200212700151,"Parsed as literal","main.toast"
635311200212710152,"StepEvaluate","@","Changed","@"
635311200212710152,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200212720152,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200212720152,"StepEvaluate",",","Unchanged",","
635311200212730153,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200212730153,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200212730153,"StepEvaluate","PAT@-M","Changed","[]"
635311200212740153,"StepEvaluate","SEL@import","Changed","[]"
635311200212740153,"StepEvaluate","@","Changed","[]"
635311200212750154,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311200212750154,"Parsed as literal","import"
635311200212750154,"Parsed as literal","'core.toast'"
635311200212760154,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311200212760154,"Parsed as literal","import"
635311200212770155,"Parsed as literal","'list.toast'"
635311200212770155,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311200212780156,"Parsed as literal","import"
635311200212780156,"Parsed as literal","'math.toast'"
635311200212790156,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311200212790156,"Parsed as literal","import"
635311200212800157,"Parsed as literal","'sorting.toast'"
635311200212800157,"StepEvaluate","@","Changed","@"
635311200212810157,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200212810157,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200212810157,"StepEvaluate",",","Unchanged",","
635311200212820158,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200212820158,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200212830158,"StepEvaluate","PAT@-M","Changed","[]"
635311200212830158,"StepEvaluate","SEL@import","Changed","[]"
635311200212830158,"StepEvaluate","@","Changed","[]"
635311200212840159,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311200212850160,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311200212850160,"Parsed as literal","map"
635311200212850160,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311200212860160,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311200212860160,"Parsed as literal","func"
635311200212870161,"Parsed as literal",""
635311200212870161,"Invalid operator","@func","4"
635311200212870161,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311200212880161,"Parsed as literal","func"
635311200212880161,"Parsed as literal",""
635311200212890162,"Invalid operator","@func","4"
635311200212890162,"Parsed as literal","@func"
635311200212890162,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311200212900162,"Parsed as literal",""
635311200212900162,"Parsed as literal",""
635311200212910163,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200212910163,"Parsed as literal",""
635311200212920164,"Parsed as literal",""
635311200212920164,"Invalid operator","@map(@func, []) -> []","0"
635311200212930164,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311200212930164,"Parsed as literal","map"
635311200212930164,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311200212940165,"Parsed as literal","@func"
635311200212940165,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311200212950165,"Parsed as literal",""
635311200212950165,"Parsed as literal",""
635311200212960166,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200212960166,"Parsed as literal",""
635311200212960166,"Parsed as literal",""
635311200212970166,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311200212970166,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311200212980167,"Parsed as literal","map"
635311200212980167,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311200212990168,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311200212990168,"Parsed as literal","func"
635311200213000168,"Parsed as literal",""
635311200213000168,"Invalid operator","@func","4"
635311200213000168,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311200213010169,"Parsed as literal","func"
635311200213010169,"Parsed as literal",""
635311200213020169,"Invalid operator","@func","4"
635311200213020169,"Parsed as literal","@func"
635311200213020169,"Parsed as literal"," list"
635311200213030170,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311200213100174,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311200213120175,"Parsed as literal","func"
635311200213120175,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200213130176,"Parsed as literal",""
635311200213130176,"Parsed as literal","list"
635311200213140176,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311200213140176,"Parsed as literal","map"
635311200213150177,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311200213150177,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311200213150177,"Parsed as literal","func"
635311200213160177,"Parsed as literal",""
635311200213160177,"Invalid operator","@func","41"
635311200213170178,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311200213170178,"Parsed as literal","func"
635311200213180178,"Parsed as literal",""
635311200213180178,"Invalid operator","@func","41"
635311200213180178,"Parsed as literal","@func"
635311200213190179,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311200213190179,"Parsed as literal",""
635311200213200180,"Parsed as literal","list"
635311200213200180,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311200213210180,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311200213210180,"Parsed as literal","map"
635311200213210180,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311200213220181,"Parsed as literal","@func"
635311200213220181,"Parsed as literal"," list"
635311200213230181,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311200213230181,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311200213240182,"Parsed as literal","func"
635311200213240182,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200213250182,"Parsed as literal",""
635311200213250182,"Parsed as literal","list"
635311200213260183,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311200213260183,"Parsed as literal","map"
635311200213260183,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311200213270184,"Parsed as literal","@func"
635311200213270184,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311200213280184,"Parsed as literal",""
635311200213280184,"Parsed as literal","list"
635311200213290185,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311200213290185,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311200213300185,"Parsed as literal","filter"
635311200213300185,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311200213300185,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200213310186,"Parsed as literal","pred"
635311200213310186,"Parsed as literal",""
635311200213320186,"Invalid operator","@pred","7"
635311200213320186,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200213320186,"Parsed as literal","pred"
635311200213330187,"Parsed as literal",""
635311200213330187,"Invalid operator","@pred","7"
635311200213340188,"Parsed as literal","@pred"
635311200213340188,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311200213350188,"Parsed as literal",""
635311200213350188,"Parsed as literal",""
635311200213360189,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311200213360189,"Parsed as literal",""
635311200213360189,"Parsed as literal",""
635311200213370189,"Invalid operator","@filter(@pred,[]) -> []","0"
635311200213370189,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311200213380190,"Parsed as literal","filter"
635311200213380190,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311200213380190,"Parsed as literal","@pred"
635311200213390190,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311200213390190,"Parsed as literal",""
635311200213400191,"Parsed as literal",""
635311200213400191,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311200213410192,"Parsed as literal",""
635311200213410192,"Parsed as literal",""
635311200213420192,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311200213420192,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311200213430193,"Parsed as literal","filter"
635311200213430193,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311200213430193,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200213440193,"Parsed as literal","pred"
635311200213440193,"Parsed as literal",""
635311200213450194,"Invalid operator","@pred","7"
635311200213450194,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200213460194,"Parsed as literal","pred"
635311200213460194,"Parsed as literal",""
635311200213460194,"Invalid operator","@pred","7"
635311200213470195,"Parsed as literal","@pred"
635311200213470195,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311200213480196,"Parsed as literal"," list "
635311200213480196,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311200213490196,"Parsed as literal","pred"
635311200213490196,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200213490196,"Parsed as literal",""
635311200213500197,"Parsed as literal","list"
635311200213500197,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311200213510197,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311200213510197,"Parsed as literal"," "
635311200213520198,"Parsed as literal","list "
635311200213520198,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311200213530198,"Parsed as literal","filter"
635311200213530198,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311200213530198,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311200213540199,"Parsed as literal","pred"
635311200213540199,"Parsed as literal",""
635311200213550200,"Invalid operator","@pred","56"
635311200213550200,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311200213550200,"Parsed as literal","pred"
635311200213560200,"Parsed as literal",""
635311200213560200,"Invalid operator","@pred","56"
635311200213570201,"Parsed as literal","@pred"
635311200213570201,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311200213570201,"Parsed as literal"," "
635311200213580201,"Parsed as literal","list"
635311200213580201,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311200213590202,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311200213590202,"Parsed as literal","filter"
635311200213600202,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311200213600202,"Parsed as literal","@pred"
635311200213610203,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311200213610203,"Parsed as literal"," list "
635311200213620204,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311200213620204,"Parsed as literal","pred"
635311200213620204,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200213630204,"Parsed as literal",""
635311200213630204,"Parsed as literal","list"
635311200213640205,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311200213640205,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311200213650205,"Parsed as literal"," "
635311200213650205,"Parsed as literal","list "
635311200213660206,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311200213660206,"Parsed as literal","filter"
635311200213660206,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311200213670206,"Parsed as literal","@pred"
635311200213670206,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311200213680207,"Parsed as literal"," "
635311200213680207,"Parsed as literal","list"
635311200213690208,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311200213690208,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311200213700208,"Parsed as literal","filter"
635311200213700208,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311200213700208,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200213710209,"Parsed as literal","pred"
635311200213710209,"Parsed as literal",""
635311200213720209,"Invalid operator","@pred","7"
635311200213720209,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200213720209,"Parsed as literal","pred"
635311200213730210,"Parsed as literal",""
635311200213730210,"Invalid operator","@pred","7"
635311200213740210,"Parsed as literal","@pred"
635311200213740210,"Parsed as literal","list"
635311200213750211,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311200213750211,"Parsed as literal","filter"
635311200213750211,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311200213760212,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311200213760212,"Parsed as literal","pred"
635311200213770212,"Parsed as literal",""
635311200213770212,"Invalid operator","@pred","30"
635311200213780213,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311200213780213,"Parsed as literal","pred"
635311200213780213,"Parsed as literal",""
635311200213790213,"Invalid operator","@pred","30"
635311200213790213,"Parsed as literal","@pred"
635311200213800214,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311200213800214,"Parsed as literal",""
635311200213800214,"Parsed as literal","list"
635311200213810214,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311200213810214,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311200213820215,"Parsed as literal","filter"
635311200213820215,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311200213830216,"Parsed as literal","@pred"
635311200213830216,"Parsed as literal","list"
635311200213840216,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311200213840216,"Parsed as literal","filter"
635311200213840216,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311200213850217,"Parsed as literal","@pred"
635311200213850217,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311200213860217,"Parsed as literal",""
635311200213860217,"Parsed as literal","list"
635311200213870218,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311200213870218,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311200213880218,"Parsed as literal","call"
635311200213880218,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311200213880218,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311200213890219,"Parsed as literal","fun"
635311200213890219,"Parsed as literal",""
635311200213900220,"Invalid operator","@fun","5"
635311200213900220,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311200213900220,"Parsed as literal","fun"
635311200213910220,"Parsed as literal",""
635311200213910220,"Invalid operator","@fun","5"
635311200213920221,"Parsed as literal","@fun"
635311200213920221,"Parsed as literal","arg"
635311200213930221,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311200213930221,"Parsed as literal","fun"
635311200213940222,"Parsed as literal","arg"
635311200213940222,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311200213940222,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311200213950222,"Parsed as literal","call"
635311200213950222,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311200213960223,"Parsed as literal","@fun"
635311200213960223,"Parsed as literal","arg"
635311200213970224,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311200213970224,"Parsed as literal","fun"
635311200213970224,"Parsed as literal","arg"
635311200213980224,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311200213980224,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311200213990225,"Parsed as literal","curry"
635311200213990225,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311200214000225,"Parsed as literal","seed"
635311200214000225,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200214010226,"Parsed as literal",""
635311200214010226,"Parsed as literal",""
635311200214010226,"Parsed as literal"," seed"
635311200214020226,"Invalid operator","@curry(seed,[]) -> seed","0"
635311200214020226,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311200214030227,"Parsed as literal","curry"
635311200214030227,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311200214040228,"Parsed as literal","seed"
635311200214040228,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200214040228,"Parsed as literal",""
635311200214050228,"Parsed as literal",""
635311200214050228,"Parsed as literal"," seed"
635311200214060229,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311200214060229,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311200214070229,"Parsed as literal","curry"
635311200214070229,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311200214080230,"Parsed as literal","seed"
635311200214080230,"Parsed as literal"," funcList"
635311200214080230,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311200214090230,"Parsed as literal","curry"
635311200214090230,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311200214100231,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311200214100231,"Parsed as literal","call"
635311200214110232,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311200214110232,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311200214120232,"Parsed as literal",""
635311200214120232,"Parsed as literal","funcList"
635311200214120232,"Parsed as literal","seed"
635311200214130233,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311200214130233,"Parsed as literal",""
635311200214140233,"Parsed as literal","funcList"
635311200214140233,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311200214140233,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311200214150234,"Parsed as literal","curry"
635311200214150234,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311200214160234,"Parsed as literal","seed"
635311200214160234,"Parsed as literal"," funcList"
635311200214170235,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311200214170235,"Parsed as literal","curry"
635311200214180236,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311200214180236,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311200214180236,"Parsed as literal","call"
635311200214190236,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311200214190236,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311200214200237,"Parsed as literal",""
635311200214200237,"Parsed as literal","funcList"
635311200214200237,"Parsed as literal","seed"
635311200214210237,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311200214210237,"Parsed as literal",""
635311200214220238,"Parsed as literal","funcList"
635311200214220238,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311200214230238,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311200214230238,"Parsed as literal","fold"
635311200214240239,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311200214240239,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200214240239,"Parsed as literal","func"
635311200214250240,"Parsed as literal",""
635311200214250240,"Invalid operator","@func","5"
635311200214260240,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200214260240,"Parsed as literal","func"
635311200214260240,"Parsed as literal",""
635311200214270241,"Invalid operator","@func","5"
635311200214270241,"Parsed as literal","@func"
635311200214280241,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200214280241,"Parsed as literal",""
635311200214290242,"Parsed as literal",""
635311200214290242,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200214290242,"Parsed as literal",""
635311200214300242,"Parsed as literal",""
635311200214300242,"Invalid operator","@fold(@func,[]) -> []","0"
635311200214310243,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311200214310243,"Parsed as literal","fold"
635311200214320244,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311200214320244,"Parsed as literal","@func"
635311200214320244,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200214330244,"Parsed as literal",""
635311200214330244,"Parsed as literal",""
635311200214340245,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200214340245,"Parsed as literal",""
635311200214340245,"Parsed as literal",""
635311200214350245,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311200214350245,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311200214360246,"Parsed as literal","fold"
635311200214360246,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311200214370246,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200214370246,"Parsed as literal","func"
635311200214380247,"Parsed as literal",""
635311200214380247,"Invalid operator","@func","5"
635311200214380247,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200214390248,"Parsed as literal","func"
635311200214390248,"Parsed as literal",""
635311200214400248,"Invalid operator","@func","5"
635311200214400248,"Parsed as literal","@func"
635311200214400248,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311200214410249,"Parsed as literal","list"
635311200214410249,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311200214420249,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311200214420249,"Parsed as literal",""
635311200214430250,"Parsed as literal","list"
635311200214430250,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311200214430250,"Parsed as literal",""
635311200214440250,"Parsed as literal",""
635311200214440250,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311200214450251,"Parsed as literal"," "
635311200214450251,"Parsed as literal","list"
635311200214460252,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311200214460252,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311200214460252,"Parsed as literal","fold"
635311200214470252,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311200214470252,"Parsed as literal","@func"
635311200214480253,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311200214480253,"Parsed as literal","list"
635311200214490253,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311200214490253,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311200214490253,"Parsed as literal",""
635311200214500254,"Parsed as literal","list"
635311200214500254,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311200214510255,"Parsed as literal",""
635311200214510255,"Parsed as literal",""
635311200214520255,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311200214520255,"Parsed as literal"," "
635311200214520255,"Parsed as literal","list"
635311200214530256,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311200214530256,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311200214540256,"Parsed as literal","fold"
635311200214540256,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311200214560257,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200214560257,"Parsed as literal","func"
635311200214570258,"Parsed as literal",""
635311200214570258,"Invalid operator","@func","5"
635311200214570258,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200214580259,"Parsed as literal","func"
635311200214580259,"Parsed as literal",""
635311200214590259,"Invalid operator","@func","5"
635311200214590259,"Parsed as literal","@func"
635311200214590259,"Parsed as literal","list"
635311200214600260,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311200214600260,"Parsed as literal","fold"
635311200214610260,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311200214610260,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311200214620261,"Parsed as literal","func"
635311200214620261,"Parsed as literal",""
635311200214630261,"Invalid operator","@func","26"
635311200214630261,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311200214630261,"Parsed as literal","func"
635311200214640262,"Parsed as literal",""
635311200214640262,"Invalid operator","@func","26"
635311200214650263,"Parsed as literal","@func"
635311200214650263,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311200214660263,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311200214660263,"Parsed as literal","func"
635311200214660263,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311200214670264,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311200214670264,"Parsed as literal",""
635311200214680264,"Parsed as literal","list"
635311200214680264,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311200214690265,"Parsed as literal",""
635311200214690265,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311200214690265,"Parsed as literal",""
635311200214700265,"Parsed as literal","list"
635311200214700265,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311200214710266,"Parsed as literal"," "
635311200214710266,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311200214720267,"Parsed as literal",""
635311200214720267,"Parsed as literal","list"
635311200214730267,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311200214730267,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311200214730267,"Parsed as literal","fold"
635311200214740268,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311200214740268,"Parsed as literal","@func"
635311200214750268,"Parsed as literal","list"
635311200214750268,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311200214760269,"Parsed as literal","fold"
635311200214760269,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311200214770269,"Parsed as literal","@func"
635311200214770269,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311200214770269,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311200214780270,"Parsed as literal","func"
635311200214780270,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311200214790271,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311200214790271,"Parsed as literal",""
635311200214800271,"Parsed as literal","list"
635311200214800271,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311200214800271,"Parsed as literal",""
635311200214810272,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311200214810272,"Parsed as literal",""
635311200214820272,"Parsed as literal","list"
635311200214820272,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311200214830273,"Parsed as literal"," "
635311200214830273,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311200214830273,"Parsed as literal",""
635311200214840273,"Parsed as literal","list"
635311200214840273,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311200214850274,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311200214850274,"Parsed as literal","foldr"
635311200214860275,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311200214860275,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200214860275,"Parsed as literal","func"
635311200214870275,"Parsed as literal",""
635311200214870275,"Invalid operator","@func","6"
635311200214880276,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200214880276,"Parsed as literal","func"
635311200214880276,"Parsed as literal",""
635311200214890276,"Invalid operator","@func","6"
635311200214890276,"Parsed as literal","@func"
635311200214900277,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200214900277,"Parsed as literal",""
635311200214910277,"Parsed as literal",""
635311200214910277,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200214910277,"Parsed as literal",""
635311200214920278,"Parsed as literal",""
635311200214920278,"Invalid operator","@foldr(@func,[]) -> []","0"
635311200214930279,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311200214930279,"Parsed as literal","foldr"
635311200214930279,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311200214940279,"Parsed as literal","@func"
635311200214940279,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200214950280,"Parsed as literal",""
635311200214950280,"Parsed as literal",""
635311200214960280,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200214960280,"Parsed as literal",""
635311200214960280,"Parsed as literal",""
635311200214970281,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311200214970281,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311200214980281,"Parsed as literal","foldr"
635311200214980281,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311200214990282,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200214990282,"Parsed as literal","func"
635311200214990282,"Parsed as literal",""
635311200215000283,"Invalid operator","@func","6"
635311200215000283,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200215010283,"Parsed as literal","func"
635311200215010283,"Parsed as literal",""
635311200215010283,"Invalid operator","@func","6"
635311200215020284,"Parsed as literal","@func"
635311200215020284,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311200215030284,"Parsed as literal","list"
635311200215030284,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311200215040285,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311200215040285,"Parsed as literal",""
635311200215040285,"Parsed as literal","list"
635311200215050285,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200215050285,"Parsed as literal",""
635311200215060286,"Parsed as literal",""
635311200215060286,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311200215070287,"Parsed as literal"," "
635311200215070287,"Parsed as literal","list"
635311200215070287,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311200215080287,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311200215080287,"Parsed as literal","foldr"
635311200215090288,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311200215090288,"Parsed as literal","@func"
635311200215100288,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311200215100288,"Parsed as literal","list"
635311200215110289,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311200215110289,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311200215110289,"Parsed as literal",""
635311200215120289,"Parsed as literal","list"
635311200215120289,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200215130290,"Parsed as literal",""
635311200215130290,"Parsed as literal",""
635311200215130290,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311200215140291,"Parsed as literal"," "
635311200215140291,"Parsed as literal","list"
635311200215150291,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311200215150291,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311200215160292,"Parsed as literal","foldr"
635311200215160292,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311200215170292,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200215170292,"Parsed as literal","func"
635311200215170292,"Parsed as literal",""
635311200215180293,"Invalid operator","@func","6"
635311200215180293,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200215190293,"Parsed as literal","func"
635311200215190293,"Parsed as literal",""
635311200215200294,"Invalid operator","@func","6"
635311200215200294,"Parsed as literal","@func"
635311200215200294,"Parsed as literal","list"
635311200215210295,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311200215210295,"Parsed as literal","func"
635311200215220295,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311200215220295,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311200215230296,"Parsed as literal","foldr"
635311200215230296,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311200215240296,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311200215240296,"Parsed as literal","func"
635311200215240296,"Parsed as literal",""
635311200215250297,"Invalid operator","@func","33"
635311200215250297,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311200215260297,"Parsed as literal","func"
635311200215260297,"Parsed as literal",""
635311200215270298,"Invalid operator","@func","33"
635311200215270298,"Parsed as literal","@func"
635311200215270298,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311200215280299,"Parsed as literal","superHead"
635311200215280299,"Parsed as literal","list"
635311200215290299,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311200215290299,"Parsed as literal","last"
635311200215300300,"Parsed as literal","list"
635311200215300300,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311200215310300,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311200215310300,"Parsed as literal","foldr"
635311200215310300,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311200215320301,"Parsed as literal","@func"
635311200215320301,"Parsed as literal","list"
635311200215330301,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311200215330301,"Parsed as literal","func"
635311200215340302,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311200215340302,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311200215340302,"Parsed as literal","foldr"
635311200215350303,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311200215360303,"Parsed as literal","@func"
635311200215360303,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311200215370304,"Parsed as literal","superHead"
635311200215370304,"Parsed as literal","list"
635311200215380304,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311200215380304,"Parsed as literal","last"
635311200215380304,"Parsed as literal","list"
635311200215390305,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311200215390305,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311200215400305,"Parsed as literal","superHead"
635311200215400305,"Parsed as literal","list"
635311200215410306,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311200215410306,"Parsed as literal","reverse"
635311200215420307,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311200215420307,"Parsed as literal",""
635311200215430307,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311200215430307,"Parsed as literal","reverse"
635311200215430307,"Parsed as literal","list"
635311200215440308,"StepEvaluate","->","Changed","Declared @map"
635311200215440308,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311200215450308,"StepEvaluate","->","Changed","Declared @map"
635311200215450308,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311200215450308,"StepEvaluate","->","Changed","Declared @filter"
635311200215460309,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200215460309,"StepEvaluate","->","Changed","Declared @filter"
635311200215470309,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200215470309,"StepEvaluate","->","Changed","Declared @filter"
635311200215470309,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200215480310,"StepEvaluate","->","Changed","Declared @call"
635311200215480310,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311200215490311,"StepEvaluate","->","Changed","Declared @curry"
635311200215490311,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311200215490311,"StepEvaluate","->","Changed","Declared @curry"
635311200215500311,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311200215500311,"StepEvaluate","->","Changed","Declared @fold"
635311200215510312,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200215510312,"StepEvaluate","->","Changed","Declared @fold"
635311200215520312,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200215520312,"StepEvaluate","->","Changed","Declared @fold"
635311200215520312,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200215530313,"StepEvaluate","->","Changed","Declared @foldr"
635311200215530313,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200215540313,"StepEvaluate","->","Changed","Declared @foldr"
635311200215540313,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200215540313,"StepEvaluate","->","Changed","Declared @foldr"
635311200215550314,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200215550314,"StepEvaluate","==","Unchanged","=="
635311200215560315,"StepEvaluate","@","Changed","@"
635311200215560315,"StepEvaluate","@","Changed","@"
635311200215560315,"StepEvaluate","==","Unchanged","=="
635311200215570315,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200215570315,"StepEvaluate","superHead","Unchanged","superHead"
635311200215570315,"StepEvaluate",",","Unchanged",","
635311200215580316,"StepEvaluate","list","Unchanged","list"
635311200215580316,"StepEvaluate","@","Changed","@"
635311200215590316,"StepEvaluate","==","Unchanged","=="
635311200215590316,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200215600317,"StepEvaluate","superHead","Unchanged","superHead"
635311200215600317,"StepEvaluate",",","Unchanged",","
635311200215600317,"StepEvaluate","list","Unchanged","list"
635311200215610317,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200215610317,"StepEvaluate","reverse","Unchanged","reverse"
635311200215610317,"StepEvaluate",",","Unchanged",","
635311200215620318,"StepEvaluate","tail","Unchanged","tail"
635311200215620318,"StepEvaluate","@","Changed","@"
635311200215620318,"StepEvaluate","==","Unchanged","=="
635311200215630319,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200215630319,"StepEvaluate","superHead","Unchanged","superHead"
635311200215630319,"StepEvaluate",",","Unchanged",","
635311200215630319,"StepEvaluate","list","Unchanged","list"
635311200215640319,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200215640319,"StepEvaluate","reverse","Unchanged","reverse"
635311200215640319,"StepEvaluate",",","Unchanged",","
635311200215640319,"StepEvaluate","tail","Unchanged","tail"
635311200215650320,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200215650320,"StepEvaluate","reverse","Unchanged","reverse"
635311200215650320,"StepEvaluate",",","Unchanged",","
635311200215650320,"StepEvaluate","list","Unchanged","list"
635311200215660320,"StepEvaluate","[]","Changed","File imported"
635311200215660320,"StepEvaluate","File imported","Unchanged","File imported"
635311200215660320,"StepEvaluate","@","Changed","@"
635311200215660320,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200215670321,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200215670321,"StepEvaluate",",","Unchanged",","
635311200215670321,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200215670321,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200215680321,"StepEvaluate","PAT@-M","Changed","[]"
635311200215680321,"StepEvaluate","SEL@import","Changed","[]"
635311200215680321,"StepEvaluate","@","Changed","[]"
635311200215690322,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311200215690322,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311200215690322,"Parsed as literal","zipWith"
635311200215690322,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311200215700323,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311200215700323,"Parsed as literal","func"
635311200215700323,"Parsed as literal",""
635311200215710323,"Invalid operator","@func","8"
635311200215710323,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311200215710323,"Parsed as literal","func"
635311200215710323,"Parsed as literal",""
635311200215720324,"Invalid operator","@func","8"
635311200215720324,"Parsed as literal","@func"
635311200215720324,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311200215720324,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200215730324,"Parsed as literal",""
635311200215730324,"Parsed as literal",""
635311200215730324,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311200215730324,"Parsed as literal",""
635311200215740325,"Parsed as literal",""
635311200215740325,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311200215740325,"Parsed as literal",""
635311200215740325,"Parsed as literal",""
635311200215750325,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311200215750325,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311200215750325,"Parsed as literal","zipWith"
635311200215760326,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311200215760326,"Parsed as literal","@func"
635311200215760326,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311200215760326,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200215770327,"Parsed as literal",""
635311200215770327,"Parsed as literal",""
635311200215770327,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311200215770327,"Parsed as literal",""
635311200215780327,"Parsed as literal",""
635311200215780327,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311200215780327,"Parsed as literal",""
635311200215790328,"Parsed as literal",""
635311200215790328,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311200215790328,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311200215800328,"Parsed as literal","zipWith"
635311200215800328,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311200215800328,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311200215800328,"Parsed as literal","func"
635311200215810329,"Parsed as literal",""
635311200215810329,"Invalid operator","@func","8"
635311200215810329,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311200215810329,"Parsed as literal","func"
635311200215820329,"Parsed as literal",""
635311200215820329,"Invalid operator","@func","8"
635311200215820329,"Parsed as literal","@func"
635311200215830330,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311200215830330,"Parsed as literal","list1"
635311200215830330,"Parsed as literal","list2"
635311200215830330,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311200215840331,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311200215840331,"Parsed as literal","func"
635311200215840331,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311200215850331,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311200215850331,"Parsed as literal",""
635311200215850331,"Parsed as literal","list1"
635311200215850331,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311200215860332,"Parsed as literal",""
635311200215860332,"Parsed as literal","list2"
635311200215860332,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311200215860332,"Parsed as literal","zipWith"
635311200215870332,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311200215870332,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311200215870332,"Parsed as literal","func"
635311200215880333,"Parsed as literal",""
635311200215880333,"Invalid operator","@func","64"
635311200215880333,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311200215890333,"Parsed as literal","func"
635311200215890333,"Parsed as literal",""
635311200215890333,"Invalid operator","@func","64"
635311200215890333,"Parsed as literal","@func"
635311200215900334,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311200215900334,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311200215900334,"Parsed as literal",""
635311200215900334,"Parsed as literal","list1"
635311200215910335,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311200215910335,"Parsed as literal",""
635311200215910335,"Parsed as literal","list2"
635311200215910335,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311200215920335,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311200215920335,"Parsed as literal","zipWith"
635311200215920335,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311200215930336,"Parsed as literal","@func"
635311200215930336,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311200215930336,"Parsed as literal","list1"
635311200215930336,"Parsed as literal","list2"
635311200215940336,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311200215940336,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311200215940336,"Parsed as literal","func"
635311200215950337,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311200215950337,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311200215950337,"Parsed as literal",""
635311200215950337,"Parsed as literal","list1"
635311200215960337,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311200215960337,"Parsed as literal",""
635311200215970338,"Parsed as literal","list2"
635311200215970338,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311200215970338,"Parsed as literal","zipWith"
635311200215980339,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311200215980339,"Parsed as literal","@func"
635311200215980339,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311200215980339,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311200215990339,"Parsed as literal",""
635311200215990339,"Parsed as literal","list1"
635311200215990339,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311200215990339,"Parsed as literal",""
635311200216000340,"Parsed as literal","list2"
635311200216000340,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311200216000340,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311200216010340,"Parsed as literal","count"
635311200216010340,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200216010340,"Parsed as literal",""
635311200216010340,"Parsed as literal",""
635311200216020341,"Parsed as literal"," 0"
635311200216020341,"Invalid operator","@count([]) -> 0","0"
635311200216020341,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311200216030341,"Parsed as literal","count"
635311200216030341,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200216030341,"Parsed as literal",""
635311200216030341,"Parsed as literal",""
635311200216040342,"Parsed as literal"," 0"
635311200216040342,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311200216040342,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311200216050343,"Parsed as literal","count"
635311200216050343,"Parsed as literal","list"
635311200216050343,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311200216050343,"Parsed as literal"," 1 "
635311200216060343,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311200216060343,"Parsed as literal","count"
635311200216060343,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200216060343,"Parsed as literal",""
635311200216070344,"Parsed as literal","list"
635311200216070344,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311200216070344,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311200216080344,"Parsed as literal","count"
635311200216080344,"Parsed as literal","list"
635311200216080344,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311200216080344,"Parsed as literal"," 1 "
635311200216090345,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311200216090345,"Parsed as literal","count"
635311200216090345,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200216090345,"Parsed as literal",""
635311200216100345,"Parsed as literal","list"
635311200216100345,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311200216100345,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311200216110346,"Parsed as literal","skip"
635311200216110346,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311200216110346,"Parsed as literal","0"
635311200216110346,"Parsed as literal","list"
635311200216120347,"Parsed as literal"," list"
635311200216120347,"Invalid operator","@skip(0,list) -> list","0"
635311200216120347,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311200216130347,"Parsed as literal","skip"
635311200216130347,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311200216130347,"Parsed as literal","0"
635311200216130347,"Parsed as literal","list"
635311200216140348,"Parsed as literal"," list"
635311200216140348,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311200216140348,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311200216150348,"Parsed as literal","skip"
635311200216150348,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200216150348,"Parsed as literal","n"
635311200216150348,"Parsed as literal","list"
635311200216160349,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311200216160349,"Parsed as literal","skip"
635311200216160349,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311200216160349,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200216170349,"Parsed as literal","n"
635311200216170349,"Parsed as literal","1"
635311200216170349,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200216180350,"Parsed as literal",""
635311200216180350,"Parsed as literal","list"
635311200216180350,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311200216180350,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311200216190351,"Parsed as literal","skip"
635311200216190351,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200216190351,"Parsed as literal","n"
635311200216190351,"Parsed as literal","list"
635311200216200351,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311200216200351,"Parsed as literal","skip"
635311200216200351,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311200216210352,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200216210352,"Parsed as literal","n"
635311200216210352,"Parsed as literal","1"
635311200216210352,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200216220352,"Parsed as literal",""
635311200216220352,"Parsed as literal","list"
635311200216220352,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311200216220352,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311200216230353,"Parsed as literal","take"
635311200216230353,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311200216230353,"Parsed as literal","1"
635311200216240353,"Parsed as literal","list"
635311200216240353,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311200216240353,"Parsed as literal"," "
635311200216240353,"Parsed as literal","list"
635311200216250354,"Invalid operator","@take(1,list) -> h:list","0"
635311200216250354,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311200216250354,"Parsed as literal","take"
635311200216260355,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311200216260355,"Parsed as literal","1"
635311200216260355,"Parsed as literal","list"
635311200216260355,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311200216270355,"Parsed as literal"," "
635311200216270355,"Parsed as literal","list"
635311200216270355,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311200216280356,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311200216280356,"Parsed as literal","take"
635311200216280356,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200216280356,"Parsed as literal","n"
635311200216290356,"Parsed as literal","list"
635311200216290356,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311200216290356,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311200216290356,"Parsed as literal"," "
635311200216300357,"Parsed as literal","list "
635311200216300357,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311200216300357,"Parsed as literal","take"
635311200216310357,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311200216310357,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200216310357,"Parsed as literal","n"
635311200216310357,"Parsed as literal","1"
635311200216320358,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311200216320358,"Parsed as literal",""
635311200216320358,"Parsed as literal","list"
635311200216330359,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311200216330359,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311200216330359,"Parsed as literal","take"
635311200216330359,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200216340359,"Parsed as literal","n"
635311200216340359,"Parsed as literal","list"
635311200216340359,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311200216340359,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311200216350360,"Parsed as literal"," "
635311200216350360,"Parsed as literal","list "
635311200216350360,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311200216360360,"Parsed as literal","take"
635311200216360360,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311200216360360,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200216360360,"Parsed as literal","n"
635311200216370361,"Parsed as literal","1"
635311200216370361,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311200216370361,"Parsed as literal",""
635311200216370361,"Parsed as literal","list"
635311200216380361,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311200216380361,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311200216380361,"Parsed as literal","nthItem"
635311200216390362,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311200216390362,"Parsed as literal","list"
635311200216390362,"Parsed as literal","0"
635311200216390362,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200216400363,"Parsed as literal",""
635311200216400363,"Parsed as literal",""
635311200216400363,"Invalid operator","@nthItem(list,0) -> []","0"
635311200216410363,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311200216410363,"Parsed as literal","nthItem"
635311200216410363,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311200216410363,"Parsed as literal","list"
635311200216420364,"Parsed as literal","0"
635311200216420364,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200216420364,"Parsed as literal",""
635311200216420364,"Parsed as literal",""
635311200216430364,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311200216430364,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311200216430364,"Parsed as literal","nthItem"
635311200216440365,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311200216440365,"Parsed as literal","list"
635311200216440365,"Parsed as literal","1"
635311200216440365,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311200216450365,"Parsed as literal"," "
635311200216450365,"Parsed as literal","list"
635311200216450365,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311200216460366,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311200216460366,"Parsed as literal","nthItem"
635311200216460366,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311200216460366,"Parsed as literal","list"
635311200216470367,"Parsed as literal","1"
635311200216470367,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311200216470367,"Parsed as literal"," "
635311200216470367,"Parsed as literal","list"
635311200216480367,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311200216480367,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311200216480367,"Parsed as literal","nthItem"
635311200216490368,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311200216490368,"Parsed as literal","list"
635311200216490368,"Parsed as literal","n"
635311200216490368,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311200216500368,"Parsed as literal","nthItem"
635311200216500368,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311200216500368,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311200216510369,"Parsed as literal",""
635311200216510369,"Parsed as literal","list"
635311200216510369,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311200216510369,"Parsed as literal","n"
635311200216520369,"Parsed as literal","1"
635311200216520369,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311200216520369,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311200216520369,"Parsed as literal","nthItem"
635311200216530370,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311200216530370,"Parsed as literal","list"
635311200216530370,"Parsed as literal","n"
635311200216540371,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311200216540371,"Parsed as literal","nthItem"
635311200216540371,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311200216540371,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311200216550371,"Parsed as literal",""
635311200216550371,"Parsed as literal","list"
635311200216550371,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311200216550371,"Parsed as literal","n"
635311200216560372,"Parsed as literal","1"
635311200216560372,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311200216560372,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311200216570372,"Parsed as literal","makeRange"
635311200216570372,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311200216570372,"Parsed as literal","a"
635311200216570372,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311200216580373,"Parsed as literal","b"
635311200216580373,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311200216580373,"Parsed as literal","a"
635311200216580373,"Parsed as literal","b"
635311200216590373,"Parsed as literal"," a"
635311200216590373,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311200216590373,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311200216600374,"Parsed as literal","makeRange"
635311200216600374,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311200216600374,"Parsed as literal","a"
635311200216600374,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311200216610375,"Parsed as literal","b"
635311200216610375,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311200216610375,"Parsed as literal","a"
635311200216610375,"Parsed as literal","b"
635311200216620375,"Parsed as literal"," a"
635311200216620375,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311200216620375,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311200216630376,"Parsed as literal","makeRange"
635311200216630376,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311200216630376,"Parsed as literal","a"
635311200216640376,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311200216640376,"Parsed as literal","b"
635311200216640376,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311200216640376,"Parsed as literal","a"
635311200216650377,"Parsed as literal","b"
635311200216650377,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311200216650377,"Parsed as literal"," a "
635311200216650377,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311200216660377,"Parsed as literal","makeRange"
635311200216660377,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311200216660377,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311200216670378,"Parsed as literal","a"
635311200216670378,"Parsed as literal","1"
635311200216670378,"Parsed as literal","b"
635311200216670378,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311200216680379,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311200216680379,"Parsed as literal","makeRange"
635311200216680379,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311200216680379,"Parsed as literal","a"
635311200216690379,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311200216690379,"Parsed as literal","b"
635311200216690379,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311200216690379,"Parsed as literal","a"
635311200216700380,"Parsed as literal","b"
635311200216700380,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311200216700380,"Parsed as literal"," a "
635311200216710380,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311200216710380,"Parsed as literal","makeRange"
635311200216710380,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311200216710380,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311200216720381,"Parsed as literal","a"
635311200216720381,"Parsed as literal","1"
635311200216720381,"Parsed as literal","b"
635311200216730381,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311200216730381,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311200216730381,"Parsed as literal","reverse"
635311200216730381,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311200216740382,"Parsed as literal",""
635311200216740382,"Parsed as literal",""
635311200216740382,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311200216740382,"Parsed as literal",""
635311200216750383,"Parsed as literal",""
635311200216750383,"Invalid operator","@reverse([]) -> []","0"
635311200216750383,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311200216760383,"Parsed as literal","reverse"
635311200216760383,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311200216760383,"Parsed as literal",""
635311200216760383,"Parsed as literal",""
635311200216770384,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311200216770384,"Parsed as literal",""
635311200216770384,"Parsed as literal",""
635311200216770384,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311200216780384,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311200216780384,"Parsed as literal","reverse"
635311200216780384,"Parsed as literal","list"
635311200216790385,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311200216790385,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311200216790385,"Parsed as literal","reverse"
635311200216790385,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200216800385,"Parsed as literal",""
635311200216800385,"Parsed as literal","list"
635311200216800385,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311200216800385,"Parsed as literal"," "
635311200216810386,"Parsed as literal","list"
635311200216810386,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311200216810386,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311200216820387,"Parsed as literal","reverse"
635311200216820387,"Parsed as literal","list"
635311200216820387,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311200216820387,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311200216830387,"Parsed as literal","reverse"
635311200216830387,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200216830387,"Parsed as literal",""
635311200216830387,"Parsed as literal","list"
635311200216840388,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311200216840388,"Parsed as literal"," "
635311200216840388,"Parsed as literal","list"
635311200216850388,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311200216850388,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311200216850388,"Parsed as literal","max"
635311200216850388,"Parsed as literal","list"
635311200216860389,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311200216860389,"Parsed as literal","fold"
635311200216860389,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311200216870389,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311200216870389,"Parsed as literal","max"
635311200216870389,"Parsed as literal",""
635311200216870389,"Invalid operator","@max","19"
635311200216880390,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311200216880390,"Parsed as literal","max"
635311200216880390,"Parsed as literal",""
635311200216880390,"Invalid operator","@max","19"
635311200216890391,"Parsed as literal","@max"
635311200216890391,"Parsed as literal","list"
635311200216890391,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311200216900391,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311200216900391,"Parsed as literal","max"
635311200216900391,"Parsed as literal","list"
635311200216900391,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311200216910392,"Parsed as literal","fold"
635311200216910392,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311200216910392,"Parsed as literal","@max"
635311200216910392,"Parsed as literal","list"
635311200216920392,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311200216920392,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311200216930393,"Parsed as literal","elementAt"
635311200216930393,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311200216930393,"Parsed as literal","0"
635311200216940393,"Parsed as literal","list"
635311200216940393,"Parsed as literal"," 'list"
635311200216940393,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311200216940393,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311200216950394,"Parsed as literal","elementAt"
635311200216950394,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311200216950394,"Parsed as literal","n"
635311200216960395,"Parsed as literal","list"
635311200216960395,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311200216960395,"Parsed as literal","elementAt"
635311200216960395,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311200216970395,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200216970395,"Parsed as literal","n"
635311200216970395,"Parsed as literal","1"
635311200216970395,"Parsed as literal","list'"
635311200216980396,"StepEvaluate","->","Changed","Declared @zipWith"
635311200216980396,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311200216980396,"StepEvaluate","->","Changed","Declared @zipWith"
635311200216990396,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311200216990396,"StepEvaluate","->","Changed","Declared @count"
635311200216990396,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311200216990396,"StepEvaluate","->","Changed","Declared @count"
635311200217000397,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311200217000397,"StepEvaluate","->","Changed","Declared @skip"
635311200217000397,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311200217000397,"StepEvaluate","->","Changed","Declared @skip"
635311200217010398,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311200217010398,"StepEvaluate","->","Changed","Declared @take"
635311200217010398,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311200217010398,"StepEvaluate","->","Changed","Declared @take"
635311200217020398,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311200217020398,"StepEvaluate","->","Changed","Declared @nthItem"
635311200217020398,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200217020398,"StepEvaluate","->","Changed","Declared @nthItem"
635311200217030399,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200217030399,"StepEvaluate","->","Changed","Declared @nthItem"
635311200217030399,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200217030399,"StepEvaluate","->","Changed","Declared @makeRange"
635311200217040399,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311200217040399,"StepEvaluate","->","Changed","Declared @makeRange"
635311200217040399,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311200217050400,"StepEvaluate","->","Changed","Declared @reverse"
635311200217050400,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311200217050400,"StepEvaluate","->","Changed","Declared @reverse"
635311200217050400,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311200217060400,"StepEvaluate","->","Changed","Declared @max"
635311200217060400,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200217060400,"StepEvaluate","==","Unchanged","=="
635311200217060400,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200217070401,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200217070401,"StepEvaluate",",","Unchanged",","
635311200217070401,"StepEvaluate","0","Unchanged","0"
635311200217070401,"StepEvaluate",",","Unchanged",","
635311200217070401,"StepEvaluate","list","Unchanged","list"
635311200217080402,"StepEvaluate","'list","Unchanged","'list"
635311200217080402,"StepEvaluate","==","Unchanged","=="
635311200217080402,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200217090402,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200217090402,"StepEvaluate",",","Unchanged",","
635311200217090402,"StepEvaluate","n","Unchanged","n"
635311200217090402,"StepEvaluate",",","Unchanged",","
635311200217100403,"StepEvaluate","list","Unchanged","list"
635311200217100403,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200217100403,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200217100403,"StepEvaluate",",","Unchanged",","
635311200217110403,"StepEvaluate","-","Unchanged","-"
635311200217110403,"StepEvaluate","n","Unchanged","n"
635311200217110403,"StepEvaluate","1","Unchanged","1"
635311200217110403,"StepEvaluate",",","Unchanged",","
635311200217120404,"StepEvaluate","list'","Unchanged","list'"
635311200217120404,"StepEvaluate","[]","Changed","File imported"
635311200217120404,"StepEvaluate","File imported","Unchanged","File imported"
635311200217120404,"StepEvaluate","@","Changed","@"
635311200217130404,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200217130404,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200217130404,"StepEvaluate",",","Unchanged",","
635311200217130404,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200217140405,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200217140405,"StepEvaluate","PAT@-M","Changed","[]"
635311200217140405,"StepEvaluate","SEL@import","Changed","[]"
635311200217140405,"StepEvaluate","@","Changed","[]"
635311200217150406,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311200217150406,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311200217150406,"Parsed as literal","naturalNumbers"
635311200217160406,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200217160406,"Parsed as literal",""
635311200217160406,"Parsed as literal",""
635311200217170407,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311200217170407,"Parsed as literal","naturalNumbers"
635311200217170407,"Parsed as literal","0"
635311200217170407,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311200217180407,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311200217180407,"Parsed as literal","naturalNumbers"
635311200217180407,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200217180407,"Parsed as literal",""
635311200217190408,"Parsed as literal",""
635311200217190408,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311200217190408,"Parsed as literal","naturalNumbers"
635311200217200408,"Parsed as literal","0"
635311200217200408,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311200217200408,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311200217200408,"Parsed as literal","naturalNumbers"
635311200217210409,"Parsed as literal","n"
635311200217210409,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311200217210409,"Parsed as literal"," n "
635311200217220410,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311200217220410,"Parsed as literal","naturalNumbers"
635311200217220410,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311200217220410,"Parsed as literal","n"
635311200217230410,"Parsed as literal","1"
635311200217230410,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311200217230410,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311200217230410,"Parsed as literal","naturalNumbers"
635311200217240411,"Parsed as literal","n"
635311200217240411,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311200217240411,"Parsed as literal"," n "
635311200217250411,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311200217250411,"Parsed as literal","naturalNumbers"
635311200217250411,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311200217250411,"Parsed as literal","n"
635311200217260412,"Parsed as literal","1"
635311200217260412,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311200217260412,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311200217270412,"Parsed as literal","max"
635311200217270412,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311200217270412,"Parsed as literal","a"
635311200217270412,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311200217280413,"Parsed as literal","b"
635311200217280413,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311200217280413,"Parsed as literal","a"
635311200217280413,"Parsed as literal","b"
635311200217290414,"Parsed as literal","b"
635311200217290414,"Invalid operator","@max(a,b|a<b)->b","0"
635311200217290414,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311200217300414,"Parsed as literal","max"
635311200217300414,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311200217300414,"Parsed as literal","a"
635311200217300414,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311200217310415,"Parsed as literal","b"
635311200217310415,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311200217310415,"Parsed as literal","a"
635311200217310415,"Parsed as literal","b"
635311200217320415,"Parsed as literal","b"
635311200217320415,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311200217320415,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311200217330416,"Parsed as literal","max"
635311200217330416,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200217330416,"Parsed as literal","a"
635311200217330416,"Parsed as literal","b"
635311200217340416,"Parsed as literal","a"
635311200217340416,"Invalid operator","@max(a,b)->a","0"
635311200217340416,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311200217350417,"Parsed as literal","max"
635311200217350417,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200217350417,"Parsed as literal","a"
635311200217350417,"Parsed as literal","b"
635311200217360418,"Parsed as literal","a"
635311200217360418,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311200217360418,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311200217370418,"Parsed as literal","random"
635311200217370418,"Parsed as literal","0"
635311200217370418,"Parsed as literal"," 0"
635311200217370418,"Invalid operator","@random(0) -> 0","0"
635311200217380419,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311200217380419,"Parsed as literal","random"
635311200217380419,"Parsed as literal","0"
635311200217380419,"Parsed as literal"," 0"
635311200217390419,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311200217390419,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311200217390419,"Parsed as literal","random"
635311200217400420,"Parsed as literal","n"
635311200217400420,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311200217400420,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311200217410420,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311200217410420,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311200217410420,"Parsed as literal","1664525 "
635311200217410420,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311200217420421,"Parsed as literal","random"
635311200217420421,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200217420421,"Parsed as literal","n"
635311200217420421,"Parsed as literal","1"
635311200217430422,"Parsed as literal"," 1013904223"
635311200217430422,"Parsed as literal",""
635311200217430422,"Parsed as literal"," 4294967296"
635311200217440422,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311200217440422,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311200217440422,"Parsed as literal","random"
635311200217440422,"Parsed as literal","n"
635311200217450423,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311200217450423,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311200217450423,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311200217460423,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311200217460423,"Parsed as literal","1664525 "
635311200217460423,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311200217460423,"Parsed as literal","random"
635311200217470424,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200217470424,"Parsed as literal","n"
635311200217470424,"Parsed as literal","1"
635311200217480424,"Parsed as literal"," 1013904223"
635311200217480424,"Parsed as literal",""
635311200217480424,"Parsed as literal"," 4294967296"
635311200217480424,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311200217490425,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311200217490425,"Parsed as literal","gcd"
635311200217490425,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311200217490425,"Parsed as literal","a"
635311200217500426,"Parsed as literal","0"
635311200217500426,"Parsed as literal"," a"
635311200217500426,"Invalid operator","@gcd(a,0) -> a","0"
635311200217510426,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311200217510426,"Parsed as literal","gcd"
635311200217510426,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311200217510426,"Parsed as literal","a"
635311200217520427,"Parsed as literal","0"
635311200217520427,"Parsed as literal"," a"
635311200217520427,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311200217530427,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311200217530427,"Parsed as literal","gcd"
635311200217530427,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200217530427,"Parsed as literal","a"
635311200217540428,"Parsed as literal","b"
635311200217540428,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311200217540428,"Parsed as literal","gcd"
635311200217540428,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311200217550428,"Parsed as literal","b"
635311200217550428,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311200217550428,"Parsed as literal","a "
635311200217550428,"Parsed as literal"," b"
635311200217560429,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311200217560429,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311200217560429,"Parsed as literal","gcd"
635311200217570430,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200217570430,"Parsed as literal","a"
635311200217570430,"Parsed as literal","b"
635311200217570430,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311200217580430,"Parsed as literal","gcd"
635311200217580430,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311200217580430,"Parsed as literal","b"
635311200217590431,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311200217590431,"Parsed as literal","a "
635311200217590431,"Parsed as literal"," b"
635311200217590431,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311200217600431,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311200217600431,"Parsed as literal","gcd"
635311200217600431,"Parsed as literal","list"
635311200217610432,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311200217610432,"Parsed as literal","fold"
635311200217610432,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311200217610432,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311200217620432,"Parsed as literal","gcd"
635311200217620432,"Parsed as literal",""
635311200217620432,"Invalid operator","@gcd","19"
635311200217620432,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311200217630433,"Parsed as literal","gcd"
635311200217630433,"Parsed as literal",""
635311200217630433,"Invalid operator","@gcd","19"
635311200217640434,"Parsed as literal","@gcd"
635311200217640434,"Parsed as literal","list"
635311200217640434,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311200217640434,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311200217650434,"Parsed as literal","gcd"
635311200217650434,"Parsed as literal","list"
635311200217650434,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311200217650434,"Parsed as literal","fold"
635311200217660435,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311200217660435,"Parsed as literal","@gcd"
635311200217660435,"Parsed as literal","list"
635311200217670435,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311200217670435,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311200217670435,"Parsed as literal","fib"
635311200217670435,"Parsed as literal","0"
635311200217680436,"Parsed as literal"," 1"
635311200217680436,"Invalid operator","@fib(0) -> 1","0"
635311200217680436,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311200217680436,"Parsed as literal","fib"
635311200217690436,"Parsed as literal","0"
635311200217690436,"Parsed as literal"," 1"
635311200217690436,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311200217700437,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311200217700437,"Parsed as literal","fib"
635311200217700437,"Parsed as literal","1"
635311200217700437,"Parsed as literal"," 1"
635311200217710438,"Invalid operator","@fib(1) -> 1","0"
635311200217710438,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311200217710438,"Parsed as literal","fib"
635311200217710438,"Parsed as literal","1"
635311200217720438,"Parsed as literal"," 1"
635311200217720438,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311200217720438,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311200217730439,"Parsed as literal","fib"
635311200217730439,"Parsed as literal","n"
635311200217730439,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311200217740439,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311200217740439,"Parsed as literal","fib"
635311200217740439,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311200217740439,"Parsed as literal","n"
635311200217750440,"Parsed as literal","2"
635311200217750440,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311200217750440,"Parsed as literal","fib"
635311200217750440,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200217760440,"Parsed as literal","n"
635311200217760440,"Parsed as literal","1"
635311200217760440,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311200217770441,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311200217770441,"Parsed as literal","fib"
635311200217770441,"Parsed as literal","n"
635311200217770441,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311200217780442,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311200217780442,"Parsed as literal","fib"
635311200217780442,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311200217780442,"Parsed as literal","n"
635311200217790442,"Parsed as literal","2"
635311200217790442,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311200217790442,"Parsed as literal","fib"
635311200217800443,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200217800443,"Parsed as literal","n"
635311200217800443,"Parsed as literal","1"
635311200217810443,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200217810443,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311200217810443,"Parsed as literal","fib2"
635311200217810443,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311200217820444,"Parsed as literal",""
635311200217820444,"Parsed as literal",""
635311200217820444,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200217830444,"Parsed as literal"," 0 "
635311200217830444,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200217830444,"Parsed as literal"," 1 "
635311200217840445,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311200217840445,"Parsed as literal","zipWith"
635311200217840445,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311200217840445,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311200217850446,"Parsed as literal",""
635311200217850446,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200217850446,"Parsed as literal","a"
635311200217860446,"Parsed as literal","b"
635311200217860446,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311200217860446,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200217870447,"Parsed as literal","a"
635311200217870447,"Parsed as literal","b"
635311200217870447,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200217880447,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200217880447,"Parsed as literal","fib2"
635311200217880447,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200217880447,"Parsed as literal",""
635311200217890448,"Parsed as literal",""
635311200217890448,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200217890448,"Parsed as literal"," "
635311200217890448,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200217900448,"Parsed as literal","fib2"
635311200217900448,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200217900448,"Parsed as literal",""
635311200217910449,"Parsed as literal",""
635311200217910449,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311200217910449,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200217910449,"Parsed as literal",""
635311200217920450,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200217920450,"Parsed as literal","a"
635311200217920450,"Parsed as literal","b"
635311200217930450,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311200217930450,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200217930450,"Parsed as literal","a"
635311200217930450,"Parsed as literal","b"
635311200217940451,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200217940451,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200217940451,"Parsed as literal","fib2"
635311200217950451,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200217950451,"Parsed as literal",""
635311200217950451,"Parsed as literal",""
635311200217950451,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200217960452,"Parsed as literal"," "
635311200217960452,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200217970452,"Parsed as literal","fib2"
635311200217970452,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200217970452,"Parsed as literal",""
635311200217970452,"Parsed as literal",""
635311200217980453,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311200217980453,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311200217980453,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311200217990454,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200217990454,"Parsed as literal",""
635311200217990454,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200217990454,"Parsed as literal","a"
635311200218000454,"Parsed as literal","b"
635311200218000454,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200218000454,"Parsed as literal","a"
635311200218010455,"Parsed as literal","b"
635311200218010455,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200218010455,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200218010455,"Parsed as literal","fib2"
635311200218020455,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200218020455,"Parsed as literal",""
635311200218020455,"Parsed as literal",""
635311200218030456,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200218030456,"Parsed as literal"," "
635311200218030456,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200218030456,"Parsed as literal","fib2"
635311200218040456,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200218040456,"Parsed as literal",""
635311200218040456,"Parsed as literal",""
635311200218040456,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311200218050457,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311200218050457,"Parsed as literal","fib2"
635311200218050457,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311200218060458,"Parsed as literal",""
635311200218060458,"Parsed as literal",""
635311200218060458,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200218060458,"Parsed as literal"," 0 "
635311200218070458,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200218070458,"Parsed as literal"," 1 "
635311200218070458,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311200218080459,"Parsed as literal","zipWith"
635311200218080459,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311200218080459,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311200218080459,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200218090459,"Parsed as literal",""
635311200218090459,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200218090459,"Parsed as literal","a"
635311200218100460,"Parsed as literal","b"
635311200218100460,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200218100460,"Parsed as literal","a"
635311200218100460,"Parsed as literal","b"
635311200218110460,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200218110460,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200218110460,"Parsed as literal","fib2"
635311200218120461,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200218120461,"Parsed as literal",""
635311200218120461,"Parsed as literal",""
635311200218120461,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200218130462,"Parsed as literal"," "
635311200218130462,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200218130462,"Parsed as literal","fib2"
635311200218130462,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200218140462,"Parsed as literal",""
635311200218140462,"Parsed as literal",""
635311200218140462,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311200218150463,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311200218150463,"Parsed as literal","fib2"
635311200218150463,"Parsed as literal","n"
635311200218160463,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311200218160463,"Parsed as literal","take"
635311200218160463,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311200218160463,"Parsed as literal","n"
635311200218170464,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311200218170464,"Parsed as literal","fib2"
635311200218170464,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200218170464,"Parsed as literal",""
635311200218180464,"Parsed as literal",""
635311200218180464,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311200218180464,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311200218180464,"Parsed as literal","fib2"
635311200218190465,"Parsed as literal","n"
635311200218190465,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311200218190465,"Parsed as literal","take"
635311200218200466,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311200218200466,"Parsed as literal","n"
635311200218200466,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311200218200466,"Parsed as literal","fib2"
635311200218210466,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200218210466,"Parsed as literal",""
635311200218210466,"Parsed as literal",""
635311200218220467,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311200218220467,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311200218220467,"Parsed as literal","fac"
635311200218220467,"Parsed as literal","0"
635311200218230467,"Parsed as literal"," 1"
635311200218230467,"Invalid operator","@fac(0) -> 1","0"
635311200218230467,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311200218230467,"Parsed as literal","fac"
635311200218240468,"Parsed as literal","0"
635311200218240468,"Parsed as literal"," 1"
635311200218240468,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311200218250468,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311200218250468,"Parsed as literal","fac"
635311200218250468,"Parsed as literal","n"
635311200218260469,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311200218260469,"Parsed as literal"," n "
635311200218260469,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311200218260469,"Parsed as literal","fac"
635311200218270470,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311200218270470,"Parsed as literal","n"
635311200218270470,"Parsed as literal","1"
635311200218270470,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311200218280470,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311200218280470,"Parsed as literal","fac"
635311200218280470,"Parsed as literal","n"
635311200218290471,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311200218290471,"Parsed as literal"," n "
635311200218290471,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311200218290471,"Parsed as literal","fac"
635311200218300471,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311200218300471,"Parsed as literal","n"
635311200218300471,"Parsed as literal","1"
635311200218300471,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311200218310472,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311200218310472,"Parsed as literal","pow"
635311200218310472,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311200218320472,"Parsed as literal","num"
635311200218320472,"Parsed as literal","0"
635311200218320472,"Parsed as literal"," 1"
635311200218320472,"Invalid operator","@pow(num,0) -> 1","0"
635311200218330473,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311200218330473,"Parsed as literal","pow"
635311200218330473,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311200218340474,"Parsed as literal","num"
635311200218340474,"Parsed as literal","0"
635311200218340474,"Parsed as literal"," 1"
635311200218340474,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311200218350474,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311200218350474,"Parsed as literal","pow"
635311200218350474,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311200218350474,"Parsed as literal","num"
635311200218360475,"Parsed as literal","1"
635311200218360475,"Parsed as literal"," num"
635311200218360475,"Invalid operator","@pow(num,1) -> num","0"
635311200218370475,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311200218370475,"Parsed as literal","pow"
635311200218370475,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311200218370475,"Parsed as literal","num"
635311200218380476,"Parsed as literal","1"
635311200218380476,"Parsed as literal"," num"
635311200218380476,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311200218390476,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311200218390476,"Parsed as literal","pow"
635311200218390476,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311200218390476,"Parsed as literal","num"
635311200218400477,"Parsed as literal"," power"
635311200218400477,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311200218400477,"Parsed as literal"," num "
635311200218410478,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311200218410478,"Parsed as literal","pow"
635311200218410478,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311200218410478,"Parsed as literal","num"
635311200218420478,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311200218420478,"Parsed as literal","power"
635311200218420478,"Parsed as literal","1"
635311200218420478,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311200218430479,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311200218430479,"Parsed as literal","pow"
635311200218430479,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311200218440479,"Parsed as literal","num"
635311200218440479,"Parsed as literal"," power"
635311200218440479,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311200218440479,"Parsed as literal"," num "
635311200218450480,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311200218450480,"Parsed as literal","pow"
635311200218450480,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311200218450480,"Parsed as literal","num"
635311200218460480,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311200218460480,"Parsed as literal","power"
635311200218460480,"Parsed as literal","1"
635311200218470481,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311200218470481,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311200218470481,"Parsed as literal","upArrow"
635311200218470481,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311200218480482,"Parsed as literal","a"
635311200218480482,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311200218480482,"Parsed as literal","b"
635311200218490482,"Parsed as literal","1"
635311200218490482,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311200218490482,"Parsed as literal","pow"
635311200218490482,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311200218500483,"Parsed as literal","a"
635311200218500483,"Parsed as literal","b"
635311200218500483,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311200218500483,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311200218510483,"Parsed as literal","upArrow"
635311200218510483,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311200218510483,"Parsed as literal","a"
635311200218520484,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311200218520484,"Parsed as literal","b"
635311200218520484,"Parsed as literal","1"
635311200218520484,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311200218530484,"Parsed as literal","pow"
635311200218530484,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311200218530484,"Parsed as literal","a"
635311200218540485,"Parsed as literal","b"
635311200218540485,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311200218540485,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311200218540485,"Parsed as literal","upArrow"
635311200218550486,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311200218550486,"Parsed as literal","a"
635311200218550486,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311200218550486,"Parsed as literal","1"
635311200218560486,"Parsed as literal","n"
635311200218560486,"Parsed as literal"," a"
635311200218560486,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311200218570487,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311200218570487,"Parsed as literal","upArrow"
635311200218570487,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311200218570487,"Parsed as literal","a"
635311200218580487,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311200218580487,"Parsed as literal","1"
635311200218580487,"Parsed as literal","n"
635311200218580487,"Parsed as literal"," a"
635311200218590488,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311200218590488,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311200218590488,"Parsed as literal","upArrow"
635311200218600488,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311200218600488,"Parsed as literal","a"
635311200218600488,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311200218610489,"Parsed as literal","b"
635311200218610489,"Parsed as literal","n"
635311200218610489,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311200218610489,"Parsed as literal","upArrow"
635311200218620490,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311200218620490,"Parsed as literal","a"
635311200218620490,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311200218630490,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311200218630490,"Parsed as literal","upArrow"
635311200218630490,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311200218630490,"Parsed as literal","a"
635311200218640491,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311200218640491,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311200218640491,"Parsed as literal","b"
635311200218640491,"Parsed as literal","1"
635311200218650491,"Parsed as literal","n"
635311200218650491,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311200218650491,"Parsed as literal","n"
635311200218660492,"Parsed as literal","1"
635311200218660492,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311200218660492,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311200218660492,"Parsed as literal","upArrow"
635311200218670492,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311200218670492,"Parsed as literal","a"
635311200218670492,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311200218670492,"Parsed as literal","b"
635311200218680493,"Parsed as literal","n"
635311200218680493,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311200218680493,"Parsed as literal","upArrow"
635311200218690494,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311200218690494,"Parsed as literal","a"
635311200218690494,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311200218690494,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311200218700494,"Parsed as literal","upArrow"
635311200218700494,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311200218700494,"Parsed as literal","a"
635311200218710495,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311200218710495,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311200218710495,"Parsed as literal","b"
635311200218710495,"Parsed as literal","1"
635311200218720495,"Parsed as literal","n"
635311200218720495,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311200218720495,"Parsed as literal","n"
635311200218720495,"Parsed as literal","1"
635311200218730496,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311200218730496,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311200218730496,"Parsed as literal","graham"
635311200218740496,"Parsed as literal","0"
635311200218740496,"Parsed as literal"," 4"
635311200218740496,"Invalid operator","@graham(0) -> 4","0"
635311200218740496,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311200218750497,"Parsed as literal","graham"
635311200218750497,"Parsed as literal","0"
635311200218750497,"Parsed as literal"," 4"
635311200218760498,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311200218760498,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311200218760498,"Parsed as literal","graham"
635311200218760498,"Parsed as literal","n"
635311200218770498,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311200218770498,"Parsed as literal","upArrow"
635311200218770498,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311200218780499,"Parsed as literal","3"
635311200218780499,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311200218780499,"Parsed as literal","3"
635311200218780499,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311200218790499,"Parsed as literal","graham"
635311200218790499,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311200218790499,"Parsed as literal","n"
635311200218790499,"Parsed as literal","1"
635311200218800500,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311200218800500,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311200218800500,"Parsed as literal","graham"
635311200218810500,"Parsed as literal","n"
635311200218810500,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311200218810500,"Parsed as literal","upArrow"
635311200218810500,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311200218820501,"Parsed as literal","3"
635311200218820501,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311200218820501,"Parsed as literal","3"
635311200218830502,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311200218830502,"Parsed as literal","graham"
635311200218830502,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311200218830502,"Parsed as literal","n"
635311200218840502,"Parsed as literal","1"
635311200218840502,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311200218850503,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311200218850503,"Parsed as literal","grahamsNumber"
635311200218850503,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200218850503,"Parsed as literal",""
635311200218860503,"Parsed as literal",""
635311200218860503,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311200218860503,"Parsed as literal","graham"
635311200218870504,"Parsed as literal","64"
635311200218870504,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311200218870504,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311200218870504,"Parsed as literal","grahamsNumber"
635311200218880504,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200218880504,"Parsed as literal",""
635311200218880504,"Parsed as literal",""
635311200218880504,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311200218890505,"Parsed as literal","graham"
635311200218890505,"Parsed as literal","64"
635311200218890505,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311200218900506,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311200218900506,"Parsed as literal","ack"
635311200218900506,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311200218900506,"Parsed as literal","0"
635311200218910506,"Parsed as literal","n"
635311200218910506,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311200218910506,"Parsed as literal"," n "
635311200218920507,"Parsed as literal"," 1"
635311200218920507,"Invalid operator","@ack(0,n) -> n + 1","0"
635311200218920507,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311200218920507,"Parsed as literal","ack"
635311200218930507,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311200218930507,"Parsed as literal","0"
635311200218930507,"Parsed as literal","n"
635311200218940508,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311200218940508,"Parsed as literal"," n "
635311200218940508,"Parsed as literal"," 1"
635311200218940508,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311200218950508,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311200218950508,"Parsed as literal","ack"
635311200218950508,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311200218960509,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311200218960509,"Parsed as literal","m"
635311200218960509,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311200218960509,"Parsed as literal","m"
635311200218970510,"Parsed as literal","0"
635311200218970510,"Parsed as literal","0"
635311200218970510,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311200218970510,"Parsed as literal","ack"
635311200218980510,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311200218980510,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311200218980510,"Parsed as literal","m"
635311200218990511,"Parsed as literal","1"
635311200218990511,"Parsed as literal","1"
635311200218990511,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311200218990511,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311200219000511,"Parsed as literal","ack"
635311200219000511,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311200219000511,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311200219000511,"Parsed as literal","m"
635311200219010512,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311200219010512,"Parsed as literal","m"
635311200219010512,"Parsed as literal","0"
635311200219020512,"Parsed as literal","0"
635311200219020512,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311200219020512,"Parsed as literal","ack"
635311200219020512,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311200219030513,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311200219030513,"Parsed as literal","m"
635311200219030513,"Parsed as literal","1"
635311200219030513,"Parsed as literal","1"
635311200219040514,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311200219040514,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311200219040514,"Parsed as literal","ack"
635311200219050514,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311200219050514,"Parsed as literal","m"
635311200219050514,"Parsed as literal","n"
635311200219060515,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311200219060515,"Parsed as literal","ack"
635311200219060515,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311200219060515,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311200219070515,"Parsed as literal","m"
635311200219070515,"Parsed as literal","1"
635311200219070515,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311200219070515,"Parsed as literal","ack"
635311200219080516,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311200219080516,"Parsed as literal","m"
635311200219080516,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200219090516,"Parsed as literal","n"
635311200219090516,"Parsed as literal","1"
635311200219090516,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311200219090516,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311200219100517,"Parsed as literal","ack"
635311200219100517,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311200219100517,"Parsed as literal","m"
635311200219100517,"Parsed as literal","n"
635311200219110518,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311200219110518,"Parsed as literal","ack"
635311200219110518,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311200219120518,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311200219120518,"Parsed as literal","m"
635311200219120518,"Parsed as literal","1"
635311200219120518,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311200219130519,"Parsed as literal","ack"
635311200219130519,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311200219130519,"Parsed as literal","m"
635311200219140519,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200219140519,"Parsed as literal","n"
635311200219140519,"Parsed as literal","1"
635311200219140519,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311200219150520,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311200219150520,"Parsed as literal","acker"
635311200219150520,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311200219160520,"Parsed as literal","m"
635311200219160520,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311200219160520,"Parsed as literal","n"
635311200219160520,"Parsed as literal","0"
635311200219170521,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311200219170521,"Parsed as literal"," m"
635311200219170521,"Parsed as literal","n"
635311200219170521,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311200219180522,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311200219180522,"Parsed as literal","acker"
635311200219180522,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311200219180522,"Parsed as literal","m"
635311200219190522,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311200219190522,"Parsed as literal","n"
635311200219190522,"Parsed as literal","0"
635311200219200523,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311200219200523,"Parsed as literal"," m"
635311200219200523,"Parsed as literal","n"
635311200219200523,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311200219210523,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311200219210523,"Parsed as literal","acker"
635311200219210523,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311200219220524,"Parsed as literal","m"
635311200219220524,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311200219220524,"Parsed as literal","0"
635311200219220524,"Parsed as literal","1"
635311200219230524,"Parsed as literal"," 0"
635311200219230524,"Invalid operator","@acker(m,0,1) -> 0","0"
635311200219230524,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311200219230524,"Parsed as literal","acker"
635311200219240525,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311200219240525,"Parsed as literal","m"
635311200219240525,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311200219240525,"Parsed as literal","0"
635311200219250526,"Parsed as literal","1"
635311200219250526,"Parsed as literal"," 0"
635311200219250526,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311200219260526,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311200219260526,"Parsed as literal","acker"
635311200219260526,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311200219270527,"Parsed as literal","m"
635311200219270527,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311200219270527,"Parsed as literal","0"
635311200219270527,"Parsed as literal","2"
635311200219280527,"Parsed as literal"," 1"
635311200219280527,"Invalid operator","@acker(m,0,2) -> 1","0"
635311200219280527,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311200219280527,"Parsed as literal","acker"
635311200219290528,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311200219290528,"Parsed as literal","m"
635311200219290528,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311200219290528,"Parsed as literal","0"
635311200219300528,"Parsed as literal","2"
635311200219300528,"Parsed as literal"," 1"
635311200219300528,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311200219310529,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311200219310529,"Parsed as literal","acker"
635311200219310529,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311200219310529,"Parsed as literal","m"
635311200219320530,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311200219320530,"Parsed as literal","0"
635311200219320530,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311200219330530,"Parsed as literal","p"
635311200219330530,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311200219330530,"Parsed as literal","p"
635311200219330530,"Parsed as literal","2"
635311200219340531,"Parsed as literal"," m"
635311200219340531,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311200219340531,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311200219340531,"Parsed as literal","acker"
635311200219350531,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311200219350531,"Parsed as literal","m"
635311200219350531,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311200219360532,"Parsed as literal","0"
635311200219360532,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311200219360532,"Parsed as literal","p"
635311200219360532,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311200219370532,"Parsed as literal","p"
635311200219370532,"Parsed as literal","2"
635311200219370532,"Parsed as literal"," m"
635311200219380533,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311200219380533,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311200219380533,"Parsed as literal","acker"
635311200219380533,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311200219390534,"Parsed as literal","m"
635311200219390534,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311200219390534,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311200219400534,"Parsed as literal","n"
635311200219400534,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311200219400534,"Parsed as literal","n"
635311200219400534,"Parsed as literal","0"
635311200219410535,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311200219410535,"Parsed as literal","p"
635311200219410535,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311200219410535,"Parsed as literal","p"
635311200219420535,"Parsed as literal","0"
635311200219420535,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311200219420535,"Parsed as literal","acker"
635311200219430536,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311200219430536,"Parsed as literal","m"
635311200219430536,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311200219440536,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311200219440536,"Parsed as literal","acker"
635311200219440536,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311200219440536,"Parsed as literal","m"
635311200219450537,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311200219450537,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311200219450537,"Parsed as literal","n"
635311200219450537,"Parsed as literal","1"
635311200219460538,"Parsed as literal","p"
635311200219460538,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311200219460538,"Parsed as literal","p"
635311200219460538,"Parsed as literal","1"
635311200219470538,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311200219470538,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311200219470538,"Parsed as literal","acker"
635311200219480539,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311200219480539,"Parsed as literal","m"
635311200219480539,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311200219480539,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311200219490539,"Parsed as literal","n"
635311200219490539,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311200219490539,"Parsed as literal","n"
635311200219490539,"Parsed as literal","0"
635311200219500540,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311200219500540,"Parsed as literal","p"
635311200219500540,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311200219510541,"Parsed as literal","p"
635311200219510541,"Parsed as literal","0"
635311200219510541,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311200219510541,"Parsed as literal","acker"
635311200219520541,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311200219520541,"Parsed as literal","m"
635311200219520541,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311200219530542,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311200219530542,"Parsed as literal","acker"
635311200219530542,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311200219530542,"Parsed as literal","m"
635311200219540542,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311200219540542,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311200219540542,"Parsed as literal","n"
635311200219540542,"Parsed as literal","1"
635311200219550543,"Parsed as literal","p"
635311200219550543,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311200219550543,"Parsed as literal","p"
635311200219560543,"Parsed as literal","1"
635311200219560543,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311200219560543,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311200219570544,"Parsed as literal","hyper"
635311200219570544,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311200219570544,"Parsed as literal","0"
635311200219570544,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200219580545,"Parsed as literal","a"
635311200219580545,"Parsed as literal","b"
635311200219580545,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311200219580545,"Parsed as literal"," b"
635311200219590545,"Parsed as literal","1"
635311200219590545,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311200219590545,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311200219600546,"Parsed as literal","hyper"
635311200219600546,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311200219600546,"Parsed as literal","0"
635311200219600546,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200219610546,"Parsed as literal","a"
635311200219610546,"Parsed as literal","b"
635311200219610546,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311200219610546,"Parsed as literal"," b"
635311200219620547,"Parsed as literal","1"
635311200219620547,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311200219620547,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311200219630547,"Parsed as literal","hyper"
635311200219630547,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311200219630547,"Parsed as literal","1"
635311200219630547,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200219640548,"Parsed as literal","a"
635311200219640548,"Parsed as literal","0"
635311200219640548,"Parsed as literal"," a"
635311200219640548,"Invalid operator","@hyper(1,a,0) -> a","0"
635311200219650549,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311200219650549,"Parsed as literal","hyper"
635311200219650549,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311200219650549,"Parsed as literal","1"
635311200219660549,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200219660549,"Parsed as literal","a"
635311200219660549,"Parsed as literal","0"
635311200219670550,"Parsed as literal"," a"
635311200219670550,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311200219670550,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311200219670550,"Parsed as literal","hyper"
635311200219680550,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311200219680550,"Parsed as literal","2"
635311200219680550,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200219690551,"Parsed as literal","a"
635311200219690551,"Parsed as literal","0"
635311200219690551,"Parsed as literal"," 0"
635311200219690551,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311200219700551,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311200219700551,"Parsed as literal","hyper"
635311200219700551,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311200219700551,"Parsed as literal","2"
635311200219710552,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200219710552,"Parsed as literal","a"
635311200219710552,"Parsed as literal","0"
635311200219720553,"Parsed as literal"," 0"
635311200219720553,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311200219720553,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311200219720553,"Parsed as literal","hyper"
635311200219730553,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311200219730553,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311200219730553,"Parsed as literal","n"
635311200219740554,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311200219740554,"Parsed as literal","n"
635311200219740554,"Parsed as literal","2"
635311200219740554,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311200219750554,"Parsed as literal","a"
635311200219750554,"Parsed as literal","0"
635311200219750554,"Parsed as literal"," 1"
635311200219750554,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311200219760555,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311200219760555,"Parsed as literal","hyper"
635311200219760555,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311200219770555,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311200219770555,"Parsed as literal","n"
635311200219770555,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311200219770555,"Parsed as literal","n"
635311200219780556,"Parsed as literal","2"
635311200219780556,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311200219780556,"Parsed as literal","a"
635311200219780556,"Parsed as literal","0"
635311200219790557,"Parsed as literal"," 1"
635311200219790557,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311200219790557,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311200219800557,"Parsed as literal","hyper"
635311200219800557,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311200219800557,"Parsed as literal","n"
635311200219810558,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200219810558,"Parsed as literal","a"
635311200219810558,"Parsed as literal","b"
635311200219820558,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311200219820558,"Parsed as literal","hyper"
635311200219820558,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311200219830559,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311200219830559,"Parsed as literal","n"
635311200219830559,"Parsed as literal","1"
635311200219830559,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311200219840559,"Parsed as literal","a"
635311200219840559,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311200219840559,"Parsed as literal","hyper"
635311200219840559,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311200219850560,"Parsed as literal","n"
635311200219850560,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311200219850560,"Parsed as literal","a"
635311200219860561,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311200219860561,"Parsed as literal","b"
635311200219860561,"Parsed as literal","1"
635311200219860561,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311200219870561,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311200219870561,"Parsed as literal","hyper"
635311200219870561,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311200219880562,"Parsed as literal","n"
635311200219880562,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200219880562,"Parsed as literal","a"
635311200219880562,"Parsed as literal","b"
635311200219890562,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311200219890562,"Parsed as literal","hyper"
635311200219890562,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311200219890562,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311200219900563,"Parsed as literal","n"
635311200219900563,"Parsed as literal","1"
635311200219900563,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311200219910563,"Parsed as literal","a"
635311200219910563,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311200219910563,"Parsed as literal","hyper"
635311200219910563,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311200219920564,"Parsed as literal","n"
635311200219920564,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311200219920564,"Parsed as literal","a"
635311200219920564,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311200219930565,"Parsed as literal","b"
635311200219930565,"Parsed as literal","1"
635311200219930565,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311200219940565,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311200219940565,"Parsed as literal","sudan"
635311200219940565,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311200219950566,"Parsed as literal","0"
635311200219950566,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200219950566,"Parsed as literal","x"
635311200219950566,"Parsed as literal","y"
635311200219960566,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311200219960566,"Parsed as literal"," x "
635311200219960566,"Parsed as literal"," y"
635311200219960566,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311200219970567,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311200219970567,"Parsed as literal","sudan"
635311200219970567,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311200219980567,"Parsed as literal","0"
635311200219980567,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200219980567,"Parsed as literal","x"
635311200219980567,"Parsed as literal","y"
635311200219990568,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311200219990568,"Parsed as literal"," x "
635311200219990568,"Parsed as literal"," y"
635311200219990568,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311200220000569,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311200220000569,"Parsed as literal","sudan"
635311200220000569,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311200220010569,"Parsed as literal","n"
635311200220010569,"Parsed as literal","0"
635311200220010569,"Parsed as literal"," x"
635311200220010569,"Invalid operator","@sudan(n,0) -> x","0"
635311200220020570,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311200220020570,"Parsed as literal","sudan"
635311200220020570,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311200220020570,"Parsed as literal","n"
635311200220030570,"Parsed as literal","0"
635311200220030570,"Parsed as literal"," x"
635311200220030570,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311200220040571,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311200220040571,"Parsed as literal","sudan"
635311200220040571,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311200220050571,"Parsed as literal","n"
635311200220050571,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200220050571,"Parsed as literal","x"
635311200220050571,"Parsed as literal","y"
635311200220060572,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200220060572,"Parsed as literal","sudan"
635311200220060572,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200220070573,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200220070573,"Parsed as literal","n"
635311200220070573,"Parsed as literal","1"
635311200220070573,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311200220080573,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311200220080573,"Parsed as literal","sudan"
635311200220080573,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311200220080573,"Parsed as literal","n"
635311200220090574,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311200220090574,"Parsed as literal","x"
635311200220090574,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311200220100574,"Parsed as literal","y"
635311200220100574,"Parsed as literal","1"
635311200220100574,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311200220100574,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311200220110575,"Parsed as literal","sudan"
635311200220110575,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311200220110575,"Parsed as literal","n"
635311200220120575,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311200220120575,"Parsed as literal","x"
635311200220120575,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311200220120575,"Parsed as literal","y"
635311200220130576,"Parsed as literal","1"
635311200220130576,"Parsed as literal","y"
635311200220130576,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311200220130576,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311200220140577,"Parsed as literal","sudan"
635311200220140577,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311200220140577,"Parsed as literal","n"
635311200220150577,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200220150577,"Parsed as literal","x"
635311200220150577,"Parsed as literal","y"
635311200220150577,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200220160578,"Parsed as literal","sudan"
635311200220160578,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200220160578,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200220170578,"Parsed as literal","n"
635311200220170578,"Parsed as literal","1"
635311200220170578,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311200220170578,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311200220180579,"Parsed as literal","sudan"
635311200220180579,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311200220180579,"Parsed as literal","n"
635311200220190579,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311200220190579,"Parsed as literal","x"
635311200220190579,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311200220190579,"Parsed as literal","y"
635311200220200580,"Parsed as literal","1"
635311200220200580,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311200220200580,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311200220210581,"Parsed as literal","sudan"
635311200220210581,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311200220210581,"Parsed as literal","n"
635311200220210581,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311200220220581,"Parsed as literal","x"
635311200220220581,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311200220220581,"Parsed as literal","y"
635311200220220581,"Parsed as literal","1"
635311200220230582,"Parsed as literal","y"
635311200220230582,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311200220230582,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311200220240582,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311200220240582,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311200220240582,"StepEvaluate","->","Changed","Declared @max"
635311200220240582,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200220250583,"StepEvaluate","->","Changed","Declared @max"
635311200220250583,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200220250583,"StepEvaluate","->","Changed","Declared @random"
635311200220250583,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311200220260583,"StepEvaluate","->","Changed","Declared @random"
635311200220260583,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311200220260583,"StepEvaluate","->","Changed","Declared @gcd"
635311200220260583,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200220270584,"StepEvaluate","->","Changed","Declared @gcd"
635311200220270584,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200220270584,"StepEvaluate","->","Changed","Declared @gcd"
635311200220270584,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200220280585,"StepEvaluate","->","Changed","Declared @fib"
635311200220280585,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200220280585,"StepEvaluate","->","Changed","Declared @fib"
635311200220280585,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200220290585,"StepEvaluate","->","Changed","Declared @fib"
635311200220290585,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200220290585,"StepEvaluate","->","Changed","Declared @fib2"
635311200220290585,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311200220300586,"StepEvaluate","->","Changed","Declared @fib2"
635311200220300586,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311200220300586,"StepEvaluate","->","Changed","Declared @fac"
635311200220300586,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311200220310586,"StepEvaluate","->","Changed","Declared @fac"
635311200220310586,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311200220310586,"StepEvaluate","->","Changed","Declared @pow"
635311200220310586,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200220320587,"StepEvaluate","->","Changed","Declared @pow"
635311200220320587,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200220320587,"StepEvaluate","->","Changed","Declared @pow"
635311200220330587,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200220330587,"StepEvaluate","->","Changed","Declared @upArrow"
635311200220330587,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200220330587,"StepEvaluate","->","Changed","Declared @upArrow"
635311200220340588,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200220340588,"StepEvaluate","->","Changed","Declared @upArrow"
635311200220340588,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200220340588,"StepEvaluate","->","Changed","Declared @graham"
635311200220350589,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311200220350589,"StepEvaluate","->","Changed","Declared @graham"
635311200220350589,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311200220350589,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311200220360589,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311200220360589,"StepEvaluate","->","Changed","Declared @ack"
635311200220360589,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200220360589,"StepEvaluate","->","Changed","Declared @ack"
635311200220370590,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200220370590,"StepEvaluate","->","Changed","Declared @ack"
635311200220370590,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200220370590,"StepEvaluate","->","Changed","Declared @acker"
635311200220380590,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200220380590,"StepEvaluate","->","Changed","Declared @acker"
635311200220380590,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200220380590,"StepEvaluate","->","Changed","Declared @acker"
635311200220390591,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200220390591,"StepEvaluate","->","Changed","Declared @acker"
635311200220390591,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200220390591,"StepEvaluate","->","Changed","Declared @acker"
635311200220400591,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200220400591,"StepEvaluate","->","Changed","Declared @hyper"
635311200220400591,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200220400591,"StepEvaluate","->","Changed","Declared @hyper"
635311200220410592,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200220410592,"StepEvaluate","->","Changed","Declared @hyper"
635311200220410592,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200220410592,"StepEvaluate","->","Changed","Declared @hyper"
635311200220420593,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200220420593,"StepEvaluate","->","Changed","Declared @hyper"
635311200220420593,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200220430593,"StepEvaluate","->","Changed","Declared @sudan"
635311200220430593,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200220430593,"StepEvaluate","->","Changed","Declared @sudan"
635311200220430593,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200220440594,"StepEvaluate","->","Changed","Declared @sudan"
635311200220440594,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200220440594,"StepEvaluate","[]","Changed","File imported"
635311200220440594,"StepEvaluate","File imported","Unchanged","File imported"
635311200220450594,"StepEvaluate","@","Changed","@"
635311200220450594,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200220450594,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200220450594,"StepEvaluate",",","Unchanged",","
635311200220460595,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200220460595,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200220460595,"StepEvaluate","PAT@-M","Changed","[]"
635311200220470595,"StepEvaluate","SEL@import","Changed","[]"
635311200220470595,"StepEvaluate","@","Changed","[]"
635311200220470595,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311200220480596,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311200220480596,"Parsed as literal","quickSort"
635311200220480596,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200220480596,"Parsed as literal",""
635311200220490597,"Parsed as literal",""
635311200220490597,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200220490597,"Parsed as literal",""
635311200220490597,"Parsed as literal",""
635311200220500597,"Invalid operator","@quickSort([]) -> []","0"
635311200220500597,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311200220500597,"Parsed as literal","quickSort"
635311200220510598,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200220510598,"Parsed as literal",""
635311200220510598,"Parsed as literal",""
635311200220520598,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200220520598,"Parsed as literal",""
635311200220520598,"Parsed as literal",""
635311200220530599,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200220530599,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311200220530599,"Parsed as literal","quickSort"
635311200220540599,"Parsed as literal","list"
635311200220540599,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200220540599,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311200220550600,"Parsed as literal","quickSort"
635311200220550600,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311200220550600,"Parsed as literal","filter"
635311200220560601,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311200220560601,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311200220560601,"Parsed as literal",""
635311200220560601,"Parsed as literal","i"
635311200220570601,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311200220570601,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200220570601,"Parsed as literal"," i "
635311200220570601,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200220580602,"Parsed as literal"," "
635311200220580602,"Parsed as literal","list"
635311200220580602,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200220590602,"Parsed as literal",""
635311200220590602,"Parsed as literal","list"
635311200220590602,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311200220590602,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200220600603,"Parsed as literal",""
635311200220600603,"Parsed as literal","i"
635311200220600603,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311200220600603,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200220610603,"Parsed as literal"," i "
635311200220610603,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200220610603,"Parsed as literal"," "
635311200220620604,"Parsed as literal","list"
635311200220620604,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200220620604,"Parsed as literal",""
635311200220620604,"Parsed as literal","list"
635311200220630605,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311200220630605,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311200220630605,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311200220630605,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200220640605,"Parsed as literal",""
635311200220640605,"Parsed as literal","i"
635311200220640605,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200220650606,"Parsed as literal"," i "
635311200220650606,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200220650606,"Parsed as literal"," "
635311200220650606,"Parsed as literal","list"
635311200220660606,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200220660606,"Parsed as literal",""
635311200220660606,"Parsed as literal","list"
635311200220670607,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200220670607,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311200220670607,"Parsed as literal"," "
635311200220670607,"Parsed as literal","list "
635311200220680607,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311200220680607,"Parsed as literal","quickSort"
635311200220680607,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311200220690608,"Parsed as literal","filter"
635311200220690608,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311200220690608,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311200220690608,"Parsed as literal",""
635311200220700609,"Parsed as literal","i"
635311200220700609,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311200220700609,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200220700609,"Parsed as literal"," i "
635311200220710609,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200220710609,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200220710609,"Parsed as literal"," "
635311200220710609,"Parsed as literal","list"
635311200220720610,"Parsed as literal","1"
635311200220720610,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200220720610,"Parsed as literal",""
635311200220730610,"Parsed as literal","list"
635311200220730610,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311200220730610,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200220730610,"Parsed as literal",""
635311200220740611,"Parsed as literal","i"
635311200220740611,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311200220740611,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200220740611,"Parsed as literal"," i "
635311200220750611,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200220750611,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200220750611,"Parsed as literal"," "
635311200220760612,"Parsed as literal","list"
635311200220760612,"Parsed as literal","1"
635311200220760612,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200220760612,"Parsed as literal",""
635311200220770613,"Parsed as literal","list"
635311200220770613,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311200220770613,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311200220780613,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311200220780613,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200220780613,"Parsed as literal",""
635311200220780613,"Parsed as literal","i"
635311200220790614,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200220790614,"Parsed as literal"," i "
635311200220790614,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200220790614,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200220800614,"Parsed as literal"," "
635311200220800614,"Parsed as literal","list"
635311200220800614,"Parsed as literal","1"
635311200220810615,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200220810615,"Parsed as literal",""
635311200220810615,"Parsed as literal","list"
635311200220810615,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311200220820615,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311200220820615,"Parsed as literal","quickSort"
635311200220820615,"Parsed as literal","list"
635311200220830616,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200220830616,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311200220840617,"Parsed as literal","quickSort"
635311200220840617,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311200220840617,"Parsed as literal","filter"
635311200220850617,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311200220850617,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311200220850617,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200220850617,"Parsed as literal",""
635311200220860618,"Parsed as literal","i"
635311200220860618,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200220860618,"Parsed as literal"," i "
635311200220870618,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200220870618,"Parsed as literal"," "
635311200220870618,"Parsed as literal","list"
635311200220870618,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200220880619,"Parsed as literal",""
635311200220880619,"Parsed as literal","list"
635311200220880619,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200220890619,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311200220890619,"Parsed as literal"," "
635311200220890619,"Parsed as literal","list "
635311200220890619,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311200220900620,"Parsed as literal","quickSort"
635311200220900620,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311200220900620,"Parsed as literal","filter"
635311200220910621,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311200220910621,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311200220910621,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200220910621,"Parsed as literal",""
635311200220920621,"Parsed as literal","i"
635311200220920621,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200220920621,"Parsed as literal"," i "
635311200220930622,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200220930622,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200220930622,"Parsed as literal"," "
635311200220930622,"Parsed as literal","list"
635311200220940622,"Parsed as literal","1"
635311200220940622,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200220940622,"Parsed as literal",""
635311200220940622,"Parsed as literal","list"
635311200220950623,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311200220950623,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311200220950623,"Parsed as literal","mergeSort"
635311200220960623,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200220960623,"Parsed as literal",""
635311200220960623,"Parsed as literal",""
635311200220960623,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200220970624,"Parsed as literal",""
635311200220970624,"Parsed as literal",""
635311200220970624,"Invalid operator","@mergeSort([]) -> []","0"
635311200220970624,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311200220980625,"Parsed as literal","mergeSort"
635311200220980625,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200220980625,"Parsed as literal",""
635311200220990625,"Parsed as literal",""
635311200220990625,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200220990625,"Parsed as literal",""
635311200220990625,"Parsed as literal",""
635311200221000626,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311200221000626,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311200221000626,"Parsed as literal","mergeSort"
635311200221000626,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311200221010626,"Parsed as literal","list"
635311200221010626,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311200221010626,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311200221020627,"Parsed as literal",""
635311200221020627,"Parsed as literal","list"
635311200221020627,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311200221020627,"Parsed as literal",""
635311200221030627,"Parsed as literal",""
635311200221030627,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311200221030627,"Parsed as literal"," "
635311200221030627,"Parsed as literal","list"
635311200221040628,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311200221040628,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311200221040628,"Parsed as literal","mergeSort"
635311200221050629,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311200221050629,"Parsed as literal","list"
635311200221050629,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311200221050629,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311200221060629,"Parsed as literal",""
635311200221060629,"Parsed as literal","list"
635311200221060629,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311200221060629,"Parsed as literal",""
635311200221070630,"Parsed as literal",""
635311200221070630,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311200221070630,"Parsed as literal"," "
635311200221080630,"Parsed as literal","list"
635311200221080630,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311200221080630,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311200221090631,"Parsed as literal","mergeSort"
635311200221090631,"Parsed as literal","list"
635311200221090631,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311200221100631,"Parsed as literal","merge"
635311200221100631,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311200221100631,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311200221110632,"Parsed as literal","mergeSort"
635311200221110632,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311200221110632,"Parsed as literal","take"
635311200221110632,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311200221120633,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311200221120633,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311200221120633,"Parsed as literal","count"
635311200221120633,"Parsed as literal","list"
635311200221130633,"Parsed as literal","2"
635311200221130633,"Parsed as literal","list"
635311200221130633,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311200221140634,"Parsed as literal","mergeSort"
635311200221140634,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311200221140634,"Parsed as literal","skip"
635311200221140634,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311200221150634,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311200221150634,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311200221150634,"Parsed as literal","count"
635311200221160635,"Parsed as literal","list"
635311200221160635,"Parsed as literal","2"
635311200221160635,"Parsed as literal","list"
635311200221160635,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311200221170635,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311200221170635,"Parsed as literal","mergeSort"
635311200221170635,"Parsed as literal","list"
635311200221180636,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311200221180636,"Parsed as literal","merge"
635311200221180636,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311200221190637,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311200221190637,"Parsed as literal","mergeSort"
635311200221190637,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311200221200637,"Parsed as literal","take"
635311200221200637,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311200221200637,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311200221200637,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311200221210638,"Parsed as literal","count"
635311200221210638,"Parsed as literal","list"
635311200221210638,"Parsed as literal","2"
635311200221210638,"Parsed as literal","list"
635311200221220638,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311200221220638,"Parsed as literal","mergeSort"
635311200221220638,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311200221230639,"Parsed as literal","skip"
635311200221230639,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311200221230639,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311200221230639,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311200221240639,"Parsed as literal","count"
635311200221240639,"Parsed as literal","list"
635311200221240639,"Parsed as literal","2"
635311200221250640,"Parsed as literal","list"
635311200221250640,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311200221250640,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311200221250640,"Parsed as literal","merge"
635311200221260641,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311200221260641,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200221260641,"Parsed as literal",""
635311200221270641,"Parsed as literal",""
635311200221270641,"Parsed as literal","list"
635311200221270641,"Parsed as literal"," list"
635311200221270641,"Invalid operator","@merge([],list) -> list","0"
635311200221280642,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311200221280642,"Parsed as literal","merge"
635311200221280642,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311200221280642,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200221290642,"Parsed as literal",""
635311200221290642,"Parsed as literal",""
635311200221290642,"Parsed as literal","list"
635311200221300643,"Parsed as literal"," list"
635311200221300643,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311200221300643,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311200221300643,"Parsed as literal","merge"
635311200221310643,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311200221310643,"Parsed as literal","list"
635311200221310643,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200221310643,"Parsed as literal",""
635311200221320644,"Parsed as literal",""
635311200221320644,"Parsed as literal"," list"
635311200221320644,"Invalid operator","@merge(list,[]) -> list","0"
635311200221330645,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311200221330645,"Parsed as literal","merge"
635311200221330645,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311200221330645,"Parsed as literal","list"
635311200221340645,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200221340645,"Parsed as literal",""
635311200221340645,"Parsed as literal",""
635311200221340645,"Parsed as literal"," list"
635311200221350646,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311200221350646,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311200221350646,"Parsed as literal","merge"
635311200221360646,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311200221360646,"Parsed as literal","left"
635311200221360646,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311200221360646,"Parsed as literal","right "
635311200221370647,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311200221370647,"Parsed as literal"," "
635311200221370647,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311200221380647,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311200221380647,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311200221380647,"Parsed as literal",""
635311200221380647,"Parsed as literal","left "
635311200221390648,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311200221390648,"Parsed as literal"," "
635311200221390648,"Parsed as literal","right"
635311200221390648,"Parsed as literal",""
635311200221400649,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311200221400649,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311200221400649,"Parsed as literal"," "
635311200221410649,"Parsed as literal","left "
635311200221410649,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311200221410649,"Parsed as literal","merge"
635311200221410649,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311200221440651,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311200221440651,"Parsed as literal",""
635311200221450651,"Parsed as literal","left"
635311200221450651,"Parsed as literal","right"
635311200221450651,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311200221460652,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311200221460652,"Parsed as literal","merge"
635311200221460652,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311200221460652,"Parsed as literal","left"
635311200221470653,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311200221470653,"Parsed as literal","right "
635311200221470653,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311200221480653,"Parsed as literal"," "
635311200221480653,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311200221480653,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311200221490654,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311200221490654,"Parsed as literal",""
635311200221490654,"Parsed as literal","left "
635311200221490654,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311200221500654,"Parsed as literal"," "
635311200221500654,"Parsed as literal","right"
635311200221500654,"Parsed as literal",""
635311200221500654,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311200221510655,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311200221510655,"Parsed as literal"," "
635311200221510655,"Parsed as literal","left "
635311200221520655,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311200221520655,"Parsed as literal","merge"
635311200221520655,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311200221520655,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311200221530656,"Parsed as literal",""
635311200221530656,"Parsed as literal","left"
635311200221530656,"Parsed as literal","right"
635311200221540657,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311200221540657,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311200221540657,"Parsed as literal","merge"
635311200221540657,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311200221550657,"Parsed as literal","left"
635311200221550657,"Parsed as literal","right"
635311200221560658,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311200221560658,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311200221560658,"Parsed as literal"," "
635311200221560658,"Parsed as literal","right "
635311200221570658,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311200221570658,"Parsed as literal","merge"
635311200221570658,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311200221580659,"Parsed as literal","left"
635311200221580659,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311200221580659,"Parsed as literal",""
635311200221580659,"Parsed as literal","right"
635311200221590659,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311200221590659,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311200221590659,"Parsed as literal","merge"
635311200221590659,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311200221600660,"Parsed as literal","left"
635311200221600660,"Parsed as literal","right"
635311200221600660,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311200221610661,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311200221610661,"Parsed as literal"," "
635311200221610661,"Parsed as literal","right "
635311200221610661,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311200221620661,"Parsed as literal","merge"
635311200221620661,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311200221620661,"Parsed as literal","left"
635311200221620661,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311200221630662,"Parsed as literal",""
635311200221630662,"Parsed as literal","right"
635311200221630662,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311200221640662,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311200221640662,"Parsed as literal","bubbleSort"
635311200221640662,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311200221650663,"Parsed as literal","list"
635311200221650663,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311200221650663,"Parsed as literal","isSorted"
635311200221650663,"Parsed as literal","list"
635311200221660663,"Parsed as literal"," list"
635311200221660663,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311200221660663,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311200221660663,"Parsed as literal","bubbleSort"
635311200221670664,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311200221670664,"Parsed as literal","list"
635311200221670664,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311200221680665,"Parsed as literal","isSorted"
635311200221680665,"Parsed as literal","list"
635311200221680665,"Parsed as literal"," list"
635311200221680665,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311200221690665,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311200221690665,"Parsed as literal","bubbleSort"
635311200221690665,"Parsed as literal","list"
635311200221700666,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311200221700666,"Parsed as literal","bubbleSort"
635311200221700666,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311200221700666,"Parsed as literal","bubbleSortPass"
635311200221710666,"Parsed as literal","list"
635311200221710666,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311200221710666,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311200221720667,"Parsed as literal","bubbleSort"
635311200221720667,"Parsed as literal","list"
635311200221720667,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311200221720667,"Parsed as literal","bubbleSort"
635311200221730667,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311200221730667,"Parsed as literal","bubbleSortPass"
635311200221730667,"Parsed as literal","list"
635311200221740668,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311200221740668,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311200221740668,"Parsed as literal","bubbleSortPass"
635311200221740668,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200221750669,"Parsed as literal",""
635311200221750669,"Parsed as literal",""
635311200221750669,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200221750669,"Parsed as literal",""
635311200221760669,"Parsed as literal",""
635311200221760669,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311200221760669,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311200221770670,"Parsed as literal","bubbleSortPass"
635311200221770670,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200221770670,"Parsed as literal",""
635311200221770670,"Parsed as literal",""
635311200221780670,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200221780670,"Parsed as literal",""
635311200221780670,"Parsed as literal",""
635311200221780670,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311200221790671,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311200221790671,"Parsed as literal","bubbleSortPass"
635311200221790671,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311200221800671,"Parsed as literal","list"
635311200221800671,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311200221800671,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311200221800671,"Parsed as literal",""
635311200221810672,"Parsed as literal","list "
635311200221810672,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311200221810672,"Parsed as literal",""
635311200221810672,"Parsed as literal",""
635311200221820673,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311200221820673,"Parsed as literal"," "
635311200221820673,"Parsed as literal","list"
635311200221830673,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311200221830673,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311200221830673,"Parsed as literal","bubbleSortPass"
635311200221830673,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311200221840674,"Parsed as literal","list"
635311200221840674,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311200221840674,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311200221840674,"Parsed as literal",""
635311200221850674,"Parsed as literal","list "
635311200221850674,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311200221850674,"Parsed as literal",""
635311200221850674,"Parsed as literal",""
635311200221860675,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311200221860675,"Parsed as literal"," "
635311200221860675,"Parsed as literal","list"
635311200221870675,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311200221870675,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311200221870675,"Parsed as literal","bubbleSortPass"
635311200221880676,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311200221880676,"Parsed as literal","list"
635311200221880676,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311200221880676,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311200221890677,"Parsed as literal",""
635311200221890677,"Parsed as literal","list "
635311200221890677,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311200221890677,"Parsed as literal"," "
635311200221900677,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311200221900677,"Parsed as literal",""
635311200221900677,"Parsed as literal","list"
635311200221900677,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311200221910678,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311200221910678,"Parsed as literal"," "
635311200221910678,"Parsed as literal","list "
635311200221920678,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311200221920678,"Parsed as literal","bubbleSortPass"
635311200221920678,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311200221920678,"Parsed as literal",""
635311200221930679,"Parsed as literal","list"
635311200221930679,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311200221930679,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311200221940679,"Parsed as literal","bubbleSortPass"
635311200221940679,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311200221940679,"Parsed as literal","list"
635311200221940679,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311200221950680,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311200221950680,"Parsed as literal",""
635311200221950680,"Parsed as literal","list "
635311200221950680,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311200221960681,"Parsed as literal"," "
635311200221960681,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311200221960681,"Parsed as literal",""
635311200221960681,"Parsed as literal","list"
635311200221970681,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311200221970681,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311200221970681,"Parsed as literal"," "
635311200221980682,"Parsed as literal","list "
635311200221980682,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311200221980682,"Parsed as literal","bubbleSortPass"
635311200221980682,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311200221990682,"Parsed as literal",""
635311200221990682,"Parsed as literal","list"
635311200221990682,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311200222000683,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311200222000683,"Parsed as literal","bubbleSortPass"
635311200222000683,"Parsed as literal","list"
635311200222000683,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311200222010684,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311200222010684,"Parsed as literal"," "
635311200222010684,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311200222020684,"Parsed as literal",""
635311200222020684,"Parsed as literal","list "
635311200222020684,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311200222020684,"Parsed as literal","bubbleSortPass"
635311200222030685,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311200222030685,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311200222030685,"Parsed as literal",""
635311200222030685,"Parsed as literal","list "
635311200222040685,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311200222040685,"Parsed as literal"," "
635311200222040685,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311200222040685,"Parsed as literal",""
635311200222050686,"Parsed as literal","list"
635311200222050686,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311200222050686,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311200222060686,"Parsed as literal","bubbleSortPass"
635311200222060686,"Parsed as literal","list"
635311200222060686,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311200222060686,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311200222070687,"Parsed as literal"," "
635311200222070687,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311200222070687,"Parsed as literal",""
635311200222080688,"Parsed as literal","list "
635311200222080688,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311200222080688,"Parsed as literal","bubbleSortPass"
635311200222080688,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311200222090688,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311200222090688,"Parsed as literal",""
635311200222090688,"Parsed as literal","list "
635311200222100689,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311200222100689,"Parsed as literal"," "
635311200222100689,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311200222100689,"Parsed as literal",""
635311200222110689,"Parsed as literal","list"
635311200222110689,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311200222110689,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311200222110689,"Parsed as literal","isSorted"
635311200222120690,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311200222120690,"Parsed as literal",""
635311200222120690,"Parsed as literal",""
635311200222130690,"Parsed as literal"," true"
635311200222130690,"Invalid operator","@isSorted([]) -> true","0"
635311200222130690,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311200222130690,"Parsed as literal","isSorted"
635311200222140691,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311200222140691,"Parsed as literal",""
635311200222140691,"Parsed as literal",""
635311200222140691,"Parsed as literal"," true"
635311200222150692,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311200222150692,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311200222150692,"Parsed as literal","isSorted"
635311200222160692,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311200222160692,"Parsed as literal","list"
635311200222160692,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311200222160692,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311200222170693,"Parsed as literal",""
635311200222170693,"Parsed as literal","list "
635311200222170693,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200222170693,"Parsed as literal",""
635311200222180693,"Parsed as literal",""
635311200222180693,"Parsed as literal"," true"
635311200222180693,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311200222190694,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311200222190694,"Parsed as literal","isSorted"
635311200222190694,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311200222190694,"Parsed as literal","list"
635311200222200694,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311200222200694,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311200222200694,"Parsed as literal",""
635311200222200694,"Parsed as literal","list "
635311200222210695,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200222210695,"Parsed as literal",""
635311200222210695,"Parsed as literal",""
635311200222220696,"Parsed as literal"," true"
635311200222220696,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311200222220696,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311200222230696,"Parsed as literal","isSorted"
635311200222230696,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311200222230696,"Parsed as literal","list"
635311200222230696,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311200222240697,"Parsed as literal",""
635311200222240697,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311200222240697,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311200222240697,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311200222250697,"Parsed as literal",""
635311200222250697,"Parsed as literal","list "
635311200222250697,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311200222250697,"Parsed as literal"," "
635311200222260698,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311200222260698,"Parsed as literal",""
635311200222260698,"Parsed as literal","list"
635311200222270698,"Parsed as literal",""
635311200222270698,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311200222270698,"Parsed as literal","isSorted"
635311200222270698,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311200222280699,"Parsed as literal",""
635311200222280699,"Parsed as literal","list"
635311200222280699,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311200222280699,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311200222290700,"Parsed as literal","isSorted"
635311200222290700,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311200222290700,"Parsed as literal","list"
635311200222300700,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311200222300700,"Parsed as literal",""
635311200222300700,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311200222300700,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311200222310701,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311200222310701,"Parsed as literal",""
635311200222310701,"Parsed as literal","list "
635311200222310701,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311200222320701,"Parsed as literal"," "
635311200222320701,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311200222320701,"Parsed as literal",""
635311200222320701,"Parsed as literal","list"
635311200222330702,"Parsed as literal",""
635311200222330702,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311200222330702,"Parsed as literal","isSorted"
635311200222340702,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311200222340702,"Parsed as literal",""
635311200222340702,"Parsed as literal","list"
635311200222340702,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311200222350703,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311200222350703,"Parsed as literal","isSorted"
635311200222350703,"Parsed as literal","list"
635311200222360704,"Parsed as literal"," false"
635311200222360704,"Invalid operator","@isSorted(list) -> false","0"
635311200222360704,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311200222360704,"Parsed as literal","isSorted"
635311200222370704,"Parsed as literal","list"
635311200222370704,"Parsed as literal"," false"
635311200222370704,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311200222380705,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311200222380705,"Parsed as literal","insertionSort"
635311200222380705,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200222380705,"Parsed as literal",""
635311200222390705,"Parsed as literal",""
635311200222390705,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311200222390705,"Parsed as literal",""
635311200222390705,"Parsed as literal",""
635311200222400706,"Invalid operator","@insertionSort([]) -> []","0"
635311200222400706,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311200222400706,"Parsed as literal","insertionSort"
635311200222400706,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200222410706,"Parsed as literal",""
635311200222410706,"Parsed as literal",""
635311200222410706,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311200222420707,"Parsed as literal",""
635311200222420707,"Parsed as literal",""
635311200222420707,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311200222420707,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311200222430708,"Parsed as literal","insertionSort"
635311200222430708,"Parsed as literal","list"
635311200222430708,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311200222440708,"Parsed as literal","insert"
635311200222440708,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311200222450709,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311200222450709,"Parsed as literal",""
635311200222450709,"Parsed as literal","list"
635311200222450709,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311200222460709,"Parsed as literal","insertionSort"
635311200222460709,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311200222460709,"Parsed as literal",""
635311200222460709,"Parsed as literal","list"
635311200222470710,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311200222470710,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311200222470710,"Parsed as literal","insertionSort"
635311200222480710,"Parsed as literal","list"
635311200222480710,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311200222480710,"Parsed as literal","insert"
635311200222480710,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311200222490711,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311200222490711,"Parsed as literal",""
635311200222490711,"Parsed as literal","list"
635311200222500712,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311200222500712,"Parsed as literal","insertionSort"
635311200222500712,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311200222500712,"Parsed as literal",""
635311200222510712,"Parsed as literal","list"
635311200222510712,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311200222510712,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311200222520713,"Parsed as literal","insert"
635311200222520713,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311200222520713,"Parsed as literal","item"
635311200222520713,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200222530713,"Parsed as literal",""
635311200222530713,"Parsed as literal",""
635311200222530713,"Parsed as literal"," item"
635311200222540714,"Invalid operator","@insert(item,[]) -> item","0"
635311200222540714,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311200222540714,"Parsed as literal","insert"
635311200222550714,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311200222550714,"Parsed as literal","item"
635311200222550714,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200222550714,"Parsed as literal",""
635311200222560715,"Parsed as literal",""
635311200222560715,"Parsed as literal"," item"
635311200222560715,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311200222570716,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311200222570716,"Parsed as literal","insert"
635311200222580716,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311200222580716,"Parsed as literal","item"
635311200222580716,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311200222580716,"Parsed as literal","list "
635311200222590717,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311200222590717,"Parsed as literal"," item "
635311200222590717,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311200222600717,"Parsed as literal"," "
635311200222600717,"Parsed as literal","list"
635311200222600717,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311200222610718,"Parsed as literal"," item "
635311200222610718,"Parsed as literal"," list"
635311200222610718,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311200222620718,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311200222620718,"Parsed as literal","insert"
635311200222620718,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311200222630719,"Parsed as literal","item"
635311200222630719,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311200222630719,"Parsed as literal","list "
635311200222630719,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311200222640720,"Parsed as literal"," item "
635311200222640720,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311200222640720,"Parsed as literal"," "
635311200222650720,"Parsed as literal","list"
635311200222650720,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311200222660721,"Parsed as literal"," item "
635311200222660721,"Parsed as literal"," list"
635311200222660721,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311200222670721,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311200222670721,"Parsed as literal","insert"
635311200222670721,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311200222670721,"Parsed as literal","item"
635311200222680722,"Parsed as literal","list"
635311200222680722,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311200222680722,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311200222690722,"Parsed as literal"," "
635311200222690722,"Parsed as literal","list "
635311200222690722,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311200222700723,"Parsed as literal","insert"
635311200222700723,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311200222700723,"Parsed as literal","item"
635311200222700723,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311200222710724,"Parsed as literal",""
635311200222710724,"Parsed as literal","list"
635311200222710724,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311200222720724,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311200222720724,"Parsed as literal","insert"
635311200222720724,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311200222720724,"Parsed as literal","item"
635311200222730725,"Parsed as literal","list"
635311200222730725,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311200222730725,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311200222740725,"Parsed as literal"," "
635311200222740725,"Parsed as literal","list "
635311200222750726,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311200222750726,"Parsed as literal","insert"
635311200222750726,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311200222760726,"Parsed as literal","item"
635311200222760726,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311200222760726,"Parsed as literal",""
635311200222760726,"Parsed as literal","list"
635311200222770727,"StepEvaluate","->","Changed","Declared @quickSort"
635311200222770727,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311200222770727,"StepEvaluate","->","Changed","Declared @quickSort"
635311200222780728,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311200222780728,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200222780728,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200222780728,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200222790728,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200222790728,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200222790728,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200222790728,"StepEvaluate","->","Changed","Declared @merge"
635311200222800729,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200222800729,"StepEvaluate","->","Changed","Declared @merge"
635311200222800729,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200222800729,"StepEvaluate","->","Changed","Declared @merge"
635311200222810729,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200222810729,"StepEvaluate","->","Changed","Declared @merge"
635311200222810729,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200222810729,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311200222820730,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311200222820730,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311200222820730,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311200222820730,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200222830730,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200222830730,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200222830730,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200222830730,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200222840731,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200222840731,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200222840731,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200222850732,"StepEvaluate","->","Changed","Declared @isSorted"
635311200222850732,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200222850732,"StepEvaluate","->","Changed","Declared @isSorted"
635311200222850732,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200222860732,"StepEvaluate","->","Changed","Declared @isSorted"
635311200222860732,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200222860732,"StepEvaluate","->","Changed","Declared @isSorted"
635311200222860732,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200222870733,"StepEvaluate","->","Changed","Declared @insertionSort"
635311200222870733,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311200222870733,"StepEvaluate","->","Changed","Declared @insertionSort"
635311200222870733,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311200222880733,"StepEvaluate","->","Changed","Declared @insert"
635311200222880733,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200222880733,"StepEvaluate","->","Changed","Declared @insert"
635311200222880733,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200222890734,"StepEvaluate","->","Changed","Declared @insert"
635311200222890734,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200222890734,"StepEvaluate","[]","Changed","File imported"
635311200222890734,"StepEvaluate","File imported","Unchanged","File imported"
635311200222900734,"StepEvaluate","[]","Changed","File imported"
635311200222900734,"StepEvaluate","File imported","Unchanged","File imported"
635311200222900734,"ParseInternal","{1+2},{3+4}","0","CommaOperator","0","6","{1+2}","{3+4}"
635311200222900734,"ParseInternal","{1+2}","0","PlusOperator","0","3","{1","2}"
635311200222910735,"Parsed as literal","{1"
635311200222910735,"Parsed as literal","2}"
635311200222910735,"ParseInternal","{3+4}","6","PlusOperator","6","9","{3","4}"
635311200222920736,"Parsed as literal","{3"
635311200222920736,"Parsed as literal","4}"
635311200250552316,"StepEvaluate",",","Unchanged",","
635311200250602319,"StepEvaluate","+","Unchanged","+"
635311200250612319,"StepEvaluate","{1","Unchanged","{1"
635311200250622320,"StepEvaluate","2}","Unchanged","2}"
635311200250622320,"StepEvaluate",",","Unchanged",","
635311200250632321,"StepEvaluate","+","Unchanged","+"
635311200250642321,"StepEvaluate","{3","Unchanged","{3"
635311200250642321,"StepEvaluate","4}","Unchanged","4}"
635311200259412823,"StepEvaluate",",","Unchanged",","
635311200259432824,"StepEvaluate","+","Unchanged","+"
635311200259442824,"StepEvaluate","{1","Unchanged","{1"
635311200259442824,"StepEvaluate","2}","Unchanged","2}"
635311200259452825,"StepEvaluate",",","Unchanged",","
635311200259462826,"StepEvaluate","+","Unchanged","+"
635311200259472826,"StepEvaluate","{3","Unchanged","{3"
635311200259472826,"StepEvaluate","4}","Unchanged","4}"
635311200265353163,"StepEvaluate",",","Unchanged",","
635311200265363163,"StepEvaluate","+","Unchanged","+"
635311200265373164,"StepEvaluate","{1","Unchanged","{1"
635311200265383164,"StepEvaluate","2}","Unchanged","2}"
635311200265393165,"StepEvaluate",",","Unchanged",","
635311200265603177,"StepEvaluate","+","Unchanged","+"
635311200265613177,"StepEvaluate","{3","Unchanged","{3"
635311200265623178,"StepEvaluate","4}","Unchanged","4}"
635311200382069838,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311200382079839,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311200382099840,"Parsed as literal","import"
635311200382109841,"Parsed as literal","file"
635311200382119841,"Parsed as literal"," 0"
635311200382119841,"Invalid operator","@import(file) -> 0","0"
635311200382129842,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311200382139842,"Parsed as literal","import"
635311200382149843,"Parsed as literal","file"
635311200382159844,"Parsed as literal"," 0"
635311200382169844,"StepEvaluate","->","Changed","Declared @import"
635311200382169844,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311200382179845,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311200382189845,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311200382199846,"Parsed as literal","operator"
635311200382209846,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311200382209846,"Parsed as literal","op"
635311200382219847,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311200382229848,"Parsed as literal","fn"
635311200382239848,"Parsed as literal",""
635311200382239848,"Invalid operator","@fn","12"
635311200382249849,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311200382259849,"Parsed as literal","fn"
635311200382269850,"Parsed as literal",""
635311200382279850,"Invalid operator","@fn","12"
635311200382279850,"Parsed as literal","@fn"
635311200382289851,"Parsed as literal"," 0"
635311200382299852,"Invalid operator","@operator(op,@fn) -> 0","0"
635311200382309852,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311200382319853,"Parsed as literal","operator"
635311200382319853,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311200382329853,"Parsed as literal","op"
635311200382339854,"Parsed as literal","@fn"
635311200382349854,"Parsed as literal"," 0"
635311200382359855,"StepEvaluate","->","Changed","Declared @operator"
635311200382359855,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311200382369856,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311200382379856,"Parsed as literal","import"
635311200382389857,"Parsed as literal","main.toast"
635311200382399857,"StepEvaluate","@","Changed","@"
635311200382399857,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200382409858,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200382419858,"StepEvaluate",",","Unchanged",","
635311200382419858,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200382429859,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200382429859,"StepEvaluate","PAT@-M","Changed","[]"
635311200382429859,"StepEvaluate","SEL@import","Changed","[]"
635311200382439860,"StepEvaluate","@","Changed","[]"
635311200382439860,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311200382449860,"Parsed as literal","import"
635311200382449860,"Parsed as literal","'core.toast'"
635311200382459861,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311200382459861,"Parsed as literal","import"
635311200382459861,"Parsed as literal","'list.toast'"
635311200382469861,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311200382469861,"Parsed as literal","import"
635311200382479862,"Parsed as literal","'math.toast'"
635311200382479862,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311200382489862,"Parsed as literal","import"
635311200382489862,"Parsed as literal","'sorting.toast'"
635311200382499863,"StepEvaluate","@","Changed","@"
635311200382499863,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200382509864,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200382509864,"StepEvaluate",",","Unchanged",","
635311200382509864,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200382519864,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200382519864,"StepEvaluate","PAT@-M","Changed","[]"
635311200382529865,"StepEvaluate","SEL@import","Changed","[]"
635311200382529865,"StepEvaluate","@","Changed","[]"
635311200382529865,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311200382539865,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311200382539865,"Parsed as literal","map"
635311200382549866,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311200382549866,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311200382549866,"Parsed as literal","func"
635311200382559866,"Parsed as literal",""
635311200382559866,"Invalid operator","@func","4"
635311200382569867,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311200382569867,"Parsed as literal","func"
635311200382569867,"Parsed as literal",""
635311200382579868,"Invalid operator","@func","4"
635311200382579868,"Parsed as literal","@func"
635311200382579868,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311200382589868,"Parsed as literal",""
635311200382589868,"Parsed as literal",""
635311200382599869,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200382599869,"Parsed as literal",""
635311200382599869,"Parsed as literal",""
635311200382609869,"Invalid operator","@map(@func, []) -> []","0"
635311200382609869,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311200382609869,"Parsed as literal","map"
635311200382619870,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311200382619870,"Parsed as literal","@func"
635311200382629870,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311200382629870,"Parsed as literal",""
635311200382629870,"Parsed as literal",""
635311200382639871,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200382639871,"Parsed as literal",""
635311200382639871,"Parsed as literal",""
635311200382649872,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311200382649872,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311200382659872,"Parsed as literal","map"
635311200382659872,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311200382659872,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311200382669873,"Parsed as literal","func"
635311200382669873,"Parsed as literal",""
635311200382679873,"Invalid operator","@func","4"
635311200382679873,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311200382679873,"Parsed as literal","func"
635311200382689874,"Parsed as literal",""
635311200382689874,"Invalid operator","@func","4"
635311200382689874,"Parsed as literal","@func"
635311200382699874,"Parsed as literal"," list"
635311200382699874,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311200382709875,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311200382709875,"Parsed as literal","func"
635311200382709875,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200382719876,"Parsed as literal",""
635311200382719876,"Parsed as literal","list"
635311200382719876,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311200382729876,"Parsed as literal","map"
635311200382729876,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311200382739877,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311200382739877,"Parsed as literal","func"
635311200382739877,"Parsed as literal",""
635311200382749877,"Invalid operator","@func","41"
635311200382749877,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311200382749877,"Parsed as literal","func"
635311200382759878,"Parsed as literal",""
635311200382759878,"Invalid operator","@func","41"
635311200382759878,"Parsed as literal","@func"
635311200382769878,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311200382769878,"Parsed as literal",""
635311200382779879,"Parsed as literal","list"
635311200382779879,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311200382779879,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311200382789880,"Parsed as literal","map"
635311200382789880,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311200382789880,"Parsed as literal","@func"
635311200382799880,"Parsed as literal"," list"
635311200382799880,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311200382809881,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311200382809881,"Parsed as literal","func"
635311200382809881,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200382819881,"Parsed as literal",""
635311200382819881,"Parsed as literal","list"
635311200382829882,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311200382829882,"Parsed as literal","map"
635311200382829882,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311200382839882,"Parsed as literal","@func"
635311200382839882,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311200382839882,"Parsed as literal",""
635311200382849883,"Parsed as literal","list"
635311200382849883,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311200382859884,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311200382859884,"Parsed as literal","filter"
635311200382859884,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311200382869884,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200382869884,"Parsed as literal","pred"
635311200382879885,"Parsed as literal",""
635311200382879885,"Invalid operator","@pred","7"
635311200382879885,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200382889885,"Parsed as literal","pred"
635311200382889885,"Parsed as literal",""
635311200382889885,"Invalid operator","@pred","7"
635311200382899886,"Parsed as literal","@pred"
635311200382899886,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311200382899886,"Parsed as literal",""
635311200382909886,"Parsed as literal",""
635311200382909886,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311200382919887,"Parsed as literal",""
635311200382919887,"Parsed as literal",""
635311200382919887,"Invalid operator","@filter(@pred,[]) -> []","0"
635311200382929888,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311200382929888,"Parsed as literal","filter"
635311200382929888,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311200382939888,"Parsed as literal","@pred"
635311200382939888,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311200382949889,"Parsed as literal",""
635311200382949889,"Parsed as literal",""
635311200382949889,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311200382959889,"Parsed as literal",""
635311200382959889,"Parsed as literal",""
635311200382969890,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311200382969890,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311200382969890,"Parsed as literal","filter"
635311200382979890,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311200382979890,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200382989891,"Parsed as literal","pred"
635311200382989891,"Parsed as literal",""
635311200382989891,"Invalid operator","@pred","7"
635311200382999892,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200382999892,"Parsed as literal","pred"
635311200382999892,"Parsed as literal",""
635311200383009892,"Invalid operator","@pred","7"
635311200383009892,"Parsed as literal","@pred"
635311200383019893,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311200383019893,"Parsed as literal"," list "
635311200383019893,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311200383029893,"Parsed as literal","pred"
635311200383029893,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200383029893,"Parsed as literal",""
635311200383039894,"Parsed as literal","list"
635311200383039894,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311200383049894,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311200383049894,"Parsed as literal"," "
635311200383049894,"Parsed as literal","list "
635311200383059895,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311200383059895,"Parsed as literal","filter"
635311200383059895,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311200383069896,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311200383069896,"Parsed as literal","pred"
635311200383079896,"Parsed as literal",""
635311200383109898,"Invalid operator","@pred","56"
635311200383119898,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311200383119898,"Parsed as literal","pred"
635311200383129899,"Parsed as literal",""
635311200383129899,"Invalid operator","@pred","56"
635311200383139900,"Parsed as literal","@pred"
635311200383139900,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311200383139900,"Parsed as literal"," "
635311200383149900,"Parsed as literal","list"
635311200383149900,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311200383159901,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311200383159901,"Parsed as literal","filter"
635311200383159901,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311200383169901,"Parsed as literal","@pred"
635311200383169901,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311200383169901,"Parsed as literal"," list "
635311200383179902,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311200383179902,"Parsed as literal","pred"
635311200383189902,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200383189902,"Parsed as literal",""
635311200383189902,"Parsed as literal","list"
635311200383199903,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311200383199903,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311200383209904,"Parsed as literal"," "
635311200383209904,"Parsed as literal","list "
635311200383209904,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311200383219904,"Parsed as literal","filter"
635311200383219904,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311200383229905,"Parsed as literal","@pred"
635311200383229905,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311200383229905,"Parsed as literal"," "
635311200383239905,"Parsed as literal","list"
635311200383239905,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311200383249906,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311200383249906,"Parsed as literal","filter"
635311200383249906,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311200383259906,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200383259906,"Parsed as literal","pred"
635311200383259906,"Parsed as literal",""
635311200383269907,"Invalid operator","@pred","7"
635311200383269907,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200383279908,"Parsed as literal","pred"
635311200383279908,"Parsed as literal",""
635311200383279908,"Invalid operator","@pred","7"
635311200383289908,"Parsed as literal","@pred"
635311200383289908,"Parsed as literal","list"
635311200383299909,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311200383299909,"Parsed as literal","filter"
635311200383299909,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311200383309909,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311200383309909,"Parsed as literal","pred"
635311200383309909,"Parsed as literal",""
635311200383319910,"Invalid operator","@pred","30"
635311200383319910,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311200383319910,"Parsed as literal","pred"
635311200383329910,"Parsed as literal",""
635311200383329910,"Invalid operator","@pred","30"
635311200383339911,"Parsed as literal","@pred"
635311200383339911,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311200383339911,"Parsed as literal",""
635311200383349912,"Parsed as literal","list"
635311200383349912,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311200383349912,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311200383359912,"Parsed as literal","filter"
635311200383359912,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311200383369913,"Parsed as literal","@pred"
635311200383369913,"Parsed as literal","list"
635311200383369913,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311200383379913,"Parsed as literal","filter"
635311200383379913,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311200383379913,"Parsed as literal","@pred"
635311200383389914,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311200383389914,"Parsed as literal",""
635311200383399914,"Parsed as literal","list"
635311200383399914,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311200383399914,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311200383409915,"Parsed as literal","call"
635311200383409915,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311200383419916,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311200383419916,"Parsed as literal","fun"
635311200383419916,"Parsed as literal",""
635311200383429916,"Invalid operator","@fun","5"
635311200383429916,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311200383439917,"Parsed as literal","fun"
635311200383439917,"Parsed as literal",""
635311200383439917,"Invalid operator","@fun","5"
635311200383449917,"Parsed as literal","@fun"
635311200383449917,"Parsed as literal","arg"
635311200383449917,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311200383459918,"Parsed as literal","fun"
635311200383459918,"Parsed as literal","arg"
635311200383469918,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311200383469918,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311200383469918,"Parsed as literal","call"
635311200383479919,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311200383479919,"Parsed as literal","@fun"
635311200383479919,"Parsed as literal","arg"
635311200383489920,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311200383489920,"Parsed as literal","fun"
635311200383489920,"Parsed as literal","arg"
635311200383499920,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311200383499920,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311200383509921,"Parsed as literal","curry"
635311200383509921,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311200383509921,"Parsed as literal","seed"
635311200383519921,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200383519921,"Parsed as literal",""
635311200383529922,"Parsed as literal",""
635311200383529922,"Parsed as literal"," seed"
635311200383529922,"Invalid operator","@curry(seed,[]) -> seed","0"
635311200383539922,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311200383539922,"Parsed as literal","curry"
635311200383539922,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311200383549923,"Parsed as literal","seed"
635311200383549923,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200383549923,"Parsed as literal",""
635311200383559924,"Parsed as literal",""
635311200383559924,"Parsed as literal"," seed"
635311200383569924,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311200383569924,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311200383579925,"Parsed as literal","curry"
635311200383579925,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311200383579925,"Parsed as literal","seed"
635311200383589925,"Parsed as literal"," funcList"
635311200383589925,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311200383599926,"Parsed as literal","curry"
635311200383599926,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311200383599926,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311200383609926,"Parsed as literal","call"
635311200383609926,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311200383609926,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311200383619927,"Parsed as literal",""
635311200383619927,"Parsed as literal","funcList"
635311200383629928,"Parsed as literal","seed"
635311200383629928,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311200383629928,"Parsed as literal",""
635311200383639928,"Parsed as literal","funcList"
635311200383639928,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311200383639928,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311200383649929,"Parsed as literal","curry"
635311200383649929,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311200383649929,"Parsed as literal","seed"
635311200383659929,"Parsed as literal"," funcList"
635311200383659929,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311200383669930,"Parsed as literal","curry"
635311200383669930,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311200383679930,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311200383679930,"Parsed as literal","call"
635311200383679930,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311200383689931,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311200383689931,"Parsed as literal",""
635311200383689931,"Parsed as literal","funcList"
635311200383699932,"Parsed as literal","seed"
635311200383699932,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311200383699932,"Parsed as literal",""
635311200383709932,"Parsed as literal","funcList"
635311200383709932,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311200383719933,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311200383719933,"Parsed as literal","fold"
635311200383719933,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311200383729933,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200383729933,"Parsed as literal","func"
635311200383729933,"Parsed as literal",""
635311200383739934,"Invalid operator","@func","5"
635311200383739934,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200383749934,"Parsed as literal","func"
635311200383749934,"Parsed as literal",""
635311200383749934,"Invalid operator","@func","5"
635311200383759935,"Parsed as literal","@func"
635311200383759935,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200383759935,"Parsed as literal",""
635311200383769936,"Parsed as literal",""
635311200383769936,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200383779936,"Parsed as literal",""
635311200383779936,"Parsed as literal",""
635311200383779936,"Invalid operator","@fold(@func,[]) -> []","0"
635311200383789937,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311200383789937,"Parsed as literal","fold"
635311200383789937,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311200383799937,"Parsed as literal","@func"
635311200383799937,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200383799937,"Parsed as literal",""
635311200383809938,"Parsed as literal",""
635311200383809938,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200383819938,"Parsed as literal",""
635311200383819938,"Parsed as literal",""
635311200383819938,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311200383829939,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311200383829939,"Parsed as literal","fold"
635311200383839940,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311200383839940,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200383839940,"Parsed as literal","func"
635311200383849940,"Parsed as literal",""
635311200383849940,"Invalid operator","@func","5"
635311200383849940,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200383859941,"Parsed as literal","func"
635311200383859941,"Parsed as literal",""
635311200383869941,"Invalid operator","@func","5"
635311200383869941,"Parsed as literal","@func"
635311200383869941,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311200383879942,"Parsed as literal","list"
635311200383879942,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311200383879942,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311200383889942,"Parsed as literal",""
635311200383889942,"Parsed as literal","list"
635311200383899943,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311200383899943,"Parsed as literal",""
635311200383899943,"Parsed as literal",""
635311200383909944,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311200383909944,"Parsed as literal"," "
635311200383909944,"Parsed as literal","list"
635311200383919944,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311200383919944,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311200383929945,"Parsed as literal","fold"
635311200383929945,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311200383929945,"Parsed as literal","@func"
635311200383939945,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311200383939945,"Parsed as literal","list"
635311200383939945,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311200383949946,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311200383949946,"Parsed as literal",""
635311200383959946,"Parsed as literal","list"
635311200383959946,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311200383959946,"Parsed as literal",""
635311200383969947,"Parsed as literal",""
635311200383969947,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311200383979948,"Parsed as literal"," "
635311200383979948,"Parsed as literal","list"
635311200383979948,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311200383989948,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311200383989948,"Parsed as literal","fold"
635311200383999949,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311200383999949,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200383999949,"Parsed as literal","func"
635311200384009949,"Parsed as literal",""
635311200384009949,"Invalid operator","@func","5"
635311200384009949,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200384019950,"Parsed as literal","func"
635311200384019950,"Parsed as literal",""
635311200384019950,"Invalid operator","@func","5"
635311200384029950,"Parsed as literal","@func"
635311200384029950,"Parsed as literal","list"
635311200384039951,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311200384039951,"Parsed as literal","fold"
635311200384039951,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311200384049952,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311200384049952,"Parsed as literal","func"
635311200384059952,"Parsed as literal",""
635311200384059952,"Invalid operator","@func","26"
635311200384059952,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311200384069953,"Parsed as literal","func"
635311200384069953,"Parsed as literal",""
635311200384069953,"Invalid operator","@func","26"
635311200384079953,"Parsed as literal","@func"
635311200384079953,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311200384079953,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311200384089954,"Parsed as literal","func"
635311200384089954,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311200384099954,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311200384099954,"Parsed as literal",""
635311200384099954,"Parsed as literal","list"
635311200384109955,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311200384109955,"Parsed as literal",""
635311200384109955,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311200384119956,"Parsed as literal",""
635311200384119956,"Parsed as literal","list"
635311200384129956,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311200384129956,"Parsed as literal"," "
635311200384129956,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311200384139957,"Parsed as literal",""
635311200384139957,"Parsed as literal","list"
635311200384139957,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311200384149957,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311200384149957,"Parsed as literal","fold"
635311200384159958,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311200384159958,"Parsed as literal","@func"
635311200384159958,"Parsed as literal","list"
635311200384169958,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311200384169958,"Parsed as literal","fold"
635311200384179959,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311200384179959,"Parsed as literal","@func"
635311200384179959,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311200384189960,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311200384189960,"Parsed as literal","func"
635311200384199960,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311200384199960,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311200384199960,"Parsed as literal",""
635311200384209961,"Parsed as literal","list"
635311200384209961,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311200384209961,"Parsed as literal",""
635311200384219961,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311200384219961,"Parsed as literal",""
635311200384219961,"Parsed as literal","list"
635311200384229962,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311200384229962,"Parsed as literal"," "
635311200384239962,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311200384239962,"Parsed as literal",""
635311200384239962,"Parsed as literal","list"
635311200384249963,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311200384249963,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311200384259964,"Parsed as literal","foldr"
635311200384259964,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311200384259964,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200384269964,"Parsed as literal","func"
635311200384269964,"Parsed as literal",""
635311200384269964,"Invalid operator","@func","6"
635311200384279965,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200384279965,"Parsed as literal","func"
635311200384289965,"Parsed as literal",""
635311200384289965,"Invalid operator","@func","6"
635311200384289965,"Parsed as literal","@func"
635311200384299966,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200384299966,"Parsed as literal",""
635311200384309966,"Parsed as literal",""
635311200384309966,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200384319967,"Parsed as literal",""
635311200384319967,"Parsed as literal",""
635311200384319967,"Invalid operator","@foldr(@func,[]) -> []","0"
635311200384329968,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311200384329968,"Parsed as literal","foldr"
635311200384329968,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311200384339968,"Parsed as literal","@func"
635311200384339968,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200384349969,"Parsed as literal",""
635311200384349969,"Parsed as literal",""
635311200384349969,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200384359969,"Parsed as literal",""
635311200384359969,"Parsed as literal",""
635311200384359969,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311200384369970,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311200384369970,"Parsed as literal","foldr"
635311200384379970,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311200384379970,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200384379970,"Parsed as literal","func"
635311200384389971,"Parsed as literal",""
635311200384389971,"Invalid operator","@func","6"
635311200384389971,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200384399972,"Parsed as literal","func"
635311200384399972,"Parsed as literal",""
635311200384399972,"Invalid operator","@func","6"
635311200384409972,"Parsed as literal","@func"
635311200384409972,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311200384419973,"Parsed as literal","list"
635311200384419973,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311200384419973,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311200384429973,"Parsed as literal",""
635311200384429973,"Parsed as literal","list"
635311200384439974,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200384439974,"Parsed as literal",""
635311200384439974,"Parsed as literal",""
635311200384449974,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311200384449974,"Parsed as literal"," "
635311200384449974,"Parsed as literal","list"
635311200384459975,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311200384459975,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311200384469976,"Parsed as literal","foldr"
635311200384469976,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311200384469976,"Parsed as literal","@func"
635311200384479976,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311200384479976,"Parsed as literal","list"
635311200384479976,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311200384489977,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311200384489977,"Parsed as literal",""
635311200384489977,"Parsed as literal","list"
635311200384499977,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200384499977,"Parsed as literal",""
635311200384509978,"Parsed as literal",""
635311200384509978,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311200384509978,"Parsed as literal"," "
635311200384519979,"Parsed as literal","list"
635311200384519979,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311200384529979,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311200384529979,"Parsed as literal","foldr"
635311200384529979,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311200384539980,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200384539980,"Parsed as literal","func"
635311200384539980,"Parsed as literal",""
635311200384549980,"Invalid operator","@func","6"
635311200384549980,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200384559981,"Parsed as literal","func"
635311200384559981,"Parsed as literal",""
635311200384559981,"Invalid operator","@func","6"
635311200384569981,"Parsed as literal","@func"
635311200384569981,"Parsed as literal","list"
635311200384579982,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311200384589983,"Parsed as literal","func"
635311200384589983,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311200384589983,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311200384599983,"Parsed as literal","foldr"
635311200384599983,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311200384599983,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311200384609984,"Parsed as literal","func"
635311200384609984,"Parsed as literal",""
635311200384619984,"Invalid operator","@func","33"
635311200384619984,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311200384619984,"Parsed as literal","func"
635311200384629985,"Parsed as literal",""
635311200384629985,"Invalid operator","@func","33"
635311200384629985,"Parsed as literal","@func"
635311200384639985,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311200384639985,"Parsed as literal","superHead"
635311200384649986,"Parsed as literal","list"
635311200384649986,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311200384649986,"Parsed as literal","last"
635311200384659987,"Parsed as literal","list"
635311200384659987,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311200384669987,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311200384669987,"Parsed as literal","foldr"
635311200384669987,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311200384679988,"Parsed as literal","@func"
635311200384679988,"Parsed as literal","list"
635311200384679988,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311200384689988,"Parsed as literal","func"
635311200384689988,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311200384699989,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311200384699989,"Parsed as literal","foldr"
635311200384699989,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311200384709989,"Parsed as literal","@func"
635311200384709989,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311200384719990,"Parsed as literal","superHead"
635311200384719990,"Parsed as literal","list"
635311200384719990,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311200384729991,"Parsed as literal","last"
635311200384729991,"Parsed as literal","list"
635311200384739991,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311200384739991,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311200384739991,"Parsed as literal","superHead"
635311200384749992,"Parsed as literal","list"
635311200384749992,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311200384759992,"Parsed as literal","reverse"
635311200384759992,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311200384759992,"Parsed as literal",""
635311200384769993,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311200384769993,"Parsed as literal","reverse"
635311200384769993,"Parsed as literal","list"
635311200384779993,"StepEvaluate","->","Changed","Declared @map"
635311200384779993,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311200384789994,"StepEvaluate","->","Changed","Declared @map"
635311200384789994,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311200384789994,"StepEvaluate","->","Changed","Declared @filter"
635311200384799995,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200384799995,"StepEvaluate","->","Changed","Declared @filter"
635311200384799995,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200384809995,"StepEvaluate","->","Changed","Declared @filter"
635311200384809995,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200384809995,"StepEvaluate","->","Changed","Declared @call"
635311200384819996,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311200384819996,"StepEvaluate","->","Changed","Declared @curry"
635311200384819996,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311200384829996,"StepEvaluate","->","Changed","Declared @curry"
635311200384829996,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311200384829996,"StepEvaluate","->","Changed","Declared @fold"
635311200384839997,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200384839997,"StepEvaluate","->","Changed","Declared @fold"
635311200384849997,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200384849997,"StepEvaluate","->","Changed","Declared @fold"
635311200384849997,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200384859998,"StepEvaluate","->","Changed","Declared @foldr"
635311200384859998,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200384859998,"StepEvaluate","->","Changed","Declared @foldr"
635311200384869999,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200384869999,"StepEvaluate","->","Changed","Declared @foldr"
635311200384869999,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200384879999,"StepEvaluate","==","Unchanged","=="
635311200384879999,"StepEvaluate","@","Changed","@"
635311200384879999,"StepEvaluate","@","Changed","@"
635311200384890000,"StepEvaluate","==","Unchanged","=="
635311200384890000,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200384890000,"StepEvaluate","superHead","Unchanged","superHead"
635311200384900000,"StepEvaluate",",","Unchanged",","
635311200384900000,"StepEvaluate","list","Unchanged","list"
635311200384900000,"StepEvaluate","@","Changed","@"
635311200384910001,"StepEvaluate","==","Unchanged","=="
635311200384910001,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200384920001,"StepEvaluate","superHead","Unchanged","superHead"
635311200384920001,"StepEvaluate",",","Unchanged",","
635311200384920001,"StepEvaluate","list","Unchanged","list"
635311200384930002,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200384930002,"StepEvaluate","reverse","Unchanged","reverse"
635311200384930002,"StepEvaluate",",","Unchanged",","
635311200384940003,"StepEvaluate","tail","Unchanged","tail"
635311200384940003,"StepEvaluate","@","Changed","@"
635311200384940003,"StepEvaluate","==","Unchanged","=="
635311200384950003,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200384950003,"StepEvaluate","superHead","Unchanged","superHead"
635311200384950003,"StepEvaluate",",","Unchanged",","
635311200384960004,"StepEvaluate","list","Unchanged","list"
635311200384960004,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200384960004,"StepEvaluate","reverse","Unchanged","reverse"
635311200384970004,"StepEvaluate",",","Unchanged",","
635311200384970004,"StepEvaluate","tail","Unchanged","tail"
635311200384970004,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200384980005,"StepEvaluate","reverse","Unchanged","reverse"
635311200384980005,"StepEvaluate",",","Unchanged",","
635311200384980005,"StepEvaluate","list","Unchanged","list"
635311200384990005,"StepEvaluate","[]","Changed","File imported"
635311200384990005,"StepEvaluate","File imported","Unchanged","File imported"
635311200384990005,"StepEvaluate","@","Changed","@"
635311200385000006,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200385000006,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200385010007,"StepEvaluate",",","Unchanged",","
635311200385010007,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200385010007,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200385020007,"StepEvaluate","PAT@-M","Changed","[]"
635311200385020007,"StepEvaluate","SEL@import","Changed","[]"
635311200385020007,"StepEvaluate","@","Changed","[]"
635311200385030008,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311200385030008,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311200385040008,"Parsed as literal","zipWith"
635311200385040008,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311200385040008,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311200385050009,"Parsed as literal","func"
635311200385050009,"Parsed as literal",""
635311200385050009,"Invalid operator","@func","8"
635311200385060009,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311200385060009,"Parsed as literal","func"
635311200385070010,"Parsed as literal",""
635311200385070010,"Invalid operator","@func","8"
635311200385070010,"Parsed as literal","@func"
635311200385080011,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311200385080011,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200385080011,"Parsed as literal",""
635311200385090011,"Parsed as literal",""
635311200385090011,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311200385100012,"Parsed as literal",""
635311200385100012,"Parsed as literal",""
635311200385100012,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311200385110012,"Parsed as literal",""
635311200385110012,"Parsed as literal",""
635311200385110012,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311200385120013,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311200385120013,"Parsed as literal","zipWith"
635311200385130013,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311200385130013,"Parsed as literal","@func"
635311200385130013,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311200385140014,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200385140014,"Parsed as literal",""
635311200385140014,"Parsed as literal",""
635311200385150015,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311200385150015,"Parsed as literal",""
635311200385160015,"Parsed as literal",""
635311200385160015,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311200385160015,"Parsed as literal",""
635311200385170016,"Parsed as literal",""
635311200385170016,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311200385180016,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311200385180016,"Parsed as literal","zipWith"
635311200385190017,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311200385190017,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311200385190017,"Parsed as literal","func"
635311200385200017,"Parsed as literal",""
635311200385200017,"Invalid operator","@func","8"
635311200385200017,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311200385210018,"Parsed as literal","func"
635311200385210018,"Parsed as literal",""
635311200385220019,"Invalid operator","@func","8"
635311200385220019,"Parsed as literal","@func"
635311200385220019,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311200385230019,"Parsed as literal","list1"
635311200385230019,"Parsed as literal","list2"
635311200385240020,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311200385240020,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311200385240020,"Parsed as literal","func"
635311200385250020,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311200385250020,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311200385250020,"Parsed as literal",""
635311200385260021,"Parsed as literal","list1"
635311200385260021,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311200385270021,"Parsed as literal",""
635311200385270021,"Parsed as literal","list2"
635311200385270021,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311200385280022,"Parsed as literal","zipWith"
635311200385280022,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311200385290023,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311200385290023,"Parsed as literal","func"
635311200385290023,"Parsed as literal",""
635311200385300023,"Invalid operator","@func","64"
635311200385300023,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311200385300023,"Parsed as literal","func"
635311200385310024,"Parsed as literal",""
635311200385310024,"Invalid operator","@func","64"
635311200385310024,"Parsed as literal","@func"
635311200385320024,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311200385320024,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311200385330025,"Parsed as literal",""
635311200385330025,"Parsed as literal","list1"
635311200385330025,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311200385340025,"Parsed as literal",""
635311200385340025,"Parsed as literal","list2"
635311200385340025,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311200385350026,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311200385350026,"Parsed as literal","zipWith"
635311200385360027,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311200385360027,"Parsed as literal","@func"
635311200385360027,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311200385370027,"Parsed as literal","list1"
635311200385370027,"Parsed as literal","list2"
635311200385380028,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311200385380028,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311200385380028,"Parsed as literal","func"
635311200385390028,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311200385390028,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311200385390028,"Parsed as literal",""
635311200385400029,"Parsed as literal","list1"
635311200385400029,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311200385400029,"Parsed as literal",""
635311200385410029,"Parsed as literal","list2"
635311200385410029,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311200385420030,"Parsed as literal","zipWith"
635311200385420030,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311200385420030,"Parsed as literal","@func"
635311200385430031,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311200385430031,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311200385430031,"Parsed as literal",""
635311200385440031,"Parsed as literal","list1"
635311200385440031,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311200385450032,"Parsed as literal",""
635311200385450032,"Parsed as literal","list2"
635311200385450032,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311200385460032,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311200385460032,"Parsed as literal","count"
635311200385470033,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200385470033,"Parsed as literal",""
635311200385470033,"Parsed as literal",""
635311200385480033,"Parsed as literal"," 0"
635311200385480033,"Invalid operator","@count([]) -> 0","0"
635311200385480033,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311200385490034,"Parsed as literal","count"
635311200385490034,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200385490034,"Parsed as literal",""
635311200385500035,"Parsed as literal",""
635311200385500035,"Parsed as literal"," 0"
635311200385510035,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311200385510035,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311200385510035,"Parsed as literal","count"
635311200385520036,"Parsed as literal","list"
635311200385530036,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311200385530036,"Parsed as literal"," 1 "
635311200385540037,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311200385540037,"Parsed as literal","count"
635311200385540037,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200385550037,"Parsed as literal",""
635311200385550037,"Parsed as literal","list"
635311200385550037,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311200385560038,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311200385560038,"Parsed as literal","count"
635311200385560038,"Parsed as literal","list"
635311200385570039,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311200385570039,"Parsed as literal"," 1 "
635311200385580039,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311200385580039,"Parsed as literal","count"
635311200385580039,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200385590040,"Parsed as literal",""
635311200385590040,"Parsed as literal","list"
635311200385600040,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311200385600040,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311200385600040,"Parsed as literal","skip"
635311200385610041,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311200385610041,"Parsed as literal","0"
635311200385610041,"Parsed as literal","list"
635311200385620041,"Parsed as literal"," list"
635311200385620041,"Invalid operator","@skip(0,list) -> list","0"
635311200385630042,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311200385630042,"Parsed as literal","skip"
635311200385630042,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311200385640043,"Parsed as literal","0"
635311200385640043,"Parsed as literal","list"
635311200385640043,"Parsed as literal"," list"
635311200385650043,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311200385650043,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311200385660044,"Parsed as literal","skip"
635311200385660044,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200385660044,"Parsed as literal","n"
635311200385670044,"Parsed as literal","list"
635311200385670044,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311200385680045,"Parsed as literal","skip"
635311200385680045,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311200385680045,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200385690045,"Parsed as literal","n"
635311200385690045,"Parsed as literal","1"
635311200385690045,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200385700046,"Parsed as literal",""
635311200385700046,"Parsed as literal","list"
635311200385710047,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311200385710047,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311200385710047,"Parsed as literal","skip"
635311200385720047,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200385720047,"Parsed as literal","n"
635311200385720047,"Parsed as literal","list"
635311200385730048,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311200385730048,"Parsed as literal","skip"
635311200385740048,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311200385740048,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200385740048,"Parsed as literal","n"
635311200385750049,"Parsed as literal","1"
635311200385750049,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200385750049,"Parsed as literal",""
635311200385760049,"Parsed as literal","list"
635311200385760049,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311200385770050,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311200385770050,"Parsed as literal","take"
635311200385770050,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311200385780051,"Parsed as literal","1"
635311200385780051,"Parsed as literal","list"
635311200385790051,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311200385790051,"Parsed as literal"," "
635311200385790051,"Parsed as literal","list"
635311200385800052,"Invalid operator","@take(1,list) -> h:list","0"
635311200385800052,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311200385800052,"Parsed as literal","take"
635311200385810052,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311200385810052,"Parsed as literal","1"
635311200385820053,"Parsed as literal","list"
635311200385820053,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311200385820053,"Parsed as literal"," "
635311200385830053,"Parsed as literal","list"
635311200385830053,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311200385840054,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311200385840054,"Parsed as literal","take"
635311200385840054,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200385850055,"Parsed as literal","n"
635311200385850055,"Parsed as literal","list"
635311200385850055,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311200385860055,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311200385860055,"Parsed as literal"," "
635311200385870056,"Parsed as literal","list "
635311200385870056,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311200385870056,"Parsed as literal","take"
635311200385880056,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311200385880056,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200385880056,"Parsed as literal","n"
635311200385890057,"Parsed as literal","1"
635311200385890057,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311200385900057,"Parsed as literal",""
635311200385900057,"Parsed as literal","list"
635311200385900057,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311200385910058,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311200385910058,"Parsed as literal","take"
635311200385910058,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200385920059,"Parsed as literal","n"
635311200385920059,"Parsed as literal","list"
635311200385930059,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311200385930059,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311200385930059,"Parsed as literal"," "
635311200385940060,"Parsed as literal","list "
635311200385940060,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311200385950060,"Parsed as literal","take"
635311200385950060,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311200385950060,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200385960061,"Parsed as literal","n"
635311200385960061,"Parsed as literal","1"
635311200385960061,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311200385970061,"Parsed as literal",""
635311200385970061,"Parsed as literal","list"
635311200385980062,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311200385980062,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311200385980062,"Parsed as literal","nthItem"
635311200385990063,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311200385990063,"Parsed as literal","list"
635311200385990063,"Parsed as literal","0"
635311200386000063,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200386010064,"Parsed as literal",""
635311200386010064,"Parsed as literal",""
635311200386010064,"Invalid operator","@nthItem(list,0) -> []","0"
635311200386020064,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311200386020064,"Parsed as literal","nthItem"
635311200386030065,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311200386030065,"Parsed as literal","list"
635311200386030065,"Parsed as literal","0"
635311200386040065,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200386040065,"Parsed as literal",""
635311200386040065,"Parsed as literal",""
635311200386050066,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311200386050066,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311200386060067,"Parsed as literal","nthItem"
635311200386060067,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311200386060067,"Parsed as literal","list"
635311200386070067,"Parsed as literal","1"
635311200386070067,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311200386080068,"Parsed as literal"," "
635311200386080068,"Parsed as literal","list"
635311200386080068,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311200386090068,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311200386090068,"Parsed as literal","nthItem"
635311200386090068,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311200386100069,"Parsed as literal","list"
635311200386100069,"Parsed as literal","1"
635311200386110069,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311200386110069,"Parsed as literal"," "
635311200386110069,"Parsed as literal","list"
635311200386120070,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311200386120070,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311200386130071,"Parsed as literal","nthItem"
635311200386130071,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311200386130071,"Parsed as literal","list"
635311200386140071,"Parsed as literal","n"
635311200386140071,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311200386140071,"Parsed as literal","nthItem"
635311200386150072,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311200386150072,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311200386160072,"Parsed as literal",""
635311200386160072,"Parsed as literal","list"
635311200386160072,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311200386170073,"Parsed as literal","n"
635311200386170073,"Parsed as literal","1"
635311200386180073,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311200386180073,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311200386180073,"Parsed as literal","nthItem"
635311200386190074,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311200386190074,"Parsed as literal","list"
635311200386190074,"Parsed as literal","n"
635311200386200075,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311200386200075,"Parsed as literal","nthItem"
635311200386210075,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311200386210075,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311200386210075,"Parsed as literal",""
635311200386220076,"Parsed as literal","list"
635311200386220076,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311200386220076,"Parsed as literal","n"
635311200386230076,"Parsed as literal","1"
635311200386230076,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311200386240077,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311200386240077,"Parsed as literal","makeRange"
635311200386240077,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311200386250077,"Parsed as literal","a"
635311200386250077,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311200386260078,"Parsed as literal","b"
635311200386260078,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311200386260078,"Parsed as literal","a"
635311200386270079,"Parsed as literal","b"
635311200386270079,"Parsed as literal"," a"
635311200386270079,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311200386280079,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311200386280079,"Parsed as literal","makeRange"
635311200386290080,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311200386290080,"Parsed as literal","a"
635311200386290080,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311200386300080,"Parsed as literal","b"
635311200386300080,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311200386300080,"Parsed as literal","a"
635311200386310081,"Parsed as literal","b"
635311200386310081,"Parsed as literal"," a"
635311200386320081,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311200386320081,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311200386320081,"Parsed as literal","makeRange"
635311200386330082,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311200386330082,"Parsed as literal","a"
635311200386330082,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311200386340083,"Parsed as literal","b"
635311200386340083,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311200386350083,"Parsed as literal","a"
635311200386350083,"Parsed as literal","b"
635311200386350083,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311200386360084,"Parsed as literal"," a "
635311200386360084,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311200386360084,"Parsed as literal","makeRange"
635311200386370084,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311200386370084,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311200386380085,"Parsed as literal","a"
635311200386380085,"Parsed as literal","1"
635311200386380085,"Parsed as literal","b"
635311200386390085,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311200386390085,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311200386390085,"Parsed as literal","makeRange"
635311200386400086,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311200386400086,"Parsed as literal","a"
635311200386410087,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311200386410087,"Parsed as literal","b"
635311200386410087,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311200386420087,"Parsed as literal","a"
635311200386420087,"Parsed as literal","b"
635311200386430088,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311200386430088,"Parsed as literal"," a "
635311200386430088,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311200386440088,"Parsed as literal","makeRange"
635311200386440088,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311200386440088,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311200386450089,"Parsed as literal","a"
635311200386450089,"Parsed as literal","1"
635311200386450089,"Parsed as literal","b"
635311200386460089,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311200386460089,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311200386470090,"Parsed as literal","reverse"
635311200386470090,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311200386470090,"Parsed as literal",""
635311200386480091,"Parsed as literal",""
635311200386480091,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311200386490091,"Parsed as literal",""
635311200386490091,"Parsed as literal",""
635311200386490091,"Invalid operator","@reverse([]) -> []","0"
635311200386500092,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311200386500092,"Parsed as literal","reverse"
635311200386500092,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311200386510092,"Parsed as literal",""
635311200386510092,"Parsed as literal",""
635311200386510092,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311200386520093,"Parsed as literal",""
635311200386520093,"Parsed as literal",""
635311200386530093,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311200386530093,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311200386530093,"Parsed as literal","reverse"
635311200386540094,"Parsed as literal","list"
635311200386540094,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311200386550095,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311200386550095,"Parsed as literal","reverse"
635311200386550095,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200386560095,"Parsed as literal",""
635311200386560095,"Parsed as literal","list"
635311200386560095,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311200386570096,"Parsed as literal"," "
635311200386570096,"Parsed as literal","list"
635311200386580096,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311200386580096,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311200386580096,"Parsed as literal","reverse"
635311200386590097,"Parsed as literal","list"
635311200386590097,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311200386590097,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311200386600097,"Parsed as literal","reverse"
635311200386600097,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200386610098,"Parsed as literal",""
635311200386610098,"Parsed as literal","list"
635311200386610098,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311200386620099,"Parsed as literal"," "
635311200386620099,"Parsed as literal","list"
635311200386630099,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311200386630099,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311200386630099,"Parsed as literal","max"
635311200386640100,"Parsed as literal","list"
635311200386640100,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311200386640100,"Parsed as literal","fold"
635311200386650100,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311200386650100,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311200386660101,"Parsed as literal","max"
635311200386660101,"Parsed as literal",""
635311200386660101,"Invalid operator","@max","19"
635311200386670101,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311200386670101,"Parsed as literal","max"
635311200386670101,"Parsed as literal",""
635311200386680102,"Invalid operator","@max","19"
635311200386680102,"Parsed as literal","@max"
635311200386680102,"Parsed as literal","list"
635311200386690103,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311200386690103,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311200386700103,"Parsed as literal","max"
635311200386700103,"Parsed as literal","list"
635311200386700103,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311200386710104,"Parsed as literal","fold"
635311200386710104,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311200386710104,"Parsed as literal","@max"
635311200386720104,"Parsed as literal","list"
635311200386720104,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311200386730105,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311200386730105,"Parsed as literal","elementAt"
635311200386730105,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311200386740105,"Parsed as literal","0"
635311200386740105,"Parsed as literal","list"
635311200386740105,"Parsed as literal"," 'list"
635311200386750106,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311200386750106,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311200386760107,"Parsed as literal","elementAt"
635311200386760107,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311200386760107,"Parsed as literal","n"
635311200386770107,"Parsed as literal","list"
635311200386770107,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311200386780108,"Parsed as literal","elementAt"
635311200386780108,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311200386780108,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200386790108,"Parsed as literal","n"
635311200386790108,"Parsed as literal","1"
635311200386790108,"Parsed as literal","list'"
635311200386800109,"StepEvaluate","->","Changed","Declared @zipWith"
635311200386800109,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311200386810109,"StepEvaluate","->","Changed","Declared @zipWith"
635311200386810109,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311200386810109,"StepEvaluate","->","Changed","Declared @count"
635311200386820110,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311200386820110,"StepEvaluate","->","Changed","Declared @count"
635311200386820110,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311200386830111,"StepEvaluate","->","Changed","Declared @skip"
635311200386830111,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311200386830111,"StepEvaluate","->","Changed","Declared @skip"
635311200386840111,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311200386840111,"StepEvaluate","->","Changed","Declared @take"
635311200386840111,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311200386850112,"StepEvaluate","->","Changed","Declared @take"
635311200386850112,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311200386850112,"StepEvaluate","->","Changed","Declared @nthItem"
635311200386860112,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200386860112,"StepEvaluate","->","Changed","Declared @nthItem"
635311200386860112,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200386870113,"StepEvaluate","->","Changed","Declared @nthItem"
635311200386870113,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200386880113,"StepEvaluate","->","Changed","Declared @makeRange"
635311200386880113,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311200386880113,"StepEvaluate","->","Changed","Declared @makeRange"
635311200386890114,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311200386890114,"StepEvaluate","->","Changed","Declared @reverse"
635311200386890114,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311200386900115,"StepEvaluate","->","Changed","Declared @reverse"
635311200386900115,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311200386900115,"StepEvaluate","->","Changed","Declared @max"
635311200386910115,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200386910115,"StepEvaluate","==","Unchanged","=="
635311200386920116,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200386920116,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200386920116,"StepEvaluate",",","Unchanged",","
635311200386930116,"StepEvaluate","0","Unchanged","0"
635311200386930116,"StepEvaluate",",","Unchanged",","
635311200386930116,"StepEvaluate","list","Unchanged","list"
635311200386940117,"StepEvaluate","'list","Unchanged","'list"
635311200386940117,"StepEvaluate","==","Unchanged","=="
635311200386940117,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200386940117,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200386950117,"StepEvaluate",",","Unchanged",","
635311200386950117,"StepEvaluate","n","Unchanged","n"
635311200386960118,"StepEvaluate",",","Unchanged",","
635311200386960118,"StepEvaluate","list","Unchanged","list"
635311200386970119,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200386970119,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200386970119,"StepEvaluate",",","Unchanged",","
635311200386980119,"StepEvaluate","-","Unchanged","-"
635311200386980119,"StepEvaluate","n","Unchanged","n"
635311200386980119,"StepEvaluate","1","Unchanged","1"
635311200386990120,"StepEvaluate",",","Unchanged",","
635311200386990120,"StepEvaluate","list'","Unchanged","list'"
635311200386990120,"StepEvaluate","[]","Changed","File imported"
635311200387000120,"StepEvaluate","File imported","Unchanged","File imported"
635311200387000120,"StepEvaluate","@","Changed","@"
635311200387000120,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200387010121,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200387010121,"StepEvaluate",",","Unchanged",","
635311200387010121,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200387020122,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200387020122,"StepEvaluate","PAT@-M","Changed","[]"
635311200387020122,"StepEvaluate","SEL@import","Changed","[]"
635311200387030122,"StepEvaluate","@","Changed","[]"
635311200387030122,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311200387040123,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311200387040123,"Parsed as literal","naturalNumbers"
635311200387040123,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200387050123,"Parsed as literal",""
635311200387050123,"Parsed as literal",""
635311200387060124,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311200387060124,"Parsed as literal","naturalNumbers"
635311200387060124,"Parsed as literal","0"
635311200387070124,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311200387070124,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311200387080125,"Parsed as literal","naturalNumbers"
635311200387080125,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200387080125,"Parsed as literal",""
635311200387090126,"Parsed as literal",""
635311200387090126,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311200387100126,"Parsed as literal","naturalNumbers"
635311200387100126,"Parsed as literal","0"
635311200387100126,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311200387110127,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311200387110127,"Parsed as literal","naturalNumbers"
635311200387110127,"Parsed as literal","n"
635311200387120127,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311200387120127,"Parsed as literal"," n "
635311200387130128,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311200387130128,"Parsed as literal","naturalNumbers"
635311200387130128,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311200387140128,"Parsed as literal","n"
635311200387140128,"Parsed as literal","1"
635311200387150129,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311200387150129,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311200387150129,"Parsed as literal","naturalNumbers"
635311200387160130,"Parsed as literal","n"
635311200387160130,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311200387160130,"Parsed as literal"," n "
635311200387170130,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311200387170130,"Parsed as literal","naturalNumbers"
635311200387180131,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311200387180131,"Parsed as literal","n"
635311200387180131,"Parsed as literal","1"
635311200387190131,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311200387190131,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311200387200132,"Parsed as literal","max"
635311200387200132,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311200387200132,"Parsed as literal","a"
635311200387210132,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311200387210132,"Parsed as literal","b"
635311200387210132,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311200387220133,"Parsed as literal","a"
635311200387220133,"Parsed as literal","b"
635311200387230134,"Parsed as literal","b"
635311200387230134,"Invalid operator","@max(a,b|a<b)->b","0"
635311200387230134,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311200387240134,"Parsed as literal","max"
635311200387240134,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311200387240134,"Parsed as literal","a"
635311200387250135,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311200387250135,"Parsed as literal","b"
635311200387260135,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311200387260135,"Parsed as literal","a"
635311200387260135,"Parsed as literal","b"
635311200387270136,"Parsed as literal","b"
635311200387270136,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311200387270136,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311200387280136,"Parsed as literal","max"
635311200387280136,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200387290137,"Parsed as literal","a"
635311200387290137,"Parsed as literal","b"
635311200387290137,"Parsed as literal","a"
635311200387300138,"Invalid operator","@max(a,b)->a","0"
635311200387300138,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311200387300138,"Parsed as literal","max"
635311200387310138,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200387310138,"Parsed as literal","a"
635311200387320139,"Parsed as literal","b"
635311200387320139,"Parsed as literal","a"
635311200387320139,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311200387330139,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311200387330139,"Parsed as literal","random"
635311200387340140,"Parsed as literal","0"
635311200387340140,"Parsed as literal"," 0"
635311200387340140,"Invalid operator","@random(0) -> 0","0"
635311200387350140,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311200387350140,"Parsed as literal","random"
635311200387350140,"Parsed as literal","0"
635311200387360141,"Parsed as literal"," 0"
635311200387360141,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311200387370142,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311200387370142,"Parsed as literal","random"
635311200387370142,"Parsed as literal","n"
635311200387380142,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311200387380142,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311200387390143,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311200387390143,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311200387390143,"Parsed as literal","1664525 "
635311200387400143,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311200387400143,"Parsed as literal","random"
635311200387410144,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200387410144,"Parsed as literal","n"
635311200387410144,"Parsed as literal","1"
635311200387420144,"Parsed as literal"," 1013904223"
635311200387420144,"Parsed as literal",""
635311200387420144,"Parsed as literal"," 4294967296"
635311200387430145,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311200387430145,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311200387440146,"Parsed as literal","random"
635311200387440146,"Parsed as literal","n"
635311200387440146,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311200387450146,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311200387450146,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311200387460147,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311200387460147,"Parsed as literal","1664525 "
635311200387460147,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311200387470147,"Parsed as literal","random"
635311200387470147,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200387470147,"Parsed as literal","n"
635311200387480148,"Parsed as literal","1"
635311200387480148,"Parsed as literal"," 1013904223"
635311200387480148,"Parsed as literal",""
635311200387490148,"Parsed as literal"," 4294967296"
635311200387500149,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311200387500149,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311200387510150,"Parsed as literal","gcd"
635311200387510150,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311200387510150,"Parsed as literal","a"
635311200387520150,"Parsed as literal","0"
635311200387520150,"Parsed as literal"," a"
635311200387520150,"Invalid operator","@gcd(a,0) -> a","0"
635311200387530151,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311200387530151,"Parsed as literal","gcd"
635311200387540151,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311200387540151,"Parsed as literal","a"
635311200387540151,"Parsed as literal","0"
635311200387550152,"Parsed as literal"," a"
635311200387550152,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311200387560152,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311200387560152,"Parsed as literal","gcd"
635311200387560152,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200387570153,"Parsed as literal","a"
635311200387570153,"Parsed as literal","b"
635311200387570153,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311200387580154,"Parsed as literal","gcd"
635311200387580154,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311200387590154,"Parsed as literal","b"
635311200387590154,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311200387590154,"Parsed as literal","a "
635311200387600155,"Parsed as literal"," b"
635311200387600155,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311200387610155,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311200387610155,"Parsed as literal","gcd"
635311200387610155,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200387620156,"Parsed as literal","a"
635311200387620156,"Parsed as literal","b"
635311200387620156,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311200387630156,"Parsed as literal","gcd"
635311200387630156,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311200387630156,"Parsed as literal","b"
635311200387640157,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311200387640157,"Parsed as literal","a "
635311200387650158,"Parsed as literal"," b"
635311200387650158,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311200387650158,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311200387660158,"Parsed as literal","gcd"
635311200387660158,"Parsed as literal","list"
635311200387670159,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311200387670159,"Parsed as literal","fold"
635311200387670159,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311200387680159,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311200387680159,"Parsed as literal","gcd"
635311200387680159,"Parsed as literal",""
635311200387690160,"Invalid operator","@gcd","19"
635311200387690160,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311200387690160,"Parsed as literal","gcd"
635311200387700160,"Parsed as literal",""
635311200387700160,"Invalid operator","@gcd","19"
635311200387710161,"Parsed as literal","@gcd"
635311200387710161,"Parsed as literal","list"
635311200387710161,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311200387720162,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311200387720162,"Parsed as literal","gcd"
635311200387720162,"Parsed as literal","list"
635311200387730162,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311200387730162,"Parsed as literal","fold"
635311200387740163,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311200387740163,"Parsed as literal","@gcd"
635311200387740163,"Parsed as literal","list"
635311200387750163,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311200387750163,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311200387760164,"Parsed as literal","fib"
635311200387760164,"Parsed as literal","0"
635311200387760164,"Parsed as literal"," 1"
635311200387770164,"Invalid operator","@fib(0) -> 1","0"
635311200387770164,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311200387770164,"Parsed as literal","fib"
635311200387780165,"Parsed as literal","0"
635311200387780165,"Parsed as literal"," 1"
635311200387790166,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311200387790166,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311200387790166,"Parsed as literal","fib"
635311200387800166,"Parsed as literal","1"
635311200387800166,"Parsed as literal"," 1"
635311200387800166,"Invalid operator","@fib(1) -> 1","0"
635311200387810167,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311200387810167,"Parsed as literal","fib"
635311200387810167,"Parsed as literal","1"
635311200387820167,"Parsed as literal"," 1"
635311200387820167,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311200387830168,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311200387830168,"Parsed as literal","fib"
635311200387830168,"Parsed as literal","n"
635311200387840168,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311200387840168,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311200387850169,"Parsed as literal","fib"
635311200387850169,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311200387850169,"Parsed as literal","n"
635311200387860170,"Parsed as literal","2"
635311200387860170,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311200387870170,"Parsed as literal","fib"
635311200387870170,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200387870170,"Parsed as literal","n"
635311200387880171,"Parsed as literal","1"
635311200387880171,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311200387880171,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311200387890171,"Parsed as literal","fib"
635311200387890171,"Parsed as literal","n"
635311200387900172,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311200387900172,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311200387900172,"Parsed as literal","fib"
635311200387910172,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311200387910172,"Parsed as literal","n"
635311200387920173,"Parsed as literal","2"
635311200387920173,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311200387920173,"Parsed as literal","fib"
635311200387930174,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200387930174,"Parsed as literal","n"
635311200387930174,"Parsed as literal","1"
635311200387940174,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200387940174,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311200387950175,"Parsed as literal","fib2"
635311200387950175,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311200387950175,"Parsed as literal",""
635311200387960175,"Parsed as literal",""
635311200387960175,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200387970176,"Parsed as literal"," 0 "
635311200387970176,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200387970176,"Parsed as literal"," 1 "
635311200387980176,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311200387980176,"Parsed as literal","zipWith"
635311200387990177,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311200387990177,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311200387990177,"Parsed as literal",""
635311200388000178,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200388000178,"Parsed as literal","a"
635311200388010178,"Parsed as literal","b"
635311200388010178,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311200388010178,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200388020179,"Parsed as literal","a"
635311200388020179,"Parsed as literal","b"
635311200388020179,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200388030179,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200388030179,"Parsed as literal","fib2"
635311200388040180,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200388040180,"Parsed as literal",""
635311200388040180,"Parsed as literal",""
635311200388050180,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200388050180,"Parsed as literal"," "
635311200388050180,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200388060181,"Parsed as literal","fib2"
635311200388060181,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200388070182,"Parsed as literal",""
635311200388070182,"Parsed as literal",""
635311200388070182,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311200388080182,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200388080182,"Parsed as literal",""
635311200388080182,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200388090183,"Parsed as literal","a"
635311200388090183,"Parsed as literal","b"
635311200388100183,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311200388100183,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200388100183,"Parsed as literal","a"
635311200388110184,"Parsed as literal","b"
635311200388110184,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200388110184,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200388120184,"Parsed as literal","fib2"
635311200388120184,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200388120184,"Parsed as literal",""
635311200388130185,"Parsed as literal",""
635311200388130185,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200388140186,"Parsed as literal"," "
635311200388140186,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200388140186,"Parsed as literal","fib2"
635311200388150186,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200388150186,"Parsed as literal",""
635311200388150186,"Parsed as literal",""
635311200388160187,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311200388160187,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311200388170187,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311200388170187,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200388170187,"Parsed as literal",""
635311200388180188,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200388180188,"Parsed as literal","a"
635311200388180188,"Parsed as literal","b"
635311200388190188,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200388190188,"Parsed as literal","a"
635311200388190188,"Parsed as literal","b"
635311200388200189,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200388200189,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200388210190,"Parsed as literal","fib2"
635311200388210190,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200388210190,"Parsed as literal",""
635311200388220190,"Parsed as literal",""
635311200388220190,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200388230191,"Parsed as literal"," "
635311200388230191,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200388230191,"Parsed as literal","fib2"
635311200388240191,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200388240191,"Parsed as literal",""
635311200388240191,"Parsed as literal",""
635311200388250192,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311200388250192,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311200388260192,"Parsed as literal","fib2"
635311200388260192,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311200388260192,"Parsed as literal",""
635311200388270193,"Parsed as literal",""
635311200388270193,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200388280194,"Parsed as literal"," 0 "
635311200388280194,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200388280194,"Parsed as literal"," 1 "
635311200388290194,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311200388290194,"Parsed as literal","zipWith"
635311200388300195,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311200388300195,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311200388300195,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200388310195,"Parsed as literal",""
635311200388310195,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200388310195,"Parsed as literal","a"
635311200388320196,"Parsed as literal","b"
635311200388320196,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200388330196,"Parsed as literal","a"
635311200388330196,"Parsed as literal","b"
635311200388330196,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200388340197,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200388340197,"Parsed as literal","fib2"
635311200388340197,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200388350198,"Parsed as literal",""
635311200388350198,"Parsed as literal",""
635311200388360198,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200388360198,"Parsed as literal"," "
635311200388360198,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200388370199,"Parsed as literal","fib2"
635311200388370199,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200388370199,"Parsed as literal",""
635311200388380199,"Parsed as literal",""
635311200388380199,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311200388390200,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311200388390200,"Parsed as literal","fib2"
635311200388390200,"Parsed as literal","n"
635311200388400200,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311200388400200,"Parsed as literal","take"
635311200388410201,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311200388410201,"Parsed as literal","n"
635311200388410201,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311200388420202,"Parsed as literal","fib2"
635311200388420202,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200388420202,"Parsed as literal",""
635311200388430202,"Parsed as literal",""
635311200388430202,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311200388440203,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311200388440203,"Parsed as literal","fib2"
635311200388440203,"Parsed as literal","n"
635311200388450203,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311200388450203,"Parsed as literal","take"
635311200388460204,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311200388460204,"Parsed as literal","n"
635311200388460204,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311200388470204,"Parsed as literal","fib2"
635311200388470204,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200388470204,"Parsed as literal",""
635311200388480205,"Parsed as literal",""
635311200388480205,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311200388490206,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311200388490206,"Parsed as literal","fac"
635311200388490206,"Parsed as literal","0"
635311200388500206,"Parsed as literal"," 1"
635311200388500206,"Invalid operator","@fac(0) -> 1","0"
635311200388500206,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311200388510207,"Parsed as literal","fac"
635311200388510207,"Parsed as literal","0"
635311200388510207,"Parsed as literal"," 1"
635311200388520207,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311200388520207,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311200388530208,"Parsed as literal","fac"
635311200388530208,"Parsed as literal","n"
635311200388530208,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311200388540208,"Parsed as literal"," n "
635311200388540208,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311200388550209,"Parsed as literal","fac"
635311200388550209,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311200388550209,"Parsed as literal","n"
635311200388560210,"Parsed as literal","1"
635311200388560210,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311200388560210,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311200388570210,"Parsed as literal","fac"
635311200388570210,"Parsed as literal","n"
635311200388580211,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311200388580211,"Parsed as literal"," n "
635311200388580211,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311200388590211,"Parsed as literal","fac"
635311200388590211,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311200388590211,"Parsed as literal","n"
635311200388600212,"Parsed as literal","1"
635311200388600212,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311200388610212,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311200388610212,"Parsed as literal","pow"
635311200388610212,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311200388620213,"Parsed as literal","num"
635311200388620213,"Parsed as literal","0"
635311200388620213,"Parsed as literal"," 1"
635311200388630214,"Invalid operator","@pow(num,0) -> 1","0"
635311200388630214,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311200388630214,"Parsed as literal","pow"
635311200388640214,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311200388640214,"Parsed as literal","num"
635311200388650215,"Parsed as literal","0"
635311200388650215,"Parsed as literal"," 1"
635311200388650215,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311200388660215,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311200388660215,"Parsed as literal","pow"
635311200388670216,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311200388670216,"Parsed as literal","num"
635311200388680216,"Parsed as literal","1"
635311200388680216,"Parsed as literal"," num"
635311200388690217,"Invalid operator","@pow(num,1) -> num","0"
635311200388690217,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311200388690217,"Parsed as literal","pow"
635311200388700218,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311200388700218,"Parsed as literal","num"
635311200388700218,"Parsed as literal","1"
635311200388710218,"Parsed as literal"," num"
635311200388710218,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311200388720219,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311200388720219,"Parsed as literal","pow"
635311200388720219,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311200388730219,"Parsed as literal","num"
635311200388730219,"Parsed as literal"," power"
635311200388740220,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311200388740220,"Parsed as literal"," num "
635311200388740220,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311200388750220,"Parsed as literal","pow"
635311200388750220,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311200388750220,"Parsed as literal","num"
635311200388760221,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311200388760221,"Parsed as literal","power"
635311200388770222,"Parsed as literal","1"
635311200388770222,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311200388770222,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311200388780222,"Parsed as literal","pow"
635311200388780222,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311200388780222,"Parsed as literal","num"
635311200388790223,"Parsed as literal"," power"
635311200388790223,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311200388800223,"Parsed as literal"," num "
635311200388800223,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311200388800223,"Parsed as literal","pow"
635311200388810224,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311200388810224,"Parsed as literal","num"
635311200388810224,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311200388820224,"Parsed as literal","power"
635311200388820224,"Parsed as literal","1"
635311200388830225,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311200388830225,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311200388830225,"Parsed as literal","upArrow"
635311200388840226,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311200388840226,"Parsed as literal","a"
635311200388850226,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311200388850226,"Parsed as literal","b"
635311200388850226,"Parsed as literal","1"
635311200388860227,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311200388860227,"Parsed as literal","pow"
635311200388860227,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311200388870227,"Parsed as literal","a"
635311200388870227,"Parsed as literal","b"
635311200388880228,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311200388880228,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311200388880228,"Parsed as literal","upArrow"
635311200388890228,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311200388890228,"Parsed as literal","a"
635311200388890228,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311200388900229,"Parsed as literal","b"
635311200388900229,"Parsed as literal","1"
635311200388910230,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311200388910230,"Parsed as literal","pow"
635311200388910230,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311200388920230,"Parsed as literal","a"
635311200388920230,"Parsed as literal","b"
635311200388930231,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311200388930231,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311200388930231,"Parsed as literal","upArrow"
635311200388940231,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311200388940231,"Parsed as literal","a"
635311200388940231,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311200388950232,"Parsed as literal","1"
635311200388950232,"Parsed as literal","n"
635311200388950232,"Parsed as literal"," a"
635311200388960232,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311200388960232,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311200388970233,"Parsed as literal","upArrow"
635311200388970233,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311200388970233,"Parsed as literal","a"
635311200388980234,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311200388980234,"Parsed as literal","1"
635311200388980234,"Parsed as literal","n"
635311200388990234,"Parsed as literal"," a"
635311200388990234,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311200389000235,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311200389000235,"Parsed as literal","upArrow"
635311200389000235,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311200389010235,"Parsed as literal","a"
635311200389010235,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311200389010235,"Parsed as literal","b"
635311200389020236,"Parsed as literal","n"
635311200389020236,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311200389030236,"Parsed as literal","upArrow"
635311200389030236,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311200389030236,"Parsed as literal","a"
635311200389040237,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311200389040237,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311200389050238,"Parsed as literal","upArrow"
635311200389050238,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311200389050238,"Parsed as literal","a"
635311200389060238,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311200389060238,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311200389060238,"Parsed as literal","b"
635311200389070239,"Parsed as literal","1"
635311200389070239,"Parsed as literal","n"
635311200389080239,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311200389080239,"Parsed as literal","n"
635311200389080239,"Parsed as literal","1"
635311200389090240,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311200389090240,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311200389090240,"Parsed as literal","upArrow"
635311200389100240,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311200389100240,"Parsed as literal","a"
635311200389110241,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311200389110241,"Parsed as literal","b"
635311200389110241,"Parsed as literal","n"
635311200389120242,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311200389120242,"Parsed as literal","upArrow"
635311200389130242,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311200389130242,"Parsed as literal","a"
635311200389130242,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311200389140243,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311200389140243,"Parsed as literal","upArrow"
635311200389140243,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311200389150243,"Parsed as literal","a"
635311200389150243,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311200389160244,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311200389160244,"Parsed as literal","b"
635311200389160244,"Parsed as literal","1"
635311200389170244,"Parsed as literal","n"
635311200389170244,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311200389170244,"Parsed as literal","n"
635311200389180245,"Parsed as literal","1"
635311200389180245,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311200389190246,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311200389190246,"Parsed as literal","graham"
635311200389190246,"Parsed as literal","0"
635311200389200246,"Parsed as literal"," 4"
635311200389200246,"Invalid operator","@graham(0) -> 4","0"
635311200389210247,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311200389210247,"Parsed as literal","graham"
635311200389210247,"Parsed as literal","0"
635311200389220247,"Parsed as literal"," 4"
635311200389220247,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311200389230248,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311200389230248,"Parsed as literal","graham"
635311200389230248,"Parsed as literal","n"
635311200389240248,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311200389240248,"Parsed as literal","upArrow"
635311200389240248,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311200389250249,"Parsed as literal","3"
635311200389250249,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311200389260250,"Parsed as literal","3"
635311200389260250,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311200389260250,"Parsed as literal","graham"
635311200389270250,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311200389270250,"Parsed as literal","n"
635311200389270250,"Parsed as literal","1"
635311200389280251,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311200389280251,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311200389290251,"Parsed as literal","graham"
635311200389290251,"Parsed as literal","n"
635311200389290251,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311200389300252,"Parsed as literal","upArrow"
635311200389300252,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311200389310252,"Parsed as literal","3"
635311200389310252,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311200389310252,"Parsed as literal","3"
635311200389320253,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311200389320253,"Parsed as literal","graham"
635311200389320253,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311200389330254,"Parsed as literal","n"
635311200389330254,"Parsed as literal","1"
635311200389340254,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311200389340254,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311200389340254,"Parsed as literal","grahamsNumber"
635311200389350255,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200389350255,"Parsed as literal",""
635311200389360255,"Parsed as literal",""
635311200389360255,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311200389360255,"Parsed as literal","graham"
635311200389370256,"Parsed as literal","64"
635311200389370256,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311200389370256,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311200389380256,"Parsed as literal","grahamsNumber"
635311200389380256,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200389380256,"Parsed as literal",""
635311200389390257,"Parsed as literal",""
635311200389390257,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311200389400258,"Parsed as literal","graham"
635311200389400258,"Parsed as literal","64"
635311200389400258,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311200389410258,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311200389410258,"Parsed as literal","ack"
635311200389410258,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311200389420259,"Parsed as literal","0"
635311200389420259,"Parsed as literal","n"
635311200389430259,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311200389430259,"Parsed as literal"," n "
635311200389440260,"Parsed as literal"," 1"
635311200389440260,"Invalid operator","@ack(0,n) -> n + 1","0"
635311200389440260,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311200389450260,"Parsed as literal","ack"
635311200389450260,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311200389450260,"Parsed as literal","0"
635311200389460261,"Parsed as literal","n"
635311200389460261,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311200389470262,"Parsed as literal"," n "
635311200389470262,"Parsed as literal"," 1"
635311200389470262,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311200389480262,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311200389480262,"Parsed as literal","ack"
635311200389490263,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311200389490263,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311200389490263,"Parsed as literal","m"
635311200389500263,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311200389500263,"Parsed as literal","m"
635311200389500263,"Parsed as literal","0"
635311200389510264,"Parsed as literal","0"
635311200389510264,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311200389520265,"Parsed as literal","ack"
635311200389520265,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311200389520265,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311200389530265,"Parsed as literal","m"
635311200389530265,"Parsed as literal","1"
635311200389540266,"Parsed as literal","1"
635311200389540266,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311200389540266,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311200389550266,"Parsed as literal","ack"
635311200389550266,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311200389550266,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311200389560267,"Parsed as literal","m"
635311200389560267,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311200389560267,"Parsed as literal","m"
635311200389570267,"Parsed as literal","0"
635311200389570267,"Parsed as literal","0"
635311200389580268,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311200389580268,"Parsed as literal","ack"
635311200389590269,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311200389590269,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311200389600269,"Parsed as literal","m"
635311200389600269,"Parsed as literal","1"
635311200389600269,"Parsed as literal","1"
635311200389610270,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311200389610270,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311200389620270,"Parsed as literal","ack"
635311200389620270,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311200389620270,"Parsed as literal","m"
635311200389630271,"Parsed as literal","n"
635311200389630271,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311200389630271,"Parsed as literal","ack"
635311200389630271,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311200389640271,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311200389640271,"Parsed as literal","m"
635311200389640271,"Parsed as literal","1"
635311200389650272,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311200389650272,"Parsed as literal","ack"
635311200389650272,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311200389650272,"Parsed as literal","m"
635311200389660273,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200389660273,"Parsed as literal","n"
635311200389660273,"Parsed as literal","1"
635311200389670273,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311200389670273,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311200389670273,"Parsed as literal","ack"
635311200389680274,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311200389680274,"Parsed as literal","m"
635311200389680274,"Parsed as literal","n"
635311200389680274,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311200389690274,"Parsed as literal","ack"
635311200389690274,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311200389690274,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311200389700275,"Parsed as literal","m"
635311200389700275,"Parsed as literal","1"
635311200389700275,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311200389700275,"Parsed as literal","ack"
635311200389710275,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311200389710275,"Parsed as literal","m"
635311200389710275,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200389720276,"Parsed as literal","n"
635311200389720276,"Parsed as literal","1"
635311200389720276,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311200389730277,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311200389730277,"Parsed as literal","acker"
635311200389730277,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311200389730277,"Parsed as literal","m"
635311200389740277,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311200389740277,"Parsed as literal","n"
635311200389740277,"Parsed as literal","0"
635311200389750278,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311200389750278,"Parsed as literal"," m"
635311200389750278,"Parsed as literal","n"
635311200389750278,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311200389760278,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311200389760278,"Parsed as literal","acker"
635311200389760278,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311200389770279,"Parsed as literal","m"
635311200389770279,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311200389770279,"Parsed as literal","n"
635311200389770279,"Parsed as literal","0"
635311200389780279,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311200389780279,"Parsed as literal"," m"
635311200389780279,"Parsed as literal","n"
635311200389790280,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311200389790280,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311200389790280,"Parsed as literal","acker"
635311200389800281,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311200389800281,"Parsed as literal","m"
635311200389800281,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311200389800281,"Parsed as literal","0"
635311200389810281,"Parsed as literal","1"
635311200389810281,"Parsed as literal"," 0"
635311200389810281,"Invalid operator","@acker(m,0,1) -> 0","0"
635311200389820282,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311200389820282,"Parsed as literal","acker"
635311200389820282,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311200389820282,"Parsed as literal","m"
635311200389830282,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311200389830282,"Parsed as literal","0"
635311200389830282,"Parsed as literal","1"
635311200389840283,"Parsed as literal"," 0"
635311200389840283,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311200389840283,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311200389840283,"Parsed as literal","acker"
635311200389850283,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311200389850283,"Parsed as literal","m"
635311200389850283,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311200389860284,"Parsed as literal","0"
635311200389860284,"Parsed as literal","2"
635311200389860284,"Parsed as literal"," 1"
635311200389860284,"Invalid operator","@acker(m,0,2) -> 1","0"
635311200389870285,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311200389870285,"Parsed as literal","acker"
635311200389870285,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311200389880285,"Parsed as literal","m"
635311200389880285,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311200389890286,"Parsed as literal","0"
635311200389890286,"Parsed as literal","2"
635311200389890286,"Parsed as literal"," 1"
635311200389900286,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311200389900286,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311200389900286,"Parsed as literal","acker"
635311200389900286,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311200389910287,"Parsed as literal","m"
635311200389910287,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311200389910287,"Parsed as literal","0"
635311200389920287,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311200389920287,"Parsed as literal","p"
635311200389920287,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311200389920287,"Parsed as literal","p"
635311200389930288,"Parsed as literal","2"
635311200389930288,"Parsed as literal"," m"
635311200389930288,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311200389940289,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311200389940289,"Parsed as literal","acker"
635311200389940289,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311200389940289,"Parsed as literal","m"
635311200389950289,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311200389950289,"Parsed as literal","0"
635311200389950289,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311200389960290,"Parsed as literal","p"
635311200389960290,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311200389960290,"Parsed as literal","p"
635311200389960290,"Parsed as literal","2"
635311200389970290,"Parsed as literal"," m"
635311200389970290,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311200389980291,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311200389980291,"Parsed as literal","acker"
635311200389980291,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311200389980291,"Parsed as literal","m"
635311200389990291,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311200389990291,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311200389990291,"Parsed as literal","n"
635311200390000292,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311200390000292,"Parsed as literal","n"
635311200390000292,"Parsed as literal","0"
635311200390000292,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311200390010293,"Parsed as literal","p"
635311200390010293,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311200390010293,"Parsed as literal","p"
635311200390020293,"Parsed as literal","0"
635311200390020293,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311200390020293,"Parsed as literal","acker"
635311200390030294,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311200390030294,"Parsed as literal","m"
635311200390030294,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311200390030294,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311200390040294,"Parsed as literal","acker"
635311200390040294,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311200390040294,"Parsed as literal","m"
635311200390050295,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311200390050295,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311200390050295,"Parsed as literal","n"
635311200390050295,"Parsed as literal","1"
635311200390060295,"Parsed as literal","p"
635311200390060295,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311200390060295,"Parsed as literal","p"
635311200390070296,"Parsed as literal","1"
635311200390070296,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311200390070296,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311200390070296,"Parsed as literal","acker"
635311200390080297,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311200390080297,"Parsed as literal","m"
635311200390080297,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311200390090297,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311200390090297,"Parsed as literal","n"
635311200390090297,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311200390090297,"Parsed as literal","n"
635311200390100298,"Parsed as literal","0"
635311200390100298,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311200390100298,"Parsed as literal","p"
635311200390110298,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311200390110298,"Parsed as literal","p"
635311200390110298,"Parsed as literal","0"
635311200390110298,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311200390120299,"Parsed as literal","acker"
635311200390120299,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311200390120299,"Parsed as literal","m"
635311200390130299,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311200390130299,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311200390130299,"Parsed as literal","acker"
635311200390130299,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311200390140300,"Parsed as literal","m"
635311200390140300,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311200390140300,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311200390150301,"Parsed as literal","n"
635311200390150301,"Parsed as literal","1"
635311200390150301,"Parsed as literal","p"
635311200390150301,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311200390160301,"Parsed as literal","p"
635311200390160301,"Parsed as literal","1"
635311200390160301,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311200390170302,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311200390170302,"Parsed as literal","hyper"
635311200390170302,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311200390180302,"Parsed as literal","0"
635311200390180302,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200390180302,"Parsed as literal","a"
635311200390180302,"Parsed as literal","b"
635311200390190303,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311200390190303,"Parsed as literal"," b"
635311200390190303,"Parsed as literal","1"
635311200390200303,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311200390200303,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311200390200303,"Parsed as literal","hyper"
635311200390210304,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311200390210304,"Parsed as literal","0"
635311200390210304,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200390210304,"Parsed as literal","a"
635311200390220305,"Parsed as literal","b"
635311200390220305,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311200390220305,"Parsed as literal"," b"
635311200390230305,"Parsed as literal","1"
635311200390230305,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311200390230305,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311200390230305,"Parsed as literal","hyper"
635311200390240306,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311200390240306,"Parsed as literal","1"
635311200390240306,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200390250306,"Parsed as literal","a"
635311200390250306,"Parsed as literal","0"
635311200390250306,"Parsed as literal"," a"
635311200390250306,"Invalid operator","@hyper(1,a,0) -> a","0"
635311200390260307,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311200390260307,"Parsed as literal","hyper"
635311200390260307,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311200390270307,"Parsed as literal","1"
635311200390270307,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200390270307,"Parsed as literal","a"
635311200390270307,"Parsed as literal","0"
635311200390280308,"Parsed as literal"," a"
635311200390280308,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311200390280308,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311200390290309,"Parsed as literal","hyper"
635311200390290309,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311200390290309,"Parsed as literal","2"
635311200390290309,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200390300309,"Parsed as literal","a"
635311200390300309,"Parsed as literal","0"
635311200390300309,"Parsed as literal"," 0"
635311200390310310,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311200390310310,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311200390310310,"Parsed as literal","hyper"
635311200390320310,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311200390320310,"Parsed as literal","2"
635311200390320310,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200390320310,"Parsed as literal","a"
635311200390330311,"Parsed as literal","0"
635311200390330311,"Parsed as literal"," 0"
635311200390330311,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311200390340311,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311200390340311,"Parsed as literal","hyper"
635311200390340311,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311200390340311,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311200390350312,"Parsed as literal","n"
635311200390350312,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311200390350312,"Parsed as literal","n"
635311200390360313,"Parsed as literal","2"
635311200390360313,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311200390360313,"Parsed as literal","a"
635311200390360313,"Parsed as literal","0"
635311200390370313,"Parsed as literal"," 1"
635311200390370313,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311200390370313,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311200390380314,"Parsed as literal","hyper"
635311200390380314,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311200390380314,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311200390380314,"Parsed as literal","n"
635311200390390314,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311200390390314,"Parsed as literal","n"
635311200390390314,"Parsed as literal","2"
635311200390400315,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311200390400315,"Parsed as literal","a"
635311200390400315,"Parsed as literal","0"
635311200390400315,"Parsed as literal"," 1"
635311200390410315,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311200390410315,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311200390410315,"Parsed as literal","hyper"
635311200390420316,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311200390420316,"Parsed as literal","n"
635311200390420316,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200390430317,"Parsed as literal","a"
635311200390430317,"Parsed as literal","b"
635311200390430317,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311200390440317,"Parsed as literal","hyper"
635311200390440317,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311200390440317,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311200390440317,"Parsed as literal","n"
635311200390450318,"Parsed as literal","1"
635311200390450318,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311200390450318,"Parsed as literal","a"
635311200390460318,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311200390460318,"Parsed as literal","hyper"
635311200390460318,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311200390460318,"Parsed as literal","n"
635311200390470319,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311200390470319,"Parsed as literal","a"
635311200390470319,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311200390480319,"Parsed as literal","b"
635311200390480319,"Parsed as literal","1"
635311200390480319,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311200390480319,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311200390490320,"Parsed as literal","hyper"
635311200390490320,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311200390490320,"Parsed as literal","n"
635311200390500321,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200390500321,"Parsed as literal","a"
635311200390500321,"Parsed as literal","b"
635311200390500321,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311200390510321,"Parsed as literal","hyper"
635311200390510321,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311200390510321,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311200390520322,"Parsed as literal","n"
635311200390520322,"Parsed as literal","1"
635311200390520322,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311200390520322,"Parsed as literal","a"
635311200390530322,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311200390530322,"Parsed as literal","hyper"
635311200390530322,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311200390540323,"Parsed as literal","n"
635311200390540323,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311200390540323,"Parsed as literal","a"
635311200390540323,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311200390550323,"Parsed as literal","b"
635311200390550323,"Parsed as literal","1"
635311200390550323,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311200390560324,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311200390560324,"Parsed as literal","sudan"
635311200390560324,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311200390570325,"Parsed as literal","0"
635311200390570325,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200390570325,"Parsed as literal","x"
635311200390570325,"Parsed as literal","y"
635311200390580325,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311200390580325,"Parsed as literal"," x "
635311200390580325,"Parsed as literal"," y"
635311200390590326,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311200390590326,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311200390590326,"Parsed as literal","sudan"
635311200390600326,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311200390600326,"Parsed as literal","0"
635311200390600326,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200390600326,"Parsed as literal","x"
635311200390610327,"Parsed as literal","y"
635311200390610327,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311200390610327,"Parsed as literal"," x "
635311200390620327,"Parsed as literal"," y"
635311200390620327,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311200390620327,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311200390620327,"Parsed as literal","sudan"
635311200390630328,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311200390630328,"Parsed as literal","n"
635311200390630328,"Parsed as literal","0"
635311200390640329,"Parsed as literal"," x"
635311200390640329,"Invalid operator","@sudan(n,0) -> x","0"
635311200390640329,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311200390640329,"Parsed as literal","sudan"
635311200390650329,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311200390650329,"Parsed as literal","n"
635311200390650329,"Parsed as literal","0"
635311200390660330,"Parsed as literal"," x"
635311200390660330,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311200390660330,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311200390670330,"Parsed as literal","sudan"
635311200390670330,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311200390670330,"Parsed as literal","n"
635311200390670330,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200390680331,"Parsed as literal","x"
635311200390680331,"Parsed as literal","y"
635311200390680331,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200390690331,"Parsed as literal","sudan"
635311200390690331,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200390690331,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200390700332,"Parsed as literal","n"
635311200390700332,"Parsed as literal","1"
635311200390700332,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311200390710333,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311200390710333,"Parsed as literal","sudan"
635311200390710333,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311200390710333,"Parsed as literal","n"
635311200390720333,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311200390720333,"Parsed as literal","x"
635311200390720333,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311200390730334,"Parsed as literal","y"
635311200390730334,"Parsed as literal","1"
635311200390730334,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311200390740334,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311200390740334,"Parsed as literal","sudan"
635311200390740334,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311200390740334,"Parsed as literal","n"
635311200390750335,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311200390750335,"Parsed as literal","x"
635311200390750335,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311200390750335,"Parsed as literal","y"
635311200390760335,"Parsed as literal","1"
635311200390760335,"Parsed as literal","y"
635311200390760335,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311200390770336,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311200390770336,"Parsed as literal","sudan"
635311200390770336,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311200390780337,"Parsed as literal","n"
635311200390780337,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200390780337,"Parsed as literal","x"
635311200390780337,"Parsed as literal","y"
635311200390790337,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200390790337,"Parsed as literal","sudan"
635311200390790337,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200390800338,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200390800338,"Parsed as literal","n"
635311200390800338,"Parsed as literal","1"
635311200390810338,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311200390810338,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311200390810338,"Parsed as literal","sudan"
635311200390810338,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311200390820339,"Parsed as literal","n"
635311200390820339,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311200390820339,"Parsed as literal","x"
635311200390830339,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311200390830339,"Parsed as literal","y"
635311200390830339,"Parsed as literal","1"
635311200390840340,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311200390840340,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311200390850341,"Parsed as literal","sudan"
635311200390850341,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311200390850341,"Parsed as literal","n"
635311200390850341,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311200390860341,"Parsed as literal","x"
635311200390860341,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311200390860341,"Parsed as literal","y"
635311200390870342,"Parsed as literal","1"
635311200390870342,"Parsed as literal","y"
635311200390870342,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311200390870342,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311200390880342,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311200390880342,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311200390880342,"StepEvaluate","->","Changed","Declared @max"
635311200390890343,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200390890343,"StepEvaluate","->","Changed","Declared @max"
635311200390890343,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200390890343,"StepEvaluate","->","Changed","Declared @random"
635311200390900343,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311200390900343,"StepEvaluate","->","Changed","Declared @random"
635311200390900343,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311200390910344,"StepEvaluate","->","Changed","Declared @gcd"
635311200390910344,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200390910344,"StepEvaluate","->","Changed","Declared @gcd"
635311200390910344,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200390920345,"StepEvaluate","->","Changed","Declared @gcd"
635311200390920345,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200390920345,"StepEvaluate","->","Changed","Declared @fib"
635311200390920345,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200390930345,"StepEvaluate","->","Changed","Declared @fib"
635311200390930345,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200390930345,"StepEvaluate","->","Changed","Declared @fib"
635311200390930345,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200390940346,"StepEvaluate","->","Changed","Declared @fib2"
635311200390940346,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311200390940346,"StepEvaluate","->","Changed","Declared @fib2"
635311200390950346,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311200390950346,"StepEvaluate","->","Changed","Declared @fac"
635311200390950346,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311200390950346,"StepEvaluate","->","Changed","Declared @fac"
635311200390960347,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311200390960347,"StepEvaluate","->","Changed","Declared @pow"
635311200390960347,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200390960347,"StepEvaluate","->","Changed","Declared @pow"
635311200390970347,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200390970347,"StepEvaluate","->","Changed","Declared @pow"
635311200390970347,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200390980348,"StepEvaluate","->","Changed","Declared @upArrow"
635311200390980348,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200390980348,"StepEvaluate","->","Changed","Declared @upArrow"
635311200390980348,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200390990349,"StepEvaluate","->","Changed","Declared @upArrow"
635311200390990349,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200390990349,"StepEvaluate","->","Changed","Declared @graham"
635311200390990349,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311200391000349,"StepEvaluate","->","Changed","Declared @graham"
635311200391000349,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311200391000349,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311200391010350,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311200391010350,"StepEvaluate","->","Changed","Declared @ack"
635311200391010350,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200391010350,"StepEvaluate","->","Changed","Declared @ack"
635311200391020350,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200391020350,"StepEvaluate","->","Changed","Declared @ack"
635311200391020350,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200391020350,"StepEvaluate","->","Changed","Declared @acker"
635311200391030351,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200391030351,"StepEvaluate","->","Changed","Declared @acker"
635311200391030351,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200391030351,"StepEvaluate","->","Changed","Declared @acker"
635311200391040351,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200391040351,"StepEvaluate","->","Changed","Declared @acker"
635311200391040351,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200391050352,"StepEvaluate","->","Changed","Declared @acker"
635311200391050352,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200391050352,"StepEvaluate","->","Changed","Declared @hyper"
635311200391050352,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200391060353,"StepEvaluate","->","Changed","Declared @hyper"
635311200391060353,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200391060353,"StepEvaluate","->","Changed","Declared @hyper"
635311200391060353,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200391070353,"StepEvaluate","->","Changed","Declared @hyper"
635311200391070353,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200391070353,"StepEvaluate","->","Changed","Declared @hyper"
635311200391080354,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200391080354,"StepEvaluate","->","Changed","Declared @sudan"
635311200391080354,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200391080354,"StepEvaluate","->","Changed","Declared @sudan"
635311200391090354,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200391090354,"StepEvaluate","->","Changed","Declared @sudan"
635311200391090354,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200391090354,"StepEvaluate","[]","Changed","File imported"
635311200391100355,"StepEvaluate","File imported","Unchanged","File imported"
635311200391100355,"StepEvaluate","@","Changed","@"
635311200391100355,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200391110355,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200391110355,"StepEvaluate",",","Unchanged",","
635311200391110355,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200391110355,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200391120356,"StepEvaluate","PAT@-M","Changed","[]"
635311200391120356,"StepEvaluate","SEL@import","Changed","[]"
635311200391120356,"StepEvaluate","@","Changed","[]"
635311200391130357,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311200391130357,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311200391130357,"Parsed as literal","quickSort"
635311200391140357,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200391140357,"Parsed as literal",""
635311200391140357,"Parsed as literal",""
635311200391140357,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200391150358,"Parsed as literal",""
635311200391150358,"Parsed as literal",""
635311200391150358,"Invalid operator","@quickSort([]) -> []","0"
635311200391160358,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311200391160358,"Parsed as literal","quickSort"
635311200391160358,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200391160358,"Parsed as literal",""
635311200391170359,"Parsed as literal",""
635311200391170359,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200391170359,"Parsed as literal",""
635311200391180359,"Parsed as literal",""
635311200391180359,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200391180359,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311200391190360,"Parsed as literal","quickSort"
635311200391190360,"Parsed as literal","list"
635311200391190360,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200391200361,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311200391200361,"Parsed as literal","quickSort"
635311200391200361,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311200391210361,"Parsed as literal","filter"
635311200391210361,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311200391210361,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311200391220362,"Parsed as literal",""
635311200391220362,"Parsed as literal","i"
635311200391220362,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311200391220362,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200391230362,"Parsed as literal"," i "
635311200391230362,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200391230362,"Parsed as literal"," "
635311200391240363,"Parsed as literal","list"
635311200391240363,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200391240363,"Parsed as literal",""
635311200391240363,"Parsed as literal","list"
635311200391250363,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311200391250363,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200391250363,"Parsed as literal",""
635311200391260364,"Parsed as literal","i"
635311200391260364,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311200391260364,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200391260364,"Parsed as literal"," i "
635311200391270365,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200391270365,"Parsed as literal"," "
635311200391270365,"Parsed as literal","list"
635311200391280365,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200391280365,"Parsed as literal",""
635311200391280365,"Parsed as literal","list"
635311200391280365,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311200391290366,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311200391290366,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311200391290366,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200391300366,"Parsed as literal",""
635311200391300366,"Parsed as literal","i"
635311200391300366,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200391310367,"Parsed as literal"," i "
635311200391310367,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200391310367,"Parsed as literal"," "
635311200391310367,"Parsed as literal","list"
635311200391320367,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200391320367,"Parsed as literal",""
635311200391320367,"Parsed as literal","list"
635311200391330368,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200391330368,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311200391330368,"Parsed as literal"," "
635311200391330368,"Parsed as literal","list "
635311200391340369,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311200391340369,"Parsed as literal","quickSort"
635311200391340369,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311200391350369,"Parsed as literal","filter"
635311200391350369,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311200391350369,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311200391360370,"Parsed as literal",""
635311200391360370,"Parsed as literal","i"
635311200391360370,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311200391370370,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200391370370,"Parsed as literal"," i "
635311200391370370,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200391370370,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200391380371,"Parsed as literal"," "
635311200391380371,"Parsed as literal","list"
635311200391380371,"Parsed as literal","1"
635311200391390371,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200391390371,"Parsed as literal",""
635311200391390371,"Parsed as literal","list"
635311200391390371,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311200391400372,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200391400372,"Parsed as literal",""
635311200391400372,"Parsed as literal","i"
635311200391410373,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311200391410373,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200391410373,"Parsed as literal"," i "
635311200391410373,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200391420373,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200391420373,"Parsed as literal"," "
635311200391420373,"Parsed as literal","list"
635311200391430374,"Parsed as literal","1"
635311200391430374,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200391430374,"Parsed as literal",""
635311200391430374,"Parsed as literal","list"
635311200391440374,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311200391440374,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311200391440374,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311200391450375,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200391450375,"Parsed as literal",""
635311200391450375,"Parsed as literal","i"
635311200391450375,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200391460375,"Parsed as literal"," i "
635311200391460375,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200391460375,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200391470376,"Parsed as literal"," "
635311200391470376,"Parsed as literal","list"
635311200391470376,"Parsed as literal","1"
635311200391480377,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200391480377,"Parsed as literal",""
635311200391480377,"Parsed as literal","list"
635311200391480377,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311200391490377,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311200391490377,"Parsed as literal","quickSort"
635311200391490377,"Parsed as literal","list"
635311200391500378,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200391500378,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311200391500378,"Parsed as literal","quickSort"
635311200391510378,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311200391510378,"Parsed as literal","filter"
635311200391510378,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311200391520379,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311200391520379,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200391520379,"Parsed as literal",""
635311200391520379,"Parsed as literal","i"
635311200391530379,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200391530379,"Parsed as literal"," i "
635311200391530379,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200391540380,"Parsed as literal"," "
635311200391540380,"Parsed as literal","list"
635311200391540380,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200391540380,"Parsed as literal",""
635311200391550381,"Parsed as literal","list"
635311200391550381,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200391550381,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311200391560381,"Parsed as literal"," "
635311200391560381,"Parsed as literal","list "
635311200391560381,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311200391570382,"Parsed as literal","quickSort"
635311200391570382,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311200391570382,"Parsed as literal","filter"
635311200391570382,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311200391580382,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311200391580382,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200391580382,"Parsed as literal",""
635311200391590383,"Parsed as literal","i"
635311200391590383,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200391590383,"Parsed as literal"," i "
635311200391600383,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200391600383,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200391600383,"Parsed as literal"," "
635311200391600383,"Parsed as literal","list"
635311200391610384,"Parsed as literal","1"
635311200391610384,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200391610384,"Parsed as literal",""
635311200391620385,"Parsed as literal","list"
635311200391620385,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311200391620385,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311200391630385,"Parsed as literal","mergeSort"
635311200391630385,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200391630385,"Parsed as literal",""
635311200391630385,"Parsed as literal",""
635311200391640386,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200391640386,"Parsed as literal",""
635311200391640386,"Parsed as literal",""
635311200391650386,"Invalid operator","@mergeSort([]) -> []","0"
635311200391650386,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311200391650386,"Parsed as literal","mergeSort"
635311200391650386,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200391660387,"Parsed as literal",""
635311200391660387,"Parsed as literal",""
635311200391660387,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200391670387,"Parsed as literal",""
635311200391670387,"Parsed as literal",""
635311200391670387,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311200391670387,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311200391680388,"Parsed as literal","mergeSort"
635311200391680388,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311200391680388,"Parsed as literal","list"
635311200391690389,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311200391690389,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311200391690389,"Parsed as literal",""
635311200391690389,"Parsed as literal","list"
635311200391700389,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311200391700389,"Parsed as literal",""
635311200391700389,"Parsed as literal",""
635311200391710390,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311200391710390,"Parsed as literal"," "
635311200391710390,"Parsed as literal","list"
635311200391710390,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311200391720390,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311200391720390,"Parsed as literal","mergeSort"
635311200391720390,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311200391730391,"Parsed as literal","list"
635311200391730391,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311200391730391,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311200391730391,"Parsed as literal",""
635311200391740391,"Parsed as literal","list"
635311200391740391,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311200391740391,"Parsed as literal",""
635311200391750392,"Parsed as literal",""
635311200391750392,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311200391750392,"Parsed as literal"," "
635311200391750392,"Parsed as literal","list"
635311200391760393,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311200391760393,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311200391770393,"Parsed as literal","mergeSort"
635311200391770393,"Parsed as literal","list"
635311200391770393,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311200391780394,"Parsed as literal","merge"
635311200391780394,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311200391780394,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311200391790394,"Parsed as literal","mergeSort"
635311200391790394,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311200391790394,"Parsed as literal","take"
635311200391790394,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311200391800395,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311200391800395,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311200391810395,"Parsed as literal","count"
635311200391810395,"Parsed as literal","list"
635311200391810395,"Parsed as literal","2"
635311200391820396,"Parsed as literal","list"
635311200391820396,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311200391820396,"Parsed as literal","mergeSort"
635311200391830397,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311200391830397,"Parsed as literal","skip"
635311200391830397,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311200391840397,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311200391840397,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311200391840397,"Parsed as literal","count"
635311200391840397,"Parsed as literal","list"
635311200391850398,"Parsed as literal","2"
635311200391850398,"Parsed as literal","list"
635311200391850398,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311200391860398,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311200391860398,"Parsed as literal","mergeSort"
635311200391860398,"Parsed as literal","list"
635311200391870399,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311200391870399,"Parsed as literal","merge"
635311200391870399,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311200391880399,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311200391880399,"Parsed as literal","mergeSort"
635311200391880399,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311200391890400,"Parsed as literal","take"
635311200391890400,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311200391890400,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311200391890400,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311200391900401,"Parsed as literal","count"
635311200391900401,"Parsed as literal","list"
635311200391900401,"Parsed as literal","2"
635311200391910401,"Parsed as literal","list"
635311200391910401,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311200391910401,"Parsed as literal","mergeSort"
635311200391920402,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311200391920402,"Parsed as literal","skip"
635311200391920402,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311200391930402,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311200391930402,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311200391930402,"Parsed as literal","count"
635311200391930402,"Parsed as literal","list"
635311200391940403,"Parsed as literal","2"
635311200391940403,"Parsed as literal","list"
635311200391940403,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311200391950403,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311200391950403,"Parsed as literal","merge"
635311200391950403,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311200391960404,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200391960404,"Parsed as literal",""
635311200391960404,"Parsed as literal",""
635311200391960404,"Parsed as literal","list"
635311200391970405,"Parsed as literal"," list"
635311200391970405,"Invalid operator","@merge([],list) -> list","0"
635311200391970405,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311200391980405,"Parsed as literal","merge"
635311200391980405,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311200391980405,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200391980405,"Parsed as literal",""
635311200391990406,"Parsed as literal",""
635311200391990406,"Parsed as literal","list"
635311200391990406,"Parsed as literal"," list"
635311200392000406,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311200392000406,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311200392000406,"Parsed as literal","merge"
635311200392010407,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311200392010407,"Parsed as literal","list"
635311200392010407,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200392010407,"Parsed as literal",""
635311200392020408,"Parsed as literal",""
635311200392020408,"Parsed as literal"," list"
635311200392020408,"Invalid operator","@merge(list,[]) -> list","0"
635311200392030408,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311200392030408,"Parsed as literal","merge"
635311200392030408,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311200392030408,"Parsed as literal","list"
635311200392040409,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200392040409,"Parsed as literal",""
635311200392040409,"Parsed as literal",""
635311200392040409,"Parsed as literal"," list"
635311200392050409,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311200392050409,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311200392050409,"Parsed as literal","merge"
635311200392060410,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311200392060410,"Parsed as literal","left"
635311200392060410,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311200392070410,"Parsed as literal","right "
635311200392070410,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311200392070410,"Parsed as literal"," "
635311200392080411,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311200392080411,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311200392080411,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311200392090412,"Parsed as literal",""
635311200392090412,"Parsed as literal","left "
635311200392090412,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311200392100412,"Parsed as literal"," "
635311200392100412,"Parsed as literal","right"
635311200392100412,"Parsed as literal",""
635311200392110413,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311200392110413,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311200392110413,"Parsed as literal"," "
635311200392120413,"Parsed as literal","left "
635311200392120413,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311200392120413,"Parsed as literal","merge"
635311200392130414,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311200392130414,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311200392130414,"Parsed as literal",""
635311200392140414,"Parsed as literal","left"
635311200392140414,"Parsed as literal","right"
635311200392140414,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311200392140414,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311200392150415,"Parsed as literal","merge"
635311200392150415,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311200392150415,"Parsed as literal","left"
635311200392160416,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311200392160416,"Parsed as literal","right "
635311200392160416,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311200392170416,"Parsed as literal"," "
635311200392170416,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311200392170416,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311200392170416,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311200392180417,"Parsed as literal",""
635311200392180417,"Parsed as literal","left "
635311200392180417,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311200392190417,"Parsed as literal"," "
635311200392190417,"Parsed as literal","right"
635311200392190417,"Parsed as literal",""
635311200392200418,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311200392200418,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311200392200418,"Parsed as literal"," "
635311200392200418,"Parsed as literal","left "
635311200392210418,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311200392210418,"Parsed as literal","merge"
635311200392210418,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311200392220419,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311200392220419,"Parsed as literal",""
635311200392220419,"Parsed as literal","left"
635311200392230420,"Parsed as literal","right"
635311200392230420,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311200392240420,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311200392240420,"Parsed as literal","merge"
635311200392240420,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311200392250421,"Parsed as literal","left"
635311200392250421,"Parsed as literal","right"
635311200392250421,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311200392260421,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311200392260421,"Parsed as literal"," "
635311200392260421,"Parsed as literal","right "
635311200392270422,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311200392270422,"Parsed as literal","merge"
635311200392270422,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311200392270422,"Parsed as literal","left"
635311200392280422,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311200392280422,"Parsed as literal",""
635311200392280422,"Parsed as literal","right"
635311200392290423,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311200392290423,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311200392290423,"Parsed as literal","merge"
635311200392300424,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311200392300424,"Parsed as literal","left"
635311200392300424,"Parsed as literal","right"
635311200392310424,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311200392310424,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311200392310424,"Parsed as literal"," "
635311200392320425,"Parsed as literal","right "
635311200392320425,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311200392320425,"Parsed as literal","merge"
635311200392330425,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311200392330425,"Parsed as literal","left"
635311200392330425,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311200392340426,"Parsed as literal",""
635311200392340426,"Parsed as literal","right"
635311200392340426,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311200392350426,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311200392350426,"Parsed as literal","bubbleSort"
635311200392350426,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311200392350426,"Parsed as literal","list"
635311200392360427,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311200392360427,"Parsed as literal","isSorted"
635311200392360427,"Parsed as literal","list"
635311200392370428,"Parsed as literal"," list"
635311200392370428,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311200392370428,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311200392370428,"Parsed as literal","bubbleSort"
635311200392380428,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311200392380428,"Parsed as literal","list"
635311200392380428,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311200392390429,"Parsed as literal","isSorted"
635311200392390429,"Parsed as literal","list"
635311200392390429,"Parsed as literal"," list"
635311200392400429,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311200392400429,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311200392400429,"Parsed as literal","bubbleSort"
635311200392410430,"Parsed as literal","list"
635311200392410430,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311200392410430,"Parsed as literal","bubbleSort"
635311200392410430,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311200392420430,"Parsed as literal","bubbleSortPass"
635311200392420430,"Parsed as literal","list"
635311200392420430,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311200392430431,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311200392430431,"Parsed as literal","bubbleSort"
635311200392430431,"Parsed as literal","list"
635311200392440432,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311200392440432,"Parsed as literal","bubbleSort"
635311200392440432,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311200392440432,"Parsed as literal","bubbleSortPass"
635311200392450432,"Parsed as literal","list"
635311200392450432,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311200392450432,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311200392460433,"Parsed as literal","bubbleSortPass"
635311200392460433,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200392460433,"Parsed as literal",""
635311200392470433,"Parsed as literal",""
635311200392470433,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200392470433,"Parsed as literal",""
635311200392470433,"Parsed as literal",""
635311200392480434,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311200392480434,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311200392480434,"Parsed as literal","bubbleSortPass"
635311200392490434,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200392490434,"Parsed as literal",""
635311200392490434,"Parsed as literal",""
635311200392490434,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200392500435,"Parsed as literal",""
635311200392500435,"Parsed as literal",""
635311200392500435,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311200392510436,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311200392510436,"Parsed as literal","bubbleSortPass"
635311200392510436,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311200392510436,"Parsed as literal","list"
635311200392520436,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311200392520436,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311200392520436,"Parsed as literal",""
635311200392530437,"Parsed as literal","list "
635311200392530437,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311200392530437,"Parsed as literal",""
635311200392530437,"Parsed as literal",""
635311200392540437,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311200392540437,"Parsed as literal"," "
635311200392540437,"Parsed as literal","list"
635311200392550438,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311200392550438,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311200392550438,"Parsed as literal","bubbleSortPass"
635311200392550438,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311200392560438,"Parsed as literal","list"
635311200392560438,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311200392560438,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311200392570439,"Parsed as literal",""
635311200392570439,"Parsed as literal","list "
635311200392570439,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311200392570439,"Parsed as literal",""
635311200392580440,"Parsed as literal",""
635311200392580440,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311200392580440,"Parsed as literal"," "
635311200392590440,"Parsed as literal","list"
635311200392590440,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311200392590440,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311200392600441,"Parsed as literal","bubbleSortPass"
635311200392600441,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311200392600441,"Parsed as literal","list"
635311200392600441,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311200392610441,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311200392610441,"Parsed as literal",""
635311200392610441,"Parsed as literal","list "
635311200392620442,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311200392620442,"Parsed as literal"," "
635311200392620442,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311200392620442,"Parsed as literal",""
635311200392630442,"Parsed as literal","list"
635311200392630442,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311200392630442,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311200392640443,"Parsed as literal"," "
635311200392640443,"Parsed as literal","list "
635311200392640443,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311200392650444,"Parsed as literal","bubbleSortPass"
635311200392650444,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311200392650444,"Parsed as literal",""
635311200392650444,"Parsed as literal","list"
635311200392660444,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311200392660444,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311200392660444,"Parsed as literal","bubbleSortPass"
635311200392670445,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311200392670445,"Parsed as literal","list"
635311200392670445,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311200392670445,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311200392680445,"Parsed as literal",""
635311200392680445,"Parsed as literal","list "
635311200392680445,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311200392690446,"Parsed as literal"," "
635311200392690446,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311200392690446,"Parsed as literal",""
635311200392690446,"Parsed as literal","list"
635311200392700446,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311200392700446,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311200392710447,"Parsed as literal"," "
635311200392710447,"Parsed as literal","list "
635311200392710447,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311200392720448,"Parsed as literal","bubbleSortPass"
635311200392720448,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311200392720448,"Parsed as literal",""
635311200392720448,"Parsed as literal","list"
635311200392730448,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311200392730448,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311200392730448,"Parsed as literal","bubbleSortPass"
635311200392740449,"Parsed as literal","list"
635311200392740449,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311200392740449,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311200392750449,"Parsed as literal"," "
635311200392750449,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311200392750449,"Parsed as literal",""
635311200392760450,"Parsed as literal","list "
635311200392760450,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311200392760450,"Parsed as literal","bubbleSortPass"
635311200392760450,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311200392770450,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311200392770450,"Parsed as literal",""
635311200392770450,"Parsed as literal","list "
635311200392780451,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311200392780451,"Parsed as literal"," "
635311200392780451,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311200392780451,"Parsed as literal",""
635311200392790452,"Parsed as literal","list"
635311200392790452,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311200392790452,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311200392800452,"Parsed as literal","bubbleSortPass"
635311200392800452,"Parsed as literal","list"
635311200392800452,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311200392800452,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311200392810453,"Parsed as literal"," "
635311200392810453,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311200392810453,"Parsed as literal",""
635311200392820453,"Parsed as literal","list "
635311200392820453,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311200392820453,"Parsed as literal","bubbleSortPass"
635311200392820453,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311200392830454,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311200392830454,"Parsed as literal",""
635311200392830454,"Parsed as literal","list "
635311200392840454,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311200392840454,"Parsed as literal"," "
635311200392840454,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311200392840454,"Parsed as literal",""
635311200392850455,"Parsed as literal","list"
635311200392850455,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311200392850455,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311200392860456,"Parsed as literal","isSorted"
635311200392860456,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311200392860456,"Parsed as literal",""
635311200392860456,"Parsed as literal",""
635311200392870456,"Parsed as literal"," true"
635311200392870456,"Invalid operator","@isSorted([]) -> true","0"
635311200392870456,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311200392880457,"Parsed as literal","isSorted"
635311200392880457,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311200392880457,"Parsed as literal",""
635311200392880457,"Parsed as literal",""
635311200392890457,"Parsed as literal"," true"
635311200392890457,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311200392890457,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311200392900458,"Parsed as literal","isSorted"
635311200392900458,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311200392900458,"Parsed as literal","list"
635311200392910458,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311200392910458,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311200392910458,"Parsed as literal",""
635311200392910458,"Parsed as literal","list "
635311200392920459,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200392920459,"Parsed as literal",""
635311200392920459,"Parsed as literal",""
635311200392930460,"Parsed as literal"," true"
635311200392930460,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311200392930460,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311200392930460,"Parsed as literal","isSorted"
635311200392940460,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311200392940460,"Parsed as literal","list"
635311200392940460,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311200392950461,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311200392950461,"Parsed as literal",""
635311200392950461,"Parsed as literal","list "
635311200392950461,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200392960461,"Parsed as literal",""
635311200392960461,"Parsed as literal",""
635311200392960461,"Parsed as literal"," true"
635311200392970462,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311200392970462,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311200392970462,"Parsed as literal","isSorted"
635311200392980462,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311200392980462,"Parsed as literal","list"
635311200392980462,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311200392980462,"Parsed as literal",""
635311200392990463,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311200392990463,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311200392990463,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311200393000464,"Parsed as literal",""
635311200393000464,"Parsed as literal","list "
635311200393000464,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311200393000464,"Parsed as literal"," "
635311200393010464,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311200393010464,"Parsed as literal",""
635311200393010464,"Parsed as literal","list"
635311200393020465,"Parsed as literal",""
635311200393020465,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311200393020465,"Parsed as literal","isSorted"
635311200393020465,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311200393030465,"Parsed as literal",""
635311200393030465,"Parsed as literal","list"
635311200393030465,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311200393040466,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311200393040466,"Parsed as literal","isSorted"
635311200393040466,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311200393040466,"Parsed as literal","list"
635311200393050466,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311200393050466,"Parsed as literal",""
635311200393050466,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311200393060467,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311200393060467,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311200393060467,"Parsed as literal",""
635311200393060467,"Parsed as literal","list "
635311200393070468,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311200393070468,"Parsed as literal"," "
635311200393070468,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311200393070468,"Parsed as literal",""
635311200393080468,"Parsed as literal","list"
635311200393080468,"Parsed as literal",""
635311200393080468,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311200393090469,"Parsed as literal","isSorted"
635311200393090469,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311200393090469,"Parsed as literal",""
635311200393100469,"Parsed as literal","list"
635311200393100469,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311200393100469,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311200393100469,"Parsed as literal","isSorted"
635311200393110470,"Parsed as literal","list"
635311200393110470,"Parsed as literal"," false"
635311200393110470,"Invalid operator","@isSorted(list) -> false","0"
635311200393120470,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311200393120470,"Parsed as literal","isSorted"
635311200393120470,"Parsed as literal","list"
635311200393120470,"Parsed as literal"," false"
635311200393130471,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311200393130471,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311200393130471,"Parsed as literal","insertionSort"
635311200393140472,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200393140472,"Parsed as literal",""
635311200393140472,"Parsed as literal",""
635311200393150472,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311200393150472,"Parsed as literal",""
635311200393150472,"Parsed as literal",""
635311200393150472,"Invalid operator","@insertionSort([]) -> []","0"
635311200393160473,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311200393160473,"Parsed as literal","insertionSort"
635311200393160473,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200393160473,"Parsed as literal",""
635311200393170473,"Parsed as literal",""
635311200393170473,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311200393170473,"Parsed as literal",""
635311200393180474,"Parsed as literal",""
635311200393180474,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311200393180474,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311200393190474,"Parsed as literal","insertionSort"
635311200393190474,"Parsed as literal","list"
635311200393190474,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311200393190474,"Parsed as literal","insert"
635311200393200475,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311200393200475,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311200393200475,"Parsed as literal",""
635311200393210476,"Parsed as literal","list"
635311200393210476,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311200393210476,"Parsed as literal","insertionSort"
635311200393210476,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311200393220476,"Parsed as literal",""
635311200393220476,"Parsed as literal","list"
635311200393220476,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311200393230477,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311200393230477,"Parsed as literal","insertionSort"
635311200393230477,"Parsed as literal","list"
635311200393230477,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311200393240477,"Parsed as literal","insert"
635311200393240477,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311200393240477,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311200393250478,"Parsed as literal",""
635311200393250478,"Parsed as literal","list"
635311200393250478,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311200393260478,"Parsed as literal","insertionSort"
635311200393260478,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311200393260478,"Parsed as literal",""
635311200393260478,"Parsed as literal","list"
635311200393270479,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311200393270479,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311200393270479,"Parsed as literal","insert"
635311200393280480,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311200393280480,"Parsed as literal","item"
635311200393280480,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200393280480,"Parsed as literal",""
635311200393290480,"Parsed as literal",""
635311200393290480,"Parsed as literal"," item"
635311200393290480,"Invalid operator","@insert(item,[]) -> item","0"
635311200393300481,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311200393300481,"Parsed as literal","insert"
635311200393300481,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311200393300481,"Parsed as literal","item"
635311200393310481,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200393310481,"Parsed as literal",""
635311200393310481,"Parsed as literal",""
635311200393320482,"Parsed as literal"," item"
635311200393320482,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311200393320482,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311200393330482,"Parsed as literal","insert"
635311200393330482,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311200393330482,"Parsed as literal","item"
635311200393330482,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311200393340483,"Parsed as literal","list "
635311200393340483,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311200393340483,"Parsed as literal"," item "
635311200393350484,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311200393350484,"Parsed as literal"," "
635311200393350484,"Parsed as literal","list"
635311200393350484,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311200393360484,"Parsed as literal"," item "
635311200393360484,"Parsed as literal"," list"
635311200393360484,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311200393370485,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311200393370485,"Parsed as literal","insert"
635311200393370485,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311200393370485,"Parsed as literal","item"
635311200393380485,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311200393380485,"Parsed as literal","list "
635311200393380485,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311200393390486,"Parsed as literal"," item "
635311200393390486,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311200393390486,"Parsed as literal"," "
635311200393390486,"Parsed as literal","list"
635311200393400486,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311200393400486,"Parsed as literal"," item "
635311200393400486,"Parsed as literal"," list"
635311200393410487,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311200393410487,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311200393410487,"Parsed as literal","insert"
635311200393410487,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311200393420488,"Parsed as literal","item"
635311200393420488,"Parsed as literal","list"
635311200393420488,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311200393430488,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311200393430488,"Parsed as literal"," "
635311200393430488,"Parsed as literal","list "
635311200393440489,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311200393440489,"Parsed as literal","insert"
635311200393440489,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311200393440489,"Parsed as literal","item"
635311200393450489,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311200393450489,"Parsed as literal",""
635311200393450489,"Parsed as literal","list"
635311200393460490,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311200393460490,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311200393460490,"Parsed as literal","insert"
635311200393460490,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311200393470490,"Parsed as literal","item"
635311200393470490,"Parsed as literal","list"
635311200393470490,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311200393480491,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311200393480491,"Parsed as literal"," "
635311200393480491,"Parsed as literal","list "
635311200393480491,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311200393490492,"Parsed as literal","insert"
635311200393490492,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311200393490492,"Parsed as literal","item"
635311200393500492,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311200393500492,"Parsed as literal",""
635311200393500492,"Parsed as literal","list"
635311200393500492,"StepEvaluate","->","Changed","Declared @quickSort"
635311200393510493,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311200393510493,"StepEvaluate","->","Changed","Declared @quickSort"
635311200393510493,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311200393520493,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200393520493,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200393520493,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200393520493,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200393530494,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200393530494,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200393530494,"StepEvaluate","->","Changed","Declared @merge"
635311200393530494,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200393540494,"StepEvaluate","->","Changed","Declared @merge"
635311200393540494,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200393540494,"StepEvaluate","->","Changed","Declared @merge"
635311200393540494,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200393550495,"StepEvaluate","->","Changed","Declared @merge"
635311200393550495,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200393550495,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311200393560496,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311200393560496,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311200393560496,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311200393560496,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200393570496,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200393570496,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200393570496,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200393570496,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200393580497,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200393580497,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200393580497,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200393580497,"StepEvaluate","->","Changed","Declared @isSorted"
635311200393590497,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200393590497,"StepEvaluate","->","Changed","Declared @isSorted"
635311200393590497,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200393590497,"StepEvaluate","->","Changed","Declared @isSorted"
635311200393600498,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200393600498,"StepEvaluate","->","Changed","Declared @isSorted"
635311200393600498,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200393610498,"StepEvaluate","->","Changed","Declared @insertionSort"
635311200393610498,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311200393610498,"StepEvaluate","->","Changed","Declared @insertionSort"
635311200393610498,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311200393620499,"StepEvaluate","->","Changed","Declared @insert"
635311200393620499,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200393620499,"StepEvaluate","->","Changed","Declared @insert"
635311200393620499,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200393630500,"StepEvaluate","->","Changed","Declared @insert"
635311200393630500,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200393630500,"StepEvaluate","[]","Changed","File imported"
635311200393630500,"StepEvaluate","File imported","Unchanged","File imported"
635311200393640500,"StepEvaluate","[]","Changed","File imported"
635311200393640500,"StepEvaluate","File imported","Unchanged","File imported"
635311200393640500,"ParseInternal","(1+2),(3+4)","0","CommaOperator","0","6","(1+2)","(3+4)"
635311200393650501,"ParseInternal","(1+2)","0","OpenParenOperator","0","0","1+2",""
635311200393650501,"ParseInternal","1+2","0","PlusOperator","0","2","1","2"
635311200393650501,"Parsed as literal","1"
635311200393650501,"Parsed as literal","2"
635311200393660501,"Parsed as literal",""
635311200393660501,"ParseInternal","(3+4)","6","OpenParenOperator","6","6","3+4",""
635311200393660501,"ParseInternal","3+4","6","PlusOperator","6","8","3","4"
635311200393670502,"Parsed as literal","3"
635311200393670502,"Parsed as literal","4"
635311200393670502,"Parsed as literal",""
635311200422462149,"StepEvaluate",",","Unchanged",","
635311200422482150,"StepEvaluate","+","Changed","3"
635311200422492150,"StepEvaluate",",","Unchanged",","
635311200422502151,"StepEvaluate","+","Changed","7"
635311200440043154,"StepEvaluate",",","Unchanged",","
635311200440063155,"StepEvaluate","3","Unchanged","3"
635311200440073156,"StepEvaluate",",","Unchanged",","
635311200440083157,"StepEvaluate","+","Changed","7"
635311200446903547,"StepEvaluate",",","Unchanged",","
635311200446923548,"StepEvaluate","3","Unchanged","3"
635311200446933548,"StepEvaluate",",","Unchanged",","
635311200446943549,"StepEvaluate","7","Unchanged","7"
635311200468394776,"StepEvaluate",",","Unchanged",","
635311200468404776,"StepEvaluate","3","Unchanged","3"
635311200468414777,"StepEvaluate",",","Unchanged",","
635311200468424778,"StepEvaluate","7","Unchanged","7"
635311200563240201,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311200563260202,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311200563270202,"Parsed as literal","import"
635311200563280203,"Parsed as literal","file"
635311200563290204,"Parsed as literal"," 0"
635311200563290204,"Invalid operator","@import(file) -> 0","0"
635311200563300204,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311200563310205,"Parsed as literal","import"
635311200563320205,"Parsed as literal","file"
635311200563330206,"Parsed as literal"," 0"
635311200563330206,"StepEvaluate","->","Changed","Declared @import"
635311200563340206,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311200563350207,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311200563360208,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311200563360208,"Parsed as literal","operator"
635311200563370208,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311200563380209,"Parsed as literal","op"
635311200563380209,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311200563390209,"Parsed as literal","fn"
635311200563400210,"Parsed as literal",""
635311200563400210,"Invalid operator","@fn","12"
635311200563410210,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311200563420211,"Parsed as literal","fn"
635311200563430212,"Parsed as literal",""
635311200563430212,"Invalid operator","@fn","12"
635311200563440212,"Parsed as literal","@fn"
635311200563450213,"Parsed as literal"," 0"
635311200563460213,"Invalid operator","@operator(op,@fn) -> 0","0"
635311200563460213,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311200563470214,"Parsed as literal","operator"
635311200563480214,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311200563480214,"Parsed as literal","op"
635311200563490215,"Parsed as literal","@fn"
635311200563500216,"Parsed as literal"," 0"
635311200563510216,"StepEvaluate","->","Changed","Declared @operator"
635311200563510216,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311200563520217,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311200563530217,"Parsed as literal","import"
635311200563540218,"Parsed as literal","main.toast"
635311200563540218,"StepEvaluate","@","Changed","@"
635311200563550218,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200563560219,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200563560219,"StepEvaluate",",","Unchanged",","
635311200563570220,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200563580220,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200563580220,"StepEvaluate","PAT@-M","Changed","[]"
635311200563590221,"StepEvaluate","SEL@import","Changed","[]"
635311200563600221,"StepEvaluate","@","Changed","[]"
635311200563610222,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311200563610222,"Parsed as literal","import"
635311200563620222,"Parsed as literal","'core.toast'"
635311200563630223,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311200563630223,"Parsed as literal","import"
635311200563640224,"Parsed as literal","'list.toast'"
635311200563650224,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311200563660225,"Parsed as literal","import"
635311200563660225,"Parsed as literal","'math.toast'"
635311200563670225,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311200563680226,"Parsed as literal","import"
635311200563690226,"Parsed as literal","'sorting.toast'"
635311200563690226,"StepEvaluate","@","Changed","@"
635311200563700227,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200563710228,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200563710228,"StepEvaluate",",","Unchanged",","
635311200563720228,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200563730229,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200563730229,"StepEvaluate","PAT@-M","Changed","[]"
635311200563740229,"StepEvaluate","SEL@import","Changed","[]"
635311200563750230,"StepEvaluate","@","Changed","[]"
635311200563760230,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311200563760230,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311200563770231,"Parsed as literal","map"
635311200563780232,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311200563790232,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311200563790232,"Parsed as literal","func"
635311200563800233,"Parsed as literal",""
635311200563810233,"Invalid operator","@func","4"
635311200563810233,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311200563820234,"Parsed as literal","func"
635311200563830234,"Parsed as literal",""
635311200563830234,"Invalid operator","@func","4"
635311200563840235,"Parsed as literal","@func"
635311200563850236,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311200563850236,"Parsed as literal",""
635311200563860236,"Parsed as literal",""
635311200563870237,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200563880237,"Parsed as literal",""
635311200563880237,"Parsed as literal",""
635311200563890238,"Invalid operator","@map(@func, []) -> []","0"
635311200563900238,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311200563900238,"Parsed as literal","map"
635311200563910239,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311200563920240,"Parsed as literal","@func"
635311200563930240,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311200563930240,"Parsed as literal",""
635311200563940241,"Parsed as literal",""
635311200563950241,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200563950241,"Parsed as literal",""
635311200563960242,"Parsed as literal",""
635311200563970242,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311200563980243,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311200563980243,"Parsed as literal","map"
635311200563990244,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311200564000244,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311200564000244,"Parsed as literal","func"
635311200564010245,"Parsed as literal",""
635311200564020245,"Invalid operator","@func","4"
635311200564030246,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311200564030246,"Parsed as literal","func"
635311200564040246,"Parsed as literal",""
635311200564050247,"Invalid operator","@func","4"
635311200564050247,"Parsed as literal","@func"
635311200564060248,"Parsed as literal"," list"
635311200564070248,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311200564080249,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311200564080249,"Parsed as literal","func"
635311200564090249,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200564100250,"Parsed as literal",""
635311200564100250,"Parsed as literal","list"
635311200564110250,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311200564120251,"Parsed as literal","map"
635311200564130252,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311200564130252,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311200564140252,"Parsed as literal","func"
635311200564150253,"Parsed as literal",""
635311200564150253,"Invalid operator","@func","41"
635311200564160253,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311200564170254,"Parsed as literal","func"
635311200564180254,"Parsed as literal",""
635311200564180254,"Invalid operator","@func","41"
635311200564190255,"Parsed as literal","@func"
635311200564200256,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311200564210256,"Parsed as literal",""
635311200564210256,"Parsed as literal","list"
635311200564220257,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311200564230257,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311200564240258,"Parsed as literal","map"
635311200564240258,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311200564250258,"Parsed as literal","@func"
635311200564260259,"Parsed as literal"," list"
635311200564270260,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311200564270260,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311200564280260,"Parsed as literal","func"
635311200564290261,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200564290261,"Parsed as literal",""
635311200564300261,"Parsed as literal","list"
635311200564310262,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311200564320262,"Parsed as literal","map"
635311200564320262,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311200564330263,"Parsed as literal","@func"
635311200564340264,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311200564340264,"Parsed as literal",""
635311200564350264,"Parsed as literal","list"
635311200564360265,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311200564370265,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311200564370265,"Parsed as literal","filter"
635311200564380266,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311200564390266,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200564400267,"Parsed as literal","pred"
635311200564400267,"Parsed as literal",""
635311200564410268,"Invalid operator","@pred","7"
635311200564420268,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200564420268,"Parsed as literal","pred"
635311200564430269,"Parsed as literal",""
635311200564440269,"Invalid operator","@pred","7"
635311200564440269,"Parsed as literal","@pred"
635311200564450270,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311200564460270,"Parsed as literal",""
635311200564460270,"Parsed as literal",""
635311200564470271,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311200564480272,"Parsed as literal",""
635311200564480272,"Parsed as literal",""
635311200564490272,"Invalid operator","@filter(@pred,[]) -> []","0"
635311200564500273,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311200564510273,"Parsed as literal","filter"
635311200564510273,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311200564520274,"Parsed as literal","@pred"
635311200564530275,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311200564530275,"Parsed as literal",""
635311200564540275,"Parsed as literal",""
635311200564550276,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311200564560276,"Parsed as literal",""
635311200564560276,"Parsed as literal",""
635311200564570277,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311200564580277,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311200564590278,"Parsed as literal","filter"
635311200564590278,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311200564600279,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200564610279,"Parsed as literal","pred"
635311200564610279,"Parsed as literal",""
635311200564620280,"Invalid operator","@pred","7"
635311200564630280,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200564640281,"Parsed as literal","pred"
635311200564640281,"Parsed as literal",""
635311200564650281,"Invalid operator","@pred","7"
635311200564660282,"Parsed as literal","@pred"
635311200564660282,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311200564670283,"Parsed as literal"," list "
635311200564680283,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311200564690284,"Parsed as literal","pred"
635311200564690284,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200564700284,"Parsed as literal",""
635311200564710285,"Parsed as literal","list"
635311200564710285,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311200564720285,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311200564730286,"Parsed as literal"," "
635311200564740287,"Parsed as literal","list "
635311200564740287,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311200564750287,"Parsed as literal","filter"
635311200564760288,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311200564760288,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311200564770288,"Parsed as literal","pred"
635311200564780289,"Parsed as literal",""
635311200564790289,"Invalid operator","@pred","56"
635311200564790289,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311200564800290,"Parsed as literal","pred"
635311200564810291,"Parsed as literal",""
635311200564810291,"Invalid operator","@pred","56"
635311200564820291,"Parsed as literal","@pred"
635311200564830292,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311200564830292,"Parsed as literal"," "
635311200564840292,"Parsed as literal","list"
635311200564850293,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311200564860293,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311200564860293,"Parsed as literal","filter"
635311200564870294,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311200564880295,"Parsed as literal","@pred"
635311200564890295,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311200564890295,"Parsed as literal"," list "
635311200564900296,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311200564910296,"Parsed as literal","pred"
635311200564910296,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311200564920297,"Parsed as literal",""
635311200564930297,"Parsed as literal","list"
635311200564940298,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311200564950299,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311200564950299,"Parsed as literal"," "
635311200564960299,"Parsed as literal","list "
635311200564970300,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311200564970300,"Parsed as literal","filter"
635311200564980300,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311200564990301,"Parsed as literal","@pred"
635311200564990301,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311200565000301,"Parsed as literal"," "
635311200565010302,"Parsed as literal","list"
635311200565020303,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311200565030303,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311200565030303,"Parsed as literal","filter"
635311200565040304,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311200565050304,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311200565050304,"Parsed as literal","pred"
635311200565060305,"Parsed as literal",""
635311200565070305,"Invalid operator","@pred","7"
635311200565070305,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311200565080306,"Parsed as literal","pred"
635311200565090307,"Parsed as literal",""
635311200565100307,"Invalid operator","@pred","7"
635311200565100307,"Parsed as literal","@pred"
635311200565110308,"Parsed as literal","list"
635311200565120308,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311200565130309,"Parsed as literal","filter"
635311200565130309,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311200565140309,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311200565150310,"Parsed as literal","pred"
635311200565150310,"Parsed as literal",""
635311200565160311,"Invalid operator","@pred","30"
635311200565170311,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311200565170311,"Parsed as literal","pred"
635311200565180312,"Parsed as literal",""
635311200565190312,"Invalid operator","@pred","30"
635311200565190312,"Parsed as literal","@pred"
635311200565200313,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311200565210313,"Parsed as literal",""
635311200565210313,"Parsed as literal","list"
635311200565220314,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311200565230315,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311200565240315,"Parsed as literal","filter"
635311200565240315,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311200565250316,"Parsed as literal","@pred"
635311200565260316,"Parsed as literal","list"
635311200565270317,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311200565270317,"Parsed as literal","filter"
635311200565280317,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311200565290318,"Parsed as literal","@pred"
635311200565290318,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311200565300319,"Parsed as literal",""
635311200565310319,"Parsed as literal","list"
635311200565320320,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311200565360322,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311200565380323,"Parsed as literal","call"
635311200565390324,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311200565390324,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311200565400324,"Parsed as literal","fun"
635311200565410325,"Parsed as literal",""
635311200565410325,"Invalid operator","@fun","5"
635311200565420325,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311200565430326,"Parsed as literal","fun"
635311200565440327,"Parsed as literal",""
635311200565440327,"Invalid operator","@fun","5"
635311200565450327,"Parsed as literal","@fun"
635311200565460328,"Parsed as literal","arg"
635311200565470328,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311200565470328,"Parsed as literal","fun"
635311200565480329,"Parsed as literal","arg"
635311200565490329,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311200565500330,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311200565500330,"Parsed as literal","call"
635311200565510331,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311200565520331,"Parsed as literal","@fun"
635311200565520331,"Parsed as literal","arg"
635311200565530332,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311200565540332,"Parsed as literal","fun"
635311200565550333,"Parsed as literal","arg"
635311200565550333,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311200565560333,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311200565570334,"Parsed as literal","curry"
635311200565580335,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311200565580335,"Parsed as literal","seed"
635311200565590335,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200565600336,"Parsed as literal",""
635311200565600336,"Parsed as literal",""
635311200565610336,"Parsed as literal"," seed"
635311200565620337,"Invalid operator","@curry(seed,[]) -> seed","0"
635311200565630337,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311200565630337,"Parsed as literal","curry"
635311200565640338,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311200565650339,"Parsed as literal","seed"
635311200565650339,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200565660339,"Parsed as literal",""
635311200565670340,"Parsed as literal",""
635311200565680340,"Parsed as literal"," seed"
635311200565690341,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311200565690341,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311200565700341,"Parsed as literal","curry"
635311200565710342,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311200565710342,"Parsed as literal","seed"
635311200565720343,"Parsed as literal"," funcList"
635311200565730343,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311200565740344,"Parsed as literal","curry"
635311200565750344,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311200565760345,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311200565760345,"Parsed as literal","call"
635311200565770345,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311200565780346,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311200565790347,"Parsed as literal",""
635311200565790347,"Parsed as literal","funcList"
635311200565800347,"Parsed as literal","seed"
635311200565810348,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311200565810348,"Parsed as literal",""
635311200565820348,"Parsed as literal","funcList"
635311200565830349,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311200565840349,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311200565840349,"Parsed as literal","curry"
635311200565850350,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311200565860351,"Parsed as literal","seed"
635311200565860351,"Parsed as literal"," funcList"
635311200565870351,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311200565880352,"Parsed as literal","curry"
635311200565890352,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311200565900353,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311200565900353,"Parsed as literal","call"
635311200565910353,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311200565920354,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311200565920354,"Parsed as literal",""
635311200565930355,"Parsed as literal","funcList"
635311200565940355,"Parsed as literal","seed"
635311200565940355,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311200565950356,"Parsed as literal",""
635311200565960356,"Parsed as literal","funcList"
635311200565970357,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311200565970357,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311200565980357,"Parsed as literal","fold"
635311200565990358,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311200565990358,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200566000359,"Parsed as literal","func"
635311200566010359,"Parsed as literal",""
635311200566020360,"Invalid operator","@func","5"
635311200566020360,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200566030360,"Parsed as literal","func"
635311200566040361,"Parsed as literal",""
635311200566040361,"Invalid operator","@func","5"
635311200566050361,"Parsed as literal","@func"
635311200566060362,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200566060362,"Parsed as literal",""
635311200566070363,"Parsed as literal",""
635311200566080363,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200566090364,"Parsed as literal",""
635311200566090364,"Parsed as literal",""
635311200566100364,"Invalid operator","@fold(@func,[]) -> []","0"
635311200566110365,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311200566110365,"Parsed as literal","fold"
635311200566120365,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311200566130366,"Parsed as literal","@func"
635311200566130366,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200566140367,"Parsed as literal",""
635311200566150367,"Parsed as literal",""
635311200566150367,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311200566160368,"Parsed as literal",""
635311200566170368,"Parsed as literal",""
635311200566180369,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311200566190369,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311200566190369,"Parsed as literal","fold"
635311200566200370,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311200566210371,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200566210371,"Parsed as literal","func"
635311200566220371,"Parsed as literal",""
635311200566230372,"Invalid operator","@func","5"
635311200566230372,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200566240372,"Parsed as literal","func"
635311200566250373,"Parsed as literal",""
635311200566250373,"Invalid operator","@func","5"
635311200566260373,"Parsed as literal","@func"
635311200566270374,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311200566280375,"Parsed as literal","list"
635311200566280375,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311200566290375,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311200566300376,"Parsed as literal",""
635311200566300376,"Parsed as literal","list"
635311200566310376,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311200566320377,"Parsed as literal",""
635311200566330377,"Parsed as literal",""
635311200566330377,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311200566340378,"Parsed as literal"," "
635311200566350379,"Parsed as literal","list"
635311200566350379,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311200566360379,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311200566370380,"Parsed as literal","fold"
635311200566380380,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311200566380380,"Parsed as literal","@func"
635311200566390381,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311200566400381,"Parsed as literal","list"
635311200566400381,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311200566410382,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311200566420383,"Parsed as literal",""
635311200566420383,"Parsed as literal","list"
635311200566430383,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311200566440384,"Parsed as literal",""
635311200566440384,"Parsed as literal",""
635311200566450384,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311200566460385,"Parsed as literal"," "
635311200566470385,"Parsed as literal","list"
635311200566480386,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311200566480386,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311200566490387,"Parsed as literal","fold"
635311200566500387,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311200566510388,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311200566510388,"Parsed as literal","func"
635311200566520388,"Parsed as literal",""
635311200566530389,"Invalid operator","@func","5"
635311200566530389,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311200566540389,"Parsed as literal","func"
635311200566550390,"Parsed as literal",""
635311200566550390,"Invalid operator","@func","5"
635311200566560391,"Parsed as literal","@func"
635311200566570391,"Parsed as literal","list"
635311200566570391,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311200566580392,"Parsed as literal","fold"
635311200566590392,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311200566600393,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311200566600393,"Parsed as literal","func"
635311200566610393,"Parsed as literal",""
635311200566620394,"Invalid operator","@func","26"
635311200566620394,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311200566630395,"Parsed as literal","func"
635311200566640395,"Parsed as literal",""
635311200566640395,"Invalid operator","@func","26"
635311200566650396,"Parsed as literal","@func"
635311200566660396,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311200566670397,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311200566670397,"Parsed as literal","func"
635311200566680397,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311200566690398,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311200566690398,"Parsed as literal",""
635311200566700399,"Parsed as literal","list"
635311200566710399,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311200566710399,"Parsed as literal",""
635311200566720400,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311200566730400,"Parsed as literal",""
635311200566730400,"Parsed as literal","list"
635311200566740401,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311200566750401,"Parsed as literal"," "
635311200566760402,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311200566760402,"Parsed as literal",""
635311200566770403,"Parsed as literal","list"
635311200566780403,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311200566780403,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311200566790404,"Parsed as literal","fold"
635311200566800404,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311200566800404,"Parsed as literal","@func"
635311200566810405,"Parsed as literal","list"
635311200566820405,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311200566830406,"Parsed as literal","fold"
635311200566840407,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311200566840407,"Parsed as literal","@func"
635311200566850407,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311200566860408,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311200566870408,"Parsed as literal","func"
635311200566870408,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311200566880409,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311200566890409,"Parsed as literal",""
635311200566890409,"Parsed as literal","list"
635311200566900410,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311200566910411,"Parsed as literal",""
635311200566910411,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311200566920411,"Parsed as literal",""
635311200566930412,"Parsed as literal","list"
635311200566940412,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311200566940412,"Parsed as literal"," "
635311200566950413,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311200566960413,"Parsed as literal",""
635311200566960413,"Parsed as literal","list"
635311200566970414,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311200566980415,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311200566990415,"Parsed as literal","foldr"
635311200566990415,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311200567000416,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200567010416,"Parsed as literal","func"
635311200567010416,"Parsed as literal",""
635311200567020417,"Invalid operator","@func","6"
635311200567030418,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200567030418,"Parsed as literal","func"
635311200567040418,"Parsed as literal",""
635311200567050419,"Invalid operator","@func","6"
635311200567050419,"Parsed as literal","@func"
635311200567060419,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200567070420,"Parsed as literal",""
635311200567070420,"Parsed as literal",""
635311200567080420,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200567090421,"Parsed as literal",""
635311200567100422,"Parsed as literal",""
635311200567100422,"Invalid operator","@foldr(@func,[]) -> []","0"
635311200567110422,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311200567120423,"Parsed as literal","foldr"
635311200567120423,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311200567130423,"Parsed as literal","@func"
635311200567140424,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200567150424,"Parsed as literal",""
635311200567150424,"Parsed as literal",""
635311200567160425,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200567170426,"Parsed as literal",""
635311200567180426,"Parsed as literal",""
635311200567180426,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311200567190427,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311200567200427,"Parsed as literal","foldr"
635311200567210428,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311200567210428,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200567220428,"Parsed as literal","func"
635311200567230429,"Parsed as literal",""
635311200567230429,"Invalid operator","@func","6"
635311200567240430,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200567250430,"Parsed as literal","func"
635311200567260431,"Parsed as literal",""
635311200567260431,"Invalid operator","@func","6"
635311200567270431,"Parsed as literal","@func"
635311200567280432,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311200567280432,"Parsed as literal","list"
635311200567290432,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311200567300433,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311200567310434,"Parsed as literal",""
635311200567310434,"Parsed as literal","list"
635311200567320434,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200567330435,"Parsed as literal",""
635311200567330435,"Parsed as literal",""
635311200567340435,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311200567350436,"Parsed as literal"," "
635311200567350436,"Parsed as literal","list"
635311200567360436,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311200567370437,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311200567370437,"Parsed as literal","foldr"
635311200567380438,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311200567390438,"Parsed as literal","@func"
635311200567400439,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311200567400439,"Parsed as literal","list"
635311200567410439,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311200567420440,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311200567420440,"Parsed as literal",""
635311200567430440,"Parsed as literal","list"
635311200567440441,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200567440441,"Parsed as literal",""
635311200567450442,"Parsed as literal",""
635311200567460442,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311200567470443,"Parsed as literal"," "
635311200567470443,"Parsed as literal","list"
635311200567480443,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311200567490444,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311200567500444,"Parsed as literal","foldr"
635311200567500444,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311200567510445,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311200567520446,"Parsed as literal","func"
635311200567530446,"Parsed as literal",""
635311200567530446,"Invalid operator","@func","6"
635311200567540447,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311200567550447,"Parsed as literal","func"
635311200567550447,"Parsed as literal",""
635311200567560448,"Invalid operator","@func","6"
635311200567570448,"Parsed as literal","@func"
635311200567570448,"Parsed as literal","list"
635311200567580449,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311200567590450,"Parsed as literal","func"
635311200567600450,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311200567610451,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311200567610451,"Parsed as literal","foldr"
635311200567620451,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311200567630452,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311200567640452,"Parsed as literal","func"
635311200567640452,"Parsed as literal",""
635311200567650453,"Invalid operator","@func","33"
635311200567660454,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311200567660454,"Parsed as literal","func"
635311200567670454,"Parsed as literal",""
635311200567680455,"Invalid operator","@func","33"
635311200567680455,"Parsed as literal","@func"
635311200567690455,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311200567700456,"Parsed as literal","superHead"
635311200567700456,"Parsed as literal","list"
635311200567710456,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311200567720457,"Parsed as literal","last"
635311200567730458,"Parsed as literal","list"
635311200567730458,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311200567740458,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311200567750459,"Parsed as literal","foldr"
635311200567760459,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311200567760459,"Parsed as literal","@func"
635311200567780460,"Parsed as literal","list"
635311200567790461,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311200567800462,"Parsed as literal","func"
635311200567810462,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311200567810462,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311200567820463,"Parsed as literal","foldr"
635311200567830463,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311200567830463,"Parsed as literal","@func"
635311200567840464,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311200567850464,"Parsed as literal","superHead"
635311200567860465,"Parsed as literal","list"
635311200567860465,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311200567870466,"Parsed as literal","last"
635311200567880466,"Parsed as literal","list"
635311200567890467,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311200567900467,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311200567900467,"Parsed as literal","superHead"
635311200567910468,"Parsed as literal","list"
635311200567920468,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311200567920468,"Parsed as literal","reverse"
635311200567930469,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311200567940470,"Parsed as literal",""
635311200567950470,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311200567950470,"Parsed as literal","reverse"
635311200567960471,"Parsed as literal","list"
635311200567970471,"StepEvaluate","->","Changed","Declared @map"
635311200567970471,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311200567980472,"StepEvaluate","->","Changed","Declared @map"
635311200567990472,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311200567990472,"StepEvaluate","->","Changed","Declared @filter"
635311200568000473,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200568010474,"StepEvaluate","->","Changed","Declared @filter"
635311200568010474,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200568020474,"StepEvaluate","->","Changed","Declared @filter"
635311200568030475,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311200568030475,"StepEvaluate","->","Changed","Declared @call"
635311200568040475,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311200568050476,"StepEvaluate","->","Changed","Declared @curry"
635311200568050476,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311200568060476,"StepEvaluate","->","Changed","Declared @curry"
635311200568060476,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311200568070477,"StepEvaluate","->","Changed","Declared @fold"
635311200568080478,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200568080478,"StepEvaluate","->","Changed","Declared @fold"
635311200568090478,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200568100479,"StepEvaluate","->","Changed","Declared @fold"
635311200568100479,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311200568110479,"StepEvaluate","->","Changed","Declared @foldr"
635311200568120480,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200568120480,"StepEvaluate","->","Changed","Declared @foldr"
635311200568130480,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200568140481,"StepEvaluate","->","Changed","Declared @foldr"
635311200568140481,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311200568150482,"StepEvaluate","==","Unchanged","=="
635311200568160482,"StepEvaluate","@","Changed","@"
635311200568160482,"StepEvaluate","@","Changed","@"
635311200568170483,"StepEvaluate","==","Unchanged","=="
635311200568180483,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200568180483,"StepEvaluate","superHead","Unchanged","superHead"
635311200568190484,"StepEvaluate",",","Unchanged",","
635311200568200484,"StepEvaluate","list","Unchanged","list"
635311200568200484,"StepEvaluate","@","Changed","@"
635311200568210485,"StepEvaluate","==","Unchanged","=="
635311200568210485,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200568220486,"StepEvaluate","superHead","Unchanged","superHead"
635311200568230486,"StepEvaluate",",","Unchanged",","
635311200568230486,"StepEvaluate","list","Unchanged","list"
635311200568240487,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200568250487,"StepEvaluate","reverse","Unchanged","reverse"
635311200568250487,"StepEvaluate",",","Unchanged",","
635311200568260488,"StepEvaluate","tail","Unchanged","tail"
635311200568270488,"StepEvaluate","@","Changed","@"
635311200568270488,"StepEvaluate","==","Unchanged","=="
635311200568280489,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311200568290490,"StepEvaluate","superHead","Unchanged","superHead"
635311200568300490,"StepEvaluate",",","Unchanged",","
635311200568300490,"StepEvaluate","list","Unchanged","list"
635311200568310491,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200568320491,"StepEvaluate","reverse","Unchanged","reverse"
635311200568320491,"StepEvaluate",",","Unchanged",","
635311200568330492,"StepEvaluate","tail","Unchanged","tail"
635311200568340492,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311200568340492,"StepEvaluate","reverse","Unchanged","reverse"
635311200568350493,"StepEvaluate",",","Unchanged",","
635311200568360494,"StepEvaluate","list","Unchanged","list"
635311200568360494,"StepEvaluate","[]","Changed","File imported"
635311200568370494,"StepEvaluate","File imported","Unchanged","File imported"
635311200568380495,"StepEvaluate","@","Changed","@"
635311200568380495,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200568390495,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200568400496,"StepEvaluate",",","Unchanged",","
635311200568400496,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200568410496,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200568420497,"StepEvaluate","PAT@-M","Changed","[]"
635311200568420497,"StepEvaluate","SEL@import","Changed","[]"
635311200568430498,"StepEvaluate","@","Changed","[]"
635311200568430498,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311200568440498,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311200568440498,"Parsed as literal","zipWith"
635311200568450499,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311200568450499,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311200568450499,"Parsed as literal","func"
635311200568460499,"Parsed as literal",""
635311200568460499,"Invalid operator","@func","8"
635311200568470500,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311200568470500,"Parsed as literal","func"
635311200568480500,"Parsed as literal",""
635311200568480500,"Invalid operator","@func","8"
635311200568490501,"Parsed as literal","@func"
635311200568490501,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311200568490501,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200568500502,"Parsed as literal",""
635311200568500502,"Parsed as literal",""
635311200568510502,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311200568510502,"Parsed as literal",""
635311200568520503,"Parsed as literal",""
635311200568520503,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311200568530503,"Parsed as literal",""
635311200568530503,"Parsed as literal",""
635311200568540504,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311200568540504,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311200568540504,"Parsed as literal","zipWith"
635311200568550504,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311200568550504,"Parsed as literal","@func"
635311200568560505,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311200568560505,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200568570506,"Parsed as literal",""
635311200568570506,"Parsed as literal",""
635311200568580506,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311200568580506,"Parsed as literal",""
635311200568580506,"Parsed as literal",""
635311200568590507,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311200568590507,"Parsed as literal",""
635311200568600507,"Parsed as literal",""
635311200568610508,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311200568610508,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311200568610508,"Parsed as literal","zipWith"
635311200568620508,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311200568620508,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311200568630509,"Parsed as literal","func"
635311200568630509,"Parsed as literal",""
635311200568640510,"Invalid operator","@func","8"
635311200568640510,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311200568650510,"Parsed as literal","func"
635311200568650510,"Parsed as literal",""
635311200568650510,"Invalid operator","@func","8"
635311200568660511,"Parsed as literal","@func"
635311200568660511,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311200568670511,"Parsed as literal","list1"
635311200568670511,"Parsed as literal","list2"
635311200568680512,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311200568680512,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311200568690512,"Parsed as literal","func"
635311200568690512,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311200568700513,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311200568700513,"Parsed as literal",""
635311200568700513,"Parsed as literal","list1"
635311200568710514,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311200568710514,"Parsed as literal",""
635311200568720514,"Parsed as literal","list2"
635311200568720514,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311200568730515,"Parsed as literal","zipWith"
635311200568730515,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311200568740515,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311200568740515,"Parsed as literal","func"
635311200568740515,"Parsed as literal",""
635311200568750516,"Invalid operator","@func","64"
635311200568750516,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311200568760516,"Parsed as literal","func"
635311200568760516,"Parsed as literal",""
635311200568770517,"Invalid operator","@func","64"
635311200568770517,"Parsed as literal","@func"
635311200568780518,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311200568780518,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311200568780518,"Parsed as literal",""
635311200568790518,"Parsed as literal","list1"
635311200568790518,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311200568800519,"Parsed as literal",""
635311200568800519,"Parsed as literal","list2"
635311200568810519,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311200568810519,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311200568820520,"Parsed as literal","zipWith"
635311200568820520,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311200568830520,"Parsed as literal","@func"
635311200568830520,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311200568830520,"Parsed as literal","list1"
635311200568840521,"Parsed as literal","list2"
635311200568850522,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311200568850522,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311200568850522,"Parsed as literal","func"
635311200568860522,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311200568860522,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311200568870523,"Parsed as literal",""
635311200568870523,"Parsed as literal","list1"
635311200568880523,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311200568880523,"Parsed as literal",""
635311200568890524,"Parsed as literal","list2"
635311200568890524,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311200568900524,"Parsed as literal","zipWith"
635311200568900524,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311200568900524,"Parsed as literal","@func"
635311200568910525,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311200568910525,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311200568920526,"Parsed as literal",""
635311200568920526,"Parsed as literal","list1"
635311200568930526,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311200568930526,"Parsed as literal",""
635311200568940527,"Parsed as literal","list2"
635311200568940527,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311200568950527,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311200568950527,"Parsed as literal","count"
635311200568950527,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200568960528,"Parsed as literal",""
635311200568960528,"Parsed as literal",""
635311200568970528,"Parsed as literal"," 0"
635311200568970528,"Invalid operator","@count([]) -> 0","0"
635311200568980529,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311200568980529,"Parsed as literal","count"
635311200568990530,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200568990530,"Parsed as literal",""
635311200569000530,"Parsed as literal",""
635311200569000530,"Parsed as literal"," 0"
635311200569010531,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311200569010531,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311200569010531,"Parsed as literal","count"
635311200569020531,"Parsed as literal","list"
635311200569020531,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311200569030532,"Parsed as literal"," 1 "
635311200569030532,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311200569040532,"Parsed as literal","count"
635311200569040532,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200569050533,"Parsed as literal",""
635311200569050533,"Parsed as literal","list"
635311200569050533,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311200569060534,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311200569060534,"Parsed as literal","count"
635311200569070534,"Parsed as literal","list"
635311200569070534,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311200569080535,"Parsed as literal"," 1 "
635311200569080535,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311200569090535,"Parsed as literal","count"
635311200569090535,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200569100536,"Parsed as literal",""
635311200569100536,"Parsed as literal","list"
635311200569110536,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311200569110536,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311200569110536,"Parsed as literal","skip"
635311200569120537,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311200569120537,"Parsed as literal","0"
635311200569130538,"Parsed as literal","list"
635311200569130538,"Parsed as literal"," list"
635311200569140538,"Invalid operator","@skip(0,list) -> list","0"
635311200569140538,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311200569150539,"Parsed as literal","skip"
635311200569150539,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311200569150539,"Parsed as literal","0"
635311200569160539,"Parsed as literal","list"
635311200569160539,"Parsed as literal"," list"
635311200569170540,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311200569170540,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311200569180540,"Parsed as literal","skip"
635311200569180540,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200569190541,"Parsed as literal","n"
635311200569190541,"Parsed as literal","list"
635311200569200542,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311200569200542,"Parsed as literal","skip"
635311200569210542,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311200569210542,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200569210542,"Parsed as literal","n"
635311200569220543,"Parsed as literal","1"
635311200569220543,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200569230543,"Parsed as literal",""
635311200569230543,"Parsed as literal","list"
635311200569240544,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311200569240544,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311200569250544,"Parsed as literal","skip"
635311200569250544,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200569250544,"Parsed as literal","n"
635311200569260545,"Parsed as literal","list"
635311200569260545,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311200569270546,"Parsed as literal","skip"
635311200569270546,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311200569280546,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200569280546,"Parsed as literal","n"
635311200569290547,"Parsed as literal","1"
635311200569290547,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200569290547,"Parsed as literal",""
635311200569300547,"Parsed as literal","list"
635311200569300547,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311200569310548,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311200569310548,"Parsed as literal","take"
635311200569320548,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311200569320548,"Parsed as literal","1"
635311200569330549,"Parsed as literal","list"
635311200569330549,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311200569340550,"Parsed as literal"," "
635311200569340550,"Parsed as literal","list"
635311200569340550,"Invalid operator","@take(1,list) -> h:list","0"
635311200569350550,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311200569350550,"Parsed as literal","take"
635311200569360551,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311200569360551,"Parsed as literal","1"
635311200569370551,"Parsed as literal","list"
635311200569370551,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311200569370551,"Parsed as literal"," "
635311200569380552,"Parsed as literal","list"
635311200569380552,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311200569390552,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311200569390552,"Parsed as literal","take"
635311200569400553,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200569400553,"Parsed as literal","n"
635311200569410554,"Parsed as literal","list"
635311200569410554,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311200569420554,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311200569420554,"Parsed as literal"," "
635311200569430555,"Parsed as literal","list "
635311200569430555,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311200569440555,"Parsed as literal","take"
635311200569440555,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311200569440555,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200569450556,"Parsed as literal","n"
635311200569450556,"Parsed as literal","1"
635311200569460556,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311200569460556,"Parsed as literal",""
635311200569470557,"Parsed as literal","list"
635311200569470557,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311200569470557,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311200569480558,"Parsed as literal","take"
635311200569480558,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311200569490558,"Parsed as literal","n"
635311200569490558,"Parsed as literal","list"
635311200569500559,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311200569500559,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311200569510559,"Parsed as literal"," "
635311200569510559,"Parsed as literal","list "
635311200569520560,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311200569520560,"Parsed as literal","take"
635311200569520560,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311200569530561,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200569530561,"Parsed as literal","n"
635311200569540561,"Parsed as literal","1"
635311200569540561,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311200569550562,"Parsed as literal",""
635311200569550562,"Parsed as literal","list"
635311200569560562,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311200569560562,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311200569560562,"Parsed as literal","nthItem"
635311200569570563,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311200569570563,"Parsed as literal","list"
635311200569580563,"Parsed as literal","0"
635311200569580563,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200569590564,"Parsed as literal",""
635311200569590564,"Parsed as literal",""
635311200569600565,"Invalid operator","@nthItem(list,0) -> []","0"
635311200569600565,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311200569600565,"Parsed as literal","nthItem"
635311200569610565,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311200569610565,"Parsed as literal","list"
635311200569620566,"Parsed as literal","0"
635311200569620566,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311200569630566,"Parsed as literal",""
635311200569630566,"Parsed as literal",""
635311200569640567,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311200569640567,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311200569650567,"Parsed as literal","nthItem"
635311200569650567,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311200569650567,"Parsed as literal","list"
635311200569660568,"Parsed as literal","1"
635311200569660568,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311200569670569,"Parsed as literal"," "
635311200569670569,"Parsed as literal","list"
635311200569680569,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311200569680569,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311200569690570,"Parsed as literal","nthItem"
635311200569690570,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311200569690570,"Parsed as literal","list"
635311200569700570,"Parsed as literal","1"
635311200569700570,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311200569710571,"Parsed as literal"," "
635311200569710571,"Parsed as literal","list"
635311200569720571,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311200569730572,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311200569730572,"Parsed as literal","nthItem"
635311200569740573,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311200569740573,"Parsed as literal","list"
635311200569750573,"Parsed as literal","n"
635311200569750573,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311200569760574,"Parsed as literal","nthItem"
635311200569760574,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311200569770574,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311200569770574,"Parsed as literal",""
635311200569770574,"Parsed as literal","list"
635311200569780575,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311200569780575,"Parsed as literal","n"
635311200569790575,"Parsed as literal","1"
635311200569790575,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311200569800576,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311200569800576,"Parsed as literal","nthItem"
635311200569810577,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311200569810577,"Parsed as literal","list"
635311200569810577,"Parsed as literal","n"
635311200569820577,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311200569820577,"Parsed as literal","nthItem"
635311200569830578,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311200569830578,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311200569840578,"Parsed as literal",""
635311200569840578,"Parsed as literal","list"
635311200569850579,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311200569850579,"Parsed as literal","n"
635311200569850579,"Parsed as literal","1"
635311200569860579,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311200569860579,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311200569870580,"Parsed as literal","makeRange"
635311200569870580,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311200569880581,"Parsed as literal","a"
635311200569880581,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311200569890581,"Parsed as literal","b"
635311200569890581,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311200569890581,"Parsed as literal","a"
635311200569900582,"Parsed as literal","b"
635311200569900582,"Parsed as literal"," a"
635311200569910582,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311200569910582,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311200569920583,"Parsed as literal","makeRange"
635311200569920583,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311200569930583,"Parsed as literal","a"
635311200569930583,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311200569940584,"Parsed as literal","b"
635311200569940584,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311200569940584,"Parsed as literal","a"
635311200569950585,"Parsed as literal","b"
635311200569950585,"Parsed as literal"," a"
635311200569960585,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311200569960585,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311200569970586,"Parsed as literal","makeRange"
635311200569970586,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311200569980586,"Parsed as literal","a"
635311200569980586,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311200569990587,"Parsed as literal","b"
635311200569990587,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311200569990587,"Parsed as literal","a"
635311200570000587,"Parsed as literal","b"
635311200570000587,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311200570010588,"Parsed as literal"," a "
635311200570010588,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311200570020589,"Parsed as literal","makeRange"
635311200570020589,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311200570030589,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311200570030589,"Parsed as literal","a"
635311200570040590,"Parsed as literal","1"
635311200570040590,"Parsed as literal","b"
635311200570040590,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311200570050590,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311200570050590,"Parsed as literal","makeRange"
635311200570060591,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311200570060591,"Parsed as literal","a"
635311200570070591,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311200570070591,"Parsed as literal","b"
635311200570080592,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311200570080592,"Parsed as literal","a"
635311200570080592,"Parsed as literal","b"
635311200570090593,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311200570090593,"Parsed as literal"," a "
635311200570100593,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311200570100593,"Parsed as literal","makeRange"
635311200570110594,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311200570110594,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311200570120594,"Parsed as literal","a"
635311200570120594,"Parsed as literal","1"
635311200570120594,"Parsed as literal","b"
635311200570130595,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311200570140595,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311200570140595,"Parsed as literal","reverse"
635311200570140595,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311200570150596,"Parsed as literal",""
635311200570150596,"Parsed as literal",""
635311200570160597,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311200570160597,"Parsed as literal",""
635311200570170597,"Parsed as literal",""
635311200570170597,"Invalid operator","@reverse([]) -> []","0"
635311200570170597,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311200570180598,"Parsed as literal","reverse"
635311200570180598,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311200570190598,"Parsed as literal",""
635311200570190598,"Parsed as literal",""
635311200570200599,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311200570200599,"Parsed as literal",""
635311200570210599,"Parsed as literal",""
635311200570210599,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311200570220600,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311200570220600,"Parsed as literal","reverse"
635311200570220600,"Parsed as literal","list"
635311200570230601,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311200570230601,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311200570240601,"Parsed as literal","reverse"
635311200570240601,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200570250602,"Parsed as literal",""
635311200570250602,"Parsed as literal","list"
635311200570260602,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311200570260602,"Parsed as literal"," "
635311200570260602,"Parsed as literal","list"
635311200570270603,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311200570270603,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311200570280603,"Parsed as literal","reverse"
635311200570280603,"Parsed as literal","list"
635311200570290604,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311200570290604,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311200570300605,"Parsed as literal","reverse"
635311200570300605,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311200570300605,"Parsed as literal",""
635311200570310605,"Parsed as literal","list"
635311200570310605,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311200570320606,"Parsed as literal"," "
635311200570320606,"Parsed as literal","list"
635311200570330606,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311200570330606,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311200570340607,"Parsed as literal","max"
635311200570340607,"Parsed as literal","list"
635311200570350607,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311200570350607,"Parsed as literal","fold"
635311200570350607,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311200570360608,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311200570360608,"Parsed as literal","max"
635311200570370609,"Parsed as literal",""
635311200570370609,"Invalid operator","@max","19"
635311200570380609,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311200570380609,"Parsed as literal","max"
635311200570380609,"Parsed as literal",""
635311200570390610,"Invalid operator","@max","19"
635311200570390610,"Parsed as literal","@max"
635311200570400610,"Parsed as literal","list"
635311200570400610,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311200570410611,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311200570410611,"Parsed as literal","max"
635311200570420611,"Parsed as literal","list"
635311200570420611,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311200570430612,"Parsed as literal","fold"
635311200570430612,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311200570430612,"Parsed as literal","@max"
635311200570440613,"Parsed as literal","list"
635311200570440613,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311200570450613,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311200570450613,"Parsed as literal","elementAt"
635311200570460614,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311200570460614,"Parsed as literal","0"
635311200570470614,"Parsed as literal","list"
635311200570470614,"Parsed as literal"," 'list"
635311200570480615,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311200570480615,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311200570490615,"Parsed as literal","elementAt"
635311200570490615,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311200570490615,"Parsed as literal","n"
635311200570500616,"Parsed as literal","list"
635311200570500616,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311200570510617,"Parsed as literal","elementAt"
635311200570510617,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311200570520617,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200570520617,"Parsed as literal","n"
635311200570530618,"Parsed as literal","1"
635311200570530618,"Parsed as literal","list'"
635311200570540618,"StepEvaluate","->","Changed","Declared @zipWith"
635311200570540618,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311200570540618,"StepEvaluate","->","Changed","Declared @zipWith"
635311200570550619,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311200570550619,"StepEvaluate","->","Changed","Declared @count"
635311200570560619,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311200570560619,"StepEvaluate","->","Changed","Declared @count"
635311200570560619,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311200570570620,"StepEvaluate","->","Changed","Declared @skip"
635311200570570620,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311200570580621,"StepEvaluate","->","Changed","Declared @skip"
635311200570580621,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311200570590621,"StepEvaluate","->","Changed","Declared @take"
635311200570590621,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311200570590621,"StepEvaluate","->","Changed","Declared @take"
635311200570600622,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311200570600622,"StepEvaluate","->","Changed","Declared @nthItem"
635311200570610622,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200570610622,"StepEvaluate","->","Changed","Declared @nthItem"
635311200570620623,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200570620623,"StepEvaluate","->","Changed","Declared @nthItem"
635311200570630623,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311200570630623,"StepEvaluate","->","Changed","Declared @makeRange"
635311200570630623,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311200570640624,"StepEvaluate","->","Changed","Declared @makeRange"
635311200570640624,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311200570650625,"StepEvaluate","->","Changed","Declared @reverse"
635311200570650625,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311200570650625,"StepEvaluate","->","Changed","Declared @reverse"
635311200570660625,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311200570660625,"StepEvaluate","->","Changed","Declared @max"
635311200570670626,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200570670626,"StepEvaluate","==","Unchanged","=="
635311200570680626,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200570680626,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200570680626,"StepEvaluate",",","Unchanged",","
635311200570690627,"StepEvaluate","0","Unchanged","0"
635311200570690627,"StepEvaluate",",","Unchanged",","
635311200570700627,"StepEvaluate","list","Unchanged","list"
635311200570700627,"StepEvaluate","'list","Unchanged","'list"
635311200570700627,"StepEvaluate","==","Unchanged","=="
635311200570710628,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200570710628,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200570720629,"StepEvaluate",",","Unchanged",","
635311200570720629,"StepEvaluate","n","Unchanged","n"
635311200570720629,"StepEvaluate",",","Unchanged",","
635311200570730629,"StepEvaluate","list","Unchanged","list"
635311200570730629,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311200570740630,"StepEvaluate","elementAt","Unchanged","elementAt"
635311200570740630,"StepEvaluate",",","Unchanged",","
635311200570740630,"StepEvaluate","-","Unchanged","-"
635311200570750630,"StepEvaluate","n","Unchanged","n"
635311200570750630,"StepEvaluate","1","Unchanged","1"
635311200570760631,"StepEvaluate",",","Unchanged",","
635311200570760631,"StepEvaluate","list'","Unchanged","list'"
635311200570770631,"StepEvaluate","[]","Changed","File imported"
635311200570770631,"StepEvaluate","File imported","Unchanged","File imported"
635311200570770631,"StepEvaluate","@","Changed","@"
635311200570780632,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200570780632,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200570790633,"StepEvaluate",",","Unchanged",","
635311200570790633,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200570800633,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200570800633,"StepEvaluate","PAT@-M","Changed","[]"
635311200570800633,"StepEvaluate","SEL@import","Changed","[]"
635311200570810634,"StepEvaluate","@","Changed","[]"
635311200570810634,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311200570820634,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311200570820634,"Parsed as literal","naturalNumbers"
635311200570830635,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200570830635,"Parsed as literal",""
635311200570840635,"Parsed as literal",""
635311200570840635,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311200570850636,"Parsed as literal","naturalNumbers"
635311200570850636,"Parsed as literal","0"
635311200570850636,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311200570860637,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311200570860637,"Parsed as literal","naturalNumbers"
635311200570870637,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200570870637,"Parsed as literal",""
635311200570880638,"Parsed as literal",""
635311200570880638,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311200570890638,"Parsed as literal","naturalNumbers"
635311200570890638,"Parsed as literal","0"
635311200570900639,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311200570900639,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311200570900639,"Parsed as literal","naturalNumbers"
635311200570910639,"Parsed as literal","n"
635311200570910639,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311200570920640,"Parsed as literal"," n "
635311200570920640,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311200570930641,"Parsed as literal","naturalNumbers"
635311200570930641,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311200570940641,"Parsed as literal","n"
635311200570940641,"Parsed as literal","1"
635311200570950642,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311200570950642,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311200570950642,"Parsed as literal","naturalNumbers"
635311200570960642,"Parsed as literal","n"
635311200570960642,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311200570970643,"Parsed as literal"," n "
635311200570970643,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311200570980643,"Parsed as literal","naturalNumbers"
635311200570980643,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311200570990644,"Parsed as literal","n"
635311200570990644,"Parsed as literal","1"
635311200571000645,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311200571000645,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311200571010645,"Parsed as literal","max"
635311200571010645,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311200571020646,"Parsed as literal","a"
635311200571020646,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311200571030646,"Parsed as literal","b"
635311200571030646,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311200571030646,"Parsed as literal","a"
635311200571040647,"Parsed as literal","b"
635311200571040647,"Parsed as literal","b"
635311200571050647,"Invalid operator","@max(a,b|a<b)->b","0"
635311200571050647,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311200571060648,"Parsed as literal","max"
635311200571060648,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311200571070649,"Parsed as literal","a"
635311200571070649,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311200571070649,"Parsed as literal","b"
635311200571080649,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311200571080649,"Parsed as literal","a"
635311200571090650,"Parsed as literal","b"
635311200571090650,"Parsed as literal","b"
635311200571100650,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311200571100650,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311200571110651,"Parsed as literal","max"
635311200571110651,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200571120651,"Parsed as literal","a"
635311200571120651,"Parsed as literal","b"
635311200571130652,"Parsed as literal","a"
635311200571130652,"Invalid operator","@max(a,b)->a","0"
635311200571140653,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311200571140653,"Parsed as literal","max"
635311200571140653,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200571150653,"Parsed as literal","a"
635311200571150653,"Parsed as literal","b"
635311200571160654,"Parsed as literal","a"
635311200571160654,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311200571170654,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311200571170654,"Parsed as literal","random"
635311200571180655,"Parsed as literal","0"
635311200571180655,"Parsed as literal"," 0"
635311200571190655,"Invalid operator","@random(0) -> 0","0"
635311200571190655,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311200571190655,"Parsed as literal","random"
635311200571200656,"Parsed as literal","0"
635311200571200656,"Parsed as literal"," 0"
635311200571210657,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311200571210657,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311200571220657,"Parsed as literal","random"
635311200571220657,"Parsed as literal","n"
635311200571230658,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311200571230658,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311200571240658,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311200571240658,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311200571250659,"Parsed as literal","1664525 "
635311200571250659,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311200571260659,"Parsed as literal","random"
635311200571260659,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200571260659,"Parsed as literal","n"
635311200571270660,"Parsed as literal","1"
635311200571270660,"Parsed as literal"," 1013904223"
635311200571280661,"Parsed as literal",""
635311200571280661,"Parsed as literal"," 4294967296"
635311200571290661,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311200571290661,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311200571290661,"Parsed as literal","random"
635311200571300662,"Parsed as literal","n"
635311200571300662,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311200571310662,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311200571310662,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311200571320663,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311200571320663,"Parsed as literal","1664525 "
635311200571330663,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311200571330663,"Parsed as literal","random"
635311200571340664,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311200571340664,"Parsed as literal","n"
635311200571350665,"Parsed as literal","1"
635311200571350665,"Parsed as literal"," 1013904223"
635311200571360665,"Parsed as literal",""
635311200571360665,"Parsed as literal"," 4294967296"
635311200571360665,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311200571370666,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311200571370666,"Parsed as literal","gcd"
635311200571380666,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311200571380666,"Parsed as literal","a"
635311200571390667,"Parsed as literal","0"
635311200571390667,"Parsed as literal"," a"
635311200571400667,"Invalid operator","@gcd(a,0) -> a","0"
635311200571400667,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311200571410668,"Parsed as literal","gcd"
635311200571410668,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311200571420669,"Parsed as literal","a"
635311200571420669,"Parsed as literal","0"
635311200571430669,"Parsed as literal"," a"
635311200571430669,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311200571440670,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311200571440670,"Parsed as literal","gcd"
635311200571440670,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200571450670,"Parsed as literal","a"
635311200571450670,"Parsed as literal","b"
635311200571460671,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311200571460671,"Parsed as literal","gcd"
635311200571470671,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311200571470671,"Parsed as literal","b"
635311200571480672,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311200571480672,"Parsed as literal","a "
635311200571490673,"Parsed as literal"," b"
635311200571490673,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311200571500673,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311200571500673,"Parsed as literal","gcd"
635311200571510674,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311200571520674,"Parsed as literal","a"
635311200571520674,"Parsed as literal","b"
635311200571530675,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311200571530675,"Parsed as literal","gcd"
635311200571540675,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311200571540675,"Parsed as literal","b"
635311200571550676,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311200571550676,"Parsed as literal","a "
635311200571550676,"Parsed as literal"," b"
635311200571560677,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311200571570677,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311200571570677,"Parsed as literal","gcd"
635311200571570677,"Parsed as literal","list"
635311200571580678,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311200571580678,"Parsed as literal","fold"
635311200571590678,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311200571590678,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311200571600679,"Parsed as literal","gcd"
635311200571600679,"Parsed as literal",""
635311200571610679,"Invalid operator","@gcd","19"
635311200571610679,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311200571610679,"Parsed as literal","gcd"
635311200571620680,"Parsed as literal",""
635311200571620680,"Invalid operator","@gcd","19"
635311200571630681,"Parsed as literal","@gcd"
635311200571630681,"Parsed as literal","list"
635311200571640681,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311200571640681,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311200571650682,"Parsed as literal","gcd"
635311200571650682,"Parsed as literal","list"
635311200571660682,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311200571660682,"Parsed as literal","fold"
635311200571660682,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311200571670683,"Parsed as literal","@gcd"
635311200571670683,"Parsed as literal","list"
635311200571680683,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311200571680683,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311200571690684,"Parsed as literal","fib"
635311200571690684,"Parsed as literal","0"
635311200571700685,"Parsed as literal"," 1"
635311200571700685,"Invalid operator","@fib(0) -> 1","0"
635311200571710685,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311200571710685,"Parsed as literal","fib"
635311200571710685,"Parsed as literal","0"
635311200571720686,"Parsed as literal"," 1"
635311200571720686,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311200571730686,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311200571730686,"Parsed as literal","fib"
635311200571740687,"Parsed as literal","1"
635311200571740687,"Parsed as literal"," 1"
635311200571750687,"Invalid operator","@fib(1) -> 1","0"
635311200571750687,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311200571760688,"Parsed as literal","fib"
635311200571760688,"Parsed as literal","1"
635311200571760688,"Parsed as literal"," 1"
635311200571770689,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311200571780689,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311200571780689,"Parsed as literal","fib"
635311200571780689,"Parsed as literal","n"
635311200571790690,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311200571790690,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311200571800690,"Parsed as literal","fib"
635311200571800690,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311200571810691,"Parsed as literal","n"
635311200571810691,"Parsed as literal","2"
635311200571820691,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311200571820691,"Parsed as literal","fib"
635311200571830692,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200571830692,"Parsed as literal","n"
635311200571830692,"Parsed as literal","1"
635311200571840693,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311200571840693,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311200571850693,"Parsed as literal","fib"
635311200571850693,"Parsed as literal","n"
635311200571860694,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311200571860694,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311200571870694,"Parsed as literal","fib"
635311200571870694,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311200571870694,"Parsed as literal","n"
635311200571880695,"Parsed as literal","2"
635311200571880695,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311200571890695,"Parsed as literal","fib"
635311200571890695,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200571900696,"Parsed as literal","n"
635311200571900696,"Parsed as literal","1"
635311200571910697,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200571910697,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311200571920697,"Parsed as literal","fib2"
635311200571920697,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311200571930698,"Parsed as literal",""
635311200571930698,"Parsed as literal",""
635311200571940698,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200571940698,"Parsed as literal"," 0 "
635311200571950699,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200571950699,"Parsed as literal"," 1 "
635311200571960699,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311200571960699,"Parsed as literal","zipWith"
635311200571970700,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311200571970700,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311200571970700,"Parsed as literal",""
635311200571980701,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200571980701,"Parsed as literal","a"
635311200571990701,"Parsed as literal","b"
635311200571990701,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311200572000702,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200572000702,"Parsed as literal","a"
635311200572010702,"Parsed as literal","b"
635311200572010702,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200572020703,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200572020703,"Parsed as literal","fib2"
635311200572020703,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200572030704,"Parsed as literal",""
635311200572030704,"Parsed as literal",""
635311200572040704,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200572040704,"Parsed as literal"," "
635311200572050705,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200572050705,"Parsed as literal","fib2"
635311200572060705,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200572060705,"Parsed as literal",""
635311200572060705,"Parsed as literal",""
635311200572070706,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311200572070706,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200572080706,"Parsed as literal",""
635311200572080706,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200572090707,"Parsed as literal","a"
635311200572090707,"Parsed as literal","b"
635311200572100708,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311200572100708,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200572100708,"Parsed as literal","a"
635311200572110708,"Parsed as literal","b"
635311200572110708,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200572120709,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200572120709,"Parsed as literal","fib2"
635311200572130709,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200572130709,"Parsed as literal",""
635311200572130709,"Parsed as literal",""
635311200572140710,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200572140710,"Parsed as literal"," "
635311200572150710,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200572150710,"Parsed as literal","fib2"
635311200572160711,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200572160711,"Parsed as literal",""
635311200572170712,"Parsed as literal",""
635311200572170712,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311200572180712,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311200572180712,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311200572180712,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200572190713,"Parsed as literal",""
635311200572190713,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200572200713,"Parsed as literal","a"
635311200572200713,"Parsed as literal","b"
635311200572210714,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200572210714,"Parsed as literal","a"
635311200572220714,"Parsed as literal","b"
635311200572220714,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200572230715,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200572230715,"Parsed as literal","fib2"
635311200572240716,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200572240716,"Parsed as literal",""
635311200572240716,"Parsed as literal",""
635311200572250716,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200572250716,"Parsed as literal"," "
635311200572260717,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200572260717,"Parsed as literal","fib2"
635311200572270717,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200572270717,"Parsed as literal",""
635311200572280718,"Parsed as literal",""
635311200572280718,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311200572290718,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311200572290718,"Parsed as literal","fib2"
635311200572300719,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311200572300719,"Parsed as literal",""
635311200572300719,"Parsed as literal",""
635311200572310720,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200572310720,"Parsed as literal"," 0 "
635311200572320720,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311200572320720,"Parsed as literal"," 1 "
635311200572330721,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311200572330721,"Parsed as literal","zipWith"
635311200572340721,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311200572340721,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311200572350722,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311200572350722,"Parsed as literal",""
635311200572360722,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311200572360722,"Parsed as literal","a"
635311200572370723,"Parsed as literal","b"
635311200572370723,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311200572370723,"Parsed as literal","a"
635311200572380724,"Parsed as literal","b"
635311200572380724,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311200572390724,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311200572390724,"Parsed as literal","fib2"
635311200572400725,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311200572400725,"Parsed as literal",""
635311200572410725,"Parsed as literal",""
635311200572410725,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311200572420726,"Parsed as literal"," "
635311200572420726,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311200572420726,"Parsed as literal","fib2"
635311200572430726,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311200572430726,"Parsed as literal",""
635311200572440727,"Parsed as literal",""
635311200572450728,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311200572450728,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311200572450728,"Parsed as literal","fib2"
635311200572460728,"Parsed as literal","n"
635311200572460728,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311200572470729,"Parsed as literal","take"
635311200572470729,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311200572480729,"Parsed as literal","n"
635311200572480729,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311200572490730,"Parsed as literal","fib2"
635311200572490730,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200572490730,"Parsed as literal",""
635311200572500730,"Parsed as literal",""
635311200572500730,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311200572510731,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311200572510731,"Parsed as literal","fib2"
635311200572520732,"Parsed as literal","n"
635311200572520732,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311200572530732,"Parsed as literal","take"
635311200572530732,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311200572530732,"Parsed as literal","n"
635311200572540733,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311200572540733,"Parsed as literal","fib2"
635311200572550733,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311200572550733,"Parsed as literal",""
635311200572560734,"Parsed as literal",""
635311200572560734,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311200572570734,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311200572570734,"Parsed as literal","fac"
635311200572580735,"Parsed as literal","0"
635311200572580735,"Parsed as literal"," 1"
635311200572580735,"Invalid operator","@fac(0) -> 1","0"
635311200572590736,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311200572590736,"Parsed as literal","fac"
635311200572600736,"Parsed as literal","0"
635311200572600736,"Parsed as literal"," 1"
635311200572610737,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311200572610737,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311200572620737,"Parsed as literal","fac"
635311200572620737,"Parsed as literal","n"
635311200572630738,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311200572630738,"Parsed as literal"," n "
635311200572640738,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311200572640738,"Parsed as literal","fac"
635311200572640738,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311200572650739,"Parsed as literal","n"
635311200572650739,"Parsed as literal","1"
635311200572660740,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311200572660740,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311200572670740,"Parsed as literal","fac"
635311200572670740,"Parsed as literal","n"
635311200572680741,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311200572680741,"Parsed as literal"," n "
635311200572690741,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311200572690741,"Parsed as literal","fac"
635311200572690741,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311200572700742,"Parsed as literal","n"
635311200572700742,"Parsed as literal","1"
635311200572710742,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311200572710742,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311200572720743,"Parsed as literal","pow"
635311200572720743,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311200572730744,"Parsed as literal","num"
635311200572730744,"Parsed as literal","0"
635311200572740744,"Parsed as literal"," 1"
635311200572740744,"Invalid operator","@pow(num,0) -> 1","0"
635311200572750745,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311200572750745,"Parsed as literal","pow"
635311200572750745,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311200572760745,"Parsed as literal","num"
635311200572760745,"Parsed as literal","0"
635311200572770746,"Parsed as literal"," 1"
635311200572770746,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311200572780746,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311200572780746,"Parsed as literal","pow"
635311200572790747,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311200572790747,"Parsed as literal","num"
635311200572800748,"Parsed as literal","1"
635311200572800748,"Parsed as literal"," num"
635311200572800748,"Invalid operator","@pow(num,1) -> num","0"
635311200572810748,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311200572810748,"Parsed as literal","pow"
635311200572820749,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311200572820749,"Parsed as literal","num"
635311200572830749,"Parsed as literal","1"
635311200572830749,"Parsed as literal"," num"
635311200572840750,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311200572840750,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311200572850750,"Parsed as literal","pow"
635311200572850750,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311200572850750,"Parsed as literal","num"
635311200572860751,"Parsed as literal"," power"
635311200572860751,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311200572870752,"Parsed as literal"," num "
635311200572870752,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311200572880752,"Parsed as literal","pow"
635311200572880752,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311200572890753,"Parsed as literal","num"
635311200572890753,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311200572900753,"Parsed as literal","power"
635311200572900753,"Parsed as literal","1"
635311200572900753,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311200572910754,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311200572910754,"Parsed as literal","pow"
635311200572920754,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311200572930755,"Parsed as literal","num"
635311200572930755,"Parsed as literal"," power"
635311200572940756,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311200572940756,"Parsed as literal"," num "
635311200572950756,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311200572950756,"Parsed as literal","pow"
635311200572960757,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311200572960757,"Parsed as literal","num"
635311200572960757,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311200572970757,"Parsed as literal","power"
635311200572970757,"Parsed as literal","1"
635311200572980758,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311200572990758,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311200572990758,"Parsed as literal","upArrow"
635311200572990758,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311200573000759,"Parsed as literal","a"
635311200573000759,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311200573010760,"Parsed as literal","b"
635311200573010760,"Parsed as literal","1"
635311200573020760,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311200573020760,"Parsed as literal","pow"
635311200573030761,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311200573030761,"Parsed as literal","a"
635311200573030761,"Parsed as literal","b"
635311200573040761,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311200573040761,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311200573050762,"Parsed as literal","upArrow"
635311200573050762,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311200573060762,"Parsed as literal","a"
635311200573060762,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311200573070763,"Parsed as literal","b"
635311200573070763,"Parsed as literal","1"
635311200573080764,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311200573080764,"Parsed as literal","pow"
635311200573080764,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311200573090764,"Parsed as literal","a"
635311200573090764,"Parsed as literal","b"
635311200573100765,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311200573100765,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311200573110765,"Parsed as literal","upArrow"
635311200573110765,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311200573120766,"Parsed as literal","a"
635311200573120766,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311200573120766,"Parsed as literal","1"
635311200573130766,"Parsed as literal","n"
635311200573130766,"Parsed as literal"," a"
635311200573140767,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311200573140767,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311200573150768,"Parsed as literal","upArrow"
635311200573150768,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311200573160768,"Parsed as literal","a"
635311200573160768,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311200573160768,"Parsed as literal","1"
635311200573170769,"Parsed as literal","n"
635311200573170769,"Parsed as literal"," a"
635311200573180769,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311200573180769,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311200573190770,"Parsed as literal","upArrow"
635311200573190770,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311200573200770,"Parsed as literal","a"
635311200573200770,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311200573210771,"Parsed as literal","b"
635311200573210771,"Parsed as literal","n"
635311200573220772,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311200573220772,"Parsed as literal","upArrow"
635311200573230772,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311200573230772,"Parsed as literal","a"
635311200573230772,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311200573240773,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311200573240773,"Parsed as literal","upArrow"
635311200573250773,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311200573250773,"Parsed as literal","a"
635311200573260774,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311200573260774,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311200573270774,"Parsed as literal","b"
635311200573270774,"Parsed as literal","1"
635311200573280775,"Parsed as literal","n"
635311200573280775,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311200573290776,"Parsed as literal","n"
635311200573290776,"Parsed as literal","1"
635311200573290776,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311200573300776,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311200573300776,"Parsed as literal","upArrow"
635311200573310777,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311200573310777,"Parsed as literal","a"
635311200573320777,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311200573320777,"Parsed as literal","b"
635311200573330778,"Parsed as literal","n"
635311200573330778,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311200573340778,"Parsed as literal","upArrow"
635311200573340778,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311200573350779,"Parsed as literal","a"
635311200573350779,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311200573360780,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311200573360780,"Parsed as literal","upArrow"
635311200573370780,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311200573370780,"Parsed as literal","a"
635311200573370780,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311200573380781,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311200573380781,"Parsed as literal","b"
635311200573390781,"Parsed as literal","1"
635311200573390781,"Parsed as literal","n"
635311200573400782,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311200573400782,"Parsed as literal","n"
635311200573410782,"Parsed as literal","1"
635311200573420783,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311200573420783,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311200573430784,"Parsed as literal","graham"
635311200573430784,"Parsed as literal","0"
635311200573440784,"Parsed as literal"," 4"
635311200573440784,"Invalid operator","@graham(0) -> 4","0"
635311200573450785,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311200573450785,"Parsed as literal","graham"
635311200573460785,"Parsed as literal","0"
635311200573470786,"Parsed as literal"," 4"
635311200573470786,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311200573480786,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311200573480786,"Parsed as literal","graham"
635311200573490787,"Parsed as literal","n"
635311200573490787,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311200573500788,"Parsed as literal","upArrow"
635311200573500788,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311200573510788,"Parsed as literal","3"
635311200573510788,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311200573520789,"Parsed as literal","3"
635311200573520789,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311200573520789,"Parsed as literal","graham"
635311200573530789,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311200573530789,"Parsed as literal","n"
635311200573530789,"Parsed as literal","1"
635311200573530789,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311200573540790,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311200573540790,"Parsed as literal","graham"
635311200573540790,"Parsed as literal","n"
635311200573550790,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311200573550790,"Parsed as literal","upArrow"
635311200573550790,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311200573560791,"Parsed as literal","3"
635311200573560791,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311200573560791,"Parsed as literal","3"
635311200573560791,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311200573570792,"Parsed as literal","graham"
635311200573570792,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311200573570792,"Parsed as literal","n"
635311200573580792,"Parsed as literal","1"
635311200573580792,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311200573580792,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311200573590793,"Parsed as literal","grahamsNumber"
635311200573590793,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200573590793,"Parsed as literal",""
635311200573600793,"Parsed as literal",""
635311200573600793,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311200573600793,"Parsed as literal","graham"
635311200573600793,"Parsed as literal","64"
635311200573610794,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311200573610794,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311200573610794,"Parsed as literal","grahamsNumber"
635311200573620794,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200573620794,"Parsed as literal",""
635311200573620794,"Parsed as literal",""
635311200573630795,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311200573630795,"Parsed as literal","graham"
635311200573630795,"Parsed as literal","64"
635311200573630795,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311200573640796,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311200573640796,"Parsed as literal","ack"
635311200573650796,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311200573650796,"Parsed as literal","0"
635311200573650796,"Parsed as literal","n"
635311200573660797,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311200573660797,"Parsed as literal"," n "
635311200573660797,"Parsed as literal"," 1"
635311200573670797,"Invalid operator","@ack(0,n) -> n + 1","0"
635311200573670797,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311200573670797,"Parsed as literal","ack"
635311200573670797,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311200573680798,"Parsed as literal","0"
635311200573680798,"Parsed as literal","n"
635311200573680798,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311200573690798,"Parsed as literal"," n "
635311200573690798,"Parsed as literal"," 1"
635311200573690798,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311200573690798,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311200573700799,"Parsed as literal","ack"
635311200573700799,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311200573700799,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311200573710800,"Parsed as literal","m"
635311200573710800,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311200573710800,"Parsed as literal","m"
635311200573710800,"Parsed as literal","0"
635311200573720800,"Parsed as literal","0"
635311200573720800,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311200573720800,"Parsed as literal","ack"
635311200573730801,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311200573730801,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311200573730801,"Parsed as literal","m"
635311200573730801,"Parsed as literal","1"
635311200573740801,"Parsed as literal","1"
635311200573740801,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311200573740801,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311200573750802,"Parsed as literal","ack"
635311200573750802,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311200573750802,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311200573760802,"Parsed as literal","m"
635311200573760802,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311200573760802,"Parsed as literal","m"
635311200573760802,"Parsed as literal","0"
635311200573770803,"Parsed as literal","0"
635311200573770803,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311200573770803,"Parsed as literal","ack"
635311200573780804,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311200573780804,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311200573780804,"Parsed as literal","m"
635311200573780804,"Parsed as literal","1"
635311200573790804,"Parsed as literal","1"
635311200573790804,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311200573790804,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311200573800805,"Parsed as literal","ack"
635311200573800805,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311200573800805,"Parsed as literal","m"
635311200573810805,"Parsed as literal","n"
635311200573810805,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311200573810805,"Parsed as literal","ack"
635311200573810805,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311200573820806,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311200573820806,"Parsed as literal","m"
635311200573820806,"Parsed as literal","1"
635311200573830806,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311200573830806,"Parsed as literal","ack"
635311200573830806,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311200573830806,"Parsed as literal","m"
635311200573840807,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200573840807,"Parsed as literal","n"
635311200573840807,"Parsed as literal","1"
635311200573850808,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311200573850808,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311200573850808,"Parsed as literal","ack"
635311200573850808,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311200573860808,"Parsed as literal","m"
635311200573860808,"Parsed as literal","n"
635311200573860808,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311200573870809,"Parsed as literal","ack"
635311200573870809,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311200573870809,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311200573870809,"Parsed as literal","m"
635311200573880809,"Parsed as literal","1"
635311200573880809,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311200573880809,"Parsed as literal","ack"
635311200573890810,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311200573890810,"Parsed as literal","m"
635311200573890810,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311200573900810,"Parsed as literal","n"
635311200573900810,"Parsed as literal","1"
635311200573900810,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311200573900810,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311200573910811,"Parsed as literal","acker"
635311200573910811,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311200573910811,"Parsed as literal","m"
635311200573920812,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311200573920812,"Parsed as literal","n"
635311200573920812,"Parsed as literal","0"
635311200573930812,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311200573930812,"Parsed as literal"," m"
635311200573930812,"Parsed as literal","n"
635311200573930812,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311200573940813,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311200573940813,"Parsed as literal","acker"
635311200573940813,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311200573950813,"Parsed as literal","m"
635311200573950813,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311200573950813,"Parsed as literal","n"
635311200573950813,"Parsed as literal","0"
635311200573960814,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311200573960814,"Parsed as literal"," m"
635311200573960814,"Parsed as literal","n"
635311200573970814,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311200573970814,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311200573970814,"Parsed as literal","acker"
635311200573970814,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311200573980815,"Parsed as literal","m"
635311200573980815,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311200573980815,"Parsed as literal","0"
635311200573990816,"Parsed as literal","1"
635311200573990816,"Parsed as literal"," 0"
635311200573990816,"Invalid operator","@acker(m,0,1) -> 0","0"
635311200573990816,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311200574000816,"Parsed as literal","acker"
635311200574000816,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311200574000816,"Parsed as literal","m"
635311200574010817,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311200574010817,"Parsed as literal","0"
635311200574010817,"Parsed as literal","1"
635311200574010817,"Parsed as literal"," 0"
635311200574020817,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311200574020817,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311200574020817,"Parsed as literal","acker"
635311200574030818,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311200574030818,"Parsed as literal","m"
635311200574030818,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311200574040818,"Parsed as literal","0"
635311200574040818,"Parsed as literal","2"
635311200574040818,"Parsed as literal"," 1"
635311200574040818,"Invalid operator","@acker(m,0,2) -> 1","0"
635311200574050819,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311200574050819,"Parsed as literal","acker"
635311200574050819,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311200574060820,"Parsed as literal","m"
635311200574060820,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311200574060820,"Parsed as literal","0"
635311200574060820,"Parsed as literal","2"
635311200574070820,"Parsed as literal"," 1"
635311200574070820,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311200574070820,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311200574080821,"Parsed as literal","acker"
635311200574080821,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311200574080821,"Parsed as literal","m"
635311200574090821,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311200574090821,"Parsed as literal","0"
635311200574090821,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311200574090821,"Parsed as literal","p"
635311200574100822,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311200574100822,"Parsed as literal","p"
635311200574100822,"Parsed as literal","2"
635311200574110822,"Parsed as literal"," m"
635311200574110822,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311200574110822,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311200574110822,"Parsed as literal","acker"
635311200574120823,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311200574120823,"Parsed as literal","m"
635311200574120823,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311200574130824,"Parsed as literal","0"
635311200574130824,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311200574130824,"Parsed as literal","p"
635311200574130824,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311200574140824,"Parsed as literal","p"
635311200574140824,"Parsed as literal","2"
635311200574140824,"Parsed as literal"," m"
635311200574150825,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311200574160825,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311200574160825,"Parsed as literal","acker"
635311200574160825,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311200574160825,"Parsed as literal","m"
635311200574170826,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311200574170826,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311200574170826,"Parsed as literal","n"
635311200574180826,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311200574180826,"Parsed as literal","n"
635311200574180826,"Parsed as literal","0"
635311200574180826,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311200574190827,"Parsed as literal","p"
635311200574190827,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311200574190827,"Parsed as literal","p"
635311200574200828,"Parsed as literal","0"
635311200574200828,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311200574200828,"Parsed as literal","acker"
635311200574210828,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311200574210828,"Parsed as literal","m"
635311200574210828,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311200574220829,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311200574220829,"Parsed as literal","acker"
635311200574220829,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311200574220829,"Parsed as literal","m"
635311200574230829,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311200574230829,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311200574230829,"Parsed as literal","n"
635311200574230829,"Parsed as literal","1"
635311200574240830,"Parsed as literal","p"
635311200574240830,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311200574240830,"Parsed as literal","p"
635311200574250830,"Parsed as literal","1"
635311200574250830,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311200574250830,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311200574260831,"Parsed as literal","acker"
635311200574260831,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311200574260831,"Parsed as literal","m"
635311200574260831,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311200574270832,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311200574270832,"Parsed as literal","n"
635311200574270832,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311200574280832,"Parsed as literal","n"
635311200574280832,"Parsed as literal","0"
635311200574280832,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311200574280832,"Parsed as literal","p"
635311200574290833,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311200574290833,"Parsed as literal","p"
635311200574290833,"Parsed as literal","0"
635311200574300833,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311200574300833,"Parsed as literal","acker"
635311200574300833,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311200574310834,"Parsed as literal","m"
635311200574310834,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311200574310834,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311200574310834,"Parsed as literal","acker"
635311200574320834,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311200574320834,"Parsed as literal","m"
635311200574320834,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311200574330835,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311200574330835,"Parsed as literal","n"
635311200574330835,"Parsed as literal","1"
635311200574330835,"Parsed as literal","p"
635311200574340836,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311200574340836,"Parsed as literal","p"
635311200574340836,"Parsed as literal","1"
635311200574350836,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311200574350836,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311200574350836,"Parsed as literal","hyper"
635311200574350836,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311200574360837,"Parsed as literal","0"
635311200574360837,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200574360837,"Parsed as literal","a"
635311200574370837,"Parsed as literal","b"
635311200574370837,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311200574370837,"Parsed as literal"," b"
635311200574380838,"Parsed as literal","1"
635311200574380838,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311200574380838,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311200574380838,"Parsed as literal","hyper"
635311200574390838,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311200574390838,"Parsed as literal","0"
635311200574390838,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200574390838,"Parsed as literal","a"
635311200574400839,"Parsed as literal","b"
635311200574400839,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311200574400839,"Parsed as literal"," b"
635311200574410840,"Parsed as literal","1"
635311200574410840,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311200574410840,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311200574420840,"Parsed as literal","hyper"
635311200574420840,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311200574420840,"Parsed as literal","1"
635311200574430841,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200574430841,"Parsed as literal","a"
635311200574430841,"Parsed as literal","0"
635311200574430841,"Parsed as literal"," a"
635311200574440841,"Invalid operator","@hyper(1,a,0) -> a","0"
635311200574440841,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311200574440841,"Parsed as literal","hyper"
635311200574450842,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311200574450842,"Parsed as literal","1"
635311200574450842,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200574450842,"Parsed as literal","a"
635311200574460842,"Parsed as literal","0"
635311200574460842,"Parsed as literal"," a"
635311200574460842,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311200574470843,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311200574470843,"Parsed as literal","hyper"
635311200574470843,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311200574470843,"Parsed as literal","2"
635311200574480844,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200574480844,"Parsed as literal","a"
635311200574480844,"Parsed as literal","0"
635311200574490844,"Parsed as literal"," 0"
635311200574490844,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311200574490844,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311200574490844,"Parsed as literal","hyper"
635311200574500845,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311200574500845,"Parsed as literal","2"
635311200574500845,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311200574500845,"Parsed as literal","a"
635311200574510845,"Parsed as literal","0"
635311200574510845,"Parsed as literal"," 0"
635311200574510845,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311200574520846,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311200574520846,"Parsed as literal","hyper"
635311200574520846,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311200574530847,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311200574530847,"Parsed as literal","n"
635311200574530847,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311200574530847,"Parsed as literal","n"
635311200574540847,"Parsed as literal","2"
635311200574540847,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311200574540847,"Parsed as literal","a"
635311200574550848,"Parsed as literal","0"
635311200574550848,"Parsed as literal"," 1"
635311200574550848,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311200574550848,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311200574560848,"Parsed as literal","hyper"
635311200574560848,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311200574560848,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311200574570849,"Parsed as literal","n"
635311200574570849,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311200574570849,"Parsed as literal","n"
635311200574570849,"Parsed as literal","2"
635311200574580849,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311200574580849,"Parsed as literal","a"
635311200574580849,"Parsed as literal","0"
635311200574590850,"Parsed as literal"," 1"
635311200574590850,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311200574590850,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311200574600851,"Parsed as literal","hyper"
635311200574600851,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311200574600851,"Parsed as literal","n"
635311200574600851,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200574610851,"Parsed as literal","a"
635311200574610851,"Parsed as literal","b"
635311200574610851,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311200574620852,"Parsed as literal","hyper"
635311200574620852,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311200574620852,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311200574620852,"Parsed as literal","n"
635311200574630852,"Parsed as literal","1"
635311200574630852,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311200574630852,"Parsed as literal","a"
635311200574640853,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311200574640853,"Parsed as literal","hyper"
635311200574640853,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311200574640853,"Parsed as literal","n"
635311200574650853,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311200574650853,"Parsed as literal","a"
635311200574650853,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311200574660854,"Parsed as literal","b"
635311200574660854,"Parsed as literal","1"
635311200574660854,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311200574670855,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311200574670855,"Parsed as literal","hyper"
635311200574670855,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311200574670855,"Parsed as literal","n"
635311200574680855,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311200574680855,"Parsed as literal","a"
635311200574680855,"Parsed as literal","b"
635311200574690856,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311200574690856,"Parsed as literal","hyper"
635311200574690856,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311200574690856,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311200574700856,"Parsed as literal","n"
635311200574700856,"Parsed as literal","1"
635311200574700856,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311200574700856,"Parsed as literal","a"
635311200574710857,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311200574710857,"Parsed as literal","hyper"
635311200574710857,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311200574720857,"Parsed as literal","n"
635311200574720857,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311200574720857,"Parsed as literal","a"
635311200574720857,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311200574730858,"Parsed as literal","b"
635311200574730858,"Parsed as literal","1"
635311200574730858,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311200574740859,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311200574740859,"Parsed as literal","sudan"
635311200574740859,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311200574750859,"Parsed as literal","0"
635311200574750859,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200574750859,"Parsed as literal","x"
635311200574750859,"Parsed as literal","y"
635311200574760860,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311200574760860,"Parsed as literal"," x "
635311200574760860,"Parsed as literal"," y"
635311200574770860,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311200574770860,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311200574770860,"Parsed as literal","sudan"
635311200574780861,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311200574780861,"Parsed as literal","0"
635311200574780861,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200574780861,"Parsed as literal","x"
635311200574790861,"Parsed as literal","y"
635311200574790861,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311200574790861,"Parsed as literal"," x "
635311200574800862,"Parsed as literal"," y"
635311200574800862,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311200574800862,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311200574800862,"Parsed as literal","sudan"
635311200574810863,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311200574810863,"Parsed as literal","n"
635311200574810863,"Parsed as literal","0"
635311200574820863,"Parsed as literal"," x"
635311200574820863,"Invalid operator","@sudan(n,0) -> x","0"
635311200574820863,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311200574820863,"Parsed as literal","sudan"
635311200574830864,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311200574830864,"Parsed as literal","n"
635311200574830864,"Parsed as literal","0"
635311200574840864,"Parsed as literal"," x"
635311200574840864,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311200574840864,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311200574850865,"Parsed as literal","sudan"
635311200574850865,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311200574850865,"Parsed as literal","n"
635311200574850865,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200574860865,"Parsed as literal","x"
635311200574860865,"Parsed as literal","y"
635311200574860865,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200574870866,"Parsed as literal","sudan"
635311200574870866,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200574870866,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200574880867,"Parsed as literal","n"
635311200574880867,"Parsed as literal","1"
635311200574880867,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311200574890867,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311200574890867,"Parsed as literal","sudan"
635311200574890867,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311200574890867,"Parsed as literal","n"
635311200574900868,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311200574900868,"Parsed as literal","x"
635311200574900868,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311200574910868,"Parsed as literal","y"
635311200574910868,"Parsed as literal","1"
635311200574910868,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311200574920869,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311200574920869,"Parsed as literal","sudan"
635311200574920869,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311200574920869,"Parsed as literal","n"
635311200574930869,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311200574930869,"Parsed as literal","x"
635311200574930869,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311200574940870,"Parsed as literal","y"
635311200574940870,"Parsed as literal","1"
635311200574940870,"Parsed as literal","y"
635311200574940870,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311200574950871,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311200574950871,"Parsed as literal","sudan"
635311200574950871,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311200574960871,"Parsed as literal","n"
635311200574960871,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311200574960871,"Parsed as literal","x"
635311200574960871,"Parsed as literal","y"
635311200574970872,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200574970872,"Parsed as literal","sudan"
635311200574970872,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311200574980872,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311200574980872,"Parsed as literal","n"
635311200574980872,"Parsed as literal","1"
635311200574990873,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311200574990873,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311200574990873,"Parsed as literal","sudan"
635311200574990873,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311200575000873,"Parsed as literal","n"
635311200575000873,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311200575000873,"Parsed as literal","x"
635311200575010874,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311200575010874,"Parsed as literal","y"
635311200575010874,"Parsed as literal","1"
635311200575020875,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311200575020875,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311200575020875,"Parsed as literal","sudan"
635311200575020875,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311200575030875,"Parsed as literal","n"
635311200575030875,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311200575030875,"Parsed as literal","x"
635311200575040876,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311200575040876,"Parsed as literal","y"
635311200575040876,"Parsed as literal","1"
635311200575040876,"Parsed as literal","y"
635311200575050876,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311200575050876,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311200575050876,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311200575060877,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311200575060877,"StepEvaluate","->","Changed","Declared @max"
635311200575060877,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200575060877,"StepEvaluate","->","Changed","Declared @max"
635311200575070877,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311200575070877,"StepEvaluate","->","Changed","Declared @random"
635311200575070877,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311200575080878,"StepEvaluate","->","Changed","Declared @random"
635311200575080878,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311200575080878,"StepEvaluate","->","Changed","Declared @gcd"
635311200575080878,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200575090879,"StepEvaluate","->","Changed","Declared @gcd"
635311200575090879,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200575090879,"StepEvaluate","->","Changed","Declared @gcd"
635311200575100879,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311200575100879,"StepEvaluate","->","Changed","Declared @fib"
635311200575100879,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200575100879,"StepEvaluate","->","Changed","Declared @fib"
635311200575110880,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200575110880,"StepEvaluate","->","Changed","Declared @fib"
635311200575110880,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311200575110880,"StepEvaluate","->","Changed","Declared @fib2"
635311200575120880,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311200575120880,"StepEvaluate","->","Changed","Declared @fib2"
635311200575120880,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311200575130881,"StepEvaluate","->","Changed","Declared @fac"
635311200575130881,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311200575130881,"StepEvaluate","->","Changed","Declared @fac"
635311200575130881,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311200575140881,"StepEvaluate","->","Changed","Declared @pow"
635311200575140881,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200575140881,"StepEvaluate","->","Changed","Declared @pow"
635311200575140881,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200575150882,"StepEvaluate","->","Changed","Declared @pow"
635311200575150882,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311200575150882,"StepEvaluate","->","Changed","Declared @upArrow"
635311200575150882,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200575160883,"StepEvaluate","->","Changed","Declared @upArrow"
635311200575160883,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200575160883,"StepEvaluate","->","Changed","Declared @upArrow"
635311200575170883,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311200575170883,"StepEvaluate","->","Changed","Declared @graham"
635311200575170883,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311200575170883,"StepEvaluate","->","Changed","Declared @graham"
635311200575180884,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311200575180884,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311200575180884,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311200575180884,"StepEvaluate","->","Changed","Declared @ack"
635311200575190884,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200575190884,"StepEvaluate","->","Changed","Declared @ack"
635311200575190884,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200575200885,"StepEvaluate","->","Changed","Declared @ack"
635311200575200885,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311200575200885,"StepEvaluate","->","Changed","Declared @acker"
635311200575200885,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200575210885,"StepEvaluate","->","Changed","Declared @acker"
635311200575210885,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200575210885,"StepEvaluate","->","Changed","Declared @acker"
635311200575210885,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200575220886,"StepEvaluate","->","Changed","Declared @acker"
635311200575220886,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200575220886,"StepEvaluate","->","Changed","Declared @acker"
635311200575220886,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311200575230887,"StepEvaluate","->","Changed","Declared @hyper"
635311200575230887,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200575230887,"StepEvaluate","->","Changed","Declared @hyper"
635311200575240887,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200575240887,"StepEvaluate","->","Changed","Declared @hyper"
635311200575240887,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200575240887,"StepEvaluate","->","Changed","Declared @hyper"
635311200575250888,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200575250888,"StepEvaluate","->","Changed","Declared @hyper"
635311200575250888,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311200575260888,"StepEvaluate","->","Changed","Declared @sudan"
635311200575260888,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200575260888,"StepEvaluate","->","Changed","Declared @sudan"
635311200575260888,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200575270889,"StepEvaluate","->","Changed","Declared @sudan"
635311200575270889,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311200575270889,"StepEvaluate","[]","Changed","File imported"
635311200575270889,"StepEvaluate","File imported","Unchanged","File imported"
635311200575280889,"StepEvaluate","@","Changed","@"
635311200575280889,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200575280889,"StepEvaluate","PAT@","Unchanged","PAT@"
635311200575280889,"StepEvaluate",",","Unchanged",","
635311200575290890,"StepEvaluate","@Arg","Changed","@Arg-M"
635311200575290890,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311200575290890,"StepEvaluate","PAT@-M","Changed","[]"
635311200575300891,"StepEvaluate","SEL@import","Changed","[]"
635311200575300891,"StepEvaluate","@","Changed","[]"
635311200575300891,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311200575310891,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311200575310891,"Parsed as literal","quickSort"
635311200575320892,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200575320892,"Parsed as literal",""
635311200575320892,"Parsed as literal",""
635311200575320892,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200575330892,"Parsed as literal",""
635311200575330892,"Parsed as literal",""
635311200575330892,"Invalid operator","@quickSort([]) -> []","0"
635311200575340893,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311200575340893,"Parsed as literal","quickSort"
635311200575340893,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200575340893,"Parsed as literal",""
635311200575350893,"Parsed as literal",""
635311200575350893,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200575350893,"Parsed as literal",""
635311200575360894,"Parsed as literal",""
635311200575360894,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200575360894,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311200575370895,"Parsed as literal","quickSort"
635311200575370895,"Parsed as literal","list"
635311200575370895,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200575380895,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311200575380895,"Parsed as literal","quickSort"
635311200575380895,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311200575390896,"Parsed as literal","filter"
635311200575390896,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311200575390896,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311200575400896,"Parsed as literal",""
635311200575400896,"Parsed as literal","i"
635311200575400896,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311200575400896,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200575410897,"Parsed as literal"," i "
635311200575410897,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200575410897,"Parsed as literal"," "
635311200575420897,"Parsed as literal","list"
635311200575420897,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200575420897,"Parsed as literal",""
635311200575430898,"Parsed as literal","list"
635311200575430898,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311200575430898,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200575430898,"Parsed as literal",""
635311200575440899,"Parsed as literal","i"
635311200575440899,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311200575440899,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200575450899,"Parsed as literal"," i "
635311200575450899,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200575450899,"Parsed as literal"," "
635311200575450899,"Parsed as literal","list"
635311200575460900,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200575460900,"Parsed as literal",""
635311200575460900,"Parsed as literal","list"
635311200575470900,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311200575470900,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311200575470900,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311200575470900,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200575480901,"Parsed as literal",""
635311200575480901,"Parsed as literal","i"
635311200575480901,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200575490901,"Parsed as literal"," i "
635311200575490901,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200575490901,"Parsed as literal"," "
635311200575490901,"Parsed as literal","list"
635311200575500902,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200575500902,"Parsed as literal",""
635311200575500902,"Parsed as literal","list"
635311200575510903,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200575510903,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311200575510903,"Parsed as literal"," "
635311200575520903,"Parsed as literal","list "
635311200575520903,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311200575520903,"Parsed as literal","quickSort"
635311200575530904,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311200575530904,"Parsed as literal","filter"
635311200575530904,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311200575530904,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311200575540904,"Parsed as literal",""
635311200575540904,"Parsed as literal","i"
635311200575540904,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311200575550905,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200575550905,"Parsed as literal"," i "
635311200575550905,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200575550905,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200575560905,"Parsed as literal"," "
635311200575560905,"Parsed as literal","list"
635311200575560905,"Parsed as literal","1"
635311200575570906,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200575570906,"Parsed as literal",""
635311200575570906,"Parsed as literal","list"
635311200575570906,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311200575580907,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200575580907,"Parsed as literal",""
635311200575580907,"Parsed as literal","i"
635311200575590907,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311200575590907,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200575590907,"Parsed as literal"," i "
635311200575590907,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200575600908,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200575600908,"Parsed as literal"," "
635311200575600908,"Parsed as literal","list"
635311200575610908,"Parsed as literal","1"
635311200575610908,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200575610908,"Parsed as literal",""
635311200575610908,"Parsed as literal","list"
635311200575620909,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311200575620909,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311200575620909,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311200575630909,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200575630909,"Parsed as literal",""
635311200575630909,"Parsed as literal","i"
635311200575630909,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200575640910,"Parsed as literal"," i "
635311200575640910,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200575640910,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200575650911,"Parsed as literal"," "
635311200575650911,"Parsed as literal","list"
635311200575650911,"Parsed as literal","1"
635311200575650911,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200575660911,"Parsed as literal",""
635311200575660911,"Parsed as literal","list"
635311200575660911,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311200575670912,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311200575670912,"Parsed as literal","quickSort"
635311200575670912,"Parsed as literal","list"
635311200575680912,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200575680912,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311200575680912,"Parsed as literal","quickSort"
635311200575690913,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311200575690913,"Parsed as literal","filter"
635311200575690913,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311200575700913,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311200575700913,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311200575700913,"Parsed as literal",""
635311200575700913,"Parsed as literal","i"
635311200575710914,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311200575710914,"Parsed as literal"," i "
635311200575710914,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311200575720915,"Parsed as literal"," "
635311200575720915,"Parsed as literal","list"
635311200575720915,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311200575720915,"Parsed as literal",""
635311200575730915,"Parsed as literal","list"
635311200575730915,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311200575730915,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311200575740916,"Parsed as literal"," "
635311200575740916,"Parsed as literal","list "
635311200575740916,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311200575740916,"Parsed as literal","quickSort"
635311200575750916,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311200575750916,"Parsed as literal","filter"
635311200575750916,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311200575760917,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311200575760917,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311200575760917,"Parsed as literal",""
635311200575770917,"Parsed as literal","i"
635311200575770917,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311200575770917,"Parsed as literal"," i "
635311200575780918,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311200575780918,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311200575780918,"Parsed as literal"," "
635311200575780918,"Parsed as literal","list"
635311200575790919,"Parsed as literal","1"
635311200575790919,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311200575790919,"Parsed as literal",""
635311200575790919,"Parsed as literal","list"
635311200575800919,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311200575800919,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311200575800919,"Parsed as literal","mergeSort"
635311200575810920,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200575810920,"Parsed as literal",""
635311200575810920,"Parsed as literal",""
635311200575820920,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200575820920,"Parsed as literal",""
635311200575820920,"Parsed as literal",""
635311200575820920,"Invalid operator","@mergeSort([]) -> []","0"
635311200575830921,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311200575830921,"Parsed as literal","mergeSort"
635311200575830921,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311200575840921,"Parsed as literal",""
635311200575840921,"Parsed as literal",""
635311200575840921,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311200575840921,"Parsed as literal",""
635311200575850922,"Parsed as literal",""
635311200575850922,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311200575850922,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311200575860923,"Parsed as literal","mergeSort"
635311200575860923,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311200575860923,"Parsed as literal","list"
635311200575860923,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311200575870923,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311200575870923,"Parsed as literal",""
635311200575870923,"Parsed as literal","list"
635311200575880924,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311200575880924,"Parsed as literal",""
635311200575880924,"Parsed as literal",""
635311200575880924,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311200575890924,"Parsed as literal"," "
635311200575890924,"Parsed as literal","list"
635311200575890924,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311200575900925,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311200575900925,"Parsed as literal","mergeSort"
635311200575900925,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311200575900925,"Parsed as literal","list"
635311200575910925,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311200575910925,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311200575910925,"Parsed as literal",""
635311200575920926,"Parsed as literal","list"
635311200575920926,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311200575920926,"Parsed as literal",""
635311200575920926,"Parsed as literal",""
635311200575930927,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311200575930927,"Parsed as literal"," "
635311200575930927,"Parsed as literal","list"
635311200575940927,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311200575940927,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311200575940927,"Parsed as literal","mergeSort"
635311200575950928,"Parsed as literal","list"
635311200575950928,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311200575950928,"Parsed as literal","merge"
635311200575960928,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311200575960928,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311200575960928,"Parsed as literal","mergeSort"
635311200575970929,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311200575970929,"Parsed as literal","take"
635311200575970929,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311200575980929,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311200575980929,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311200575980929,"Parsed as literal","count"
635311200575980929,"Parsed as literal","list"
635311200575990930,"Parsed as literal","2"
635311200575990930,"Parsed as literal","list"
635311200575990930,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311200576000931,"Parsed as literal","mergeSort"
635311200576000931,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311200576000931,"Parsed as literal","skip"
635311200576010931,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311200576010931,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311200576010931,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311200576010931,"Parsed as literal","count"
635311200576020932,"Parsed as literal","list"
635311200576020932,"Parsed as literal","2"
635311200576020932,"Parsed as literal","list"
635311200576030932,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311200576030932,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311200576030932,"Parsed as literal","mergeSort"
635311200576040933,"Parsed as literal","list"
635311200576040933,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311200576050933,"Parsed as literal","merge"
635311200576050933,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311200576050933,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311200576060934,"Parsed as literal","mergeSort"
635311200576060934,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311200576060934,"Parsed as literal","take"
635311200576070935,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311200576070935,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311200576070935,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311200576070935,"Parsed as literal","count"
635311200576080935,"Parsed as literal","list"
635311200576080935,"Parsed as literal","2"
635311200576080935,"Parsed as literal","list"
635311200576090936,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311200576090936,"Parsed as literal","mergeSort"
635311200576090936,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311200576100936,"Parsed as literal","skip"
635311200576100936,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311200576100936,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311200576100936,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311200576110937,"Parsed as literal","count"
635311200576110937,"Parsed as literal","list"
635311200576110937,"Parsed as literal","2"
635311200576120937,"Parsed as literal","list"
635311200576120937,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311200576120937,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311200576130938,"Parsed as literal","merge"
635311200576130938,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311200576130938,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200576130938,"Parsed as literal",""
635311200576140939,"Parsed as literal",""
635311200576140939,"Parsed as literal","list"
635311200576140939,"Parsed as literal"," list"
635311200576150939,"Invalid operator","@merge([],list) -> list","0"
635311200576150939,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311200576150939,"Parsed as literal","merge"
635311200576150939,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311200576160940,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311200576160940,"Parsed as literal",""
635311200576160940,"Parsed as literal",""
635311200576170940,"Parsed as literal","list"
635311200576170940,"Parsed as literal"," list"
635311200576170940,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311200576180941,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311200576180941,"Parsed as literal","merge"
635311200576180941,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311200576180941,"Parsed as literal","list"
635311200576190941,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200576190941,"Parsed as literal",""
635311200576190941,"Parsed as literal",""
635311200576200942,"Parsed as literal"," list"
635311200576200942,"Invalid operator","@merge(list,[]) -> list","0"
635311200576200942,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311200576200942,"Parsed as literal","merge"
635311200576210943,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311200576210943,"Parsed as literal","list"
635311200576210943,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311200576220943,"Parsed as literal",""
635311200576220943,"Parsed as literal",""
635311200576220943,"Parsed as literal"," list"
635311200576230944,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311200576230944,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311200576230944,"Parsed as literal","merge"
635311200576230944,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311200576240944,"Parsed as literal","left"
635311200576240944,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311200576240944,"Parsed as literal","right "
635311200576250945,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311200576250945,"Parsed as literal"," "
635311200576250945,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311200576260945,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311200576260945,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311200576260945,"Parsed as literal",""
635311200576260945,"Parsed as literal","left "
635311200576270946,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311200576270946,"Parsed as literal"," "
635311200576270946,"Parsed as literal","right"
635311200576280947,"Parsed as literal",""
635311200576280947,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311200576280947,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311200576280947,"Parsed as literal"," "
635311200576290947,"Parsed as literal","left "
635311200576290947,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311200576290947,"Parsed as literal","merge"
635311200576300948,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311200576300948,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311200576300948,"Parsed as literal",""
635311200576300948,"Parsed as literal","left"
635311200576310948,"Parsed as literal","right"
635311200576310948,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311200576310948,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311200576320949,"Parsed as literal","merge"
635311200576320949,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311200576320949,"Parsed as literal","left"
635311200576330949,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311200576330949,"Parsed as literal","right "
635311200576330949,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311200576330949,"Parsed as literal"," "
635311200576340950,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311200576340950,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311200576340950,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311200576340950,"Parsed as literal",""
635311200576350951,"Parsed as literal","left "
635311200576350951,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311200576350951,"Parsed as literal"," "
635311200576360951,"Parsed as literal","right"
635311200576360951,"Parsed as literal",""
635311200576360951,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311200576370952,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311200576370952,"Parsed as literal"," "
635311200576370952,"Parsed as literal","left "
635311200576370952,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311200576380952,"Parsed as literal","merge"
635311200576380952,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311200576380952,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311200576380952,"Parsed as literal",""
635311200576390953,"Parsed as literal","left"
635311200576390953,"Parsed as literal","right"
635311200576390953,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311200576400953,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311200576400953,"Parsed as literal","merge"
635311200576400953,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311200576410954,"Parsed as literal","left"
635311200576410954,"Parsed as literal","right"
635311200576410954,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311200576420955,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311200576420955,"Parsed as literal"," "
635311200576420955,"Parsed as literal","right "
635311200576430955,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311200576430955,"Parsed as literal","merge"
635311200576430955,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311200576430955,"Parsed as literal","left"
635311200576440956,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311200576440956,"Parsed as literal",""
635311200576440956,"Parsed as literal","right"
635311200576440956,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311200576450956,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311200576450956,"Parsed as literal","merge"
635311200576450956,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311200576460957,"Parsed as literal","left"
635311200576460957,"Parsed as literal","right"
635311200576460957,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311200576460957,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311200576470957,"Parsed as literal"," "
635311200576470957,"Parsed as literal","right "
635311200576470957,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311200576480958,"Parsed as literal","merge"
635311200576480958,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311200576480958,"Parsed as literal","left"
635311200576480958,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311200576490959,"Parsed as literal",""
635311200576490959,"Parsed as literal","right"
635311200576490959,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311200576500959,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311200576500959,"Parsed as literal","bubbleSort"
635311200576500959,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311200576510960,"Parsed as literal","list"
635311200576510960,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311200576510960,"Parsed as literal","isSorted"
635311200576510960,"Parsed as literal","list"
635311200576520960,"Parsed as literal"," list"
635311200576520960,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311200576520960,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311200576530961,"Parsed as literal","bubbleSort"
635311200576530961,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311200576530961,"Parsed as literal","list"
635311200576540961,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311200576540961,"Parsed as literal","isSorted"
635311200576540961,"Parsed as literal","list"
635311200576540961,"Parsed as literal"," list"
635311200576550962,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311200576550962,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311200576550962,"Parsed as literal","bubbleSort"
635311200576560963,"Parsed as literal","list"
635311200576560963,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311200576560963,"Parsed as literal","bubbleSort"
635311200576570963,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311200576570963,"Parsed as literal","bubbleSortPass"
635311200576570963,"Parsed as literal","list"
635311200576570963,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311200576580964,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311200576580964,"Parsed as literal","bubbleSort"
635311200576580964,"Parsed as literal","list"
635311200576590964,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311200576590964,"Parsed as literal","bubbleSort"
635311200576590964,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311200576590964,"Parsed as literal","bubbleSortPass"
635311200576600965,"Parsed as literal","list"
635311200576600965,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311200576600965,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311200576610965,"Parsed as literal","bubbleSortPass"
635311200576610965,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200576610965,"Parsed as literal",""
635311200576620966,"Parsed as literal",""
635311200576620966,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200576620966,"Parsed as literal",""
635311200576620966,"Parsed as literal",""
635311200576630967,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311200576630967,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311200576630967,"Parsed as literal","bubbleSortPass"
635311200576640967,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311200576640967,"Parsed as literal",""
635311200576640967,"Parsed as literal",""
635311200576640967,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200576650968,"Parsed as literal",""
635311200576650968,"Parsed as literal",""
635311200576660968,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311200576660968,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311200576660968,"Parsed as literal","bubbleSortPass"
635311200576660968,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311200576670969,"Parsed as literal","list"
635311200576670969,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311200576670969,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311200576680969,"Parsed as literal",""
635311200576680969,"Parsed as literal","list "
635311200576680969,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311200576680969,"Parsed as literal",""
635311200576690970,"Parsed as literal",""
635311200576690970,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311200576690970,"Parsed as literal"," "
635311200576700971,"Parsed as literal","list"
635311200576700971,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311200576700971,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311200576700971,"Parsed as literal","bubbleSortPass"
635311200576710971,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311200576710971,"Parsed as literal","list"
635311200576710971,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311200576720972,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311200576720972,"Parsed as literal",""
635311200576720972,"Parsed as literal","list "
635311200576730972,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311200576730972,"Parsed as literal",""
635311200576730972,"Parsed as literal",""
635311200576730972,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311200576740973,"Parsed as literal"," "
635311200576740973,"Parsed as literal","list"
635311200576740973,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311200576750973,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311200576750973,"Parsed as literal","bubbleSortPass"
635311200576750973,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311200576760974,"Parsed as literal","list"
635311200576760974,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311200576760974,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311200576760974,"Parsed as literal",""
635311200576770975,"Parsed as literal","list "
635311200576770975,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311200576770975,"Parsed as literal"," "
635311200576780975,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311200576780975,"Parsed as literal",""
635311200576780975,"Parsed as literal","list"
635311200576780975,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311200576790976,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311200576790976,"Parsed as literal"," "
635311200576790976,"Parsed as literal","list "
635311200576800976,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311200576800976,"Parsed as literal","bubbleSortPass"
635311200576800976,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311200576800976,"Parsed as literal",""
635311200576810977,"Parsed as literal","list"
635311200576810977,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311200576810977,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311200576820977,"Parsed as literal","bubbleSortPass"
635311200576820977,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311200576820977,"Parsed as literal","list"
635311200576820977,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311200576830978,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311200576830978,"Parsed as literal",""
635311200576830978,"Parsed as literal","list "
635311200576840979,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311200576840979,"Parsed as literal"," "
635311200576840979,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311200576840979,"Parsed as literal",""
635311200576850979,"Parsed as literal","list"
635311200576850979,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311200576850979,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311200576860980,"Parsed as literal"," "
635311200576860980,"Parsed as literal","list "
635311200576860980,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311200576870980,"Parsed as literal","bubbleSortPass"
635311200576870980,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311200576870980,"Parsed as literal",""
635311200576870980,"Parsed as literal","list"
635311200576880981,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311200576880981,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311200576880981,"Parsed as literal","bubbleSortPass"
635311200576890981,"Parsed as literal","list"
635311200576890981,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311200576890981,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311200576900982,"Parsed as literal"," "
635311200576900982,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311200576900982,"Parsed as literal",""
635311200576900982,"Parsed as literal","list "
635311200576910983,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311200576910983,"Parsed as literal","bubbleSortPass"
635311200576910983,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311200576920983,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311200576920983,"Parsed as literal",""
635311200576920983,"Parsed as literal","list "
635311200576930984,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311200576930984,"Parsed as literal"," "
635311200576930984,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311200576940984,"Parsed as literal",""
635311200576940984,"Parsed as literal","list"
635311200576940984,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311200576950985,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311200576950985,"Parsed as literal","bubbleSortPass"
635311200576950985,"Parsed as literal","list"
635311200576960985,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311200576960985,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311200576960985,"Parsed as literal"," "
635311200576960985,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311200576970986,"Parsed as literal",""
635311200576970986,"Parsed as literal","list "
635311200576970986,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311200576980987,"Parsed as literal","bubbleSortPass"
635311200576980987,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311200576980987,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311200576980987,"Parsed as literal",""
635311200576990987,"Parsed as literal","list "
635311200576990987,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311200576990987,"Parsed as literal"," "
635311200576990987,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311200577000988,"Parsed as literal",""
635311200577000988,"Parsed as literal","list"
635311200577000988,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311200577010988,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311200577010988,"Parsed as literal","isSorted"
635311200577010988,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311200577020989,"Parsed as literal",""
635311200577020989,"Parsed as literal",""
635311200577020989,"Parsed as literal"," true"
635311200577020989,"Invalid operator","@isSorted([]) -> true","0"
635311200577030990,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311200577030990,"Parsed as literal","isSorted"
635311200577030990,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311200577040990,"Parsed as literal",""
635311200577040990,"Parsed as literal",""
635311200577040990,"Parsed as literal"," true"
635311200577040990,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311200577050991,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311200577050991,"Parsed as literal","isSorted"
635311200577050991,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311200577060991,"Parsed as literal","list"
635311200577060991,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311200577060991,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311200577070992,"Parsed as literal",""
635311200577070992,"Parsed as literal","list "
635311200577070992,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200577070992,"Parsed as literal",""
635311200577080992,"Parsed as literal",""
635311200577080992,"Parsed as literal"," true"
635311200577080992,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311200577090993,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311200577090993,"Parsed as literal","isSorted"
635311200577090993,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311200577090993,"Parsed as literal","list"
635311200577100994,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311200577100994,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311200577100994,"Parsed as literal",""
635311200577110994,"Parsed as literal","list "
635311200577110994,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311200577110994,"Parsed as literal",""
635311200577110994,"Parsed as literal",""
635311200577120995,"Parsed as literal"," true"
635311200577120995,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311200577120995,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311200577130995,"Parsed as literal","isSorted"
635311200577130995,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311200577130995,"Parsed as literal","list"
635311200577140996,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311200577140996,"Parsed as literal",""
635311200577140996,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311200577140996,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311200577150996,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311200577150996,"Parsed as literal",""
635311200577150996,"Parsed as literal","list "
635311200577160997,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311200577160997,"Parsed as literal"," "
635311200577160997,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311200577160997,"Parsed as literal",""
635311200577170998,"Parsed as literal","list"
635311200577170998,"Parsed as literal",""
635311200577170998,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311200577180998,"Parsed as literal","isSorted"
635311200577180998,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311200577180998,"Parsed as literal",""
635311200577190999,"Parsed as literal","list"
635311200577190999,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311200577190999,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311200577190999,"Parsed as literal","isSorted"
635311200577200999,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311200577200999,"Parsed as literal","list"
635311200577200999,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311200577211000,"Parsed as literal",""
635311200577211000,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311200577211000,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311200577211000,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311200577221000,"Parsed as literal",""
635311200577221000,"Parsed as literal","list "
635311200577221000,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311200577231001,"Parsed as literal"," "
635311200577231001,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311200577231001,"Parsed as literal",""
635311200577231001,"Parsed as literal","list"
635311200577241002,"Parsed as literal",""
635311200577241002,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311200577241002,"Parsed as literal","isSorted"
635311200577251002,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311200577251002,"Parsed as literal",""
635311200577251002,"Parsed as literal","list"
635311200577261003,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311200577261003,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311200577261003,"Parsed as literal","isSorted"
635311200577261003,"Parsed as literal","list"
635311200577271003,"Parsed as literal"," false"
635311200577271003,"Invalid operator","@isSorted(list) -> false","0"
635311200577271003,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311200577281004,"Parsed as literal","isSorted"
635311200577281004,"Parsed as literal","list"
635311200577281004,"Parsed as literal"," false"
635311200577281004,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311200577291004,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311200577291004,"Parsed as literal","insertionSort"
635311200577291004,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200577301005,"Parsed as literal",""
635311200577301005,"Parsed as literal",""
635311200577301005,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311200577301005,"Parsed as literal",""
635311200577311006,"Parsed as literal",""
635311200577311006,"Invalid operator","@insertionSort([]) -> []","0"
635311200577311006,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311200577321006,"Parsed as literal","insertionSort"
635311200577321006,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311200577321006,"Parsed as literal",""
635311200577321006,"Parsed as literal",""
635311200577331007,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311200577331007,"Parsed as literal",""
635311200577331007,"Parsed as literal",""
635311200577341007,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311200577341007,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311200577341007,"Parsed as literal","insertionSort"
635311200577341007,"Parsed as literal","list"
635311200577351008,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311200577351008,"Parsed as literal","insert"
635311200577351008,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311200577361008,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311200577361008,"Parsed as literal",""
635311200577361008,"Parsed as literal","list"
635311200577371009,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311200577371009,"Parsed as literal","insertionSort"
635311200577371009,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311200577371009,"Parsed as literal",""
635311200577381010,"Parsed as literal","list"
635311200577381010,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311200577381010,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311200577381010,"Parsed as literal","insertionSort"
635311200577391010,"Parsed as literal","list"
635311200577391010,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311200577391010,"Parsed as literal","insert"
635311200577401011,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311200577401011,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311200577401011,"Parsed as literal",""
635311200577401011,"Parsed as literal","list"
635311200577411011,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311200577411011,"Parsed as literal","insertionSort"
635311200577411011,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311200577421012,"Parsed as literal",""
635311200577421012,"Parsed as literal","list"
635311200577421012,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311200577431012,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311200577431012,"Parsed as literal","insert"
635311200577431012,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311200577431012,"Parsed as literal","item"
635311200577441013,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200577441013,"Parsed as literal",""
635311200577441013,"Parsed as literal",""
635311200577451014,"Parsed as literal"," item"
635311200577451014,"Invalid operator","@insert(item,[]) -> item","0"
635311200577451014,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311200577451014,"Parsed as literal","insert"
635311200577461014,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311200577461014,"Parsed as literal","item"
635311200577461014,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311200577461014,"Parsed as literal",""
635311200577471015,"Parsed as literal",""
635311200577471015,"Parsed as literal"," item"
635311200577471015,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311200577481015,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311200577481015,"Parsed as literal","insert"
635311200577481015,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311200577491016,"Parsed as literal","item"
635311200577491016,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311200577491016,"Parsed as literal","list "
635311200577491016,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311200577501016,"Parsed as literal"," item "
635311200577501016,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311200577501016,"Parsed as literal"," "
635311200577511017,"Parsed as literal","list"
635311200577511017,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311200577511017,"Parsed as literal"," item "
635311200577511017,"Parsed as literal"," list"
635311200577521018,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311200577521018,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311200577521018,"Parsed as literal","insert"
635311200577531018,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311200577531018,"Parsed as literal","item"
635311200577531018,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311200577531018,"Parsed as literal","list "
635311200577541019,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311200577541019,"Parsed as literal"," item "
635311200577541019,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311200577551019,"Parsed as literal"," "
635311200577551019,"Parsed as literal","list"
635311200577551019,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311200577551019,"Parsed as literal"," item "
635311200577561020,"Parsed as literal"," list"
635311200577561020,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311200577561020,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311200577571020,"Parsed as literal","insert"
635311200577571020,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311200577571020,"Parsed as literal","item"
635311200577571020,"Parsed as literal","list"
635311200577581021,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311200577581021,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311200577581021,"Parsed as literal"," "
635311200577591022,"Parsed as literal","list "
635311200577591022,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311200577591022,"Parsed as literal","insert"
635311200577601022,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311200577601022,"Parsed as literal","item"
635311200577601022,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311200577601022,"Parsed as literal",""
635311200577611023,"Parsed as literal","list"
635311200577611023,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311200577611023,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311200577621023,"Parsed as literal","insert"
635311200577621023,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311200577621023,"Parsed as literal","item"
635311200577621023,"Parsed as literal","list"
635311200577631024,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311200577631024,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311200577631024,"Parsed as literal"," "
635311200577641024,"Parsed as literal","list "
635311200577641024,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311200577641024,"Parsed as literal","insert"
635311200577641024,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311200577651025,"Parsed as literal","item"
635311200577651025,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311200577651025,"Parsed as literal",""
635311200577661026,"Parsed as literal","list"
635311200577661026,"StepEvaluate","->","Changed","Declared @quickSort"
635311200577661026,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311200577661026,"StepEvaluate","->","Changed","Declared @quickSort"
635311200577671026,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311200577671026,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200577671026,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200577671026,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200577681027,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200577681027,"StepEvaluate","->","Changed","Declared @mergeSort"
635311200577681027,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311200577691027,"StepEvaluate","->","Changed","Declared @merge"
635311200577691027,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200577691027,"StepEvaluate","->","Changed","Declared @merge"
635311200577691027,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200577701028,"StepEvaluate","->","Changed","Declared @merge"
635311200577701028,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200577701028,"StepEvaluate","->","Changed","Declared @merge"
635311200577701028,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311200577711028,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311200577711028,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311200577711028,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311200577711028,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311200577721029,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200577721029,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200577721029,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200577731030,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200577731030,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200577731030,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200577731030,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311200577741030,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311200577741030,"StepEvaluate","->","Changed","Declared @isSorted"
635311200577741030,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200577741030,"StepEvaluate","->","Changed","Declared @isSorted"
635311200577751031,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200577751031,"StepEvaluate","->","Changed","Declared @isSorted"
635311200577751031,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200577761031,"StepEvaluate","->","Changed","Declared @isSorted"
635311200577761031,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311200577761031,"StepEvaluate","->","Changed","Declared @insertionSort"
635311200577761031,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311200577771032,"StepEvaluate","->","Changed","Declared @insertionSort"
635311200577771032,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311200577771032,"StepEvaluate","->","Changed","Declared @insert"
635311200577781032,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200577781032,"StepEvaluate","->","Changed","Declared @insert"
635311200577781032,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200577781032,"StepEvaluate","->","Changed","Declared @insert"
635311200577791033,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311200577791033,"StepEvaluate","[]","Changed","File imported"
635311200577791033,"StepEvaluate","File imported","Unchanged","File imported"
635311200577791033,"StepEvaluate","[]","Changed","File imported"
635311200577801034,"StepEvaluate","File imported","Unchanged","File imported"
635311200577801034,"ParseInternal","[1+2],[3+4]","0","CommaOperator","0","6","[1+2]","[3+4]"
635311200577801034,"ParseInternal","[1+2]","0","OpenBracketOperator","0","0","1+2",""
635311200577811034,"ParseInternal","1+2","0","PlusOperator","0","2","1","2"
635311200577811034,"Parsed as literal","1"
635311200577811034,"Parsed as literal","2"
635311200577811034,"Parsed as literal",""
635311200577821035,"ParseInternal","[3+4]","6","OpenBracketOperator","6","6","3+4",""
635311200577821035,"ParseInternal","3+4","6","PlusOperator","6","8","3","4"
635311200577821035,"Parsed as literal","3"
635311200577831035,"Parsed as literal","4"
635311200577831035,"Parsed as literal",""
635311200642764749,"StepEvaluate",",","Unchanged",","
635311200642784750,"StepEvaluate","[]","Unchanged","[]"
635311200642794751,"StepEvaluate","+","Changed","3"
635311200642794751,"StepEvaluate",",","Unchanged",","
635311200642804752,"StepEvaluate","[]","Unchanged","[]"
635311200642814752,"StepEvaluate","+","Changed","7"
635311200662365870,"StepEvaluate",",","Unchanged",","
635311200662385872,"StepEvaluate","[]","Unchanged","[]"
635311200662395872,"StepEvaluate","3","Unchanged","3"
635311200662395872,"StepEvaluate",",","Unchanged",","
635311200662405873,"StepEvaluate","[]","Unchanged","[]"
635311200662415873,"StepEvaluate","+","Changed","7"
635311200680506908,"StepEvaluate",",","Unchanged",","
635311200680526909,"StepEvaluate","[]","Unchanged","[]"
635311200680536910,"StepEvaluate","3","Unchanged","3"
635311200680546910,"StepEvaluate",",","Unchanged",","
635311200680546910,"StepEvaluate","[]","Unchanged","[]"
635311200680556911,"StepEvaluate","7","Unchanged","7"
635311200687067283,"StepEvaluate",",","Unchanged",","
635311200687087284,"StepEvaluate","[]","Unchanged","[]"
635311200687097285,"StepEvaluate","3","Unchanged","3"
635311200687097285,"StepEvaluate",",","Unchanged",","
635311200687107286,"StepEvaluate","[]","Unchanged","[]"
635311200687117286,"StepEvaluate","7","Unchanged","7"
635311203100615330,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311203100635331,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311203100645332,"Parsed as literal","import"
635311203100655333,"Parsed as literal","file"
635311203100665333,"Parsed as literal"," 0"
635311203100675334,"Invalid operator","@import(file) -> 0","0"
635311203100675334,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311203100685334,"Parsed as literal","import"
635311203100695335,"Parsed as literal","file"
635311203100705335,"Parsed as literal"," 0"
635311203100715336,"StepEvaluate","->","Changed","Declared @import"
635311203100715336,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311203100715336,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311203100725337,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311203100725337,"Parsed as literal","operator"
635311203100735337,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311203100735337,"Parsed as literal","op"
635311203100745338,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311203100745338,"Parsed as literal","fn"
635311203100745338,"Parsed as literal",""
635311203100755338,"Invalid operator","@fn","12"
635311203100755338,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311203100765339,"Parsed as literal","fn"
635311203100765339,"Parsed as literal",""
635311203100775339,"Invalid operator","@fn","12"
635311203100775339,"Parsed as literal","@fn"
635311203100775339,"Parsed as literal"," 0"
635311203100785340,"Invalid operator","@operator(op,@fn) -> 0","0"
635311203100785340,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311203100795341,"Parsed as literal","operator"
635311203100795341,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311203100805341,"Parsed as literal","op"
635311203100805341,"Parsed as literal","@fn"
635311203100805341,"Parsed as literal"," 0"
635311203100815342,"StepEvaluate","->","Changed","Declared @operator"
635311203100815342,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311203100825342,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311203100825342,"Parsed as literal","import"
635311203100835343,"Parsed as literal","main.toast"
635311203100835343,"StepEvaluate","@","Changed","@"
635311203100835343,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203100845343,"StepEvaluate","PAT@","Unchanged","PAT@"
635311203100845343,"StepEvaluate",",","Unchanged",","
635311203100855344,"StepEvaluate","@Arg","Changed","@Arg-M"
635311203100855344,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203100855344,"StepEvaluate","PAT@-M","Changed","[]"
635311203100865345,"StepEvaluate","SEL@import","Changed","[]"
635311203100865345,"StepEvaluate","@","Changed","[]"
635311203100875345,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311203100875345,"Parsed as literal","import"
635311203100885346,"Parsed as literal","'core.toast'"
635311203100885346,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311203100895346,"Parsed as literal","import"
635311203100895346,"Parsed as literal","'list.toast'"
635311203100895346,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311203100905347,"Parsed as literal","import"
635311203100905347,"Parsed as literal","'math.toast'"
635311203100915347,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311203100915347,"Parsed as literal","import"
635311203100915347,"Parsed as literal","'sorting.toast'"
635311203100925348,"StepEvaluate","@","Changed","@"
635311203100925348,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203100935349,"StepEvaluate","PAT@","Unchanged","PAT@"
635311203100935349,"StepEvaluate",",","Unchanged",","
635311203100945349,"StepEvaluate","@Arg","Changed","@Arg-M"
635311203100945349,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203100945349,"StepEvaluate","PAT@-M","Changed","[]"
635311203100955350,"StepEvaluate","SEL@import","Changed","[]"
635311203100955350,"StepEvaluate","@","Changed","[]"
635311203100965350,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311203100965350,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311203100975351,"Parsed as literal","map"
635311203100975351,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311203100985351,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311203100985351,"Parsed as literal","func"
635311203100985351,"Parsed as literal",""
635311203100995352,"Invalid operator","@func","4"
635311203100995352,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311203101005353,"Parsed as literal","func"
635311203101005353,"Parsed as literal",""
635311203101005353,"Invalid operator","@func","4"
635311203101015353,"Parsed as literal","@func"
635311203101015353,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311203101015353,"Parsed as literal",""
635311203101025354,"Parsed as literal",""
635311203101025354,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311203101025354,"Parsed as literal",""
635311203101035354,"Parsed as literal",""
635311203101035354,"Invalid operator","@map(@func, []) -> []","0"
635311203101035354,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311203101035354,"Parsed as literal","map"
635311203101045355,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311203101045355,"Parsed as literal","@func"
635311203101045355,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311203101055355,"Parsed as literal",""
635311203101055355,"Parsed as literal",""
635311203101055355,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311203101055355,"Parsed as literal",""
635311203101065356,"Parsed as literal",""
635311203101065356,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311203101065356,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311203101075357,"Parsed as literal","map"
635311203101075357,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311203101075357,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311203101085357,"Parsed as literal","func"
635311203101085357,"Parsed as literal",""
635311203101085357,"Invalid operator","@func","4"
635311203101085357,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311203101095358,"Parsed as literal","func"
635311203101095358,"Parsed as literal",""
635311203101095358,"Invalid operator","@func","4"
635311203101105358,"Parsed as literal","@func"
635311203101105358,"Parsed as literal"," list"
635311203101105358,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311203101115359,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311203101115359,"Parsed as literal","func"
635311203101115359,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311203101125359,"Parsed as literal",""
635311203101125359,"Parsed as literal","list"
635311203101125359,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311203101125359,"Parsed as literal","map"
635311203101135360,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311203101155361,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311203101155361,"Parsed as literal","func"
635311203101165362,"Parsed as literal",""
635311203101165362,"Invalid operator","@func","41"
635311203101165362,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311203101165362,"Parsed as literal","func"
635311203101175362,"Parsed as literal",""
635311203101175362,"Invalid operator","@func","41"
635311203101175362,"Parsed as literal","@func"
635311203101185363,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311203101185363,"Parsed as literal",""
635311203101185363,"Parsed as literal","list"
635311203101195363,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311203101195363,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311203101195363,"Parsed as literal","map"
635311203101195363,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311203101205364,"Parsed as literal","@func"
635311203101205364,"Parsed as literal"," list"
635311203101205364,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311203101215365,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311203101215365,"Parsed as literal","func"
635311203101215365,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311203101215365,"Parsed as literal",""
635311203101225365,"Parsed as literal","list"
635311203101225365,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311203101225365,"Parsed as literal","map"
635311203101235366,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311203101235366,"Parsed as literal","@func"
635311203101235366,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311203101235366,"Parsed as literal",""
635311203101245366,"Parsed as literal","list"
635311203101245366,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311203101245366,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311203101245366,"Parsed as literal","filter"
635311203101255367,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311203101255367,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311203101255367,"Parsed as literal","pred"
635311203101255367,"Parsed as literal",""
635311203101265367,"Invalid operator","@pred","7"
635311203101265367,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311203101265367,"Parsed as literal","pred"
635311203101265367,"Parsed as literal",""
635311203101275368,"Invalid operator","@pred","7"
635311203101275368,"Parsed as literal","@pred"
635311203101275368,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311203101275368,"Parsed as literal",""
635311203101285369,"Parsed as literal",""
635311203101285369,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311203101285369,"Parsed as literal",""
635311203101295369,"Parsed as literal",""
635311203101295369,"Invalid operator","@filter(@pred,[]) -> []","0"
635311203101295369,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311203101295369,"Parsed as literal","filter"
635311203101305370,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311203101305370,"Parsed as literal","@pred"
635311203101305370,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311203101305370,"Parsed as literal",""
635311203101315370,"Parsed as literal",""
635311203101315370,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311203101315370,"Parsed as literal",""
635311203101315370,"Parsed as literal",""
635311203101325371,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311203101325371,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311203101325371,"Parsed as literal","filter"
635311203101335371,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311203101335371,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311203101335371,"Parsed as literal","pred"
635311203101335371,"Parsed as literal",""
635311203101345372,"Invalid operator","@pred","7"
635311203101345372,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311203101345372,"Parsed as literal","pred"
635311203101345372,"Parsed as literal",""
635311203101355373,"Invalid operator","@pred","7"
635311203101355373,"Parsed as literal","@pred"
635311203101355373,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311203101355373,"Parsed as literal"," list "
635311203101365373,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311203101365373,"Parsed as literal","pred"
635311203101365373,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311203101375374,"Parsed as literal",""
635311203101375374,"Parsed as literal","list"
635311203101375374,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311203101375374,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311203101385374,"Parsed as literal"," "
635311203101385374,"Parsed as literal","list "
635311203101385374,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311203101385374,"Parsed as literal","filter"
635311203101395375,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311203101395375,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311203101395375,"Parsed as literal","pred"
635311203101395375,"Parsed as literal",""
635311203101405375,"Invalid operator","@pred","56"
635311203101405375,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311203101405375,"Parsed as literal","pred"
635311203101405375,"Parsed as literal",""
635311203101425377,"Invalid operator","@pred","56"
635311203101425377,"Parsed as literal","@pred"
635311203101435377,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311203101435377,"Parsed as literal"," "
635311203101435377,"Parsed as literal","list"
635311203101435377,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311203101445378,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311203101445378,"Parsed as literal","filter"
635311203101445378,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311203101455378,"Parsed as literal","@pred"
635311203101455378,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311203101455378,"Parsed as literal"," list "
635311203101455378,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311203101465379,"Parsed as literal","pred"
635311203101465379,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311203101465379,"Parsed as literal",""
635311203101465379,"Parsed as literal","list"
635311203101475379,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311203101475379,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311203101475379,"Parsed as literal"," "
635311203101485380,"Parsed as literal","list "
635311203101485380,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311203101485380,"Parsed as literal","filter"
635311203101485380,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311203101495381,"Parsed as literal","@pred"
635311203101495381,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311203101495381,"Parsed as literal"," "
635311203101495381,"Parsed as literal","list"
635311203101505381,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311203101505381,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311203101505381,"Parsed as literal","filter"
635311203101515382,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311203101515382,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311203101515382,"Parsed as literal","pred"
635311203101515382,"Parsed as literal",""
635311203101525382,"Invalid operator","@pred","7"
635311203101525382,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311203101525382,"Parsed as literal","pred"
635311203101525382,"Parsed as literal",""
635311203101535383,"Invalid operator","@pred","7"
635311203101535383,"Parsed as literal","@pred"
635311203101535383,"Parsed as literal","list"
635311203101535383,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311203101545383,"Parsed as literal","filter"
635311203101545383,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311203101545383,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311203101555384,"Parsed as literal","pred"
635311203101555384,"Parsed as literal",""
635311203101555384,"Invalid operator","@pred","30"
635311203101555384,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311203101565385,"Parsed as literal","pred"
635311203101565385,"Parsed as literal",""
635311203101565385,"Invalid operator","@pred","30"
635311203101565385,"Parsed as literal","@pred"
635311203101575385,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311203101575385,"Parsed as literal",""
635311203101575385,"Parsed as literal","list"
635311203101575385,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311203101585386,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311203101585386,"Parsed as literal","filter"
635311203101585386,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311203101585386,"Parsed as literal","@pred"
635311203101595386,"Parsed as literal","list"
635311203101595386,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311203101595386,"Parsed as literal","filter"
635311203101605387,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311203101605387,"Parsed as literal","@pred"
635311203101605387,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311203101605387,"Parsed as literal",""
635311203101615387,"Parsed as literal","list"
635311203101615387,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311203101615387,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311203101625388,"Parsed as literal","call"
635311203101625388,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311203101625388,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311203101625388,"Parsed as literal","fun"
635311203101635389,"Parsed as literal",""
635311203101635389,"Invalid operator","@fun","5"
635311203101635389,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311203101635389,"Parsed as literal","fun"
635311203101645389,"Parsed as literal",""
635311203101645389,"Invalid operator","@fun","5"
635311203101645389,"Parsed as literal","@fun"
635311203101645389,"Parsed as literal","arg"
635311203101655390,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311203101655390,"Parsed as literal","fun"
635311203101655390,"Parsed as literal","arg"
635311203101655390,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311203101665390,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311203101665390,"Parsed as literal","call"
635311203101665390,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311203101675391,"Parsed as literal","@fun"
635311203101675391,"Parsed as literal","arg"
635311203101675391,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311203101675391,"Parsed as literal","fun"
635311203101685391,"Parsed as literal","arg"
635311203101685391,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311203101685391,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311203101685391,"Parsed as literal","curry"
635311203101695392,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311203101695392,"Parsed as literal","seed"
635311203101695392,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311203101695392,"Parsed as literal",""
635311203101705393,"Parsed as literal",""
635311203101705393,"Parsed as literal"," seed"
635311203101705393,"Invalid operator","@curry(seed,[]) -> seed","0"
635311203101715393,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311203101715393,"Parsed as literal","curry"
635311203101715393,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311203101715393,"Parsed as literal","seed"
635311203101725394,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311203101725394,"Parsed as literal",""
635311203101725394,"Parsed as literal",""
635311203101725394,"Parsed as literal"," seed"
635311203101735394,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311203101735394,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311203101735394,"Parsed as literal","curry"
635311203101745395,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311203101745395,"Parsed as literal","seed"
635311203101745395,"Parsed as literal"," funcList"
635311203101745395,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311203101755395,"Parsed as literal","curry"
635311203101755395,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311203101755395,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311203101765396,"Parsed as literal","call"
635311203101765396,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311203101765396,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311203101765396,"Parsed as literal",""
635311203101775397,"Parsed as literal","funcList"
635311203101775397,"Parsed as literal","seed"
635311203101775397,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311203101775397,"Parsed as literal",""
635311203101785397,"Parsed as literal","funcList"
635311203101785397,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311203101785397,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311203101785397,"Parsed as literal","curry"
635311203101795398,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311203101795398,"Parsed as literal","seed"
635311203101795398,"Parsed as literal"," funcList"
635311203101795398,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311203101805398,"Parsed as literal","curry"
635311203101805398,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311203101805398,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311203101815399,"Parsed as literal","call"
635311203101815399,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311203101815399,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311203101815399,"Parsed as literal",""
635311203101825399,"Parsed as literal","funcList"
635311203101825399,"Parsed as literal","seed"
635311203101825399,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311203101825399,"Parsed as literal",""
635311203101835400,"Parsed as literal","funcList"
635311203101835400,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311203101835400,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311203101845401,"Parsed as literal","fold"
635311203101845401,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311203101845401,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311203101845401,"Parsed as literal","func"
635311203101855401,"Parsed as literal",""
635311203101855401,"Invalid operator","@func","5"
635311203101855401,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311203101855401,"Parsed as literal","func"
635311203101865402,"Parsed as literal",""
635311203101865402,"Invalid operator","@func","5"
635311203101865402,"Parsed as literal","@func"
635311203101865402,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311203101875402,"Parsed as literal",""
635311203101875402,"Parsed as literal",""
635311203101875402,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311203101885403,"Parsed as literal",""
635311203101885403,"Parsed as literal",""
635311203101885403,"Invalid operator","@fold(@func,[]) -> []","0"
635311203101885403,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311203101895403,"Parsed as literal","fold"
635311203101895403,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311203101895403,"Parsed as literal","@func"
635311203101895403,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311203101905404,"Parsed as literal",""
635311203101905404,"Parsed as literal",""
635311203101905404,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311203101905404,"Parsed as literal",""
635311203101915405,"Parsed as literal",""
635311203101915405,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311203101915405,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311203101915405,"Parsed as literal","fold"
635311203101925405,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311203101925405,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311203101925405,"Parsed as literal","func"
635311203101935406,"Parsed as literal",""
635311203101935406,"Invalid operator","@func","5"
635311203101935406,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311203101935406,"Parsed as literal","func"
635311203101945406,"Parsed as literal",""
635311203101945406,"Invalid operator","@func","5"
635311203101945406,"Parsed as literal","@func"
635311203101945406,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311203101955407,"Parsed as literal","list"
635311203101955407,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311203101955407,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311203101955407,"Parsed as literal",""
635311203101965407,"Parsed as literal","list"
635311203101965407,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311203101965407,"Parsed as literal",""
635311203101965407,"Parsed as literal",""
635311203101975408,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311203101975408,"Parsed as literal"," "
635311203101975408,"Parsed as literal","list"
635311203101985409,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311203101985409,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311203101985409,"Parsed as literal","fold"
635311203101985409,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311203101995409,"Parsed as literal","@func"
635311203101995409,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311203101995409,"Parsed as literal","list"
635311203101995409,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311203102005410,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311203102005410,"Parsed as literal",""
635311203102005410,"Parsed as literal","list"
635311203102005410,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311203102015410,"Parsed as literal",""
635311203102015410,"Parsed as literal",""
635311203102015410,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311203102015410,"Parsed as literal"," "
635311203102025411,"Parsed as literal","list"
635311203102025411,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311203102025411,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311203102035411,"Parsed as literal","fold"
635311203102035411,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311203102035411,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311203102045412,"Parsed as literal","func"
635311203102045412,"Parsed as literal",""
635311203102045412,"Invalid operator","@func","5"
635311203102045412,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311203102055413,"Parsed as literal","func"
635311203102055413,"Parsed as literal",""
635311203102055413,"Invalid operator","@func","5"
635311203102055413,"Parsed as literal","@func"
635311203102065413,"Parsed as literal","list"
635311203102075414,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311203102075414,"Parsed as literal","fold"
635311203102085414,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311203102085414,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311203102085414,"Parsed as literal","func"
635311203102085414,"Parsed as literal",""
635311203102095415,"Invalid operator","@func","26"
635311203102095415,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311203102095415,"Parsed as literal","func"
635311203102095415,"Parsed as literal",""
635311203102105415,"Invalid operator","@func","26"
635311203102105415,"Parsed as literal","@func"
635311203102105415,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311203102115416,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311203102115416,"Parsed as literal","func"
635311203102115416,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311203102115416,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311203102125417,"Parsed as literal",""
635311203102125417,"Parsed as literal","list"
635311203102125417,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311203102125417,"Parsed as literal",""
635311203102135417,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311203102135417,"Parsed as literal",""
635311203102135417,"Parsed as literal","list"
635311203102135417,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311203102145418,"Parsed as literal"," "
635311203102145418,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311203102145418,"Parsed as literal",""
635311203102145418,"Parsed as literal","list"
635311203102155418,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311203102155418,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311203102155418,"Parsed as literal","fold"
635311203102155418,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311203102165419,"Parsed as literal","@func"
635311203102165419,"Parsed as literal","list"
635311203102165419,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311203102175420,"Parsed as literal","fold"
635311203102175420,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311203102175420,"Parsed as literal","@func"
635311203102175420,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311203102185420,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311203102185420,"Parsed as literal","func"
635311203102185420,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311203102195421,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311203102195421,"Parsed as literal",""
635311203102195421,"Parsed as literal","list"
635311203102195421,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311203102205421,"Parsed as literal",""
635311203102205421,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311203102205421,"Parsed as literal",""
635311203102205421,"Parsed as literal","list"
635311203102215422,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311203102215422,"Parsed as literal"," "
635311203102215422,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311203102215422,"Parsed as literal",""
635311203102225422,"Parsed as literal","list"
635311203102225422,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311203102225422,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311203102235423,"Parsed as literal","foldr"
635311203102235423,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311203102235423,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311203102235423,"Parsed as literal","func"
635311203102245424,"Parsed as literal",""
635311203102245424,"Invalid operator","@func","6"
635311203102245424,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311203102245424,"Parsed as literal","func"
635311203102255424,"Parsed as literal",""
635311203102255424,"Invalid operator","@func","6"
635311203102255424,"Parsed as literal","@func"
635311203102255424,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311203102265425,"Parsed as literal",""
635311203102265425,"Parsed as literal",""
635311203102265425,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311203102275425,"Parsed as literal",""
635311203102275425,"Parsed as literal",""
635311203102275425,"Invalid operator","@foldr(@func,[]) -> []","0"
635311203102275425,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311203102285426,"Parsed as literal","foldr"
635311203102285426,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311203102285426,"Parsed as literal","@func"
635311203102285426,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311203102295426,"Parsed as literal",""
635311203102295426,"Parsed as literal",""
635311203102295426,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311203102295426,"Parsed as literal",""
635311203102305427,"Parsed as literal",""
635311203102305427,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311203102305427,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311203102305427,"Parsed as literal","foldr"
635311203102315428,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311203102315428,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311203102315428,"Parsed as literal","func"
635311203102325428,"Parsed as literal",""
635311203102325428,"Invalid operator","@func","6"
635311203102325428,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311203102325428,"Parsed as literal","func"
635311203102335429,"Parsed as literal",""
635311203102335429,"Invalid operator","@func","6"
635311203102335429,"Parsed as literal","@func"
635311203102335429,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311203102345429,"Parsed as literal","list"
635311203102345429,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311203102345429,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311203102345429,"Parsed as literal",""
635311203102355430,"Parsed as literal","list"
635311203102355430,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311203102355430,"Parsed as literal",""
635311203102355430,"Parsed as literal",""
635311203102365430,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311203102365430,"Parsed as literal"," "
635311203102365430,"Parsed as literal","list"
635311203102375431,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311203102375431,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311203102375431,"Parsed as literal","foldr"
635311203102375431,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311203102385432,"Parsed as literal","@func"
635311203102385432,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311203102385432,"Parsed as literal","list"
635311203102385432,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311203102395432,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311203102395432,"Parsed as literal",""
635311203102395432,"Parsed as literal","list"
635311203102395432,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311203102405433,"Parsed as literal",""
635311203102405433,"Parsed as literal",""
635311203102405433,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311203102405433,"Parsed as literal"," "
635311203102415433,"Parsed as literal","list"
635311203102415433,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311203102415433,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311203102425434,"Parsed as literal","foldr"
635311203102425434,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311203102425434,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311203102435434,"Parsed as literal","func"
635311203102435434,"Parsed as literal",""
635311203102435434,"Invalid operator","@func","6"
635311203102435434,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311203102445435,"Parsed as literal","func"
635311203102445435,"Parsed as literal",""
635311203102445435,"Invalid operator","@func","6"
635311203102445435,"Parsed as literal","@func"
635311203102455436,"Parsed as literal","list"
635311203102455436,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311203102455436,"Parsed as literal","func"
635311203102455436,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311203102465436,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311203102465436,"Parsed as literal","foldr"
635311203102465436,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311203102475437,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311203102475437,"Parsed as literal","func"
635311203102475437,"Parsed as literal",""
635311203102475437,"Invalid operator","@func","33"
635311203102485437,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311203102485437,"Parsed as literal","func"
635311203102485437,"Parsed as literal",""
635311203102485437,"Invalid operator","@func","33"
635311203102495438,"Parsed as literal","@func"
635311203102495438,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311203102495438,"Parsed as literal","superHead"
635311203102505438,"Parsed as literal","list"
635311203102505438,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311203102505438,"Parsed as literal","last"
635311203102505438,"Parsed as literal","list"
635311203102515439,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311203102515439,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311203102515439,"Parsed as literal","foldr"
635311203102515439,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311203102525440,"Parsed as literal","@func"
635311203102525440,"Parsed as literal","list"
635311203102525440,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311203102535440,"Parsed as literal","func"
635311203102535440,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311203102535440,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311203102545441,"Parsed as literal","foldr"
635311203102545441,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311203102545441,"Parsed as literal","@func"
635311203102545441,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311203102555441,"Parsed as literal","superHead"
635311203102555441,"Parsed as literal","list"
635311203102555441,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311203102555441,"Parsed as literal","last"
635311203102565442,"Parsed as literal","list"
635311203102565442,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311203102565442,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311203102575442,"Parsed as literal","superHead"
635311203102575442,"Parsed as literal","list"
635311203102575442,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311203102575442,"Parsed as literal","reverse"
635311203102585443,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311203102585443,"Parsed as literal",""
635311203102585443,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311203102595444,"Parsed as literal","reverse"
635311203102595444,"Parsed as literal","list"
635311203102595444,"StepEvaluate","->","Changed","Declared @map"
635311203102595444,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311203102605444,"StepEvaluate","->","Changed","Declared @map"
635311203102605444,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311203102605444,"StepEvaluate","->","Changed","Declared @filter"
635311203102605444,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311203102615445,"StepEvaluate","->","Changed","Declared @filter"
635311203102615445,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311203102615445,"StepEvaluate","->","Changed","Declared @filter"
635311203102615445,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311203102625445,"StepEvaluate","->","Changed","Declared @call"
635311203102625445,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311203102625445,"StepEvaluate","->","Changed","Declared @curry"
635311203102625445,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311203102635446,"StepEvaluate","->","Changed","Declared @curry"
635311203102635446,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311203102635446,"StepEvaluate","->","Changed","Declared @fold"
635311203102635446,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311203102645446,"StepEvaluate","->","Changed","Declared @fold"
635311203102645446,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311203102645446,"StepEvaluate","->","Changed","Declared @fold"
635311203102645446,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311203102655447,"StepEvaluate","->","Changed","Declared @foldr"
635311203102655447,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311203102655447,"StepEvaluate","->","Changed","Declared @foldr"
635311203102655447,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311203102665448,"StepEvaluate","->","Changed","Declared @foldr"
635311203102665448,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311203102665448,"StepEvaluate","==","Unchanged","=="
635311203102665448,"StepEvaluate","@","Changed","@"
635311203102675448,"StepEvaluate","@","Changed","@"
635311203102675448,"StepEvaluate","==","Unchanged","=="
635311203102675448,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311203102675448,"StepEvaluate","superHead","Unchanged","superHead"
635311203102685449,"StepEvaluate",",","Unchanged",","
635311203102685449,"StepEvaluate","list","Unchanged","list"
635311203102685449,"StepEvaluate","@","Changed","@"
635311203102685449,"StepEvaluate","==","Unchanged","=="
635311203102695449,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311203102695449,"StepEvaluate","superHead","Unchanged","superHead"
635311203102695449,"StepEvaluate",",","Unchanged",","
635311203102695449,"StepEvaluate","list","Unchanged","list"
635311203102705450,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311203102705450,"StepEvaluate","reverse","Unchanged","reverse"
635311203102705450,"StepEvaluate",",","Unchanged",","
635311203102705450,"StepEvaluate","tail","Unchanged","tail"
635311203102715450,"StepEvaluate","@","Changed","@"
635311203102715450,"StepEvaluate","==","Unchanged","=="
635311203102715450,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311203102715450,"StepEvaluate","superHead","Unchanged","superHead"
635311203102725451,"StepEvaluate",",","Unchanged",","
635311203102725451,"StepEvaluate","list","Unchanged","list"
635311203102725451,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311203102725451,"StepEvaluate","reverse","Unchanged","reverse"
635311203102735452,"StepEvaluate",",","Unchanged",","
635311203102735452,"StepEvaluate","tail","Unchanged","tail"
635311203102735452,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311203102735452,"StepEvaluate","reverse","Unchanged","reverse"
635311203102745452,"StepEvaluate",",","Unchanged",","
635311203102745452,"StepEvaluate","list","Unchanged","list"
635311203102745452,"StepEvaluate","[]","Changed","File imported"
635311203102745452,"StepEvaluate","File imported","Unchanged","File imported"
635311203102755453,"StepEvaluate","@","Changed","@"
635311203102755453,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203102755453,"StepEvaluate","PAT@","Unchanged","PAT@"
635311203102755453,"StepEvaluate",",","Unchanged",","
635311203102765453,"StepEvaluate","@Arg","Changed","@Arg-M"
635311203102765453,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203102765453,"StepEvaluate","PAT@-M","Changed","[]"
635311203102765453,"StepEvaluate","SEL@import","Changed","[]"
635311203102775454,"StepEvaluate","@","Changed","[]"
635311203102775454,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311203102775454,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311203102785454,"Parsed as literal","zipWith"
635311203102785454,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311203102785454,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311203102785454,"Parsed as literal","func"
635311203102795455,"Parsed as literal",""
635311203102795455,"Invalid operator","@func","8"
635311203102795455,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311203102795455,"Parsed as literal","func"
635311203102805456,"Parsed as literal",""
635311203102805456,"Invalid operator","@func","8"
635311203102805456,"Parsed as literal","@func"
635311203102815456,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311203102815456,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311203102815456,"Parsed as literal",""
635311203102815456,"Parsed as literal",""
635311203102825457,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311203102825457,"Parsed as literal",""
635311203102825457,"Parsed as literal",""
635311203102825457,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311203102835457,"Parsed as literal",""
635311203102835457,"Parsed as literal",""
635311203102835457,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311203102835457,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311203102845458,"Parsed as literal","zipWith"
635311203102845458,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311203102845458,"Parsed as literal","@func"
635311203102855458,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311203102855458,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311203102855458,"Parsed as literal",""
635311203102855458,"Parsed as literal",""
635311203102865459,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311203102865459,"Parsed as literal",""
635311203102865459,"Parsed as literal",""
635311203102865459,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311203102875460,"Parsed as literal",""
635311203102875460,"Parsed as literal",""
635311203102875460,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311203102885460,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311203102885460,"Parsed as literal","zipWith"
635311203102885460,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311203102885460,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311203102895461,"Parsed as literal","func"
635311203102895461,"Parsed as literal",""
635311203102895461,"Invalid operator","@func","8"
635311203102895461,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311203102905461,"Parsed as literal","func"
635311203102905461,"Parsed as literal",""
635311203102905461,"Invalid operator","@func","8"
635311203102905461,"Parsed as literal","@func"
635311203102915462,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311203102915462,"Parsed as literal","list1"
635311203102915462,"Parsed as literal","list2"
635311203102925462,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311203102925462,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311203102925462,"Parsed as literal","func"
635311203102925462,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311203102935463,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311203102935463,"Parsed as literal",""
635311203102935463,"Parsed as literal","list1"
635311203102935463,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311203102945464,"Parsed as literal",""
635311203102945464,"Parsed as literal","list2"
635311203102945464,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311203102945464,"Parsed as literal","zipWith"
635311203102955464,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311203102955464,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311203102955464,"Parsed as literal","func"
635311203102955464,"Parsed as literal",""
635311203102965465,"Invalid operator","@func","64"
635311203102965465,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311203102965465,"Parsed as literal","func"
635311203102965465,"Parsed as literal",""
635311203102975465,"Invalid operator","@func","64"
635311203102975465,"Parsed as literal","@func"
635311203102975465,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311203102975465,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311203102985466,"Parsed as literal",""
635311203102985466,"Parsed as literal","list1"
635311203102985466,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311203102995466,"Parsed as literal",""
635311203102995466,"Parsed as literal","list2"
635311203102995466,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311203102995466,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311203103005467,"Parsed as literal","zipWith"
635311203103005467,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311203103005467,"Parsed as literal","@func"
635311203103005467,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311203103015468,"Parsed as literal","list1"
635311203103015468,"Parsed as literal","list2"
635311203103015468,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311203103025468,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311203103025468,"Parsed as literal","func"
635311203103025468,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311203103025468,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311203103035469,"Parsed as literal",""
635311203103035469,"Parsed as literal","list1"
635311203103035469,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311203103035469,"Parsed as literal",""
635311203103045469,"Parsed as literal","list2"
635311203103045469,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311203103045469,"Parsed as literal","zipWith"
635311203103045469,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311203103055470,"Parsed as literal","@func"
635311203103055470,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311203103055470,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311203103075471,"Parsed as literal",""
635311203103075471,"Parsed as literal","list1"
635311203103075471,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311203103085472,"Parsed as literal",""
635311203103085472,"Parsed as literal","list2"
635311203103085472,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311203103095472,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311203103095472,"Parsed as literal","count"
635311203103095472,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311203103095472,"Parsed as literal",""
635311203103105473,"Parsed as literal",""
635311203103105473,"Parsed as literal"," 0"
635311203103105473,"Invalid operator","@count([]) -> 0","0"
635311203103105473,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311203103115473,"Parsed as literal","count"
635311203103115473,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311203103115473,"Parsed as literal",""
635311203103115473,"Parsed as literal",""
635311203103125474,"Parsed as literal"," 0"
635311203103125474,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311203103125474,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311203103135474,"Parsed as literal","count"
635311203103135474,"Parsed as literal","list"
635311203103135474,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311203103135474,"Parsed as literal"," 1 "
635311203103145475,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311203103145475,"Parsed as literal","count"
635311203103145475,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311203103155476,"Parsed as literal",""
635311203103155476,"Parsed as literal","list"
635311203103155476,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311203103155476,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311203103165476,"Parsed as literal","count"
635311203103165476,"Parsed as literal","list"
635311203103165476,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311203103175477,"Parsed as literal"," 1 "
635311203103175477,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311203103175477,"Parsed as literal","count"
635311203103175477,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311203103185477,"Parsed as literal",""
635311203103185477,"Parsed as literal","list"
635311203103185477,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311203103185477,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311203103195478,"Parsed as literal","skip"
635311203103195478,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311203103195478,"Parsed as literal","0"
635311203103195478,"Parsed as literal","list"
635311203103205478,"Parsed as literal"," list"
635311203103205478,"Invalid operator","@skip(0,list) -> list","0"
635311203103205478,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311203103215479,"Parsed as literal","skip"
635311203103215479,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311203103215479,"Parsed as literal","0"
635311203103215479,"Parsed as literal","list"
635311203103225480,"Parsed as literal"," list"
635311203103225480,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311203103225480,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311203103235480,"Parsed as literal","skip"
635311203103235480,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311203103235480,"Parsed as literal","n"
635311203103235480,"Parsed as literal","list"
635311203103245481,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311203103245481,"Parsed as literal","skip"
635311203103245481,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311203103245481,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311203103255481,"Parsed as literal","n"
635311203103255481,"Parsed as literal","1"
635311203103255481,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311203103255481,"Parsed as literal",""
635311203103265482,"Parsed as literal","list"
635311203103265482,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311203103265482,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311203103275482,"Parsed as literal","skip"
635311203103275482,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311203103275482,"Parsed as literal","n"
635311203103275482,"Parsed as literal","list"
635311203103285483,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311203103285483,"Parsed as literal","skip"
635311203103285483,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311203103285483,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311203103295484,"Parsed as literal","n"
635311203103295484,"Parsed as literal","1"
635311203103295484,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311203103295484,"Parsed as literal",""
635311203103305484,"Parsed as literal","list"
635311203103305484,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311203103305484,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311203103315485,"Parsed as literal","take"
635311203103315485,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311203103315485,"Parsed as literal","1"
635311203103315485,"Parsed as literal","list"
635311203103325485,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311203103325485,"Parsed as literal"," "
635311203103325485,"Parsed as literal","list"
635311203103325485,"Invalid operator","@take(1,list) -> h:list","0"
635311203103335486,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311203103335486,"Parsed as literal","take"
635311203103335486,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311203103335486,"Parsed as literal","1"
635311203103345486,"Parsed as literal","list"
635311203103345486,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311203103345486,"Parsed as literal"," "
635311203103355487,"Parsed as literal","list"
635311203103355487,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311203103355487,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311203103355487,"Parsed as literal","take"
635311203103365488,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311203103365488,"Parsed as literal","n"
635311203103365488,"Parsed as literal","list"
635311203103375488,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311203103375488,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311203103375488,"Parsed as literal"," "
635311203103375488,"Parsed as literal","list "
635311203103385489,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311203103385489,"Parsed as literal","take"
635311203103385489,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311203103385489,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311203103395489,"Parsed as literal","n"
635311203103395489,"Parsed as literal","1"
635311203103395489,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311203103405490,"Parsed as literal",""
635311203103405490,"Parsed as literal","list"
635311203103405490,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311203103405490,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311203103415490,"Parsed as literal","take"
635311203103415490,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311203103415490,"Parsed as literal","n"
635311203103415490,"Parsed as literal","list"
635311203103425491,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311203103425491,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311203103425491,"Parsed as literal"," "
635311203103425491,"Parsed as literal","list "
635311203103435492,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311203103435492,"Parsed as literal","take"
635311203103435492,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311203103435492,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311203103445492,"Parsed as literal","n"
635311203103445492,"Parsed as literal","1"
635311203103445492,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311203103455493,"Parsed as literal",""
635311203103455493,"Parsed as literal","list"
635311203103455493,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311203103465493,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311203103465493,"Parsed as literal","nthItem"
635311203103465493,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311203103465493,"Parsed as literal","list"
635311203103475494,"Parsed as literal","0"
635311203103475494,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311203103475494,"Parsed as literal",""
635311203103475494,"Parsed as literal",""
635311203103485494,"Invalid operator","@nthItem(list,0) -> []","0"
635311203103485494,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311203103485494,"Parsed as literal","nthItem"
635311203103485494,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311203103495495,"Parsed as literal","list"
635311203103495495,"Parsed as literal","0"
635311203103495495,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311203103505496,"Parsed as literal",""
635311203103505496,"Parsed as literal",""
635311203103505496,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311203103505496,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311203103515496,"Parsed as literal","nthItem"
635311203103515496,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311203103515496,"Parsed as literal","list"
635311203103515496,"Parsed as literal","1"
635311203103525497,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311203103525497,"Parsed as literal"," "
635311203103525497,"Parsed as literal","list"
635311203103535497,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311203103535497,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311203103535497,"Parsed as literal","nthItem"
635311203103535497,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311203103545498,"Parsed as literal","list"
635311203103545498,"Parsed as literal","1"
635311203103545498,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311203103545498,"Parsed as literal"," "
635311203103555498,"Parsed as literal","list"
635311203103555498,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311203103555498,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311203103565499,"Parsed as literal","nthItem"
635311203103565499,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311203103565499,"Parsed as literal","list"
635311203103565499,"Parsed as literal","n"
635311203103575500,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311203103575500,"Parsed as literal","nthItem"
635311203103575500,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311203103575500,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311203103585500,"Parsed as literal",""
635311203103585500,"Parsed as literal","list"
635311203103585500,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311203103585500,"Parsed as literal","n"
635311203103595501,"Parsed as literal","1"
635311203103595501,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311203103595501,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311203103605501,"Parsed as literal","nthItem"
635311203103605501,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311203103605501,"Parsed as literal","list"
635311203103605501,"Parsed as literal","n"
635311203103615502,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311203103615502,"Parsed as literal","nthItem"
635311203103615502,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311203103615502,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311203103625502,"Parsed as literal",""
635311203103625502,"Parsed as literal","list"
635311203103625502,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311203103625502,"Parsed as literal","n"
635311203103635503,"Parsed as literal","1"
635311203103635503,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311203103635503,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311203103645504,"Parsed as literal","makeRange"
635311203103645504,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311203103645504,"Parsed as literal","a"
635311203103645504,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311203103655504,"Parsed as literal","b"
635311203103655504,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311203103655504,"Parsed as literal","a"
635311203103655504,"Parsed as literal","b"
635311203103665505,"Parsed as literal"," a"
635311203103665505,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311203103665505,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311203103675505,"Parsed as literal","makeRange"
635311203103675505,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311203103675505,"Parsed as literal","a"
635311203103675505,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311203103685506,"Parsed as literal","b"
635311203103685506,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311203103685506,"Parsed as literal","a"
635311203103685506,"Parsed as literal","b"
635311203103695506,"Parsed as literal"," a"
635311203103695506,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311203103695506,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311203103695506,"Parsed as literal","makeRange"
635311203103705507,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311203103705507,"Parsed as literal","a"
635311203103705507,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311203103705507,"Parsed as literal","b"
635311203103715508,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311203103715508,"Parsed as literal","a"
635311203103715508,"Parsed as literal","b"
635311203103725508,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311203103725508,"Parsed as literal"," a "
635311203103725508,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311203103725508,"Parsed as literal","makeRange"
635311203103735509,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311203103735509,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311203103735509,"Parsed as literal","a"
635311203103735509,"Parsed as literal","1"
635311203103745509,"Parsed as literal","b"
635311203103745509,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311203103745509,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311203103745509,"Parsed as literal","makeRange"
635311203103755510,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311203103755510,"Parsed as literal","a"
635311203103755510,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311203103755510,"Parsed as literal","b"
635311203103765510,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311203103765510,"Parsed as literal","a"
635311203103765510,"Parsed as literal","b"
635311203103775511,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311203103775511,"Parsed as literal"," a "
635311203103775511,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311203103775511,"Parsed as literal","makeRange"
635311203103785512,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311203103785512,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311203103785512,"Parsed as literal","a"
635311203103785512,"Parsed as literal","1"
635311203103795512,"Parsed as literal","b"
635311203103795512,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311203103795512,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311203103805513,"Parsed as literal","reverse"
635311203103805513,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311203103805513,"Parsed as literal",""
635311203103805513,"Parsed as literal",""
635311203103815513,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311203103815513,"Parsed as literal",""
635311203103815513,"Parsed as literal",""
635311203103815513,"Invalid operator","@reverse([]) -> []","0"
635311203103825514,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311203103825514,"Parsed as literal","reverse"
635311203103825514,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311203103825514,"Parsed as literal",""
635311203103835514,"Parsed as literal",""
635311203103835514,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311203103835514,"Parsed as literal",""
635311203103835514,"Parsed as literal",""
635311203103845515,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311203103845515,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311203103845515,"Parsed as literal","reverse"
635311203103855516,"Parsed as literal","list"
635311203103855516,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311203103855516,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311203103855516,"Parsed as literal","reverse"
635311203103865516,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311203103865516,"Parsed as literal",""
635311203103865516,"Parsed as literal","list"
635311203103865516,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311203103875517,"Parsed as literal"," "
635311203103875517,"Parsed as literal","list"
635311203103875517,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311203103875517,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311203103885517,"Parsed as literal","reverse"
635311203103885517,"Parsed as literal","list"
635311203103885517,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311203103895518,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311203103895518,"Parsed as literal","reverse"
635311203103895518,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311203103895518,"Parsed as literal",""
635311203103905518,"Parsed as literal","list"
635311203103905518,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311203103905518,"Parsed as literal"," "
635311203103905518,"Parsed as literal","list"
635311203103915519,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311203103915519,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311203103915519,"Parsed as literal","max"
635311203103925520,"Parsed as literal","list"
635311203103925520,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311203103925520,"Parsed as literal","fold"
635311203103925520,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311203103935520,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311203103935520,"Parsed as literal","max"
635311203103935520,"Parsed as literal",""
635311203103935520,"Invalid operator","@max","19"
635311203103945521,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311203103945521,"Parsed as literal","max"
635311203103945521,"Parsed as literal",""
635311203103945521,"Invalid operator","@max","19"
635311203103955521,"Parsed as literal","@max"
635311203103955521,"Parsed as literal","list"
635311203103955521,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311203103965522,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311203103965522,"Parsed as literal","max"
635311203103965522,"Parsed as literal","list"
635311203103965522,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311203103975522,"Parsed as literal","fold"
635311203103975522,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311203103975522,"Parsed as literal","@max"
635311203103975522,"Parsed as literal","list"
635311203103985523,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311203103985523,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311203103985523,"Parsed as literal","elementAt"
635311203103985523,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311203103995524,"Parsed as literal","0"
635311203103995524,"Parsed as literal","list"
635311203103995524,"Parsed as literal"," 'list"
635311203104005524,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311203104005524,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311203104015525,"Parsed as literal","elementAt"
635311203104015525,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311203104015525,"Parsed as literal","n"
635311203104015525,"Parsed as literal","list"
635311203104025525,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311203104025525,"Parsed as literal","elementAt"
635311203104025525,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311203104035526,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311203104035526,"Parsed as literal","n"
635311203104035526,"Parsed as literal","1"
635311203104035526,"Parsed as literal","list'"
635311203104045526,"StepEvaluate","->","Changed","Declared @zipWith"
635311203104045526,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311203104045526,"StepEvaluate","->","Changed","Declared @zipWith"
635311203104045526,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311203104055527,"StepEvaluate","->","Changed","Declared @count"
635311203104055527,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311203104055527,"StepEvaluate","->","Changed","Declared @count"
635311203104055527,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311203104065528,"StepEvaluate","->","Changed","Declared @skip"
635311203104065528,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311203104065528,"StepEvaluate","->","Changed","Declared @skip"
635311203104065528,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311203104075528,"StepEvaluate","->","Changed","Declared @take"
635311203104075528,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311203104075528,"StepEvaluate","->","Changed","Declared @take"
635311203104075528,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311203104085529,"StepEvaluate","->","Changed","Declared @nthItem"
635311203104085529,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311203104085529,"StepEvaluate","->","Changed","Declared @nthItem"
635311203104085529,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311203104095529,"StepEvaluate","->","Changed","Declared @nthItem"
635311203104095529,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311203104095529,"StepEvaluate","->","Changed","Declared @makeRange"
635311203104095529,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311203104105530,"StepEvaluate","->","Changed","Declared @makeRange"
635311203104105530,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311203104105530,"StepEvaluate","->","Changed","Declared @reverse"
635311203104105530,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311203104115530,"StepEvaluate","->","Changed","Declared @reverse"
635311203104115530,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311203104115530,"StepEvaluate","->","Changed","Declared @max"
635311203104115530,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311203104125531,"StepEvaluate","==","Unchanged","=="
635311203104125531,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311203104125531,"StepEvaluate","elementAt","Unchanged","elementAt"
635311203104125531,"StepEvaluate",",","Unchanged",","
635311203104135532,"StepEvaluate","0","Unchanged","0"
635311203104135532,"StepEvaluate",",","Unchanged",","
635311203104135532,"StepEvaluate","list","Unchanged","list"
635311203104135532,"StepEvaluate","'list","Unchanged","'list"
635311203104145532,"StepEvaluate","==","Unchanged","=="
635311203104145532,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311203104145532,"StepEvaluate","elementAt","Unchanged","elementAt"
635311203104145532,"StepEvaluate",",","Unchanged",","
635311203104155533,"StepEvaluate","n","Unchanged","n"
635311203104155533,"StepEvaluate",",","Unchanged",","
635311203104155533,"StepEvaluate","list","Unchanged","list"
635311203104155533,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311203104165533,"StepEvaluate","elementAt","Unchanged","elementAt"
635311203104165533,"StepEvaluate",",","Unchanged",","
635311203104165533,"StepEvaluate","-","Unchanged","-"
635311203104165533,"StepEvaluate","n","Unchanged","n"
635311203104175534,"StepEvaluate","1","Unchanged","1"
635311203104175534,"StepEvaluate",",","Unchanged",","
635311203104175534,"StepEvaluate","list'","Unchanged","list'"
635311203104175534,"StepEvaluate","[]","Changed","File imported"
635311203104185534,"StepEvaluate","File imported","Unchanged","File imported"
635311203104185534,"StepEvaluate","@","Changed","@"
635311203104185534,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203104185534,"StepEvaluate","PAT@","Unchanged","PAT@"
635311203104195535,"StepEvaluate",",","Unchanged",","
635311203104195535,"StepEvaluate","@Arg","Changed","@Arg-M"
635311203104195535,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203104195535,"StepEvaluate","PAT@-M","Changed","[]"
635311203104205536,"StepEvaluate","SEL@import","Changed","[]"
635311203104205536,"StepEvaluate","@","Changed","[]"
635311203104205536,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311203104215536,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311203104215536,"Parsed as literal","naturalNumbers"
635311203104215536,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311203104215536,"Parsed as literal",""
635311203104225537,"Parsed as literal",""
635311203104225537,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311203104225537,"Parsed as literal","naturalNumbers"
635311203104225537,"Parsed as literal","0"
635311203104235537,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311203104235537,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311203104235537,"Parsed as literal","naturalNumbers"
635311203104245538,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311203104245538,"Parsed as literal",""
635311203104245538,"Parsed as literal",""
635311203104245538,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311203104255538,"Parsed as literal","naturalNumbers"
635311203104255538,"Parsed as literal","0"
635311203104255538,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311203104255538,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311203104265539,"Parsed as literal","naturalNumbers"
635311203104265539,"Parsed as literal","n"
635311203104265539,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311203104265539,"Parsed as literal"," n "
635311203104275540,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311203104275540,"Parsed as literal","naturalNumbers"
635311203104275540,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311203104285540,"Parsed as literal","n"
635311203104285540,"Parsed as literal","1"
635311203104285540,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311203104285540,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311203104295541,"Parsed as literal","naturalNumbers"
635311203104295541,"Parsed as literal","n"
635311203104295541,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311203104295541,"Parsed as literal"," n "
635311203104305541,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311203104305541,"Parsed as literal","naturalNumbers"
635311203104305541,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311203104305541,"Parsed as literal","n"
635311203104315542,"Parsed as literal","1"
635311203104315542,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311203104315542,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311203104325542,"Parsed as literal","max"
635311203104325542,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311203104325542,"Parsed as literal","a"
635311203104325542,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311203104335543,"Parsed as literal","b"
635311203104335543,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311203104335543,"Parsed as literal","a"
635311203104335543,"Parsed as literal","b"
635311203104345544,"Parsed as literal","b"
635311203104345544,"Invalid operator","@max(a,b|a<b)->b","0"
635311203104345544,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311203104345544,"Parsed as literal","max"
635311203104355544,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311203104355544,"Parsed as literal","a"
635311203104355544,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311203104355544,"Parsed as literal","b"
635311203104365545,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311203104365545,"Parsed as literal","a"
635311203104365545,"Parsed as literal","b"
635311203104375545,"Parsed as literal","b"
635311203104375545,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311203104375545,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311203104375545,"Parsed as literal","max"
635311203104385546,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311203104385546,"Parsed as literal","a"
635311203104385546,"Parsed as literal","b"
635311203104385546,"Parsed as literal","a"
635311203104395546,"Invalid operator","@max(a,b)->a","0"
635311203104395546,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311203104395546,"Parsed as literal","max"
635311203104395546,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311203104405547,"Parsed as literal","a"
635311203104405547,"Parsed as literal","b"
635311203104405547,"Parsed as literal","a"
635311203104415548,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311203104415548,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311203104415548,"Parsed as literal","random"
635311203104415548,"Parsed as literal","0"
635311203104425548,"Parsed as literal"," 0"
635311203104425548,"Invalid operator","@random(0) -> 0","0"
635311203104425548,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311203104425548,"Parsed as literal","random"
635311203104435549,"Parsed as literal","0"
635311203104435549,"Parsed as literal"," 0"
635311203104435549,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311203104435549,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311203104445549,"Parsed as literal","random"
635311203104445549,"Parsed as literal","n"
635311203104445549,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311203104455550,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311203104455550,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311203104455550,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311203104455550,"Parsed as literal","1664525 "
635311203104465550,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311203104465550,"Parsed as literal","random"
635311203104465550,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311203104465550,"Parsed as literal","n"
635311203104475551,"Parsed as literal","1"
635311203104475551,"Parsed as literal"," 1013904223"
635311203104475551,"Parsed as literal",""
635311203104475551,"Parsed as literal"," 4294967296"
635311203104485552,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311203104485552,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311203104485552,"Parsed as literal","random"
635311203104485552,"Parsed as literal","n"
635311203104495552,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311203104495552,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311203104495552,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311203104505553,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311203104505553,"Parsed as literal","1664525 "
635311203104505553,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311203104505553,"Parsed as literal","random"
635311203104515553,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311203104515553,"Parsed as literal","n"
635311203104515553,"Parsed as literal","1"
635311203104515553,"Parsed as literal"," 1013904223"
635311203104525554,"Parsed as literal",""
635311203104525554,"Parsed as literal"," 4294967296"
635311203104525554,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311203104535554,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311203104535554,"Parsed as literal","gcd"
635311203104535554,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311203104535554,"Parsed as literal","a"
635311203104545555,"Parsed as literal","0"
635311203104545555,"Parsed as literal"," a"
635311203104545555,"Invalid operator","@gcd(a,0) -> a","0"
635311203104545555,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311203104555556,"Parsed as literal","gcd"
635311203104555556,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311203104555556,"Parsed as literal","a"
635311203104555556,"Parsed as literal","0"
635311203104565556,"Parsed as literal"," a"
635311203104565556,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311203104565556,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311203104575557,"Parsed as literal","gcd"
635311203104575557,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311203104575557,"Parsed as literal","a"
635311203104575557,"Parsed as literal","b"
635311203104585557,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311203104585557,"Parsed as literal","gcd"
635311203104585557,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311203104585557,"Parsed as literal","b"
635311203104595558,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311203104595558,"Parsed as literal","a "
635311203104595558,"Parsed as literal"," b"
635311203104595558,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311203104605558,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311203104605558,"Parsed as literal","gcd"
635311203104605558,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311203104605558,"Parsed as literal","a"
635311203104615559,"Parsed as literal","b"
635311203104615559,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311203104615559,"Parsed as literal","gcd"
635311203104625560,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311203104625560,"Parsed as literal","b"
635311203104625560,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311203104625560,"Parsed as literal","a "
635311203104635560,"Parsed as literal"," b"
635311203104635560,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311203104635560,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311203104635560,"Parsed as literal","gcd"
635311203104645561,"Parsed as literal","list"
635311203104645561,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311203104645561,"Parsed as literal","fold"
635311203104645561,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311203104655561,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311203104655561,"Parsed as literal","gcd"
635311203104655561,"Parsed as literal",""
635311203104655561,"Invalid operator","@gcd","19"
635311203104665562,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311203104665562,"Parsed as literal","gcd"
635311203104665562,"Parsed as literal",""
635311203104665562,"Invalid operator","@gcd","19"
635311203104675563,"Parsed as literal","@gcd"
635311203104675563,"Parsed as literal","list"
635311203104675563,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311203104685563,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311203104685563,"Parsed as literal","gcd"
635311203104685563,"Parsed as literal","list"
635311203104685563,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311203104695564,"Parsed as literal","fold"
635311203104695564,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311203104695564,"Parsed as literal","@gcd"
635311203104695564,"Parsed as literal","list"
635311203104705564,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311203104705564,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311203104705564,"Parsed as literal","fib"
635311203104715565,"Parsed as literal","0"
635311203104715565,"Parsed as literal"," 1"
635311203104715565,"Invalid operator","@fib(0) -> 1","0"
635311203104715565,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311203104725565,"Parsed as literal","fib"
635311203104725565,"Parsed as literal","0"
635311203104725565,"Parsed as literal"," 1"
635311203104725565,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311203104735566,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311203104735566,"Parsed as literal","fib"
635311203104735566,"Parsed as literal","1"
635311203104735566,"Parsed as literal"," 1"
635311203104745567,"Invalid operator","@fib(1) -> 1","0"
635311203104745567,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311203104745567,"Parsed as literal","fib"
635311203104745567,"Parsed as literal","1"
635311203104755567,"Parsed as literal"," 1"
635311203104755567,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311203104755567,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311203104765568,"Parsed as literal","fib"
635311203104765568,"Parsed as literal","n"
635311203104765568,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311203104765568,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311203104775568,"Parsed as literal","fib"
635311203104775568,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311203104775568,"Parsed as literal","n"
635311203104775568,"Parsed as literal","2"
635311203104785569,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311203104785569,"Parsed as literal","fib"
635311203104785569,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311203104785569,"Parsed as literal","n"
635311203104795569,"Parsed as literal","1"
635311203104795569,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311203104795569,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311203104805570,"Parsed as literal","fib"
635311203104805570,"Parsed as literal","n"
635311203104805570,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311203104805570,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311203104815571,"Parsed as literal","fib"
635311203104815571,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311203104815571,"Parsed as literal","n"
635311203104815571,"Parsed as literal","2"
635311203104825571,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311203104825571,"Parsed as literal","fib"
635311203104825571,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311203104825571,"Parsed as literal","n"
635311203104835572,"Parsed as literal","1"
635311203104835572,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311203104835572,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311203104845572,"Parsed as literal","fib2"
635311203104845572,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311203104845572,"Parsed as literal",""
635311203104845572,"Parsed as literal",""
635311203104855573,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311203104855573,"Parsed as literal"," 0 "
635311203104855573,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311203104865573,"Parsed as literal"," 1 "
635311203104865573,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311203104865573,"Parsed as literal","zipWith"
635311203104875574,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311203104875574,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311203104875574,"Parsed as literal",""
635311203104875574,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311203104885575,"Parsed as literal","a"
635311203104885575,"Parsed as literal","b"
635311203104885575,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311203104895575,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311203104895575,"Parsed as literal","a"
635311203104895575,"Parsed as literal","b"
635311203104895575,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311203104905576,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311203104905576,"Parsed as literal","fib2"
635311203104905576,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311203104905576,"Parsed as literal",""
635311203104915576,"Parsed as literal",""
635311203104915576,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311203104915576,"Parsed as literal"," "
635311203104915576,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311203104925577,"Parsed as literal","fib2"
635311203104925577,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311203104925577,"Parsed as literal",""
635311203104925577,"Parsed as literal",""
635311203104935577,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311203104935577,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311203104935577,"Parsed as literal",""
635311203104935577,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311203104945578,"Parsed as literal","a"
635311203104945578,"Parsed as literal","b"
635311203104945578,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311203104955579,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311203104955579,"Parsed as literal","a"
635311203104955579,"Parsed as literal","b"
635311203104955579,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311203104965579,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311203104965579,"Parsed as literal","fib2"
635311203104965579,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311203104965579,"Parsed as literal",""
635311203104975580,"Parsed as literal",""
635311203104975580,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311203104975580,"Parsed as literal"," "
635311203104975580,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311203104985580,"Parsed as literal","fib2"
635311203104985580,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311203104985580,"Parsed as literal",""
635311203104985580,"Parsed as literal",""
635311203104995581,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311203105005581,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311203105005581,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311203105005581,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311203105005581,"Parsed as literal",""
635311203105015582,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311203105015582,"Parsed as literal","a"
635311203105015582,"Parsed as literal","b"
635311203105015582,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311203105025583,"Parsed as literal","a"
635311203105025583,"Parsed as literal","b"
635311203105025583,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311203105035583,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311203105035583,"Parsed as literal","fib2"
635311203105035583,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311203105035583,"Parsed as literal",""
635311203105045584,"Parsed as literal",""
635311203105045584,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311203105045584,"Parsed as literal"," "
635311203105045584,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311203105055584,"Parsed as literal","fib2"
635311203105055584,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311203105055584,"Parsed as literal",""
635311203105055584,"Parsed as literal",""
635311203105065585,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311203105065585,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311203105065585,"Parsed as literal","fib2"
635311203105075585,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311203105075585,"Parsed as literal",""
635311203105075585,"Parsed as literal",""
635311203105075585,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311203105085586,"Parsed as literal"," 0 "
635311203105085586,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311203105085586,"Parsed as literal"," 1 "
635311203105095587,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311203105095587,"Parsed as literal","zipWith"
635311203105095587,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311203105095587,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311203105105587,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311203105105587,"Parsed as literal",""
635311203105105587,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311203105105587,"Parsed as literal","a"
635311203105115588,"Parsed as literal","b"
635311203105115588,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311203105115588,"Parsed as literal","a"
635311203105115588,"Parsed as literal","b"
635311203105125588,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311203105125588,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311203105125588,"Parsed as literal","fib2"
635311203105135589,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311203105135589,"Parsed as literal",""
635311203105135589,"Parsed as literal",""
635311203105135589,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311203105145589,"Parsed as literal"," "
635311203105145589,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311203105145589,"Parsed as literal","fib2"
635311203105145589,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311203105155590,"Parsed as literal",""
635311203105155590,"Parsed as literal",""
635311203105155590,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311203105165591,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311203105165591,"Parsed as literal","fib2"
635311203105165591,"Parsed as literal","n"
635311203105165591,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311203105175591,"Parsed as literal","take"
635311203105175591,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311203105175591,"Parsed as literal","n"
635311203105175591,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311203105185592,"Parsed as literal","fib2"
635311203105185592,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311203105185592,"Parsed as literal",""
635311203105185592,"Parsed as literal",""
635311203105195592,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311203105195592,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311203105195592,"Parsed as literal","fib2"
635311203105205593,"Parsed as literal","n"
635311203105205593,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311203105205593,"Parsed as literal","take"
635311203105205593,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311203105215593,"Parsed as literal","n"
635311203105215593,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311203105215593,"Parsed as literal","fib2"
635311203105215593,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311203105225594,"Parsed as literal",""
635311203105225594,"Parsed as literal",""
635311203105225594,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311203105235595,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311203105235595,"Parsed as literal","fac"
635311203105235595,"Parsed as literal","0"
635311203105235595,"Parsed as literal"," 1"
635311203105245595,"Invalid operator","@fac(0) -> 1","0"
635311203105245595,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311203105245595,"Parsed as literal","fac"
635311203105245595,"Parsed as literal","0"
635311203105255596,"Parsed as literal"," 1"
635311203105255596,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311203105255596,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311203105255596,"Parsed as literal","fac"
635311203105265596,"Parsed as literal","n"
635311203105265596,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311203105265596,"Parsed as literal"," n "
635311203105275597,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311203105275597,"Parsed as literal","fac"
635311203105275597,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311203105275597,"Parsed as literal","n"
635311203105285597,"Parsed as literal","1"
635311203105285597,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311203105285597,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311203105285597,"Parsed as literal","fac"
635311203105295598,"Parsed as literal","n"
635311203105295598,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311203105295598,"Parsed as literal"," n "
635311203105295598,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311203105305599,"Parsed as literal","fac"
635311203105305599,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311203105305599,"Parsed as literal","n"
635311203105305599,"Parsed as literal","1"
635311203105315599,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311203105315599,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311203105315599,"Parsed as literal","pow"
635311203105325600,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311203105325600,"Parsed as literal","num"
635311203105325600,"Parsed as literal","0"
635311203105325600,"Parsed as literal"," 1"
635311203105335600,"Invalid operator","@pow(num,0) -> 1","0"
635311203105335600,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311203105335600,"Parsed as literal","pow"
635311203105335600,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311203105345601,"Parsed as literal","num"
635311203105345601,"Parsed as literal","0"
635311203105345601,"Parsed as literal"," 1"
635311203105355601,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311203105355601,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311203105355601,"Parsed as literal","pow"
635311203105355601,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311203105365602,"Parsed as literal","num"
635311203105365602,"Parsed as literal","1"
635311203105365602,"Parsed as literal"," num"
635311203105365602,"Invalid operator","@pow(num,1) -> num","0"
635311203105375603,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311203105375603,"Parsed as literal","pow"
635311203105375603,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311203105375603,"Parsed as literal","num"
635311203105385603,"Parsed as literal","1"
635311203105385603,"Parsed as literal"," num"
635311203105385603,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311203105395604,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311203105395604,"Parsed as literal","pow"
635311203105395604,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311203105395604,"Parsed as literal","num"
635311203105405604,"Parsed as literal"," power"
635311203105405604,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311203105405604,"Parsed as literal"," num "
635311203105405604,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311203105415605,"Parsed as literal","pow"
635311203105415605,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311203105415605,"Parsed as literal","num"
635311203105425605,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311203105425605,"Parsed as literal","power"
635311203105425605,"Parsed as literal","1"
635311203105425605,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311203105435606,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311203105435606,"Parsed as literal","pow"
635311203105435606,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311203105435606,"Parsed as literal","num"
635311203105445607,"Parsed as literal"," power"
635311203105445607,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311203105445607,"Parsed as literal"," num "
635311203105445607,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311203105455607,"Parsed as literal","pow"
635311203105455607,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311203105455607,"Parsed as literal","num"
635311203105465608,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311203105465608,"Parsed as literal","power"
635311203105465608,"Parsed as literal","1"
635311203105465608,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311203105475608,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311203105475608,"Parsed as literal","upArrow"
635311203105475608,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311203105475608,"Parsed as literal","a"
635311203105485609,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311203105485609,"Parsed as literal","b"
635311203105485609,"Parsed as literal","1"
635311203105495609,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311203105495609,"Parsed as literal","pow"
635311203105495609,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311203105495609,"Parsed as literal","a"
635311203105505610,"Parsed as literal","b"
635311203105505610,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311203105505610,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311203105505610,"Parsed as literal","upArrow"
635311203105515611,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311203105515611,"Parsed as literal","a"
635311203105515611,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311203105515611,"Parsed as literal","b"
635311203105525611,"Parsed as literal","1"
635311203105525611,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311203105525611,"Parsed as literal","pow"
635311203105535612,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311203105535612,"Parsed as literal","a"
635311203105535612,"Parsed as literal","b"
635311203105535612,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311203105545612,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311203105545612,"Parsed as literal","upArrow"
635311203105545612,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311203105545612,"Parsed as literal","a"
635311203105555613,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311203105555613,"Parsed as literal","1"
635311203105555613,"Parsed as literal","n"
635311203105555613,"Parsed as literal"," a"
635311203105565613,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311203105565613,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311203105565613,"Parsed as literal","upArrow"
635311203105565613,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311203105575614,"Parsed as literal","a"
635311203105575614,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311203105575614,"Parsed as literal","1"
635311203105575614,"Parsed as literal","n"
635311203105585615,"Parsed as literal"," a"
635311203105585615,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311203105585615,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311203105595615,"Parsed as literal","upArrow"
635311203105595615,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311203105595615,"Parsed as literal","a"
635311203105595615,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311203105605616,"Parsed as literal","b"
635311203105605616,"Parsed as literal","n"
635311203105605616,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311203105615616,"Parsed as literal","upArrow"
635311203105615616,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311203105615616,"Parsed as literal","a"
635311203105615616,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311203105625617,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311203105625617,"Parsed as literal","upArrow"
635311203105625617,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311203105635617,"Parsed as literal","a"
635311203105635617,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311203105635617,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311203105635617,"Parsed as literal","b"
635311203105645618,"Parsed as literal","1"
635311203105645618,"Parsed as literal","n"
635311203105645618,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311203105645618,"Parsed as literal","n"
635311203105655619,"Parsed as literal","1"
635311203105655619,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311203105655619,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311203105655619,"Parsed as literal","upArrow"
635311203105665619,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311203105665619,"Parsed as literal","a"
635311203105665619,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311203105665619,"Parsed as literal","b"
635311203105675620,"Parsed as literal","n"
635311203105675620,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311203105675620,"Parsed as literal","upArrow"
635311203105685620,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311203105685620,"Parsed as literal","a"
635311203105685620,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311203105695621,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311203105695621,"Parsed as literal","upArrow"
635311203105695621,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311203105695621,"Parsed as literal","a"
635311203105705621,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311203105705621,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311203105705621,"Parsed as literal","b"
635311203105705621,"Parsed as literal","1"
635311203105715622,"Parsed as literal","n"
635311203105715622,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311203105715622,"Parsed as literal","n"
635311203105715622,"Parsed as literal","1"
635311203105725623,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311203105725623,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311203105725623,"Parsed as literal","graham"
635311203105735623,"Parsed as literal","0"
635311203105735623,"Parsed as literal"," 4"
635311203105735623,"Invalid operator","@graham(0) -> 4","0"
635311203105735623,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311203105745624,"Parsed as literal","graham"
635311203105745624,"Parsed as literal","0"
635311203105745624,"Parsed as literal"," 4"
635311203105745624,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311203105755624,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311203105755624,"Parsed as literal","graham"
635311203105755624,"Parsed as literal","n"
635311203105765625,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311203105765625,"Parsed as literal","upArrow"
635311203105765625,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311203105765625,"Parsed as literal","3"
635311203105775625,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311203105775625,"Parsed as literal","3"
635311203105775625,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311203105775625,"Parsed as literal","graham"
635311203105785626,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311203105785626,"Parsed as literal","n"
635311203105785626,"Parsed as literal","1"
635311203105785626,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311203105795627,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311203105795627,"Parsed as literal","graham"
635311203105795627,"Parsed as literal","n"
635311203105795627,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311203105805627,"Parsed as literal","upArrow"
635311203105805627,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311203105805627,"Parsed as literal","3"
635311203105815628,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311203105815628,"Parsed as literal","3"
635311203105815628,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311203105815628,"Parsed as literal","graham"
635311203105825628,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311203105825628,"Parsed as literal","n"
635311203105825628,"Parsed as literal","1"
635311203105825628,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311203105835629,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311203105835629,"Parsed as literal","grahamsNumber"
635311203105835629,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311203105835629,"Parsed as literal",""
635311203105845629,"Parsed as literal",""
635311203105845629,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311203105855630,"Parsed as literal","graham"
635311203105855630,"Parsed as literal","64"
635311203105855630,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311203105865631,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311203105865631,"Parsed as literal","grahamsNumber"
635311203105865631,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311203105865631,"Parsed as literal",""
635311203105875631,"Parsed as literal",""
635311203105875631,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311203105875631,"Parsed as literal","graham"
635311203105875631,"Parsed as literal","64"
635311203105885632,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311203105885632,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311203105885632,"Parsed as literal","ack"
635311203105895632,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311203105895632,"Parsed as literal","0"
635311203105895632,"Parsed as literal","n"
635311203105895632,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311203105905633,"Parsed as literal"," n "
635311203105905633,"Parsed as literal"," 1"
635311203105905633,"Invalid operator","@ack(0,n) -> n + 1","0"
635311203105905633,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311203105915633,"Parsed as literal","ack"
635311203105915633,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311203105915633,"Parsed as literal","0"
635311203105925634,"Parsed as literal","n"
635311203105925634,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311203105925634,"Parsed as literal"," n "
635311203105935635,"Parsed as literal"," 1"
635311203105935635,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311203105935635,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311203105945635,"Parsed as literal","ack"
635311203105945635,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311203105945635,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311203105945635,"Parsed as literal","m"
635311203105955636,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311203105955636,"Parsed as literal","m"
635311203105955636,"Parsed as literal","0"
635311203105955636,"Parsed as literal","0"
635311203105965636,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311203105965636,"Parsed as literal","ack"
635311203105965636,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311203105965636,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311203105975637,"Parsed as literal","m"
635311203105975637,"Parsed as literal","1"
635311203105975637,"Parsed as literal","1"
635311203105985637,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311203105985637,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311203105985637,"Parsed as literal","ack"
635311203105985637,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311203105995638,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311203105995638,"Parsed as literal","m"
635311203105995638,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311203105995638,"Parsed as literal","m"
635311203106005639,"Parsed as literal","0"
635311203106005639,"Parsed as literal","0"
635311203106005639,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311203106005639,"Parsed as literal","ack"
635311203106015639,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311203106015639,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311203106015639,"Parsed as literal","m"
635311203106015639,"Parsed as literal","1"
635311203106025640,"Parsed as literal","1"
635311203106025640,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311203106025640,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311203106035640,"Parsed as literal","ack"
635311203106035640,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311203106035640,"Parsed as literal","m"
635311203106035640,"Parsed as literal","n"
635311203106045641,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311203106045641,"Parsed as literal","ack"
635311203106045641,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311203106045641,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311203106055641,"Parsed as literal","m"
635311203106055641,"Parsed as literal","1"
635311203106055641,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311203106065642,"Parsed as literal","ack"
635311203106065642,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311203106065642,"Parsed as literal","m"
635311203106065642,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311203106075643,"Parsed as literal","n"
635311203106075643,"Parsed as literal","1"
635311203106075643,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311203106075643,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311203106085643,"Parsed as literal","ack"
635311203106085643,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311203106085643,"Parsed as literal","m"
635311203106085643,"Parsed as literal","n"
635311203106095644,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311203106095644,"Parsed as literal","ack"
635311203106095644,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311203106105644,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311203106105644,"Parsed as literal","m"
635311203106105644,"Parsed as literal","1"
635311203106105644,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311203106115645,"Parsed as literal","ack"
635311203106115645,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311203106115645,"Parsed as literal","m"
635311203106115645,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311203106125645,"Parsed as literal","n"
635311203106125645,"Parsed as literal","1"
635311203106125645,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311203106125645,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311203106135646,"Parsed as literal","acker"
635311203106135646,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311203106135646,"Parsed as literal","m"
635311203106145647,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311203106145647,"Parsed as literal","n"
635311203106145647,"Parsed as literal","0"
635311203106145647,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311203106155647,"Parsed as literal"," m"
635311203106155647,"Parsed as literal","n"
635311203106155647,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311203106155647,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311203106165648,"Parsed as literal","acker"
635311203106165648,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311203106165648,"Parsed as literal","m"
635311203106165648,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311203106175648,"Parsed as literal","n"
635311203106175648,"Parsed as literal","0"
635311203106175648,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311203106175648,"Parsed as literal"," m"
635311203106185649,"Parsed as literal","n"
635311203106185649,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311203106185649,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311203106195649,"Parsed as literal","acker"
635311203106195649,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311203106195649,"Parsed as literal","m"
635311203106195649,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311203106205650,"Parsed as literal","0"
635311203106205650,"Parsed as literal","1"
635311203106205650,"Parsed as literal"," 0"
635311203106205650,"Invalid operator","@acker(m,0,1) -> 0","0"
635311203106215651,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311203106215651,"Parsed as literal","acker"
635311203106215651,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311203106225651,"Parsed as literal","m"
635311203106225651,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311203106225651,"Parsed as literal","0"
635311203106225651,"Parsed as literal","1"
635311203106235652,"Parsed as literal"," 0"
635311203106235652,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311203106235652,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311203106235652,"Parsed as literal","acker"
635311203106245652,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311203106245652,"Parsed as literal","m"
635311203106245652,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311203106245652,"Parsed as literal","0"
635311203106255653,"Parsed as literal","2"
635311203106255653,"Parsed as literal"," 1"
635311203106255653,"Invalid operator","@acker(m,0,2) -> 1","0"
635311203106255653,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311203106265653,"Parsed as literal","acker"
635311203106265653,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311203106265653,"Parsed as literal","m"
635311203106275654,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311203106275654,"Parsed as literal","0"
635311203106275654,"Parsed as literal","2"
635311203106275654,"Parsed as literal"," 1"
635311203106285655,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311203106285655,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311203106285655,"Parsed as literal","acker"
635311203106285655,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311203106295655,"Parsed as literal","m"
635311203106295655,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311203106295655,"Parsed as literal","0"
635311203106295655,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311203106305656,"Parsed as literal","p"
635311203106305656,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311203106305656,"Parsed as literal","p"
635311203106305656,"Parsed as literal","2"
635311203106315656,"Parsed as literal"," m"
635311203106315656,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311203106315656,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311203106325657,"Parsed as literal","acker"
635311203106325657,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311203106325657,"Parsed as literal","m"
635311203106325657,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311203106335657,"Parsed as literal","0"
635311203106335657,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311203106335657,"Parsed as literal","p"
635311203106335657,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311203106345658,"Parsed as literal","p"
635311203106345658,"Parsed as literal","2"
635311203106345658,"Parsed as literal"," m"
635311203106355659,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311203106355659,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311203106355659,"Parsed as literal","acker"
635311203106355659,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311203106365659,"Parsed as literal","m"
635311203106365659,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311203106365659,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311203106365659,"Parsed as literal","n"
635311203106375660,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311203106375660,"Parsed as literal","n"
635311203106375660,"Parsed as literal","0"
635311203106375660,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311203106385660,"Parsed as literal","p"
635311203106385660,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311203106385660,"Parsed as literal","p"
635311203106385660,"Parsed as literal","0"
635311203106395661,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311203106395661,"Parsed as literal","acker"
635311203106395661,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311203106405661,"Parsed as literal","m"
635311203106405661,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311203106405661,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311203106405661,"Parsed as literal","acker"
635311203106415662,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311203106415662,"Parsed as literal","m"
635311203106415662,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311203106415662,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311203106425663,"Parsed as literal","n"
635311203106425663,"Parsed as literal","1"
635311203106425663,"Parsed as literal","p"
635311203106435663,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311203106435663,"Parsed as literal","p"
635311203106435663,"Parsed as literal","1"
635311203106435663,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311203106445664,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311203106445664,"Parsed as literal","acker"
635311203106445664,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311203106445664,"Parsed as literal","m"
635311203106455664,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311203106455664,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311203106455664,"Parsed as literal","n"
635311203106455664,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311203106465665,"Parsed as literal","n"
635311203106465665,"Parsed as literal","0"
635311203106465665,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311203106465665,"Parsed as literal","p"
635311203106475665,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311203106475665,"Parsed as literal","p"
635311203106475665,"Parsed as literal","0"
635311203106485666,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311203106485666,"Parsed as literal","acker"
635311203106485666,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311203106485666,"Parsed as literal","m"
635311203106495667,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311203106495667,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311203106495667,"Parsed as literal","acker"
635311203106495667,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311203106505667,"Parsed as literal","m"
635311203106505667,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311203106505667,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311203106505667,"Parsed as literal","n"
635311203106515668,"Parsed as literal","1"
635311203106515668,"Parsed as literal","p"
635311203106515668,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311203106525668,"Parsed as literal","p"
635311203106525668,"Parsed as literal","1"
635311203106525668,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311203106525668,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311203106535669,"Parsed as literal","hyper"
635311203106535669,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311203106535669,"Parsed as literal","0"
635311203106535669,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311203106545669,"Parsed as literal","a"
635311203106545669,"Parsed as literal","b"
635311203106545669,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311203106545669,"Parsed as literal"," b"
635311203106555670,"Parsed as literal","1"
635311203106555670,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311203106555670,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311203106565671,"Parsed as literal","hyper"
635311203106565671,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311203106565671,"Parsed as literal","0"
635311203106565671,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311203106575671,"Parsed as literal","a"
635311203106575671,"Parsed as literal","b"
635311203106575671,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311203106575671,"Parsed as literal"," b"
635311203106585672,"Parsed as literal","1"
635311203106585672,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311203106585672,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311203106585672,"Parsed as literal","hyper"
635311203106595672,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311203106595672,"Parsed as literal","1"
635311203106595672,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311203106605673,"Parsed as literal","a"
635311203106605673,"Parsed as literal","0"
635311203106605673,"Parsed as literal"," a"
635311203106605673,"Invalid operator","@hyper(1,a,0) -> a","0"
635311203106615673,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311203106615673,"Parsed as literal","hyper"
635311203106615673,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311203106615673,"Parsed as literal","1"
635311203106625674,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311203106625674,"Parsed as literal","a"
635311203106625674,"Parsed as literal","0"
635311203106625674,"Parsed as literal"," a"
635311203106635675,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311203106635675,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311203106635675,"Parsed as literal","hyper"
635311203106645675,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311203106645675,"Parsed as literal","2"
635311203106645675,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311203106645675,"Parsed as literal","a"
635311203106645675,"Parsed as literal","0"
635311203106655676,"Parsed as literal"," 0"
635311203106655676,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311203106655676,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311203106665676,"Parsed as literal","hyper"
635311203106665676,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311203106665676,"Parsed as literal","2"
635311203106665676,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311203106675677,"Parsed as literal","a"
635311203106675677,"Parsed as literal","0"
635311203106675677,"Parsed as literal"," 0"
635311203106685677,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311203106685677,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311203106685677,"Parsed as literal","hyper"
635311203106685677,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311203106695678,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311203106695678,"Parsed as literal","n"
635311203106695678,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311203106695678,"Parsed as literal","n"
635311203106705679,"Parsed as literal","2"
635311203106705679,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311203106705679,"Parsed as literal","a"
635311203106705679,"Parsed as literal","0"
635311203106715679,"Parsed as literal"," 1"
635311203106715679,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311203106715679,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311203106715679,"Parsed as literal","hyper"
635311203106725680,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311203106725680,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311203106725680,"Parsed as literal","n"
635311203106725680,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311203106735680,"Parsed as literal","n"
635311203106735680,"Parsed as literal","2"
635311203106735680,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311203106745681,"Parsed as literal","a"
635311203106745681,"Parsed as literal","0"
635311203106745681,"Parsed as literal"," 1"
635311203106745681,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311203106755681,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311203106755681,"Parsed as literal","hyper"
635311203106755681,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311203106755681,"Parsed as literal","n"
635311203106765682,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311203106765682,"Parsed as literal","a"
635311203106765682,"Parsed as literal","b"
635311203106775683,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311203106775683,"Parsed as literal","hyper"
635311203106775683,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311203106785683,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311203106785683,"Parsed as literal","n"
635311203106785683,"Parsed as literal","1"
635311203106795684,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311203106795684,"Parsed as literal","a"
635311203106795684,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311203106795684,"Parsed as literal","hyper"
635311203106805684,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311203106805684,"Parsed as literal","n"
635311203106805684,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311203106805684,"Parsed as literal","a"
635311203106815685,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311203106815685,"Parsed as literal","b"
635311203106815685,"Parsed as literal","1"
635311203106825685,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311203106825685,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311203106825685,"Parsed as literal","hyper"
635311203106825685,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311203106835686,"Parsed as literal","n"
635311203106835686,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311203106835686,"Parsed as literal","a"
635311203106835686,"Parsed as literal","b"
635311203106845687,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311203106845687,"Parsed as literal","hyper"
635311203106845687,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311203106845687,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311203106855687,"Parsed as literal","n"
635311203106855687,"Parsed as literal","1"
635311203106855687,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311203106865688,"Parsed as literal","a"
635311203106865688,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311203106865688,"Parsed as literal","hyper"
635311203106865688,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311203106875688,"Parsed as literal","n"
635311203106875688,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311203106875688,"Parsed as literal","a"
635311203106875688,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311203106885689,"Parsed as literal","b"
635311203106885689,"Parsed as literal","1"
635311203106885689,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311203106895689,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311203106895689,"Parsed as literal","sudan"
635311203106895689,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311203106895689,"Parsed as literal","0"
635311203106905690,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311203106905690,"Parsed as literal","x"
635311203106905690,"Parsed as literal","y"
635311203106905690,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311203106915691,"Parsed as literal"," x "
635311203106915691,"Parsed as literal"," y"
635311203106915691,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311203106915691,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311203106925691,"Parsed as literal","sudan"
635311203106925691,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311203106925691,"Parsed as literal","0"
635311203106925691,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311203106935692,"Parsed as literal","x"
635311203106935692,"Parsed as literal","y"
635311203106935692,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311203106945692,"Parsed as literal"," x "
635311203106945692,"Parsed as literal"," y"
635311203106945692,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311203106945692,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311203106955693,"Parsed as literal","sudan"
635311203106955693,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311203106955693,"Parsed as literal","n"
635311203106955693,"Parsed as literal","0"
635311203106965693,"Parsed as literal"," x"
635311203106965693,"Invalid operator","@sudan(n,0) -> x","0"
635311203106965693,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311203106965693,"Parsed as literal","sudan"
635311203106975694,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311203106975694,"Parsed as literal","n"
635311203106975694,"Parsed as literal","0"
635311203106985695,"Parsed as literal"," x"
635311203106985695,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311203106985695,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311203106985695,"Parsed as literal","sudan"
635311203106995695,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311203106995695,"Parsed as literal","n"
635311203106995695,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311203106995695,"Parsed as literal","x"
635311203107005696,"Parsed as literal","y"
635311203107005696,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311203107005696,"Parsed as literal","sudan"
635311203107015696,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311203107015696,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311203107015696,"Parsed as literal","n"
635311203107015696,"Parsed as literal","1"
635311203107025697,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311203107025697,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311203107025697,"Parsed as literal","sudan"
635311203107035697,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311203107035697,"Parsed as literal","n"
635311203107035697,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311203107035697,"Parsed as literal","x"
635311203107045698,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311203107045698,"Parsed as literal","y"
635311203107045698,"Parsed as literal","1"
635311203107045698,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311203107055699,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311203107055699,"Parsed as literal","sudan"
635311203107055699,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311203107055699,"Parsed as literal","n"
635311203107065699,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311203107065699,"Parsed as literal","x"
635311203107065699,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311203107065699,"Parsed as literal","y"
635311203107075700,"Parsed as literal","1"
635311203107075700,"Parsed as literal","y"
635311203107075700,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311203107085700,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311203107085700,"Parsed as literal","sudan"
635311203107085700,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311203107085700,"Parsed as literal","n"
635311203107095701,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311203107095701,"Parsed as literal","x"
635311203107095701,"Parsed as literal","y"
635311203107095701,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311203107105701,"Parsed as literal","sudan"
635311203107105701,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311203107105701,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311203107115702,"Parsed as literal","n"
635311203107115702,"Parsed as literal","1"
635311203107115702,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311203107115702,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311203107125703,"Parsed as literal","sudan"
635311203107125703,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311203107125703,"Parsed as literal","n"
635311203107125703,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311203107135703,"Parsed as literal","x"
635311203107135703,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311203107135703,"Parsed as literal","y"
635311203107135703,"Parsed as literal","1"
635311203107145704,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311203107145704,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311203107145704,"Parsed as literal","sudan"
635311203107155704,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311203107155704,"Parsed as literal","n"
635311203107155704,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311203107155704,"Parsed as literal","x"
635311203107165705,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311203107165705,"Parsed as literal","y"
635311203107165705,"Parsed as literal","1"
635311203107165705,"Parsed as literal","y"
635311203107175706,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311203107175706,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311203107175706,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311203107175706,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311203107185706,"StepEvaluate","->","Changed","Declared @max"
635311203107185706,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311203107185706,"StepEvaluate","->","Changed","Declared @max"
635311203107185706,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311203107195707,"StepEvaluate","->","Changed","Declared @random"
635311203107195707,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311203107195707,"StepEvaluate","->","Changed","Declared @random"
635311203107195707,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311203107205707,"StepEvaluate","->","Changed","Declared @gcd"
635311203107205707,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311203107205707,"StepEvaluate","->","Changed","Declared @gcd"
635311203107215708,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311203107215708,"StepEvaluate","->","Changed","Declared @gcd"
635311203107215708,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311203107215708,"StepEvaluate","->","Changed","Declared @fib"
635311203107225708,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311203107225708,"StepEvaluate","->","Changed","Declared @fib"
635311203107225708,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311203107225708,"StepEvaluate","->","Changed","Declared @fib"
635311203107235709,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311203107235709,"StepEvaluate","->","Changed","Declared @fib2"
635311203107235709,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311203107235709,"StepEvaluate","->","Changed","Declared @fib2"
635311203107245710,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311203107245710,"StepEvaluate","->","Changed","Declared @fac"
635311203107245710,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311203107245710,"StepEvaluate","->","Changed","Declared @fac"
635311203107245710,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311203107255710,"StepEvaluate","->","Changed","Declared @pow"
635311203107255710,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311203107255710,"StepEvaluate","->","Changed","Declared @pow"
635311203107265711,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311203107265711,"StepEvaluate","->","Changed","Declared @pow"
635311203107265711,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311203107265711,"StepEvaluate","->","Changed","Declared @upArrow"
635311203107275711,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311203107275711,"StepEvaluate","->","Changed","Declared @upArrow"
635311203107275711,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311203107275711,"StepEvaluate","->","Changed","Declared @upArrow"
635311203107285712,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311203107285712,"StepEvaluate","->","Changed","Declared @graham"
635311203107285712,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311203107285712,"StepEvaluate","->","Changed","Declared @graham"
635311203107295712,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311203107295712,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311203107295712,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311203107295712,"StepEvaluate","->","Changed","Declared @ack"
635311203107305713,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311203107305713,"StepEvaluate","->","Changed","Declared @ack"
635311203107305713,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311203107305713,"StepEvaluate","->","Changed","Declared @ack"
635311203107315714,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311203107315714,"StepEvaluate","->","Changed","Declared @acker"
635311203107315714,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311203107315714,"StepEvaluate","->","Changed","Declared @acker"
635311203107325714,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311203107325714,"StepEvaluate","->","Changed","Declared @acker"
635311203107325714,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311203107325714,"StepEvaluate","->","Changed","Declared @acker"
635311203107335715,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311203107335715,"StepEvaluate","->","Changed","Declared @acker"
635311203107335715,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311203107335715,"StepEvaluate","->","Changed","Declared @hyper"
635311203107345715,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311203107345715,"StepEvaluate","->","Changed","Declared @hyper"
635311203107345715,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311203107345715,"StepEvaluate","->","Changed","Declared @hyper"
635311203107345715,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311203107355716,"StepEvaluate","->","Changed","Declared @hyper"
635311203107355716,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311203107355716,"StepEvaluate","->","Changed","Declared @hyper"
635311203107365716,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311203107365716,"StepEvaluate","->","Changed","Declared @sudan"
635311203107365716,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311203107365716,"StepEvaluate","->","Changed","Declared @sudan"
635311203107375717,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311203107375717,"StepEvaluate","->","Changed","Declared @sudan"
635311203107375717,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311203107375717,"StepEvaluate","[]","Changed","File imported"
635311203107385718,"StepEvaluate","File imported","Unchanged","File imported"
635311203107385718,"StepEvaluate","@","Changed","@"
635311203107385718,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203107385718,"StepEvaluate","PAT@","Unchanged","PAT@"
635311203107395718,"StepEvaluate",",","Unchanged",","
635311203107395718,"StepEvaluate","@Arg","Changed","@Arg-M"
635311203107395718,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311203107395718,"StepEvaluate","PAT@-M","Changed","[]"
635311203107405719,"StepEvaluate","SEL@import","Changed","[]"
635311203107405719,"StepEvaluate","@","Changed","[]"
635311203107405719,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311203107415719,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311203107415719,"Parsed as literal","quickSort"
635311203107415719,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311203107415719,"Parsed as literal",""
635311203107425720,"Parsed as literal",""
635311203107425720,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311203107425720,"Parsed as literal",""
635311203107425720,"Parsed as literal",""
635311203107435720,"Invalid operator","@quickSort([]) -> []","0"
635311203107435720,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311203107435720,"Parsed as literal","quickSort"
635311203107435720,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311203107445721,"Parsed as literal",""
635311203107445721,"Parsed as literal",""
635311203107445721,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311203107445721,"Parsed as literal",""
635311203107455722,"Parsed as literal",""
635311203107455722,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311203107455722,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311203107465722,"Parsed as literal","quickSort"
635311203107465722,"Parsed as literal","list"
635311203107465722,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311203107475723,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311203107475723,"Parsed as literal","quickSort"
635311203107475723,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311203107485723,"Parsed as literal","filter"
635311203107485723,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311203107485723,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311203107485723,"Parsed as literal",""
635311203107495724,"Parsed as literal","i"
635311203107495724,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311203107495724,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311203107495724,"Parsed as literal"," i "
635311203107505724,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311203107505724,"Parsed as literal"," "
635311203107505724,"Parsed as literal","list"
635311203107505724,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311203107515725,"Parsed as literal",""
635311203107515725,"Parsed as literal","list"
635311203107515725,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311203107515725,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311203107525726,"Parsed as literal",""
635311203107525726,"Parsed as literal","i"
635311203107525726,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311203107535726,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311203107535726,"Parsed as literal"," i "
635311203107535726,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311203107535726,"Parsed as literal"," "
635311203107545727,"Parsed as literal","list"
635311203107545727,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311203107545727,"Parsed as literal",""
635311203107545727,"Parsed as literal","list"
635311203107555727,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311203107555727,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311203107555727,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311203107555727,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311203107565728,"Parsed as literal",""
635311203107565728,"Parsed as literal","i"
635311203107565728,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311203107565728,"Parsed as literal"," i "
635311203107575728,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311203107575728,"Parsed as literal"," "
635311203107575728,"Parsed as literal","list"
635311203107585729,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311203107585729,"Parsed as literal",""
635311203107585729,"Parsed as literal","list"
635311203107585729,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311203107595730,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311203107595730,"Parsed as literal"," "
635311203107595730,"Parsed as literal","list "
635311203107595730,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311203107605730,"Parsed as literal","quickSort"
635311203107605730,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311203107605730,"Parsed as literal","filter"
635311203107615731,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311203107615731,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311203107615731,"Parsed as literal",""
635311203107615731,"Parsed as literal","i"
635311203107625731,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311203107625731,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311203107625731,"Parsed as literal"," i "
635311203107625731,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311203107635732,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311203107635732,"Parsed as literal"," "
635311203107635732,"Parsed as literal","list"
635311203107635732,"Parsed as literal","1"
635311203107645732,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311203107645732,"Parsed as literal",""
635311203107645732,"Parsed as literal","list"
635311203107645732,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311203107655733,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311203107655733,"Parsed as literal",""
635311203107655733,"Parsed as literal","i"
635311203107665734,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311203107665734,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311203107665734,"Parsed as literal"," i "
635311203107665734,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311203107675734,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311203107675734,"Parsed as literal"," "
635311203107675734,"Parsed as literal","list"
635311203107675734,"Parsed as literal","1"
635311203107685735,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311203107685735,"Parsed as literal",""
635311203107685735,"Parsed as literal","list"
635311203107685735,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311203107695735,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311203107695735,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311203107695735,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311203107705736,"Parsed as literal",""
635311203107705736,"Parsed as literal","i"
635311203107705736,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311203107705736,"Parsed as literal"," i "
635311203107715736,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311203107715736,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311203107715736,"Parsed as literal"," "
635311203107715736,"Parsed as literal","list"
635311203107725737,"Parsed as literal","1"
635311203107725737,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311203107725737,"Parsed as literal",""
635311203107725737,"Parsed as literal","list"
635311203107735738,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311203107735738,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311203107735738,"Parsed as literal","quickSort"
635311203107745738,"Parsed as literal","list"
635311203107745738,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311203107755739,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311203107755739,"Parsed as literal","quickSort"
635311203107755739,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311203107765739,"Parsed as literal","filter"
635311203107765739,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311203107765739,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311203107765739,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311203107775740,"Parsed as literal",""
635311203107775740,"Parsed as literal","i"
635311203107775740,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311203107775740,"Parsed as literal"," i "
635311203107785740,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311203107785740,"Parsed as literal"," "
635311203107785740,"Parsed as literal","list"
635311203107795741,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311203107795741,"Parsed as literal",""
635311203107795741,"Parsed as literal","list"
635311203107795741,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311203107805742,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311203107805742,"Parsed as literal"," "
635311203107805742,"Parsed as literal","list "
635311203107815742,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311203107815742,"Parsed as literal","quickSort"
635311203107815742,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311203107815742,"Parsed as literal","filter"
635311203107825743,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311203107825743,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311203107825743,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311203107825743,"Parsed as literal",""
635311203107835743,"Parsed as literal","i"
635311203107835743,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311203107835743,"Parsed as literal"," i "
635311203107845744,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311203107845744,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311203107845744,"Parsed as literal"," "
635311203107845744,"Parsed as literal","list"
635311203107855744,"Parsed as literal","1"
635311203107855744,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311203107855744,"Parsed as literal",""
635311203107855744,"Parsed as literal","list"
635311203107865745,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311203107865745,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311203107865745,"Parsed as literal","mergeSort"
635311203107875746,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311203107875746,"Parsed as literal",""
635311203107875746,"Parsed as literal",""
635311203107875746,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311203107885746,"Parsed as literal",""
635311203107885746,"Parsed as literal",""
635311203107885746,"Invalid operator","@mergeSort([]) -> []","0"
635311203107885746,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311203107895747,"Parsed as literal","mergeSort"
635311203107895747,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311203107895747,"Parsed as literal",""
635311203107895747,"Parsed as literal",""
635311203107905747,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311203107905747,"Parsed as literal",""
635311203107905747,"Parsed as literal",""
635311203107915748,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311203107915748,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311203107915748,"Parsed as literal","mergeSort"
635311203107915748,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311203107925748,"Parsed as literal","list"
635311203107925748,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311203107925748,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311203107925748,"Parsed as literal",""
635311203107935749,"Parsed as literal","list"
635311203107935749,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311203107935749,"Parsed as literal",""
635311203107935749,"Parsed as literal",""
635311203107945750,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311203107945750,"Parsed as literal"," "
635311203107945750,"Parsed as literal","list"
635311203107945750,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311203107955750,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311203107955750,"Parsed as literal","mergeSort"
635311203107955750,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311203107965751,"Parsed as literal","list"
635311203107965751,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311203107965751,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311203107965751,"Parsed as literal",""
635311203107975751,"Parsed as literal","list"
635311203107975751,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311203107975751,"Parsed as literal",""
635311203107975751,"Parsed as literal",""
635311203107985752,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311203107985752,"Parsed as literal"," "
635311203107985752,"Parsed as literal","list"
635311203107995752,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311203107995752,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311203107995752,"Parsed as literal","mergeSort"
635311203107995752,"Parsed as literal","list"
635311203108005753,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311203108005753,"Parsed as literal","merge"
635311203108005753,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311203108015754,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311203108015754,"Parsed as literal","mergeSort"
635311203108015754,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311203108025754,"Parsed as literal","take"
635311203108025754,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311203108025754,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311203108025754,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311203108035755,"Parsed as literal","count"
635311203108035755,"Parsed as literal","list"
635311203108035755,"Parsed as literal","2"
635311203108045755,"Parsed as literal","list"
635311203108045755,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311203108045755,"Parsed as literal","mergeSort"
635311203108045755,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311203108055756,"Parsed as literal","skip"
635311203108055756,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311203108055756,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311203108055756,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311203108065756,"Parsed as literal","count"
635311203108065756,"Parsed as literal","list"
635311203108065756,"Parsed as literal","2"
635311203108075757,"Parsed as literal","list"
635311203108075757,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311203108075757,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311203108075757,"Parsed as literal","mergeSort"
635311203108085758,"Parsed as literal","list"
635311203108085758,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311203108085758,"Parsed as literal","merge"
635311203108095758,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311203108095758,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311203108095758,"Parsed as literal","mergeSort"
635311203108105759,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311203108105759,"Parsed as literal","take"
635311203108105759,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311203108105759,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311203108115759,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311203108115759,"Parsed as literal","count"
635311203108115759,"Parsed as literal","list"
635311203108115759,"Parsed as literal","2"
635311203108125760,"Parsed as literal","list"
635311203108125760,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311203108125760,"Parsed as literal","mergeSort"
635311203108135760,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311203108135760,"Parsed as literal","skip"
635311203108135760,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311203108135760,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311203108145761,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311203108145761,"Parsed as literal","count"
635311203108145761,"Parsed as literal","list"
635311203108145761,"Parsed as literal","2"
635311203108155762,"Parsed as literal","list"
635311203108155762,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311203108155762,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311203108165762,"Parsed as literal","merge"
635311203108165762,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311203108165762,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311203108165762,"Parsed as literal",""
635311203108175763,"Parsed as literal",""
635311203108175763,"Parsed as literal","list"
635311203108175763,"Parsed as literal"," list"
635311203108175763,"Invalid operator","@merge([],list) -> list","0"
635311203108185763,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311203108185763,"Parsed as literal","merge"
635311203108185763,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311203108185763,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311203108195764,"Parsed as literal",""
635311203108195764,"Parsed as literal",""
635311203108195764,"Parsed as literal","list"
635311203108205764,"Parsed as literal"," list"
635311203108205764,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311203108205764,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311203108205764,"Parsed as literal","merge"
635311203108215765,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311203108215765,"Parsed as literal","list"
635311203108215765,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311203108215765,"Parsed as literal",""
635311203108225766,"Parsed as literal",""
635311203108225766,"Parsed as literal"," list"
635311203108225766,"Invalid operator","@merge(list,[]) -> list","0"
635311203108235766,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311203108235766,"Parsed as literal","merge"
635311203108235766,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311203108235766,"Parsed as literal","list"
635311203108245767,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311203108245767,"Parsed as literal",""
635311203108245767,"Parsed as literal",""
635311203108245767,"Parsed as literal"," list"
635311203108255767,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311203108255767,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311203108255767,"Parsed as literal","merge"
635311203108265768,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311203108265768,"Parsed as literal","left"
635311203108265768,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311203108265768,"Parsed as literal","right "
635311203108275768,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311203108275768,"Parsed as literal"," "
635311203108275768,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311203108275768,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311203108285769,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311203108285769,"Parsed as literal",""
635311203108285769,"Parsed as literal","left "
635311203108285769,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311203108295770,"Parsed as literal"," "
635311203108295770,"Parsed as literal","right"
635311203108295770,"Parsed as literal",""
635311203108305770,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311203108305770,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311203108305770,"Parsed as literal"," "
635311203108305770,"Parsed as literal","left "
635311203108315771,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311203108315771,"Parsed as literal","merge"
635311203108315771,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311203108315771,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311203108325771,"Parsed as literal",""
635311203108325771,"Parsed as literal","left"
635311203108325771,"Parsed as literal","right"
635311203108325771,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311203108335772,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311203108335772,"Parsed as literal","merge"
635311203108335772,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311203108345772,"Parsed as literal","left"
635311203108345772,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311203108345772,"Parsed as literal","right "
635311203108345772,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311203108355773,"Parsed as literal"," "
635311203108355773,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311203108355773,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311203108355773,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311203108365774,"Parsed as literal",""
635311203108365774,"Parsed as literal","left "
635311203108365774,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311203108365774,"Parsed as literal"," "
635311203108375774,"Parsed as literal","right"
635311203108375774,"Parsed as literal",""
635311203108375774,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311203108385775,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311203108385775,"Parsed as literal"," "
635311203108385775,"Parsed as literal","left "
635311203108385775,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311203108395775,"Parsed as literal","merge"
635311203108395775,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311203108395775,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311203108395775,"Parsed as literal",""
635311203108405776,"Parsed as literal","left"
635311203108405776,"Parsed as literal","right"
635311203108405776,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311203108415776,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311203108415776,"Parsed as literal","merge"
635311203108415776,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311203108415776,"Parsed as literal","left"
635311203108425777,"Parsed as literal","right"
635311203108425777,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311203108425777,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311203108425777,"Parsed as literal"," "
635311203108435778,"Parsed as literal","right "
635311203108435778,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311203108435778,"Parsed as literal","merge"
635311203108435778,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311203108445778,"Parsed as literal","left"
635311203108445778,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311203108445778,"Parsed as literal",""
635311203108455779,"Parsed as literal","right"
635311203108455779,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311203108455779,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311203108465779,"Parsed as literal","merge"
635311203108465779,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311203108465779,"Parsed as literal","left"
635311203108465779,"Parsed as literal","right"
635311203108475780,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311203108475780,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311203108475780,"Parsed as literal"," "
635311203108475780,"Parsed as literal","right "
635311203108485780,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311203108485780,"Parsed as literal","merge"
635311203108485780,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311203108485780,"Parsed as literal","left"
635311203108495781,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311203108495781,"Parsed as literal",""
635311203108495781,"Parsed as literal","right"
635311203108505782,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311203108505782,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311203108505782,"Parsed as literal","bubbleSort"
635311203108505782,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311203108515782,"Parsed as literal","list"
635311203108515782,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311203108515782,"Parsed as literal","isSorted"
635311203108515782,"Parsed as literal","list"
635311203108525783,"Parsed as literal"," list"
635311203108525783,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311203108525783,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311203108535783,"Parsed as literal","bubbleSort"
635311203108535783,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311203108535783,"Parsed as literal","list"
635311203108535783,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311203108545784,"Parsed as literal","isSorted"
635311203108545784,"Parsed as literal","list"
635311203108545784,"Parsed as literal"," list"
635311203108555784,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311203108555784,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311203108555784,"Parsed as literal","bubbleSort"
635311203108555784,"Parsed as literal","list"
635311203108565785,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311203108565785,"Parsed as literal","bubbleSort"
635311203108565785,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311203108565785,"Parsed as literal","bubbleSortPass"
635311203108575786,"Parsed as literal","list"
635311203108575786,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311203108575786,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311203108575786,"Parsed as literal","bubbleSort"
635311203108585786,"Parsed as literal","list"
635311203108585786,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311203108585786,"Parsed as literal","bubbleSort"
635311203108595787,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311203108595787,"Parsed as literal","bubbleSortPass"
635311203108595787,"Parsed as literal","list"
635311203108595787,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311203108605787,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311203108605787,"Parsed as literal","bubbleSortPass"
635311203108605787,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311203108605787,"Parsed as literal",""
635311203108615788,"Parsed as literal",""
635311203108615788,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311203108615788,"Parsed as literal",""
635311203108625788,"Parsed as literal",""
635311203108625788,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311203108625788,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311203108625788,"Parsed as literal","bubbleSortPass"
635311203108635789,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311203108635789,"Parsed as literal",""
635311203108635789,"Parsed as literal",""
635311203108635789,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311203108645790,"Parsed as literal",""
635311203108645790,"Parsed as literal",""
635311203108645790,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311203108645790,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311203108655790,"Parsed as literal","bubbleSortPass"
635311203108655790,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311203108655790,"Parsed as literal","list"
635311203108655790,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311203108665791,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311203108665791,"Parsed as literal",""
635311203108665791,"Parsed as literal","list "
635311203108665791,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311203108675791,"Parsed as literal",""
635311203108675791,"Parsed as literal",""
635311203108675791,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311203108685792,"Parsed as literal"," "
635311203108685792,"Parsed as literal","list"
635311203108685792,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311203108685792,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311203108695792,"Parsed as literal","bubbleSortPass"
635311203108695792,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311203108695792,"Parsed as literal","list"
635311203108695792,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311203108705793,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311203108705793,"Parsed as literal",""
635311203108705793,"Parsed as literal","list "
635311203108705793,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311203108715794,"Parsed as literal",""
635311203108715794,"Parsed as literal",""
635311203108715794,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311203108725794,"Parsed as literal"," "
635311203108725794,"Parsed as literal","list"
635311203108725794,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311203108735795,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311203108735795,"Parsed as literal","bubbleSortPass"
635311203108735795,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311203108735795,"Parsed as literal","list"
635311203108745795,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311203108745795,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311203108745795,"Parsed as literal",""
635311203108745795,"Parsed as literal","list "
635311203108755796,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311203108755796,"Parsed as literal"," "
635311203108755796,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311203108755796,"Parsed as literal",""
635311203108765796,"Parsed as literal","list"
635311203108765796,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311203108765796,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311203108765796,"Parsed as literal"," "
635311203108775797,"Parsed as literal","list "
635311203108775797,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311203108775797,"Parsed as literal","bubbleSortPass"
635311203108785798,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311203108785798,"Parsed as literal",""
635311203108785798,"Parsed as literal","list"
635311203108785798,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311203108795798,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311203108795798,"Parsed as literal","bubbleSortPass"
635311203108795798,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311203108795798,"Parsed as literal","list"
635311203108805799,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311203108805799,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311203108805799,"Parsed as literal",""
635311203108805799,"Parsed as literal","list "
635311203108815799,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311203108815799,"Parsed as literal"," "
635311203108815799,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311203108815799,"Parsed as literal",""
635311203108825800,"Parsed as literal","list"
635311203108825800,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311203108825800,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311203108835800,"Parsed as literal"," "
635311203108835800,"Parsed as literal","list "
635311203108835800,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311203108835800,"Parsed as literal","bubbleSortPass"
635311203108845801,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311203108845801,"Parsed as literal",""
635311203108845801,"Parsed as literal","list"
635311203108845801,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311203108855802,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311203108855802,"Parsed as literal","bubbleSortPass"
635311203108855802,"Parsed as literal","list"
635311203108865802,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311203108865802,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311203108865802,"Parsed as literal"," "
635311203108865802,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311203108875803,"Parsed as literal",""
635311203108875803,"Parsed as literal","list "
635311203108875803,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311203108875803,"Parsed as literal","bubbleSortPass"
635311203108885803,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311203108885803,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311203108885803,"Parsed as literal",""
635311203108885803,"Parsed as literal","list "
635311203108895804,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311203108895804,"Parsed as literal"," "
635311203108895804,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311203108895804,"Parsed as literal",""
635311203108905804,"Parsed as literal","list"
635311203108905804,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311203108905804,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311203108915805,"Parsed as literal","bubbleSortPass"
635311203108915805,"Parsed as literal","list"
635311203108915805,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311203108915805,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311203108925806,"Parsed as literal"," "
635311203108925806,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311203108925806,"Parsed as literal",""
635311203108925806,"Parsed as literal","list "
635311203108935806,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311203108935806,"Parsed as literal","bubbleSortPass"
635311203108935806,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311203108935806,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311203108945807,"Parsed as literal",""
635311203108945807,"Parsed as literal","list "
635311203108945807,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311203108945807,"Parsed as literal"," "
635311203108955807,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311203108955807,"Parsed as literal",""
635311203108955807,"Parsed as literal","list"
635311203108965808,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311203108965808,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311203108965808,"Parsed as literal","isSorted"
635311203108965808,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311203108975808,"Parsed as literal",""
635311203108975808,"Parsed as literal",""
635311203108975808,"Parsed as literal"," true"
635311203108975808,"Invalid operator","@isSorted([]) -> true","0"
635311203108985809,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311203108985809,"Parsed as literal","isSorted"
635311203108985809,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311203108985809,"Parsed as literal",""
635311203108995810,"Parsed as literal",""
635311203108995810,"Parsed as literal"," true"
635311203108995810,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311203109005810,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311203109005810,"Parsed as literal","isSorted"
635311203109005810,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311203109005810,"Parsed as literal","list"
635311203109015811,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311203109015811,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311203109015811,"Parsed as literal",""
635311203109015811,"Parsed as literal","list "
635311203109025811,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311203109025811,"Parsed as literal",""
635311203109025811,"Parsed as literal",""
635311203109025811,"Parsed as literal"," true"
635311203109035812,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311203109035812,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311203109035812,"Parsed as literal","isSorted"
635311203109045812,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311203109045812,"Parsed as literal","list"
635311203109045812,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311203109045812,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311203109055813,"Parsed as literal",""
635311203109055813,"Parsed as literal","list "
635311203109055813,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311203109055813,"Parsed as literal",""
635311203109065814,"Parsed as literal",""
635311203109065814,"Parsed as literal"," true"
635311203109065814,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311203109075814,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311203109075814,"Parsed as literal","isSorted"
635311203109075814,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311203109075814,"Parsed as literal","list"
635311203109085815,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311203109085815,"Parsed as literal",""
635311203109085815,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311203109085815,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311203109095815,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311203109095815,"Parsed as literal",""
635311203109095815,"Parsed as literal","list "
635311203109095815,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311203109105816,"Parsed as literal"," "
635311203109105816,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311203109105816,"Parsed as literal",""
635311203109105816,"Parsed as literal","list"
635311203109115816,"Parsed as literal",""
635311203109115816,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311203109115816,"Parsed as literal","isSorted"
635311203109125817,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311203109125817,"Parsed as literal",""
635311203109125817,"Parsed as literal","list"
635311203109125817,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311203109135818,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311203109135818,"Parsed as literal","isSorted"
635311203109135818,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311203109135818,"Parsed as literal","list"
635311203109145818,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311203109145818,"Parsed as literal",""
635311203109145818,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311203109145818,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311203109155819,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311203109155819,"Parsed as literal",""
635311203109155819,"Parsed as literal","list "
635311203109165819,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311203109165819,"Parsed as literal"," "
635311203109165819,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311203109165819,"Parsed as literal",""
635311203109175820,"Parsed as literal","list"
635311203109175820,"Parsed as literal",""
635311203109175820,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311203109175820,"Parsed as literal","isSorted"
635311203109185820,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311203109185820,"Parsed as literal",""
635311203109185820,"Parsed as literal","list"
635311203109185820,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311203109195821,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311203109195821,"Parsed as literal","isSorted"
635311203109195821,"Parsed as literal","list"
635311203109205822,"Parsed as literal"," false"
635311203109205822,"Invalid operator","@isSorted(list) -> false","0"
635311203109205822,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311203109205822,"Parsed as literal","isSorted"
635311203109215822,"Parsed as literal","list"
635311203109215822,"Parsed as literal"," false"
635311203109215822,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311203109215822,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311203109225823,"Parsed as literal","insertionSort"
635311203109225823,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311203109225823,"Parsed as literal",""
635311203109225823,"Parsed as literal",""
635311203109235823,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311203109235823,"Parsed as literal",""
635311203109235823,"Parsed as literal",""
635311203109235823,"Invalid operator","@insertionSort([]) -> []","0"
635311203109245824,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311203109245824,"Parsed as literal","insertionSort"
635311203109245824,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311203109255824,"Parsed as literal",""
635311203109255824,"Parsed as literal",""
635311203109255824,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311203109255824,"Parsed as literal",""
635311203109265825,"Parsed as literal",""
635311203109265825,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311203109265825,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311203109265825,"Parsed as literal","insertionSort"
635311203109275826,"Parsed as literal","list"
635311203109275826,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311203109275826,"Parsed as literal","insert"
635311203109285826,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311203109285826,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311203109285826,"Parsed as literal",""
635311203109285826,"Parsed as literal","list"
635311203109295827,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311203109295827,"Parsed as literal","insertionSort"
635311203109295827,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311203109295827,"Parsed as literal",""
635311203109305827,"Parsed as literal","list"
635311203109305827,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311203109315828,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311203109315828,"Parsed as literal","insertionSort"
635311203109315828,"Parsed as literal","list"
635311203109315828,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311203109325828,"Parsed as literal","insert"
635311203109325828,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311203109325828,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311203109325828,"Parsed as literal",""
635311203109335829,"Parsed as literal","list"
635311203109335829,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311203109335829,"Parsed as literal","insertionSort"
635311203109335829,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311203109345830,"Parsed as literal",""
635311203109345830,"Parsed as literal","list"
635311203109345830,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311203109355830,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311203109355830,"Parsed as literal","insert"
635311203109355830,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311203109355830,"Parsed as literal","item"
635311203109365831,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311203109365831,"Parsed as literal",""
635311203109365831,"Parsed as literal",""
635311203109365831,"Parsed as literal"," item"
635311203109375831,"Invalid operator","@insert(item,[]) -> item","0"
635311203109375831,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311203109375831,"Parsed as literal","insert"
635311203109385832,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311203109385832,"Parsed as literal","item"
635311203109385832,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311203109385832,"Parsed as literal",""
635311203109395832,"Parsed as literal",""
635311203109395832,"Parsed as literal"," item"
635311203109395832,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311203109395832,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311203109405833,"Parsed as literal","insert"
635311203109405833,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311203109405833,"Parsed as literal","item"
635311203109405833,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311203109415834,"Parsed as literal","list "
635311203109415834,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311203109415834,"Parsed as literal"," item "
635311203109425834,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311203109425834,"Parsed as literal"," "
635311203109425834,"Parsed as literal","list"
635311203109425834,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311203109435835,"Parsed as literal"," item "
635311203109435835,"Parsed as literal"," list"
635311203109435835,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311203109435835,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311203109445835,"Parsed as literal","insert"
635311203109445835,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311203109445835,"Parsed as literal","item"
635311203109445835,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311203109455836,"Parsed as literal","list "
635311203109455836,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311203109455836,"Parsed as literal"," item "
635311203109455836,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311203109465836,"Parsed as literal"," "
635311203109465836,"Parsed as literal","list"
635311203109465836,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311203109475837,"Parsed as literal"," item "
635311203109475837,"Parsed as literal"," list"
635311203109475837,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311203109475837,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311203109485838,"Parsed as literal","insert"
635311203109485838,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311203109485838,"Parsed as literal","item"
635311203109485838,"Parsed as literal","list"
635311203109495838,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311203109495838,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311203109495838,"Parsed as literal"," "
635311203109495838,"Parsed as literal","list "
635311203109505839,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311203109505839,"Parsed as literal","insert"
635311203109505839,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311203109515839,"Parsed as literal","item"
635311203109515839,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311203109515839,"Parsed as literal",""
635311203109515839,"Parsed as literal","list"
635311203109525840,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311203109525840,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311203109525840,"Parsed as literal","insert"
635311203109525840,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311203109535840,"Parsed as literal","item"
635311203109535840,"Parsed as literal","list"
635311203109535840,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311203109535840,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311203109545841,"Parsed as literal"," "
635311203109545841,"Parsed as literal","list "
635311203109545841,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311203109555842,"Parsed as literal","insert"
635311203109555842,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311203109555842,"Parsed as literal","item"
635311203109555842,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311203109565842,"Parsed as literal",""
635311203109565842,"Parsed as literal","list"
635311203109565842,"StepEvaluate","->","Changed","Declared @quickSort"
635311203109565842,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311203109575843,"StepEvaluate","->","Changed","Declared @quickSort"
635311203109575843,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311203109575843,"StepEvaluate","->","Changed","Declared @mergeSort"
635311203109575843,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311203109585843,"StepEvaluate","->","Changed","Declared @mergeSort"
635311203109585843,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311203109585843,"StepEvaluate","->","Changed","Declared @mergeSort"
635311203109585843,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311203109595844,"StepEvaluate","->","Changed","Declared @merge"
635311203109595844,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311203109595844,"StepEvaluate","->","Changed","Declared @merge"
635311203109595844,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311203109605844,"StepEvaluate","->","Changed","Declared @merge"
635311203109605844,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311203109605844,"StepEvaluate","->","Changed","Declared @merge"
635311203109605844,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311203109615845,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311203109615845,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311203109615845,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311203109615845,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311203109625846,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311203109625846,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311203109625846,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311203109625846,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311203109635846,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311203109635846,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311203109635846,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311203109645847,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311203109645847,"StepEvaluate","->","Changed","Declared @isSorted"
635311203109645847,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311203109645847,"StepEvaluate","->","Changed","Declared @isSorted"
635311203109655847,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311203109655847,"StepEvaluate","->","Changed","Declared @isSorted"
635311203109655847,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311203109655847,"StepEvaluate","->","Changed","Declared @isSorted"
635311203109665848,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311203109665848,"StepEvaluate","->","Changed","Declared @insertionSort"
635311203109665848,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311203109665848,"StepEvaluate","->","Changed","Declared @insertionSort"
635311203109675849,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311203109675849,"StepEvaluate","->","Changed","Declared @insert"
635311203109675849,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311203109675849,"StepEvaluate","->","Changed","Declared @insert"
635311203109685849,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311203109685849,"StepEvaluate","->","Changed","Declared @insert"
635311203109685849,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311203109685849,"StepEvaluate","[]","Changed","File imported"
635311203109695850,"StepEvaluate","File imported","Unchanged","File imported"
635311203109695850,"StepEvaluate","[]","Changed","File imported"
635311203109695850,"StepEvaluate","File imported","Unchanged","File imported"
635311203109695850,"ParseInternal","t:[1,2,3,4,5] = [2,3,4,5]","0","EqualityOperator","0","15","t:[1,2,3,4,5] "," [2,3,4,5]"
635311203109705850,"ParseInternal","t:[1,2,3,4,5] ","0","TailOperator","0","2","","[1,2,3,4,5] "
635311203109705850,"Parsed as literal",""
635311203109705850,"ParseInternal","[1,2,3,4,5] ","2","OpenBracketOperator","2","2","1,2,3,4,5",""
635311203109705850,"ParseInternal","1,2,3,4,5","2","CommaOperator","2","4","1","2,3,4,5"
635311203109715851,"Parsed as literal","1"
635311203109715851,"ParseInternal","2,3,4,5","4","CommaOperator","4","6","2","3,4,5"
635311203109715851,"Parsed as literal","2"
635311203109715851,"ParseInternal","3,4,5","6","CommaOperator","6","8","3","4,5"
635311203109725851,"Parsed as literal","3"
635311203109725851,"ParseInternal","4,5","8","CommaOperator","8","10","4","5"
635311203109725851,"Parsed as literal","4"
635311203109725851,"Parsed as literal","5"
635311203109735852,"Parsed as literal",""
635311203109735852,"ParseInternal"," [2,3,4,5]","15","OpenBracketOperator","16","15","2,3,4,5",""
635311203109735852,"ParseInternal","2,3,4,5","16","CommaOperator","16","18","2","3,4,5"
635311203109745853,"Parsed as literal","2"
635311203109745853,"ParseInternal","3,4,5","18","CommaOperator","18","20","3","4,5"
635311203109745853,"Parsed as literal","3"
635311203109745853,"ParseInternal","4,5","20","CommaOperator","20","22","4","5"
635311203109755853,"Parsed as literal","4"
635311203109755853,"Parsed as literal","5"
635311203109755853,"Parsed as literal",""
635311203126686821,"StepEvaluate","==","Unchanged","=="
635311203126706823,"StepEvaluate","tail","Changed","tail"
635311203126746825,"StepEvaluate","[]","Unchanged","[]"
635311203126756825,"StepEvaluate",",","Unchanged",","
635311203126766826,"StepEvaluate","2","Unchanged","2"
635311203126776827,"StepEvaluate",",","Unchanged",","
635311203126786827,"StepEvaluate","3","Unchanged","3"
635311203126786827,"StepEvaluate",",","Unchanged",","
635311203126796828,"StepEvaluate","4","Unchanged","4"
635311203126806828,"StepEvaluate",",","Unchanged",","
635311203126806828,"StepEvaluate","5","Unchanged","5"
635311203126816829,"StepEvaluate","==","Unchanged","=="
635311203126816829,"StepEvaluate","tail","Changed",","
635311203126826829,"StepEvaluate","[]","Unchanged","[]"
635311203126826829,"StepEvaluate",",","Unchanged",","
635311203126836830,"StepEvaluate","2","Unchanged","2"
635311203126836830,"StepEvaluate",",","Unchanged",","
635311203126846831,"StepEvaluate","3","Unchanged","3"
635311203126846831,"StepEvaluate",",","Unchanged",","
635311203126856831,"StepEvaluate","4","Unchanged","4"
635311203126856831,"StepEvaluate",",","Unchanged",","
635311203126866832,"StepEvaluate","5","Unchanged","5"
635311203126876832,"StepEvaluate","==","Changed","True"
635311203126886833,"StepEvaluate","True","Unchanged","True"
635311214810545100,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311214810565101,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311214810575102,"Parsed as literal","import"
635311214810585102,"Parsed as literal","file"
635311214810595103,"Parsed as literal"," 0"
635311214810605103,"Invalid operator","@import(file) -> 0","0"
635311214810615104,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311214810625105,"Parsed as literal","import"
635311214810625105,"Parsed as literal","file"
635311214810635105,"Parsed as literal"," 0"
635311214810645106,"StepEvaluate","->","Changed","Declared @import"
635311214810645106,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311214810655106,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311214810665107,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311214810675107,"Parsed as literal","operator"
635311214810675107,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311214810765113,"Parsed as literal","op"
635311214810785114,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311214810795114,"Parsed as literal","fn"
635311214810805115,"Parsed as literal",""
635311214810815115,"Invalid operator","@fn","12"
635311214810825116,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311214810825116,"Parsed as literal","fn"
635311214810835117,"Parsed as literal",""
635311214810845117,"Invalid operator","@fn","12"
635311214810845117,"Parsed as literal","@fn"
635311214810855118,"Parsed as literal"," 0"
635311214810865118,"Invalid operator","@operator(op,@fn) -> 0","0"
635311214810875119,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311214810875119,"Parsed as literal","operator"
635311214810885119,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311214810895120,"Parsed as literal","op"
635311214810905121,"Parsed as literal","@fn"
635311214810905121,"Parsed as literal"," 0"
635311214810915121,"StepEvaluate","->","Changed","Declared @operator"
635311214810915121,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311214810925122,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311214810925122,"Parsed as literal","import"
635311214810935122,"Parsed as literal","main.toast"
635311214810935122,"StepEvaluate","@","Changed","@"
635311214810935122,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214810945123,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214810945123,"StepEvaluate",",","Unchanged",","
635311214810945123,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214810955123,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214810955123,"StepEvaluate","PAT@-M","Changed","[]"
635311214810955123,"StepEvaluate","SEL@import","Changed","[]"
635311214810965124,"StepEvaluate","@","Changed","[]"
635311214810965124,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311214810975125,"Parsed as literal","import"
635311214810975125,"Parsed as literal","'core.toast'"
635311214810975125,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311214810985125,"Parsed as literal","import"
635311214810985125,"Parsed as literal","'list.toast'"
635311214810995126,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311214810995126,"Parsed as literal","import"
635311214810995126,"Parsed as literal","'math.toast'"
635311214811005126,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311214811005126,"Parsed as literal","import"
635311214811005126,"Parsed as literal","'sorting.toast'"
635311214811015127,"StepEvaluate","@","Changed","@"
635311214811015127,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214811025127,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214811025127,"StepEvaluate",",","Unchanged",","
635311214811025127,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214811035128,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214811035128,"StepEvaluate","PAT@-M","Changed","[]"
635311214811035128,"StepEvaluate","SEL@import","Changed","[]"
635311214811045129,"StepEvaluate","@","Changed","[]"
635311214811045129,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311214811045129,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311214811055129,"Parsed as literal","map"
635311214811055129,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311214811065130,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311214811065130,"Parsed as literal","func"
635311214811065130,"Parsed as literal",""
635311214811075130,"Invalid operator","@func","4"
635311214811075130,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311214811075130,"Parsed as literal","func"
635311214811085131,"Parsed as literal",""
635311214811085131,"Invalid operator","@func","4"
635311214811095131,"Parsed as literal","@func"
635311214811095131,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311214811095131,"Parsed as literal",""
635311214811105132,"Parsed as literal",""
635311214811105132,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311214811105132,"Parsed as literal",""
635311214811115133,"Parsed as literal",""
635311214811115133,"Invalid operator","@map(@func, []) -> []","0"
635311214811125133,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311214811125133,"Parsed as literal","map"
635311214811125133,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311214811135134,"Parsed as literal","@func"
635311214811135134,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311214811135134,"Parsed as literal",""
635311214811145134,"Parsed as literal",""
635311214811145134,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311214811155135,"Parsed as literal",""
635311214811155135,"Parsed as literal",""
635311214811155135,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311214811165135,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311214811165135,"Parsed as literal","map"
635311214811175136,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311214811175136,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311214811175136,"Parsed as literal","func"
635311214811185137,"Parsed as literal",""
635311214811185137,"Invalid operator","@func","4"
635311214811195137,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311214811195137,"Parsed as literal","func"
635311214811195137,"Parsed as literal",""
635311214811205138,"Invalid operator","@func","4"
635311214811205138,"Parsed as literal","@func"
635311214811205138,"Parsed as literal"," list"
635311214811215138,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311214811215138,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311214811215138,"Parsed as literal","func"
635311214811225139,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311214811225139,"Parsed as literal",""
635311214811225139,"Parsed as literal","list"
635311214811225139,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311214811235139,"Parsed as literal","map"
635311214811235139,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311214811235139,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311214811245140,"Parsed as literal","func"
635311214811245140,"Parsed as literal",""
635311214811245140,"Invalid operator","@func","41"
635311214811245140,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311214811255141,"Parsed as literal","func"
635311214811255141,"Parsed as literal",""
635311214811255141,"Invalid operator","@func","41"
635311214811265141,"Parsed as literal","@func"
635311214811265141,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311214811265141,"Parsed as literal",""
635311214811265141,"Parsed as literal","list"
635311214811275142,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311214811275142,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311214811275142,"Parsed as literal","map"
635311214811275142,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311214811285142,"Parsed as literal","@func"
635311214811285142,"Parsed as literal"," list"
635311214811285142,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311214811295143,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311214811295143,"Parsed as literal","func"
635311214811295143,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311214811305143,"Parsed as literal",""
635311214811305143,"Parsed as literal","list"
635311214811305143,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311214811305143,"Parsed as literal","map"
635311214811315144,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311214811315144,"Parsed as literal","@func"
635311214811315144,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311214811315144,"Parsed as literal",""
635311214811325145,"Parsed as literal","list"
635311214811325145,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311214811325145,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311214811335145,"Parsed as literal","filter"
635311214811335145,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311214811335145,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311214811335145,"Parsed as literal","pred"
635311214811345146,"Parsed as literal",""
635311214811345146,"Invalid operator","@pred","7"
635311214811345146,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311214811355146,"Parsed as literal","pred"
635311214811355146,"Parsed as literal",""
635311214811355146,"Invalid operator","@pred","7"
635311214811355146,"Parsed as literal","@pred"
635311214811365147,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311214811365147,"Parsed as literal",""
635311214811365147,"Parsed as literal",""
635311214811365147,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311214811375147,"Parsed as literal",""
635311214811375147,"Parsed as literal",""
635311214811375147,"Invalid operator","@filter(@pred,[]) -> []","0"
635311214811385148,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311214811385148,"Parsed as literal","filter"
635311214811385148,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311214811385148,"Parsed as literal","@pred"
635311214811395149,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311214811395149,"Parsed as literal",""
635311214811395149,"Parsed as literal",""
635311214811395149,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311214811405149,"Parsed as literal",""
635311214811405149,"Parsed as literal",""
635311214811405149,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311214811415150,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311214811415150,"Parsed as literal","filter"
635311214811415150,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311214811425150,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311214811425150,"Parsed as literal","pred"
635311214811425150,"Parsed as literal",""
635311214811425150,"Invalid operator","@pred","7"
635311214811435151,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311214811435151,"Parsed as literal","pred"
635311214811435151,"Parsed as literal",""
635311214811445151,"Invalid operator","@pred","7"
635311214811445151,"Parsed as literal","@pred"
635311214811445151,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311214811445151,"Parsed as literal"," list "
635311214811455152,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311214811455152,"Parsed as literal","pred"
635311214811455152,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311214811455152,"Parsed as literal",""
635311214811465153,"Parsed as literal","list"
635311214811465153,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311214811465153,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311214811475153,"Parsed as literal"," "
635311214811475153,"Parsed as literal","list "
635311214811475153,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311214811475153,"Parsed as literal","filter"
635311214811485154,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311214811485154,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311214811485154,"Parsed as literal","pred"
635311214811495154,"Parsed as literal",""
635311214811495154,"Invalid operator","@pred","56"
635311214811495154,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311214811495154,"Parsed as literal","pred"
635311214811505155,"Parsed as literal",""
635311214811505155,"Invalid operator","@pred","56"
635311214811505155,"Parsed as literal","@pred"
635311214811505155,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311214811515155,"Parsed as literal"," "
635311214811515155,"Parsed as literal","list"
635311214811515155,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311214811525156,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311214811525156,"Parsed as literal","filter"
635311214811525156,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311214811525156,"Parsed as literal","@pred"
635311214811535157,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311214811535157,"Parsed as literal"," list "
635311214811535157,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311214811545157,"Parsed as literal","pred"
635311214811545157,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311214811545157,"Parsed as literal",""
635311214811545157,"Parsed as literal","list"
635311214811555158,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311214811555158,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311214811555158,"Parsed as literal"," "
635311214811565158,"Parsed as literal","list "
635311214811565158,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311214811565158,"Parsed as literal","filter"
635311214811565158,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311214811575159,"Parsed as literal","@pred"
635311214811575159,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311214811575159,"Parsed as literal"," "
635311214811585159,"Parsed as literal","list"
635311214811585159,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311214811585159,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311214811585159,"Parsed as literal","filter"
635311214811595160,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311214811595160,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311214811595160,"Parsed as literal","pred"
635311214811595160,"Parsed as literal",""
635311214811605161,"Invalid operator","@pred","7"
635311214811605161,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311214811605161,"Parsed as literal","pred"
635311214811605161,"Parsed as literal",""
635311214811615161,"Invalid operator","@pred","7"
635311214811615161,"Parsed as literal","@pred"
635311214811615161,"Parsed as literal","list"
635311214811625162,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311214811625162,"Parsed as literal","filter"
635311214811625162,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311214811625162,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311214811635162,"Parsed as literal","pred"
635311214811635162,"Parsed as literal",""
635311214811635162,"Invalid operator","@pred","30"
635311214811635162,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311214811645163,"Parsed as literal","pred"
635311214811645163,"Parsed as literal",""
635311214811645163,"Invalid operator","@pred","30"
635311214811645163,"Parsed as literal","@pred"
635311214811655163,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311214811655163,"Parsed as literal",""
635311214811655163,"Parsed as literal","list"
635311214811655163,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311214811665164,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311214811665164,"Parsed as literal","filter"
635311214811665164,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311214811665164,"Parsed as literal","@pred"
635311214811675165,"Parsed as literal","list"
635311214811675165,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311214811675165,"Parsed as literal","filter"
635311214811685165,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311214811685165,"Parsed as literal","@pred"
635311214811685165,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311214811685165,"Parsed as literal",""
635311214811695166,"Parsed as literal","list"
635311214811695166,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311214811695166,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311214811705166,"Parsed as literal","call"
635311214811705166,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311214811705166,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311214811705166,"Parsed as literal","fun"
635311214811715167,"Parsed as literal",""
635311214811715167,"Invalid operator","@fun","5"
635311214811715167,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311214811715167,"Parsed as literal","fun"
635311214811725167,"Parsed as literal",""
635311214811725167,"Invalid operator","@fun","5"
635311214811725167,"Parsed as literal","@fun"
635311214811735168,"Parsed as literal","arg"
635311214811735168,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311214811735168,"Parsed as literal","fun"
635311214811735168,"Parsed as literal","arg"
635311214811745169,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311214811745169,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311214811745169,"Parsed as literal","call"
635311214811755169,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311214811755169,"Parsed as literal","@fun"
635311214811755169,"Parsed as literal","arg"
635311214811755169,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311214811765170,"Parsed as literal","fun"
635311214811765170,"Parsed as literal","arg"
635311214811765170,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311214811765170,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311214811775170,"Parsed as literal","curry"
635311214811775170,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311214811775170,"Parsed as literal","seed"
635311214811785171,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311214811785171,"Parsed as literal",""
635311214811785171,"Parsed as literal",""
635311214811785171,"Parsed as literal"," seed"
635311214811795171,"Invalid operator","@curry(seed,[]) -> seed","0"
635311214811795171,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311214811795171,"Parsed as literal","curry"
635311214811805172,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311214811805172,"Parsed as literal","seed"
635311214811805172,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311214811805172,"Parsed as literal",""
635311214811815173,"Parsed as literal",""
635311214811815173,"Parsed as literal"," seed"
635311214811815173,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311214811825173,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311214811825173,"Parsed as literal","curry"
635311214811825173,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311214811825173,"Parsed as literal","seed"
635311214811835174,"Parsed as literal"," funcList"
635311214811835174,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311214811835174,"Parsed as literal","curry"
635311214811835174,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311214811845174,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311214811845174,"Parsed as literal","call"
635311214811845174,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311214811855175,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311214811855175,"Parsed as literal",""
635311214811855175,"Parsed as literal","funcList"
635311214811855175,"Parsed as literal","seed"
635311214811865175,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311214811865175,"Parsed as literal",""
635311214811865175,"Parsed as literal","funcList"
635311214811875176,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311214811875176,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311214811875176,"Parsed as literal","curry"
635311214811875176,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311214811885177,"Parsed as literal","seed"
635311214811885177,"Parsed as literal"," funcList"
635311214811885177,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311214811885177,"Parsed as literal","curry"
635311214811895177,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311214811895177,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311214811895177,"Parsed as literal","call"
635311214811905178,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311214811905178,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311214811915178,"Parsed as literal",""
635311214811925179,"Parsed as literal","funcList"
635311214811925179,"Parsed as literal","seed"
635311214811925179,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311214811935179,"Parsed as literal",""
635311214811935179,"Parsed as literal","funcList"
635311214811935179,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311214811935179,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311214811945180,"Parsed as literal","fold"
635311214811945180,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311214811945180,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311214811955181,"Parsed as literal","func"
635311214811955181,"Parsed as literal",""
635311214811955181,"Invalid operator","@func","5"
635311214811955181,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311214811965181,"Parsed as literal","func"
635311214811965181,"Parsed as literal",""
635311214811965181,"Invalid operator","@func","5"
635311214811965181,"Parsed as literal","@func"
635311214811975182,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311214811975182,"Parsed as literal",""
635311214811975182,"Parsed as literal",""
635311214811985182,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311214811985182,"Parsed as literal",""
635311214811985182,"Parsed as literal",""
635311214811985182,"Invalid operator","@fold(@func,[]) -> []","0"
635311214811995183,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311214811995183,"Parsed as literal","fold"
635311214811995183,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311214811995183,"Parsed as literal","@func"
635311214812005183,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311214812005183,"Parsed as literal",""
635311214812005183,"Parsed as literal",""
635311214812015184,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311214812015184,"Parsed as literal",""
635311214812015184,"Parsed as literal",""
635311214812015184,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311214812025185,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311214812025185,"Parsed as literal","fold"
635311214812025185,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311214812035185,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311214812035185,"Parsed as literal","func"
635311214812035185,"Parsed as literal",""
635311214812035185,"Invalid operator","@func","5"
635311214812045186,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311214812045186,"Parsed as literal","func"
635311214812045186,"Parsed as literal",""
635311214812045186,"Invalid operator","@func","5"
635311214812055186,"Parsed as literal","@func"
635311214812055186,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311214812055186,"Parsed as literal","list"
635311214812065187,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311214812065187,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311214812065187,"Parsed as literal",""
635311214812065187,"Parsed as literal","list"
635311214812075187,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311214812075187,"Parsed as literal",""
635311214812075187,"Parsed as literal",""
635311214812085188,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311214812085188,"Parsed as literal"," "
635311214812085188,"Parsed as literal","list"
635311214812085188,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311214812095189,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311214812095189,"Parsed as literal","fold"
635311214812095189,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311214812095189,"Parsed as literal","@func"
635311214812105189,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311214812105189,"Parsed as literal","list"
635311214812105189,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311214812115190,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311214812115190,"Parsed as literal",""
635311214812115190,"Parsed as literal","list"
635311214812115190,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311214812125190,"Parsed as literal",""
635311214812125190,"Parsed as literal",""
635311214812125190,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311214812125190,"Parsed as literal"," "
635311214812135191,"Parsed as literal","list"
635311214812135191,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311214812135191,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311214812145191,"Parsed as literal","fold"
635311214812145191,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311214812145191,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311214812155192,"Parsed as literal","func"
635311214812155192,"Parsed as literal",""
635311214812155192,"Invalid operator","@func","5"
635311214812155192,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311214812165193,"Parsed as literal","func"
635311214812165193,"Parsed as literal",""
635311214812165193,"Invalid operator","@func","5"
635311214812165193,"Parsed as literal","@func"
635311214812175193,"Parsed as literal","list"
635311214812175193,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311214812175193,"Parsed as literal","fold"
635311214812185194,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311214812185194,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311214812185194,"Parsed as literal","func"
635311214812185194,"Parsed as literal",""
635311214812195194,"Invalid operator","@func","26"
635311214812195194,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311214812195194,"Parsed as literal","func"
635311214812195194,"Parsed as literal",""
635311214812205195,"Invalid operator","@func","26"
635311214812205195,"Parsed as literal","@func"
635311214812205195,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311214812205195,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311214812215195,"Parsed as literal","func"
635311214812215195,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311214812215195,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311214812225196,"Parsed as literal",""
635311214812225196,"Parsed as literal","list"
635311214812225196,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311214812225196,"Parsed as literal",""
635311214812235197,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311214812235197,"Parsed as literal",""
635311214812235197,"Parsed as literal","list"
635311214812235197,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311214812245197,"Parsed as literal"," "
635311214812245197,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311214812245197,"Parsed as literal",""
635311214812245197,"Parsed as literal","list"
635311214812255198,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311214812255198,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311214812255198,"Parsed as literal","fold"
635311214812265198,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311214812265198,"Parsed as literal","@func"
635311214812265198,"Parsed as literal","list"
635311214812275199,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311214812275199,"Parsed as literal","fold"
635311214812275199,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311214812275199,"Parsed as literal","@func"
635311214812285199,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311214812285199,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311214812285199,"Parsed as literal","func"
635311214812285199,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311214812295200,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311214812295200,"Parsed as literal",""
635311214812295200,"Parsed as literal","list"
635311214812305201,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311214812305201,"Parsed as literal",""
635311214812305201,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311214812305201,"Parsed as literal",""
635311214812315201,"Parsed as literal","list"
635311214812315201,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311214812315201,"Parsed as literal"," "
635311214812315201,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311214812325202,"Parsed as literal",""
635311214812325202,"Parsed as literal","list"
635311214812325202,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311214812335202,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311214812335202,"Parsed as literal","foldr"
635311214812335202,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311214812335202,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311214812345203,"Parsed as literal","func"
635311214812345203,"Parsed as literal",""
635311214812345203,"Invalid operator","@func","6"
635311214812345203,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311214812355203,"Parsed as literal","func"
635311214812355203,"Parsed as literal",""
635311214812355203,"Invalid operator","@func","6"
635311214812365204,"Parsed as literal","@func"
635311214812365204,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311214812365204,"Parsed as literal",""
635311214812365204,"Parsed as literal",""
635311214812375205,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311214812375205,"Parsed as literal",""
635311214812375205,"Parsed as literal",""
635311214812375205,"Invalid operator","@foldr(@func,[]) -> []","0"
635311214812385205,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311214812385205,"Parsed as literal","foldr"
635311214812385205,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311214812395206,"Parsed as literal","@func"
635311214812395206,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311214812395206,"Parsed as literal",""
635311214812395206,"Parsed as literal",""
635311214812405206,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311214812405206,"Parsed as literal",""
635311214812405206,"Parsed as literal",""
635311214812415207,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311214812415207,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311214812415207,"Parsed as literal","foldr"
635311214812415207,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311214812425207,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311214812425207,"Parsed as literal","func"
635311214812425207,"Parsed as literal",""
635311214812435208,"Invalid operator","@func","6"
635311214812435208,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311214812435208,"Parsed as literal","func"
635311214812435208,"Parsed as literal",""
635311214812445209,"Invalid operator","@func","6"
635311214812445209,"Parsed as literal","@func"
635311214812445209,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311214812445209,"Parsed as literal","list"
635311214812455209,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311214812455209,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311214812455209,"Parsed as literal",""
635311214812455209,"Parsed as literal","list"
635311214812465210,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311214812465210,"Parsed as literal",""
635311214812465210,"Parsed as literal",""
635311214812475210,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311214812475210,"Parsed as literal"," "
635311214812475210,"Parsed as literal","list"
635311214812475210,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311214812485211,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311214812485211,"Parsed as literal","foldr"
635311214812485211,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311214812485211,"Parsed as literal","@func"
635311214812495211,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311214812495211,"Parsed as literal","list"
635311214812495211,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311214812505212,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311214812505212,"Parsed as literal",""
635311214812505212,"Parsed as literal","list"
635311214812505212,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311214812515213,"Parsed as literal",""
635311214812515213,"Parsed as literal",""
635311214812515213,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311214812525213,"Parsed as literal"," "
635311214812525213,"Parsed as literal","list"
635311214812525213,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311214812535214,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311214812535214,"Parsed as literal","foldr"
635311214812535214,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311214812535214,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311214812545214,"Parsed as literal","func"
635311214812545214,"Parsed as literal",""
635311214812545214,"Invalid operator","@func","6"
635311214812545214,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311214812555215,"Parsed as literal","func"
635311214812555215,"Parsed as literal",""
635311214812555215,"Invalid operator","@func","6"
635311214812555215,"Parsed as literal","@func"
635311214812565215,"Parsed as literal","list"
635311214812565215,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311214812565215,"Parsed as literal","func"
635311214812575216,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311214812575216,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311214812575216,"Parsed as literal","foldr"
635311214812585217,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311214812585217,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311214812585217,"Parsed as literal","func"
635311214812585217,"Parsed as literal",""
635311214812595217,"Invalid operator","@func","33"
635311214812595217,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311214812595217,"Parsed as literal","func"
635311214812595217,"Parsed as literal",""
635311214812605218,"Invalid operator","@func","33"
635311214812605218,"Parsed as literal","@func"
635311214812605218,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311214812605218,"Parsed as literal","superHead"
635311214812615218,"Parsed as literal","list"
635311214812615218,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311214812615218,"Parsed as literal","last"
635311214812625219,"Parsed as literal","list"
635311214812625219,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311214812625219,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311214812625219,"Parsed as literal","foldr"
635311214812635219,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311214812635219,"Parsed as literal","@func"
635311214812635219,"Parsed as literal","list"
635311214812645220,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311214812645220,"Parsed as literal","func"
635311214812645220,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311214812655221,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311214812655221,"Parsed as literal","foldr"
635311214812655221,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311214812655221,"Parsed as literal","@func"
635311214812665221,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311214812665221,"Parsed as literal","superHead"
635311214812665221,"Parsed as literal","list"
635311214812675222,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311214812675222,"Parsed as literal","last"
635311214812675222,"Parsed as literal","list"
635311214812675222,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311214812685222,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311214812685222,"Parsed as literal","superHead"
635311214812685222,"Parsed as literal","list"
635311214812695223,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311214812695223,"Parsed as literal","reverse"
635311214812695223,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311214812695223,"Parsed as literal",""
635311214812705223,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311214812705223,"Parsed as literal","reverse"
635311214812705223,"Parsed as literal","list"
635311214812715224,"StepEvaluate","->","Changed","Declared @map"
635311214812715224,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311214812715224,"StepEvaluate","->","Changed","Declared @map"
635311214812715224,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311214812725225,"StepEvaluate","->","Changed","Declared @filter"
635311214812725225,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311214812725225,"StepEvaluate","->","Changed","Declared @filter"
635311214812725225,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311214812735225,"StepEvaluate","->","Changed","Declared @filter"
635311214812735225,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311214812735225,"StepEvaluate","->","Changed","Declared @call"
635311214812735225,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311214812745226,"StepEvaluate","->","Changed","Declared @curry"
635311214812745226,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311214812745226,"StepEvaluate","->","Changed","Declared @curry"
635311214812755226,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311214812755226,"StepEvaluate","->","Changed","Declared @fold"
635311214812755226,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311214812755226,"StepEvaluate","->","Changed","Declared @fold"
635311214812755226,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311214812765227,"StepEvaluate","->","Changed","Declared @fold"
635311214812765227,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311214812765227,"StepEvaluate","->","Changed","Declared @foldr"
635311214812775227,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311214812775227,"StepEvaluate","->","Changed","Declared @foldr"
635311214812775227,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311214812775227,"StepEvaluate","->","Changed","Declared @foldr"
635311214812785228,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311214812785228,"StepEvaluate","==","Unchanged","=="
635311214812785228,"StepEvaluate","@","Changed","@"
635311214812785228,"StepEvaluate","@","Changed","@"
635311214812795229,"StepEvaluate","==","Unchanged","=="
635311214812795229,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311214812795229,"StepEvaluate","superHead","Unchanged","superHead"
635311214812805229,"StepEvaluate",",","Unchanged",","
635311214812805229,"StepEvaluate","list","Unchanged","list"
635311214812805229,"StepEvaluate","@","Changed","@"
635311214812805229,"StepEvaluate","==","Unchanged","=="
635311214812815230,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311214812815230,"StepEvaluate","superHead","Unchanged","superHead"
635311214812815230,"StepEvaluate",",","Unchanged",","
635311214812815230,"StepEvaluate","list","Unchanged","list"
635311214812825230,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311214812825230,"StepEvaluate","reverse","Unchanged","reverse"
635311214812825230,"StepEvaluate",",","Unchanged",","
635311214812825230,"StepEvaluate","tail","Unchanged","tail"
635311214812825230,"StepEvaluate","@","Changed","@"
635311214812835231,"StepEvaluate","==","Unchanged","=="
635311214812835231,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311214812835231,"StepEvaluate","superHead","Unchanged","superHead"
635311214812845232,"StepEvaluate",",","Unchanged",","
635311214812845232,"StepEvaluate","list","Unchanged","list"
635311214812845232,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311214812845232,"StepEvaluate","reverse","Unchanged","reverse"
635311214812855232,"StepEvaluate",",","Unchanged",","
635311214812855232,"StepEvaluate","tail","Unchanged","tail"
635311214812855232,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311214812855232,"StepEvaluate","reverse","Unchanged","reverse"
635311214812865233,"StepEvaluate",",","Unchanged",","
635311214812865233,"StepEvaluate","list","Unchanged","list"
635311214812865233,"StepEvaluate","[]","Changed","File imported"
635311214812865233,"StepEvaluate","File imported","Unchanged","File imported"
635311214812875233,"StepEvaluate","@","Changed","@"
635311214812875233,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214812875233,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214812875233,"StepEvaluate",",","Unchanged",","
635311214812885234,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214812885234,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214812885234,"StepEvaluate","PAT@-M","Changed","[]"
635311214812885234,"StepEvaluate","SEL@import","Changed","[]"
635311214812895234,"StepEvaluate","@","Changed","[]"
635311214812895234,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311214812895234,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311214812905235,"Parsed as literal","zipWith"
635311214812905235,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311214812905235,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311214812905235,"Parsed as literal","func"
635311214812915236,"Parsed as literal",""
635311214812915236,"Invalid operator","@func","8"
635311214812915236,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311214812925236,"Parsed as literal","func"
635311214812925236,"Parsed as literal",""
635311214812925236,"Invalid operator","@func","8"
635311214812925236,"Parsed as literal","@func"
635311214812935237,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311214812935237,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311214812935237,"Parsed as literal",""
635311214812935237,"Parsed as literal",""
635311214812945237,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311214812945237,"Parsed as literal",""
635311214812945237,"Parsed as literal",""
635311214812955238,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311214812965238,"Parsed as literal",""
635311214812965238,"Parsed as literal",""
635311214812965238,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311214812975239,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311214812975239,"Parsed as literal","zipWith"
635311214812975239,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311214812975239,"Parsed as literal","@func"
635311214812985240,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311214812985240,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311214812985240,"Parsed as literal",""
635311214812995240,"Parsed as literal",""
635311214812995240,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311214812995240,"Parsed as literal",""
635311214813005241,"Parsed as literal",""
635311214813005241,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311214813005241,"Parsed as literal",""
635311214813015241,"Parsed as literal",""
635311214813015241,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311214813235254,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311214813445266,"Parsed as literal","zipWith"
635311214813655278,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311214813665278,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311214813675279,"Parsed as literal","func"
635311214813885291,"Parsed as literal",""
635311214814095303,"Invalid operator","@func","8"
635311214814105304,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311214814315316,"Parsed as literal","func"
635311214814325316,"Parsed as literal",""
635311214814335317,"Invalid operator","@func","8"
635311214814345317,"Parsed as literal","@func"
635311214814345317,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311214814355318,"Parsed as literal","list1"
635311214814365318,"Parsed as literal","list2"
635311214814375319,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311214814385320,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311214814385320,"Parsed as literal","func"
635311214814395320,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311214814405321,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311214814405321,"Parsed as literal",""
635311214814415321,"Parsed as literal","list1"
635311214814425322,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311214814435322,"Parsed as literal",""
635311214814435322,"Parsed as literal","list2"
635311214814445323,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311214814455324,"Parsed as literal","zipWith"
635311214814465324,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311214814465324,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311214814475325,"Parsed as literal","func"
635311214814485325,"Parsed as literal",""
635311214814485325,"Invalid operator","@func","64"
635311214814495326,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311214814505326,"Parsed as literal","func"
635311214814505326,"Parsed as literal",""
635311214814515327,"Invalid operator","@func","64"
635311214814525328,"Parsed as literal","@func"
635311214814535328,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311214814535328,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311214814545329,"Parsed as literal",""
635311214814545329,"Parsed as literal","list1"
635311214814555329,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311214814565330,"Parsed as literal",""
635311214814565330,"Parsed as literal","list2"
635311214814575330,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311214814585331,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311214814595332,"Parsed as literal","zipWith"
635311214814595332,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311214814605332,"Parsed as literal","@func"
635311214814615333,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311214814615333,"Parsed as literal","list1"
635311214814625333,"Parsed as literal","list2"
635311214814635334,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311214814645334,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311214814645334,"Parsed as literal","func"
635311214814655335,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311214814655335,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311214814665336,"Parsed as literal",""
635311214814675336,"Parsed as literal","list1"
635311214814675336,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311214814685337,"Parsed as literal",""
635311214814695337,"Parsed as literal","list2"
635311214814695337,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311214814705338,"Parsed as literal","zipWith"
635311214814715338,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311214814725339,"Parsed as literal","@func"
635311214814725339,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311214814735340,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311214814735340,"Parsed as literal",""
635311214814745340,"Parsed as literal","list1"
635311214814755341,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311214814755341,"Parsed as literal",""
635311214814765341,"Parsed as literal","list2"
635311214814775342,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311214814785342,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311214814785342,"Parsed as literal","count"
635311214814795343,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311214814805344,"Parsed as literal",""
635311214814805344,"Parsed as literal",""
635311214814815344,"Parsed as literal"," 0"
635311214814825345,"Invalid operator","@count([]) -> 0","0"
635311214814825345,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311214814835345,"Parsed as literal","count"
635311214814845346,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311214814845346,"Parsed as literal",""
635311214814855346,"Parsed as literal",""
635311214814865347,"Parsed as literal"," 0"
635311214814865347,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311214814875348,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311214814885348,"Parsed as literal","count"
635311214814885348,"Parsed as literal","list"
635311214814895349,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311214814905349,"Parsed as literal"," 1 "
635311214814915350,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311214814915350,"Parsed as literal","count"
635311214814925350,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311214814935351,"Parsed as literal",""
635311214814945352,"Parsed as literal","list"
635311214814945352,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311214814955352,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311214814965353,"Parsed as literal","count"
635311214814965353,"Parsed as literal","list"
635311214814975353,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311214814985354,"Parsed as literal"," 1 "
635311214814985354,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311214814995354,"Parsed as literal","count"
635311214815005355,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311214815005355,"Parsed as literal",""
635311214815015356,"Parsed as literal","list"
635311214815025356,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311214815035357,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311214815035357,"Parsed as literal","skip"
635311214815045357,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311214815045357,"Parsed as literal","0"
635311214815055358,"Parsed as literal","list"
635311214815065358,"Parsed as literal"," list"
635311214815065358,"Invalid operator","@skip(0,list) -> list","0"
635311214815075359,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311214815085360,"Parsed as literal","skip"
635311214815085360,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311214815095360,"Parsed as literal","0"
635311214815105361,"Parsed as literal","list"
635311214815105361,"Parsed as literal"," list"
635311214815115361,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311214815125362,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311214815135362,"Parsed as literal","skip"
635311214815135362,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311214815145363,"Parsed as literal","n"
635311214815155364,"Parsed as literal","list"
635311214815155364,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311214815165364,"Parsed as literal","skip"
635311214815175365,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311214815175365,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311214815185365,"Parsed as literal","n"
635311214815195366,"Parsed as literal","1"
635311214815195366,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311214815205366,"Parsed as literal",""
635311214815215367,"Parsed as literal","list"
635311214815215367,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311214815225368,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311214815235368,"Parsed as literal","skip"
635311214815235368,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311214815245369,"Parsed as literal","n"
635311214815255369,"Parsed as literal","list"
635311214815255369,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311214815265370,"Parsed as literal","skip"
635311214815275370,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311214815275370,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311214815285371,"Parsed as literal","n"
635311214815295372,"Parsed as literal","1"
635311214815295372,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311214815305372,"Parsed as literal",""
635311214815315373,"Parsed as literal","list"
635311214815315373,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311214815325373,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311214815335374,"Parsed as literal","take"
635311214815335374,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311214815345375,"Parsed as literal","1"
635311214815355375,"Parsed as literal","list"
635311214815355375,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311214815365376,"Parsed as literal"," "
635311214815375376,"Parsed as literal","list"
635311214815375376,"Invalid operator","@take(1,list) -> h:list","0"
635311214815385377,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311214815395377,"Parsed as literal","take"
635311214815395377,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311214815405378,"Parsed as literal","1"
635311214815415379,"Parsed as literal","list"
635311214815415379,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311214815425379,"Parsed as literal"," "
635311214815435380,"Parsed as literal","list"
635311214815445380,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311214815445380,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311214815455381,"Parsed as literal","take"
635311214815465381,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311214815465381,"Parsed as literal","n"
635311214815475382,"Parsed as literal","list"
635311214815485383,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311214815485383,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311214815495383,"Parsed as literal"," "
635311214815505384,"Parsed as literal","list "
635311214815505384,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311214815515384,"Parsed as literal","take"
635311214815525385,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311214815525385,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311214815535385,"Parsed as literal","n"
635311214815545386,"Parsed as literal","1"
635311214815545386,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311214815555387,"Parsed as literal",""
635311214815565387,"Parsed as literal","list"
635311214815565387,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311214815575388,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311214815585388,"Parsed as literal","take"
635311214815585388,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311214815595389,"Parsed as literal","n"
635311214815595389,"Parsed as literal","list"
635311214815605389,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311214815615390,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311214815615390,"Parsed as literal"," "
635311214815625391,"Parsed as literal","list "
635311214815635391,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311214815645392,"Parsed as literal","take"
635311214815645392,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311214815655392,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311214815665393,"Parsed as literal","n"
635311214815665393,"Parsed as literal","1"
635311214815675393,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311214815685394,"Parsed as literal",""
635311214815685394,"Parsed as literal","list"
635311214815695395,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311214815705395,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311214815705395,"Parsed as literal","nthItem"
635311214815715396,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311214815725396,"Parsed as literal","list"
635311214815725396,"Parsed as literal","0"
635311214815735397,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311214815745397,"Parsed as literal",""
635311214815745397,"Parsed as literal",""
635311214815755398,"Invalid operator","@nthItem(list,0) -> []","0"
635311214815765399,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311214815765399,"Parsed as literal","nthItem"
635311214815775399,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311214815785400,"Parsed as literal","list"
635311214815785400,"Parsed as literal","0"
635311214815795400,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311214815805401,"Parsed as literal",""
635311214815805401,"Parsed as literal",""
635311214815815401,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311214815825402,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311214815825402,"Parsed as literal","nthItem"
635311214815835403,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311214815845403,"Parsed as literal","list"
635311214815845403,"Parsed as literal","1"
635311214815855404,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311214815865404,"Parsed as literal"," "
635311214815865404,"Parsed as literal","list"
635311214815875405,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311214815885405,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311214815885405,"Parsed as literal","nthItem"
635311214815895406,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311214815905407,"Parsed as literal","list"
635311214815905407,"Parsed as literal","1"
635311214815915407,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311214815925408,"Parsed as literal"," "
635311214815925408,"Parsed as literal","list"
635311214815935408,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311214815945409,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311214815955409,"Parsed as literal","nthItem"
635311214815955409,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311214815965410,"Parsed as literal","list"
635311214815965410,"Parsed as literal","n"
635311214815975411,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311214815985411,"Parsed as literal","nthItem"
635311214815995412,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311214815995412,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311214816005412,"Parsed as literal",""
635311214816005412,"Parsed as literal","list"
635311214816015413,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311214816025413,"Parsed as literal","n"
635311214816025413,"Parsed as literal","1"
635311214816035414,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311214816045415,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311214816045415,"Parsed as literal","nthItem"
635311214816055415,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311214816065416,"Parsed as literal","list"
635311214816065416,"Parsed as literal","n"
635311214816075416,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311214816085417,"Parsed as literal","nthItem"
635311214816095417,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311214816095417,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311214816105418,"Parsed as literal",""
635311214816105418,"Parsed as literal","list"
635311214816115419,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311214816125419,"Parsed as literal","n"
635311214816125419,"Parsed as literal","1"
635311214816135420,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311214816145420,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311214816155421,"Parsed as literal","makeRange"
635311214816155421,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311214816165421,"Parsed as literal","a"
635311214816175422,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311214816175422,"Parsed as literal","b"
635311214816185423,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311214816195423,"Parsed as literal","a"
635311214816195423,"Parsed as literal","b"
635311214816205424,"Parsed as literal"," a"
635311214816215424,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311214816215424,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311214816225425,"Parsed as literal","makeRange"
635311214816235425,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311214816235425,"Parsed as literal","a"
635311214816245426,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311214816255427,"Parsed as literal","b"
635311214816255427,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311214816265427,"Parsed as literal","a"
635311214816275428,"Parsed as literal","b"
635311214816275428,"Parsed as literal"," a"
635311214816285428,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311214816295429,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311214816305429,"Parsed as literal","makeRange"
635311214816305429,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311214816315430,"Parsed as literal","a"
635311214816325431,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311214816325431,"Parsed as literal","b"
635311214816335431,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311214816345432,"Parsed as literal","a"
635311214816345432,"Parsed as literal","b"
635311214816355432,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311214816365433,"Parsed as literal"," a "
635311214816365433,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311214816375433,"Parsed as literal","makeRange"
635311214816385434,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311214816385434,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311214816395435,"Parsed as literal","a"
635311214816395435,"Parsed as literal","1"
635311214816405435,"Parsed as literal","b"
635311214816415436,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311214816425436,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311214816425436,"Parsed as literal","makeRange"
635311214816455438,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311214816465439,"Parsed as literal","a"
635311214816465439,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311214816475439,"Parsed as literal","b"
635311214816485440,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311214816495440,"Parsed as literal","a"
635311214816505441,"Parsed as literal","b"
635311214816515441,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311214816525442,"Parsed as literal"," a "
635311214816525442,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311214816535443,"Parsed as literal","makeRange"
635311214816545443,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311214816545443,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311214816555444,"Parsed as literal","a"
635311214816565444,"Parsed as literal","1"
635311214816565444,"Parsed as literal","b"
635311214816575445,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311214816585445,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311214816595446,"Parsed as literal","reverse"
635311214816595446,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311214816605447,"Parsed as literal",""
635311214816605447,"Parsed as literal",""
635311214816615447,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311214816625448,"Parsed as literal",""
635311214816635448,"Parsed as literal",""
635311214816635448,"Invalid operator","@reverse([]) -> []","0"
635311214816645449,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311214816655449,"Parsed as literal","reverse"
635311214816655449,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311214816665450,"Parsed as literal",""
635311214816675451,"Parsed as literal",""
635311214816675451,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311214816685451,"Parsed as literal",""
635311214816685451,"Parsed as literal",""
635311214816695452,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311214816705452,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311214816715453,"Parsed as literal","reverse"
635311214816715453,"Parsed as literal","list"
635311214816725453,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311214816735454,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311214816745455,"Parsed as literal","reverse"
635311214816745455,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311214816755455,"Parsed as literal",""
635311214816755455,"Parsed as literal","list"
635311214816765456,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311214816775456,"Parsed as literal"," "
635311214816785457,"Parsed as literal","list"
635311214816785457,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311214816795457,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311214816805458,"Parsed as literal","reverse"
635311214816805458,"Parsed as literal","list"
635311214816815459,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311214816825459,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311214816825459,"Parsed as literal","reverse"
635311214816835460,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311214816845460,"Parsed as literal",""
635311214816845460,"Parsed as literal","list"
635311214816855461,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311214816865461,"Parsed as literal"," "
635311214816865461,"Parsed as literal","list"
635311214816875462,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311214816885463,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311214816885463,"Parsed as literal","max"
635311214816895463,"Parsed as literal","list"
635311214816905464,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311214816915464,"Parsed as literal","fold"
635311214816915464,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311214816925465,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311214816935465,"Parsed as literal","max"
635311214816935465,"Parsed as literal",""
635311214816945466,"Invalid operator","@max","19"
635311214816955467,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311214816955467,"Parsed as literal","max"
635311214816965467,"Parsed as literal",""
635311214816965467,"Invalid operator","@max","19"
635311214816975468,"Parsed as literal","@max"
635311214816985468,"Parsed as literal","list"
635311214816985468,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311214816995469,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311214817005469,"Parsed as literal","max"
635311214817005469,"Parsed as literal","list"
635311214817015470,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311214817025471,"Parsed as literal","fold"
635311214817025471,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311214817035471,"Parsed as literal","@max"
635311214817045472,"Parsed as literal","list"
635311214817055472,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311214817055472,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311214817065473,"Parsed as literal","elementAt"
635311214817075473,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311214817075473,"Parsed as literal","0"
635311214817085474,"Parsed as literal","list"
635311214817095475,"Parsed as literal"," 'list"
635311214817105475,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311214817105475,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311214817115476,"Parsed as literal","elementAt"
635311214817125476,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311214817125476,"Parsed as literal","n"
635311214817135477,"Parsed as literal","list"
635311214817145477,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311214817145477,"Parsed as literal","elementAt"
635311214817155478,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311214817165479,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311214817165479,"Parsed as literal","n"
635311214817175479,"Parsed as literal","1"
635311214817185480,"Parsed as literal","list'"
635311214817195480,"StepEvaluate","->","Changed","Declared @zipWith"
635311214817195480,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311214817205481,"StepEvaluate","->","Changed","Declared @zipWith"
635311214817215481,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311214817215481,"StepEvaluate","->","Changed","Declared @count"
635311214817225482,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311214817225482,"StepEvaluate","->","Changed","Declared @count"
635311214817235483,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311214817245483,"StepEvaluate","->","Changed","Declared @skip"
635311214817245483,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311214817255484,"StepEvaluate","->","Changed","Declared @skip"
635311214817265484,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311214817265484,"StepEvaluate","->","Changed","Declared @take"
635311214817275485,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311214817275485,"StepEvaluate","->","Changed","Declared @take"
635311214817285485,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311214817295486,"StepEvaluate","->","Changed","Declared @nthItem"
635311214817295486,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311214817305487,"StepEvaluate","->","Changed","Declared @nthItem"
635311214817315487,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311214817315487,"StepEvaluate","->","Changed","Declared @nthItem"
635311214817325488,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311214817325488,"StepEvaluate","->","Changed","Declared @makeRange"
635311214817335488,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311214817345489,"StepEvaluate","->","Changed","Declared @makeRange"
635311214817345489,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311214817355489,"StepEvaluate","->","Changed","Declared @reverse"
635311214817355489,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311214817365490,"StepEvaluate","->","Changed","Declared @reverse"
635311214817375491,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311214817375491,"StepEvaluate","->","Changed","Declared @max"
635311214817385491,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311214817385491,"StepEvaluate","==","Unchanged","=="
635311214817395492,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311214817405492,"StepEvaluate","elementAt","Unchanged","elementAt"
635311214817405492,"StepEvaluate",",","Unchanged",","
635311214817415493,"StepEvaluate","0","Unchanged","0"
635311214817425493,"StepEvaluate",",","Unchanged",","
635311214817425493,"StepEvaluate","list","Unchanged","list"
635311214817435494,"StepEvaluate","'list","Unchanged","'list"
635311214817445495,"StepEvaluate","==","Unchanged","=="
635311214817445495,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311214817455495,"StepEvaluate","elementAt","Unchanged","elementAt"
635311214817455495,"StepEvaluate",",","Unchanged",","
635311214817465496,"StepEvaluate","n","Unchanged","n"
635311214817475496,"StepEvaluate",",","Unchanged",","
635311214817475496,"StepEvaluate","list","Unchanged","list"
635311214817485497,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311214817485497,"StepEvaluate","elementAt","Unchanged","elementAt"
635311214817495497,"StepEvaluate",",","Unchanged",","
635311214817495497,"StepEvaluate","-","Unchanged","-"
635311214817505498,"StepEvaluate","n","Unchanged","n"
635311214817515499,"StepEvaluate","1","Unchanged","1"
635311214817515499,"StepEvaluate",",","Unchanged",","
635311214817525499,"StepEvaluate","list'","Unchanged","list'"
635311214817525499,"StepEvaluate","[]","Changed","File imported"
635311214817535500,"StepEvaluate","File imported","Unchanged","File imported"
635311214817545500,"StepEvaluate","@","Changed","@"
635311214817545500,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214817555501,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214817565501,"StepEvaluate",",","Unchanged",","
635311214817565501,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214817575502,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214817585503,"StepEvaluate","PAT@-M","Changed","[]"
635311214817585503,"StepEvaluate","SEL@import","Changed","[]"
635311214817595503,"StepEvaluate","@","Changed","[]"
635311214817605504,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311214817605504,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311214817615504,"Parsed as literal","naturalNumbers"
635311214817625505,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311214817625505,"Parsed as literal",""
635311214817635505,"Parsed as literal",""
635311214817645506,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311214817655507,"Parsed as literal","naturalNumbers"
635311214817655507,"Parsed as literal","0"
635311214817665507,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311214817665507,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311214817675508,"Parsed as literal","naturalNumbers"
635311214817685508,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311214817695509,"Parsed as literal",""
635311214817695509,"Parsed as literal",""
635311214817705509,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311214817715510,"Parsed as literal","naturalNumbers"
635311214817715510,"Parsed as literal","0"
635311214817725511,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311214817735511,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311214817735511,"Parsed as literal","naturalNumbers"
635311214817745512,"Parsed as literal","n"
635311214817755512,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311214817765513,"Parsed as literal"," n "
635311214817765513,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311214817775513,"Parsed as literal","naturalNumbers"
635311214817775513,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311214817785514,"Parsed as literal","n"
635311214817795515,"Parsed as literal","1"
635311214817805515,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311214817805515,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311214817815516,"Parsed as literal","naturalNumbers"
635311214817825516,"Parsed as literal","n"
635311214817825516,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311214817835517,"Parsed as literal"," n "
635311214817845518,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311214817845518,"Parsed as literal","naturalNumbers"
635311214817855518,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311214817865519,"Parsed as literal","n"
635311214817865519,"Parsed as literal","1"
635311214817875519,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311214817885520,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311214817885520,"Parsed as literal","max"
635311214817895520,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311214817905521,"Parsed as literal","a"
635311214817905521,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311214817915522,"Parsed as literal","b"
635311214817925522,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311214817925522,"Parsed as literal","a"
635311214817935523,"Parsed as literal","b"
635311214817945523,"Parsed as literal","b"
635311214817945523,"Invalid operator","@max(a,b|a<b)->b","0"
635311214817955524,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311214817965524,"Parsed as literal","max"
635311214817965524,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311214817975525,"Parsed as literal","a"
635311214817975525,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311214817985526,"Parsed as literal","b"
635311214817995526,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311214817995526,"Parsed as literal","a"
635311214818005527,"Parsed as literal","b"
635311214818015527,"Parsed as literal","b"
635311214818025528,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311214818025528,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311214818035528,"Parsed as literal","max"
635311214818045529,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311214818045529,"Parsed as literal","a"
635311214818055530,"Parsed as literal","b"
635311214818065530,"Parsed as literal","a"
635311214818065530,"Invalid operator","@max(a,b)->a","0"
635311214818075531,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311214818085531,"Parsed as literal","max"
635311214818085531,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311214818095532,"Parsed as literal","a"
635311214818095532,"Parsed as literal","b"
635311214818105532,"Parsed as literal","a"
635311214818115533,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311214818125534,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311214818125534,"Parsed as literal","random"
635311214818135534,"Parsed as literal","0"
635311214818145535,"Parsed as literal"," 0"
635311214818145535,"Invalid operator","@random(0) -> 0","0"
635311214818155535,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311214818155535,"Parsed as literal","random"
635311214818165536,"Parsed as literal","0"
635311214818175536,"Parsed as literal"," 0"
635311214818185537,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311214818185537,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311214818195538,"Parsed as literal","random"
635311214818195538,"Parsed as literal","n"
635311214818205538,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311214818215539,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311214818225539,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311214818225539,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311214818235540,"Parsed as literal","1664525 "
635311214818245540,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311214818245540,"Parsed as literal","random"
635311214818255541,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311214818265542,"Parsed as literal","n"
635311214818265542,"Parsed as literal","1"
635311214818275542,"Parsed as literal"," 1013904223"
635311214818285543,"Parsed as literal",""
635311214818285543,"Parsed as literal"," 4294967296"
635311214818295543,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311214818305544,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311214818305544,"Parsed as literal","random"
635311214818315544,"Parsed as literal","n"
635311214818325545,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311214818325545,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311214818335546,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311214818345546,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311214818345546,"Parsed as literal","1664525 "
635311214818355547,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311214818365547,"Parsed as literal","random"
635311214818365547,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311214818375548,"Parsed as literal","n"
635311214818385548,"Parsed as literal","1"
635311214818385548,"Parsed as literal"," 1013904223"
635311214818395549,"Parsed as literal",""
635311214818405550,"Parsed as literal"," 4294967296"
635311214818405550,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311214818415550,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311214818425551,"Parsed as literal","gcd"
635311214818425551,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311214818435551,"Parsed as literal","a"
635311214818445552,"Parsed as literal","0"
635311214818445552,"Parsed as literal"," a"
635311214818455552,"Invalid operator","@gcd(a,0) -> a","0"
635311214818465553,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311214818465553,"Parsed as literal","gcd"
635311214818475554,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311214818475554,"Parsed as literal","a"
635311214818485554,"Parsed as literal","0"
635311214818495555,"Parsed as literal"," a"
635311214818505555,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311214818505555,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311214818515556,"Parsed as literal","gcd"
635311214818525556,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311214818525556,"Parsed as literal","a"
635311214818535557,"Parsed as literal","b"
635311214818545558,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311214818545558,"Parsed as literal","gcd"
635311214818555558,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311214818565559,"Parsed as literal","b"
635311214818565559,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311214818575559,"Parsed as literal","a "
635311214818585560,"Parsed as literal"," b"
635311214818585560,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311214818595560,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311214818605561,"Parsed as literal","gcd"
635311214818605561,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311214818615562,"Parsed as literal","a"
635311214818625562,"Parsed as literal","b"
635311214818625562,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311214818635563,"Parsed as literal","gcd"
635311214818645563,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311214818645563,"Parsed as literal","b"
635311214818655564,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311214818665564,"Parsed as literal","a "
635311214818665564,"Parsed as literal"," b"
635311214818675565,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311214818685566,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311214818685566,"Parsed as literal","gcd"
635311214818695566,"Parsed as literal","list"
635311214818705567,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311214818705567,"Parsed as literal","fold"
635311214818715567,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311214818725568,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311214818725568,"Parsed as literal","gcd"
635311214818735568,"Parsed as literal",""
635311214818745569,"Invalid operator","@gcd","19"
635311214818745569,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311214818755570,"Parsed as literal","gcd"
635311214818765570,"Parsed as literal",""
635311214818765570,"Invalid operator","@gcd","19"
635311214818775571,"Parsed as literal","@gcd"
635311214818785571,"Parsed as literal","list"
635311214818785571,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311214818795572,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311214818805572,"Parsed as literal","gcd"
635311214818805572,"Parsed as literal","list"
635311214818815573,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311214818825574,"Parsed as literal","fold"
635311214818825574,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311214818835574,"Parsed as literal","@gcd"
635311214818835574,"Parsed as literal","list"
635311214818845575,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311214818855575,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311214818865576,"Parsed as literal","fib"
635311214818865576,"Parsed as literal","0"
635311214818875576,"Parsed as literal"," 1"
635311214818885577,"Invalid operator","@fib(0) -> 1","0"
635311214818885577,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311214818895578,"Parsed as literal","fib"
635311214818905578,"Parsed as literal","0"
635311214818905578,"Parsed as literal"," 1"
635311214818915579,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311214818925579,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311214818925579,"Parsed as literal","fib"
635311214818935580,"Parsed as literal","1"
635311214818945580,"Parsed as literal"," 1"
635311214818945580,"Invalid operator","@fib(1) -> 1","0"
635311214818955581,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311214818955581,"Parsed as literal","fib"
635311214818965582,"Parsed as literal","1"
635311214818975582,"Parsed as literal"," 1"
635311214818985583,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311214818985583,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311214818995583,"Parsed as literal","fib"
635311214819005584,"Parsed as literal","n"
635311214819005584,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311214819015584,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311214819025585,"Parsed as literal","fib"
635311214819025585,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311214819035586,"Parsed as literal","n"
635311214819045586,"Parsed as literal","2"
635311214819045586,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311214819055587,"Parsed as literal","fib"
635311214819065587,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311214819065587,"Parsed as literal","n"
635311214819085588,"Parsed as literal","1"
635311214819085588,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311214819095589,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311214819095589,"Parsed as literal","fib"
635311214819105590,"Parsed as literal","n"
635311214819115590,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311214819125591,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311214819125591,"Parsed as literal","fib"
635311214819135591,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311214819135591,"Parsed as literal","n"
635311214819145592,"Parsed as literal","2"
635311214819155592,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311214819165593,"Parsed as literal","fib"
635311214819165593,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311214819175594,"Parsed as literal","n"
635311214819175594,"Parsed as literal","1"
635311214819195595,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311214819195595,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311214819205595,"Parsed as literal","fib2"
635311214819215596,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311214819215596,"Parsed as literal",""
635311214819225596,"Parsed as literal",""
635311214819235597,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311214819235597,"Parsed as literal"," 0 "
635311214819245598,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311214819255598,"Parsed as literal"," 1 "
635311214819255598,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311214819265599,"Parsed as literal","zipWith"
635311214819275599,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311214819275599,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311214819285600,"Parsed as literal",""
635311214819295600,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311214819295600,"Parsed as literal","a"
635311214819305601,"Parsed as literal","b"
635311214819315602,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311214819315602,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311214819325602,"Parsed as literal","a"
635311214819335603,"Parsed as literal","b"
635311214819335603,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311214819345603,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311214819355604,"Parsed as literal","fib2"
635311214819365604,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311214819365604,"Parsed as literal",""
635311214819375605,"Parsed as literal",""
635311214819375605,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311214819385606,"Parsed as literal"," "
635311214819395606,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311214819395606,"Parsed as literal","fib2"
635311214819405607,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311214819415607,"Parsed as literal",""
635311214819415607,"Parsed as literal",""
635311214819425608,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311214819435608,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311214819435608,"Parsed as literal",""
635311214819445609,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311214819455610,"Parsed as literal","a"
635311214819455610,"Parsed as literal","b"
635311214819465610,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311214819475611,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311214819475611,"Parsed as literal","a"
635311214819485611,"Parsed as literal","b"
635311214819495612,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311214819495612,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311214819505612,"Parsed as literal","fib2"
635311214819515613,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311214819515613,"Parsed as literal",""
635311214819525614,"Parsed as literal",""
635311214819535614,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311214819535614,"Parsed as literal"," "
635311214819545615,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311214819545615,"Parsed as literal","fib2"
635311214819555615,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311214819565616,"Parsed as literal",""
635311214819565616,"Parsed as literal",""
635311214819575616,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311214819585617,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311214819595618,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311214819595618,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311214819605618,"Parsed as literal",""
635311214819615619,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311214819615619,"Parsed as literal","a"
635311214819625619,"Parsed as literal","b"
635311214819635620,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311214819635620,"Parsed as literal","a"
635311214819645620,"Parsed as literal","b"
635311214819655621,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311214819655621,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311214819665622,"Parsed as literal","fib2"
635311214819665622,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311214819675622,"Parsed as literal",""
635311214819685623,"Parsed as literal",""
635311214819685623,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311214819695623,"Parsed as literal"," "
635311214819705624,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311214819705624,"Parsed as literal","fib2"
635311214819715624,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311214819725625,"Parsed as literal",""
635311214819725625,"Parsed as literal",""
635311214819735626,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311214819745626,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311214819745626,"Parsed as literal","fib2"
635311214819755627,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311214819765627,"Parsed as literal",""
635311214819765627,"Parsed as literal",""
635311214819775628,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311214819785628,"Parsed as literal"," 0 "
635311214819795629,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311214819795629,"Parsed as literal"," 1 "
635311214819805630,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311214819815630,"Parsed as literal","zipWith"
635311214819815630,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311214819825631,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311214819835631,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311214819845632,"Parsed as literal",""
635311214819845632,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311214819855632,"Parsed as literal","a"
635311214819855632,"Parsed as literal","b"
635311214819865633,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311214819875634,"Parsed as literal","a"
635311214819875634,"Parsed as literal","b"
635311214819885634,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311214819895635,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311214819895635,"Parsed as literal","fib2"
635311214819905635,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311214819915636,"Parsed as literal",""
635311214819915636,"Parsed as literal",""
635311214819925636,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311214819935637,"Parsed as literal"," "
635311214819935637,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311214819945638,"Parsed as literal","fib2"
635311214819955638,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311214819955638,"Parsed as literal",""
635311214819965639,"Parsed as literal",""
635311214819975639,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311214819985640,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311214819985640,"Parsed as literal","fib2"
635311214819995640,"Parsed as literal","n"
635311214820005641,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311214820005641,"Parsed as literal","take"
635311214820015642,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311214820025642,"Parsed as literal","n"
635311214820025642,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311214820035643,"Parsed as literal","fib2"
635311214820045643,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311214820045643,"Parsed as literal",""
635311214820055644,"Parsed as literal",""
635311214820065644,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311214820065644,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311214820075645,"Parsed as literal","fib2"
635311214820085646,"Parsed as literal","n"
635311214820095646,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311214820095646,"Parsed as literal","take"
635311214820105647,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311214820115647,"Parsed as literal","n"
635311214820125648,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311214820125648,"Parsed as literal","fib2"
635311214820135648,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311214820145649,"Parsed as literal",""
635311214820145649,"Parsed as literal",""
635311214820155650,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311214820165650,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311214820175651,"Parsed as literal","fac"
635311214820175651,"Parsed as literal","0"
635311214820185651,"Parsed as literal"," 1"
635311214820195652,"Invalid operator","@fac(0) -> 1","0"
635311214820205652,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311214820205652,"Parsed as literal","fac"
635311214820215653,"Parsed as literal","0"
635311214820215653,"Parsed as literal"," 1"
635311214820225654,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311214820225654,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311214820235654,"Parsed as literal","fac"
635311214820235654,"Parsed as literal","n"
635311214820235654,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311214820245655,"Parsed as literal"," n "
635311214820245655,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311214820255655,"Parsed as literal","fac"
635311214820255655,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311214820255655,"Parsed as literal","n"
635311214820265656,"Parsed as literal","1"
635311214820265656,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311214820275656,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311214820275656,"Parsed as literal","fac"
635311214820275656,"Parsed as literal","n"
635311214820285657,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311214820285657,"Parsed as literal"," n "
635311214820295658,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311214820295658,"Parsed as literal","fac"
635311214820305658,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311214820305658,"Parsed as literal","n"
635311214820305658,"Parsed as literal","1"
635311214820315659,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311214820315659,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311214820325659,"Parsed as literal","pow"
635311214820325659,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311214820335660,"Parsed as literal","num"
635311214820335660,"Parsed as literal","0"
635311214820335660,"Parsed as literal"," 1"
635311214820345661,"Invalid operator","@pow(num,0) -> 1","0"
635311214820345661,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311214820355661,"Parsed as literal","pow"
635311214820355661,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311214820355661,"Parsed as literal","num"
635311214820365662,"Parsed as literal","0"
635311214820365662,"Parsed as literal"," 1"
635311214820375662,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311214820375662,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311214820385663,"Parsed as literal","pow"
635311214820385663,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311214820385663,"Parsed as literal","num"
635311214820395663,"Parsed as literal","1"
635311214820395663,"Parsed as literal"," num"
635311214820405664,"Invalid operator","@pow(num,1) -> num","0"
635311214820405664,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311214820405664,"Parsed as literal","pow"
635311214820415665,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311214820415665,"Parsed as literal","num"
635311214820425665,"Parsed as literal","1"
635311214820425665,"Parsed as literal"," num"
635311214820435666,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311214820435666,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311214820435666,"Parsed as literal","pow"
635311214820445666,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311214820445666,"Parsed as literal","num"
635311214820455667,"Parsed as literal"," power"
635311214820455667,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311214820465667,"Parsed as literal"," num "
635311214820465667,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311214820465667,"Parsed as literal","pow"
635311214820475668,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311214820475668,"Parsed as literal","num"
635311214820485669,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311214820485669,"Parsed as literal","power"
635311214820485669,"Parsed as literal","1"
635311214820495669,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311214820495669,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311214820505670,"Parsed as literal","pow"
635311214820505670,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311214820505670,"Parsed as literal","num"
635311214820515670,"Parsed as literal"," power"
635311214820515670,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311214820525671,"Parsed as literal"," num "
635311214820525671,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311214820535671,"Parsed as literal","pow"
635311214820535671,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311214820535671,"Parsed as literal","num"
635311214820545672,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311214820545672,"Parsed as literal","power"
635311214820555673,"Parsed as literal","1"
635311214820555673,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311214820565673,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311214820565673,"Parsed as literal","upArrow"
635311214820565673,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311214820575674,"Parsed as literal","a"
635311214820575674,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311214820585674,"Parsed as literal","b"
635311214820585674,"Parsed as literal","1"
635311214820585674,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311214820595675,"Parsed as literal","pow"
635311214820595675,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311214820605675,"Parsed as literal","a"
635311214820605675,"Parsed as literal","b"
635311214820605675,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311214820615676,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311214820615676,"Parsed as literal","upArrow"
635311214820625677,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311214820625677,"Parsed as literal","a"
635311214820635677,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311214820635677,"Parsed as literal","b"
635311214820645678,"Parsed as literal","1"
635311214820645678,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311214820655678,"Parsed as literal","pow"
635311214820655678,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311214820655678,"Parsed as literal","a"
635311214820665679,"Parsed as literal","b"
635311214820665679,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311214820675679,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311214820675679,"Parsed as literal","upArrow"
635311214820685680,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311214820685680,"Parsed as literal","a"
635311214820685680,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311214820695681,"Parsed as literal","1"
635311214820695681,"Parsed as literal","n"
635311214820705681,"Parsed as literal"," a"
635311214820705681,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311214820705681,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311214820715682,"Parsed as literal","upArrow"
635311214820725682,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311214820725682,"Parsed as literal","a"
635311214820735683,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311214820735683,"Parsed as literal","1"
635311214820735683,"Parsed as literal","n"
635311214820745683,"Parsed as literal"," a"
635311214820745683,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311214820755684,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311214820755684,"Parsed as literal","upArrow"
635311214820765685,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311214820765685,"Parsed as literal","a"
635311214820775685,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311214820775685,"Parsed as literal","b"
635311214820775685,"Parsed as literal","n"
635311214820785686,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311214820785686,"Parsed as literal","upArrow"
635311214820795686,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311214820795686,"Parsed as literal","a"
635311214820805687,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311214820805687,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311214820815687,"Parsed as literal","upArrow"
635311214820815687,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311214820815687,"Parsed as literal","a"
635311214820825688,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311214820825688,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311214820825688,"Parsed as literal","b"
635311214820835689,"Parsed as literal","1"
635311214820835689,"Parsed as literal","n"
635311214820835689,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311214820845689,"Parsed as literal","n"
635311214820845689,"Parsed as literal","1"
635311214820845689,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311214820845689,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311214820855690,"Parsed as literal","upArrow"
635311214820855690,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311214820855690,"Parsed as literal","a"
635311214820865690,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311214820865690,"Parsed as literal","b"
635311214820865690,"Parsed as literal","n"
635311214820865690,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311214820875691,"Parsed as literal","upArrow"
635311214820875691,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311214820875691,"Parsed as literal","a"
635311214820885691,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311214820885691,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311214820885691,"Parsed as literal","upArrow"
635311214820895692,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311214820895692,"Parsed as literal","a"
635311214820895692,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311214820905693,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311214820905693,"Parsed as literal","b"
635311214820905693,"Parsed as literal","1"
635311214820915693,"Parsed as literal","n"
635311214820915693,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311214820915693,"Parsed as literal","n"
635311214820925694,"Parsed as literal","1"
635311214820925694,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311214820925694,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311214820935694,"Parsed as literal","graham"
635311214820935694,"Parsed as literal","0"
635311214820935694,"Parsed as literal"," 4"
635311214820945695,"Invalid operator","@graham(0) -> 4","0"
635311214820945695,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311214820945695,"Parsed as literal","graham"
635311214820945695,"Parsed as literal","0"
635311214820955695,"Parsed as literal"," 4"
635311214820955695,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311214820955695,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311214820965696,"Parsed as literal","graham"
635311214820965696,"Parsed as literal","n"
635311214820965696,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311214820975697,"Parsed as literal","upArrow"
635311214820975697,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311214820975697,"Parsed as literal","3"
635311214820985697,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311214820985697,"Parsed as literal","3"
635311214820985697,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311214820985697,"Parsed as literal","graham"
635311214820995698,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311214820995698,"Parsed as literal","n"
635311214820995698,"Parsed as literal","1"
635311214821005698,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311214821005698,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311214821005698,"Parsed as literal","graham"
635311214821005698,"Parsed as literal","n"
635311214821015699,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311214821015699,"Parsed as literal","upArrow"
635311214821015699,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311214821025699,"Parsed as literal","3"
635311214821025699,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311214821025699,"Parsed as literal","3"
635311214821025699,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311214821035700,"Parsed as literal","graham"
635311214821035700,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311214821035700,"Parsed as literal","n"
635311214821045701,"Parsed as literal","1"
635311214821045701,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311214821045701,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311214821055701,"Parsed as literal","grahamsNumber"
635311214821055701,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311214821055701,"Parsed as literal",""
635311214821055701,"Parsed as literal",""
635311214821065702,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311214821065702,"Parsed as literal","graham"
635311214821065702,"Parsed as literal","64"
635311214821075702,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311214821075702,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311214821075702,"Parsed as literal","grahamsNumber"
635311214821075702,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311214821085703,"Parsed as literal",""
635311214821085703,"Parsed as literal",""
635311214821085703,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311214821095703,"Parsed as literal","graham"
635311214821095703,"Parsed as literal","64"
635311214821095703,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311214821105704,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311214821105704,"Parsed as literal","ack"
635311214821105704,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311214821105704,"Parsed as literal","0"
635311214821115705,"Parsed as literal","n"
635311214821115705,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311214821115705,"Parsed as literal"," n "
635311214821115705,"Parsed as literal"," 1"
635311214821125705,"Invalid operator","@ack(0,n) -> n + 1","0"
635311214821125705,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311214821125705,"Parsed as literal","ack"
635311214821135706,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311214821135706,"Parsed as literal","0"
635311214821135706,"Parsed as literal","n"
635311214821145706,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311214821145706,"Parsed as literal"," n "
635311214821145706,"Parsed as literal"," 1"
635311214821145706,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311214821155707,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311214821155707,"Parsed as literal","ack"
635311214821155707,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311214821165707,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311214821165707,"Parsed as literal","m"
635311214821165707,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311214821165707,"Parsed as literal","m"
635311214821175708,"Parsed as literal","0"
635311214821175708,"Parsed as literal","0"
635311214821175708,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311214821185709,"Parsed as literal","ack"
635311214821185709,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311214821185709,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311214821195709,"Parsed as literal","m"
635311214821195709,"Parsed as literal","1"
635311214821195709,"Parsed as literal","1"
635311214821195709,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311214821205710,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311214821205710,"Parsed as literal","ack"
635311214821205710,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311214821215710,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311214821215710,"Parsed as literal","m"
635311214821215710,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311214821215710,"Parsed as literal","m"
635311214821225711,"Parsed as literal","0"
635311214821225711,"Parsed as literal","0"
635311214821225711,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311214821235711,"Parsed as literal","ack"
635311214821235711,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311214821235711,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311214821235711,"Parsed as literal","m"
635311214821245712,"Parsed as literal","1"
635311214821245712,"Parsed as literal","1"
635311214821245712,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311214821255713,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311214821255713,"Parsed as literal","ack"
635311214821255713,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311214821265713,"Parsed as literal","m"
635311214821265713,"Parsed as literal","n"
635311214821265713,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311214821265713,"Parsed as literal","ack"
635311214821275714,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311214821275714,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311214821275714,"Parsed as literal","m"
635311214821285714,"Parsed as literal","1"
635311214821285714,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311214821285714,"Parsed as literal","ack"
635311214821285714,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311214821295715,"Parsed as literal","m"
635311214821295715,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311214821295715,"Parsed as literal","n"
635311214821305715,"Parsed as literal","1"
635311214821305715,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311214821305715,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311214821305715,"Parsed as literal","ack"
635311214821315716,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311214821315716,"Parsed as literal","m"
635311214821315716,"Parsed as literal","n"
635311214821325717,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311214821325717,"Parsed as literal","ack"
635311214821325717,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311214821325717,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311214821335717,"Parsed as literal","m"
635311214821335717,"Parsed as literal","1"
635311214821335717,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311214821345718,"Parsed as literal","ack"
635311214821345718,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311214821345718,"Parsed as literal","m"
635311214821345718,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311214821355718,"Parsed as literal","n"
635311214821355718,"Parsed as literal","1"
635311214821355718,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311214821365719,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311214821365719,"Parsed as literal","acker"
635311214821365719,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311214821375719,"Parsed as literal","m"
635311214821375719,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311214821375719,"Parsed as literal","n"
635311214821375719,"Parsed as literal","0"
635311214821385720,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311214821385720,"Parsed as literal"," m"
635311214821385720,"Parsed as literal","n"
635311214821395721,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311214821395721,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311214821395721,"Parsed as literal","acker"
635311214821395721,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311214821405721,"Parsed as literal","m"
635311214821405721,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311214821405721,"Parsed as literal","n"
635311214821405721,"Parsed as literal","0"
635311214821415722,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311214821415722,"Parsed as literal"," m"
635311214821415722,"Parsed as literal","n"
635311214821425722,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311214821425722,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311214821425722,"Parsed as literal","acker"
635311214821435723,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311214821435723,"Parsed as literal","m"
635311214821435723,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311214821435723,"Parsed as literal","0"
635311214821445723,"Parsed as literal","1"
635311214821445723,"Parsed as literal"," 0"
635311214821445723,"Invalid operator","@acker(m,0,1) -> 0","0"
635311214821455724,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311214821455724,"Parsed as literal","acker"
635311214821455724,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311214821455724,"Parsed as literal","m"
635311214821465725,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311214821465725,"Parsed as literal","0"
635311214821465725,"Parsed as literal","1"
635311214821475725,"Parsed as literal"," 0"
635311214821475725,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311214821475725,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311214821475725,"Parsed as literal","acker"
635311214821485726,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311214821485726,"Parsed as literal","m"
635311214821485726,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311214821495726,"Parsed as literal","0"
635311214821495726,"Parsed as literal","2"
635311214821495726,"Parsed as literal"," 1"
635311214821495726,"Invalid operator","@acker(m,0,2) -> 1","0"
635311214821505727,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311214821505727,"Parsed as literal","acker"
635311214821505727,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311214821515727,"Parsed as literal","m"
635311214821515727,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311214821515727,"Parsed as literal","0"
635311214821515727,"Parsed as literal","2"
635311214821525728,"Parsed as literal"," 1"
635311214821525728,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311214821525728,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311214821535729,"Parsed as literal","acker"
635311214821535729,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311214821535729,"Parsed as literal","m"
635311214821545729,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311214821545729,"Parsed as literal","0"
635311214821545729,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311214821545729,"Parsed as literal","p"
635311214821555730,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311214821555730,"Parsed as literal","p"
635311214821555730,"Parsed as literal","2"
635311214821565730,"Parsed as literal"," m"
635311214821565730,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311214821565730,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311214821565730,"Parsed as literal","acker"
635311214821575731,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311214821575731,"Parsed as literal","m"
635311214821575731,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311214821575731,"Parsed as literal","0"
635311214821585731,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311214821585731,"Parsed as literal","p"
635311214821585731,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311214821595732,"Parsed as literal","p"
635311214821595732,"Parsed as literal","2"
635311214821595732,"Parsed as literal"," m"
635311214821605733,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311214821605733,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311214821605733,"Parsed as literal","acker"
635311214821615733,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311214821615733,"Parsed as literal","m"
635311214821615733,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311214821615733,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311214821625734,"Parsed as literal","n"
635311214821625734,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311214821625734,"Parsed as literal","n"
635311214821625734,"Parsed as literal","0"
635311214821635734,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311214821635734,"Parsed as literal","p"
635311214821635734,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311214821645735,"Parsed as literal","p"
635311214821645735,"Parsed as literal","0"
635311214821645735,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311214821655735,"Parsed as literal","acker"
635311214821655735,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311214821655735,"Parsed as literal","m"
635311214821655735,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311214821665736,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311214821665736,"Parsed as literal","acker"
635311214821665736,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311214821675737,"Parsed as literal","m"
635311214821675737,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311214821675737,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311214821675737,"Parsed as literal","n"
635311214821685737,"Parsed as literal","1"
635311214821685737,"Parsed as literal","p"
635311214821685737,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311214821695738,"Parsed as literal","p"
635311214821695738,"Parsed as literal","1"
635311214821695738,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311214821695738,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311214821705738,"Parsed as literal","acker"
635311214821705738,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311214821705738,"Parsed as literal","m"
635311214821715739,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311214821715739,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311214821715739,"Parsed as literal","n"
635311214821715739,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311214821725739,"Parsed as literal","n"
635311214821725739,"Parsed as literal","0"
635311214821725739,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311214821735740,"Parsed as literal","p"
635311214821735740,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311214821735740,"Parsed as literal","p"
635311214821735740,"Parsed as literal","0"
635311214821745741,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311214821745741,"Parsed as literal","acker"
635311214821745741,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311214821755741,"Parsed as literal","m"
635311214821755741,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311214821755741,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311214821755741,"Parsed as literal","acker"
635311214821765742,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311214821765742,"Parsed as literal","m"
635311214821765742,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311214821775742,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311214821775742,"Parsed as literal","n"
635311214821775742,"Parsed as literal","1"
635311214821775742,"Parsed as literal","p"
635311214821785743,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311214821785743,"Parsed as literal","p"
635311214821785743,"Parsed as literal","1"
635311214821795743,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311214821795743,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311214821805744,"Parsed as literal","hyper"
635311214821805744,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311214821805744,"Parsed as literal","0"
635311214821805744,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311214821815745,"Parsed as literal","a"
635311214821815745,"Parsed as literal","b"
635311214821815745,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311214821825745,"Parsed as literal"," b"
635311214821825745,"Parsed as literal","1"
635311214821825745,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311214821825745,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311214821835746,"Parsed as literal","hyper"
635311214821835746,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311214821835746,"Parsed as literal","0"
635311214821845746,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311214821845746,"Parsed as literal","a"
635311214821845746,"Parsed as literal","b"
635311214821845746,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311214821855747,"Parsed as literal"," b"
635311214821855747,"Parsed as literal","1"
635311214821855747,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311214821865747,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311214821865747,"Parsed as literal","hyper"
635311214821865747,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311214821865747,"Parsed as literal","1"
635311214821875748,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311214821875748,"Parsed as literal","a"
635311214821875748,"Parsed as literal","0"
635311214821885749,"Parsed as literal"," a"
635311214821885749,"Invalid operator","@hyper(1,a,0) -> a","0"
635311214821885749,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311214821885749,"Parsed as literal","hyper"
635311214821895749,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311214821895749,"Parsed as literal","1"
635311214821895749,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311214821905750,"Parsed as literal","a"
635311214821905750,"Parsed as literal","0"
635311214821905750,"Parsed as literal"," a"
635311214821905750,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311214821915750,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311214821915750,"Parsed as literal","hyper"
635311214821915750,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311214821925751,"Parsed as literal","2"
635311214821925751,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311214821925751,"Parsed as literal","a"
635311214821925751,"Parsed as literal","0"
635311214821935751,"Parsed as literal"," 0"
635311214821935751,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311214821935751,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311214821945752,"Parsed as literal","hyper"
635311214821945752,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311214821945752,"Parsed as literal","2"
635311214821945752,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311214821955753,"Parsed as literal","a"
635311214821955753,"Parsed as literal","0"
635311214821955753,"Parsed as literal"," 0"
635311214821965753,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311214821965753,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311214821965753,"Parsed as literal","hyper"
635311214821965753,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311214821975754,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311214821975754,"Parsed as literal","n"
635311214821975754,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311214821985754,"Parsed as literal","n"
635311214821985754,"Parsed as literal","2"
635311214821985754,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311214821985754,"Parsed as literal","a"
635311214821995755,"Parsed as literal","0"
635311214821995755,"Parsed as literal"," 1"
635311214821995755,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311214822005755,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311214822005755,"Parsed as literal","hyper"
635311214822005755,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311214822005755,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311214822015756,"Parsed as literal","n"
635311214822015756,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311214822015756,"Parsed as literal","n"
635311214822025757,"Parsed as literal","2"
635311214822025757,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311214822025757,"Parsed as literal","a"
635311214822025757,"Parsed as literal","0"
635311214822035757,"Parsed as literal"," 1"
635311214822035757,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311214822035757,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311214822045758,"Parsed as literal","hyper"
635311214822045758,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311214822045758,"Parsed as literal","n"
635311214822045758,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311214822055758,"Parsed as literal","a"
635311214822055758,"Parsed as literal","b"
635311214822055758,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311214822065759,"Parsed as literal","hyper"
635311214822065759,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311214822065759,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311214822065759,"Parsed as literal","n"
635311214822075759,"Parsed as literal","1"
635311214822075759,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311214822075759,"Parsed as literal","a"
635311214822085760,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311214822085760,"Parsed as literal","hyper"
635311214822085760,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311214822085760,"Parsed as literal","n"
635311214822095761,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311214822095761,"Parsed as literal","a"
635311214822095761,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311214822095761,"Parsed as literal","b"
635311214822105761,"Parsed as literal","1"
635311214822105761,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311214822105761,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311214822115762,"Parsed as literal","hyper"
635311214822115762,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311214822115762,"Parsed as literal","n"
635311214822125762,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311214822125762,"Parsed as literal","a"
635311214822125762,"Parsed as literal","b"
635311214822125762,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311214822135763,"Parsed as literal","hyper"
635311214822135763,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311214822135763,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311214822145763,"Parsed as literal","n"
635311214822145763,"Parsed as literal","1"
635311214822145763,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311214822145763,"Parsed as literal","a"
635311214822155764,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311214822155764,"Parsed as literal","hyper"
635311214822155764,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311214822165765,"Parsed as literal","n"
635311214822165765,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311214822165765,"Parsed as literal","a"
635311214822165765,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311214822175765,"Parsed as literal","b"
635311214822175765,"Parsed as literal","1"
635311214822175765,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311214822185766,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311214822185766,"Parsed as literal","sudan"
635311214822185766,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311214822195766,"Parsed as literal","0"
635311214822195766,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311214822195766,"Parsed as literal","x"
635311214822195766,"Parsed as literal","y"
635311214822205767,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311214822205767,"Parsed as literal"," x "
635311214822205767,"Parsed as literal"," y"
635311214822205767,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311214822215767,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311214822215767,"Parsed as literal","sudan"
635311214822215767,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311214822225768,"Parsed as literal","0"
635311214822225768,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311214822225768,"Parsed as literal","x"
635311214822225768,"Parsed as literal","y"
635311214822235769,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311214822235769,"Parsed as literal"," x "
635311214822235769,"Parsed as literal"," y"
635311214822245769,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311214822245769,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311214822245769,"Parsed as literal","sudan"
635311214822245769,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311214822255770,"Parsed as literal","n"
635311214822255770,"Parsed as literal","0"
635311214822255770,"Parsed as literal"," x"
635311214822265770,"Invalid operator","@sudan(n,0) -> x","0"
635311214822265770,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311214822265770,"Parsed as literal","sudan"
635311214822265770,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311214822275771,"Parsed as literal","n"
635311214822275771,"Parsed as literal","0"
635311214822275771,"Parsed as literal"," x"
635311214822285771,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311214822285771,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311214822285771,"Parsed as literal","sudan"
635311214822295772,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311214822295772,"Parsed as literal","n"
635311214822295772,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311214822295772,"Parsed as literal","x"
635311214822305773,"Parsed as literal","y"
635311214822305773,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311214822305773,"Parsed as literal","sudan"
635311214822315773,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311214822315773,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311214822315773,"Parsed as literal","n"
635311214822325774,"Parsed as literal","1"
635311214822325774,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311214822325774,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311214822325774,"Parsed as literal","sudan"
635311214822335774,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311214822335774,"Parsed as literal","n"
635311214822335774,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311214822345775,"Parsed as literal","x"
635311214822345775,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311214822345775,"Parsed as literal","y"
635311214822345775,"Parsed as literal","1"
635311214822355775,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311214822355775,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311214822355775,"Parsed as literal","sudan"
635311214822365776,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311214822365776,"Parsed as literal","n"
635311214822365776,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311214822365776,"Parsed as literal","x"
635311214822375777,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311214822375777,"Parsed as literal","y"
635311214822375777,"Parsed as literal","1"
635311214822385777,"Parsed as literal","y"
635311214822385777,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311214822385777,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311214822395778,"Parsed as literal","sudan"
635311214822395778,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311214822395778,"Parsed as literal","n"
635311214822395778,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311214822405778,"Parsed as literal","x"
635311214822405778,"Parsed as literal","y"
635311214822405778,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311214822415779,"Parsed as literal","sudan"
635311214822415779,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311214822415779,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311214822425779,"Parsed as literal","n"
635311214822425779,"Parsed as literal","1"
635311214822425779,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311214822435780,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311214822435780,"Parsed as literal","sudan"
635311214822435780,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311214822435780,"Parsed as literal","n"
635311214822445781,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311214822445781,"Parsed as literal","x"
635311214822445781,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311214822445781,"Parsed as literal","y"
635311214822455781,"Parsed as literal","1"
635311214822455781,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311214822455781,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311214822465782,"Parsed as literal","sudan"
635311214822465782,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311214822465782,"Parsed as literal","n"
635311214822475782,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311214822475782,"Parsed as literal","x"
635311214822475782,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311214822475782,"Parsed as literal","y"
635311214822485783,"Parsed as literal","1"
635311214822485783,"Parsed as literal","y"
635311214822485783,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311214822495783,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311214822495783,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311214822495783,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311214822495783,"StepEvaluate","->","Changed","Declared @max"
635311214822505784,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311214822505784,"StepEvaluate","->","Changed","Declared @max"
635311214822505784,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311214822505784,"StepEvaluate","->","Changed","Declared @random"
635311214822515785,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311214822515785,"StepEvaluate","->","Changed","Declared @random"
635311214822515785,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311214822525785,"StepEvaluate","->","Changed","Declared @gcd"
635311214822525785,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311214822525785,"StepEvaluate","->","Changed","Declared @gcd"
635311214822525785,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311214822535786,"StepEvaluate","->","Changed","Declared @gcd"
635311214822535786,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311214822535786,"StepEvaluate","->","Changed","Declared @fib"
635311214822535786,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311214822545786,"StepEvaluate","->","Changed","Declared @fib"
635311214822545786,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311214822545786,"StepEvaluate","->","Changed","Declared @fib"
635311214822545786,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311214822555787,"StepEvaluate","->","Changed","Declared @fib2"
635311214822555787,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311214822555787,"StepEvaluate","->","Changed","Declared @fib2"
635311214822555787,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311214822565787,"StepEvaluate","->","Changed","Declared @fac"
635311214822565787,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311214822565787,"StepEvaluate","->","Changed","Declared @fac"
635311214822575788,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311214822575788,"StepEvaluate","->","Changed","Declared @pow"
635311214822575788,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311214822575788,"StepEvaluate","->","Changed","Declared @pow"
635311214822585789,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311214822585789,"StepEvaluate","->","Changed","Declared @pow"
635311214822585789,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311214822585789,"StepEvaluate","->","Changed","Declared @upArrow"
635311214822595789,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311214822595789,"StepEvaluate","->","Changed","Declared @upArrow"
635311214822595789,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311214822595789,"StepEvaluate","->","Changed","Declared @upArrow"
635311214822605790,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311214822605790,"StepEvaluate","->","Changed","Declared @graham"
635311214822605790,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311214822615790,"StepEvaluate","->","Changed","Declared @graham"
635311214822615790,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311214822615790,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311214822615790,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311214822625791,"StepEvaluate","->","Changed","Declared @ack"
635311214822625791,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311214822625791,"StepEvaluate","->","Changed","Declared @ack"
635311214822625791,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311214822635791,"StepEvaluate","->","Changed","Declared @ack"
635311214822635791,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311214822635791,"StepEvaluate","->","Changed","Declared @acker"
635311214822635791,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311214822645792,"StepEvaluate","->","Changed","Declared @acker"
635311214822645792,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311214822645792,"StepEvaluate","->","Changed","Declared @acker"
635311214822655793,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311214822655793,"StepEvaluate","->","Changed","Declared @acker"
635311214822655793,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311214822655793,"StepEvaluate","->","Changed","Declared @acker"
635311214822665793,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311214822665793,"StepEvaluate","->","Changed","Declared @hyper"
635311214822665793,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311214822665793,"StepEvaluate","->","Changed","Declared @hyper"
635311214822675794,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311214822675794,"StepEvaluate","->","Changed","Declared @hyper"
635311214822675794,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311214822685794,"StepEvaluate","->","Changed","Declared @hyper"
635311214822685794,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311214822685794,"StepEvaluate","->","Changed","Declared @hyper"
635311214822685794,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311214822695795,"StepEvaluate","->","Changed","Declared @sudan"
635311214822695795,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311214822695795,"StepEvaluate","->","Changed","Declared @sudan"
635311214822695795,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311214822705795,"StepEvaluate","->","Changed","Declared @sudan"
635311214822705795,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311214822705795,"StepEvaluate","[]","Changed","File imported"
635311214822705795,"StepEvaluate","File imported","Unchanged","File imported"
635311214822715796,"StepEvaluate","@","Changed","@"
635311214822715796,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214822715796,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214822725797,"StepEvaluate",",","Unchanged",","
635311214822725797,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214822725797,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311214822725797,"StepEvaluate","PAT@-M","Changed","[]"
635311214822735797,"StepEvaluate","SEL@import","Changed","[]"
635311214822735797,"StepEvaluate","@","Changed","[]"
635311214822735797,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311214822745798,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311214822745798,"Parsed as literal","quickSort"
635311214822745798,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311214822745798,"Parsed as literal",""
635311214822755798,"Parsed as literal",""
635311214822755798,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311214822755798,"Parsed as literal",""
635311214822765799,"Parsed as literal",""
635311214822765799,"Invalid operator","@quickSort([]) -> []","0"
635311214822765799,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311214822765799,"Parsed as literal","quickSort"
635311214822775799,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311214822775799,"Parsed as literal",""
635311214822775799,"Parsed as literal",""
635311214822775799,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311214822785800,"Parsed as literal",""
635311214822785800,"Parsed as literal",""
635311214822795801,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311214822795801,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311214822795801,"Parsed as literal","quickSort"
635311214822795801,"Parsed as literal","list"
635311214822805801,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311214822805801,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311214822815802,"Parsed as literal","quickSort"
635311214822815802,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311214822815802,"Parsed as literal","filter"
635311214822815802,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311214822825802,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311214822825802,"Parsed as literal",""
635311214822825802,"Parsed as literal","i"
635311214822835803,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311214822835803,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311214822835803,"Parsed as literal"," i "
635311214822835803,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311214822845804,"Parsed as literal"," "
635311214822845804,"Parsed as literal","list"
635311214822845804,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311214822855804,"Parsed as literal",""
635311214822855804,"Parsed as literal","list"
635311214822855804,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311214822855804,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311214822865805,"Parsed as literal",""
635311214822865805,"Parsed as literal","i"
635311214822875805,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311214822875805,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311214822875805,"Parsed as literal"," i "
635311214822875805,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311214822885806,"Parsed as literal"," "
635311214822885806,"Parsed as literal","list"
635311214822885806,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311214822895806,"Parsed as literal",""
635311214822895806,"Parsed as literal","list"
635311214822895806,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311214822895806,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311214822905807,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311214822905807,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311214822905807,"Parsed as literal",""
635311214822915808,"Parsed as literal","i"
635311214822915808,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311214822915808,"Parsed as literal"," i "
635311214822925808,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311214822925808,"Parsed as literal"," "
635311214822925808,"Parsed as literal","list"
635311214822925808,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311214822935809,"Parsed as literal",""
635311214822935809,"Parsed as literal","list"
635311214822935809,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311214822945809,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311214822945809,"Parsed as literal"," "
635311214822945809,"Parsed as literal","list "
635311214822955810,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311214822955810,"Parsed as literal","quickSort"
635311214822955810,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311214822955810,"Parsed as literal","filter"
635311214822965810,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311214822965810,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311214822965810,"Parsed as literal",""
635311214822975811,"Parsed as literal","i"
635311214822975811,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311214822975811,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311214822985812,"Parsed as literal"," i "
635311214822985812,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311214822985812,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311214822985812,"Parsed as literal"," "
635311214822995812,"Parsed as literal","list"
635311214822995812,"Parsed as literal","1"
635311214822995812,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311214822995812,"Parsed as literal",""
635311214823005813,"Parsed as literal","list"
635311214823005813,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311214823005813,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311214823015813,"Parsed as literal",""
635311214823015813,"Parsed as literal","i"
635311214823015813,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311214823015813,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311214823025814,"Parsed as literal"," i "
635311214823025814,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311214823025814,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311214823035814,"Parsed as literal"," "
635311214823035814,"Parsed as literal","list"
635311214823035814,"Parsed as literal","1"
635311214823035814,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311214823045815,"Parsed as literal",""
635311214823045815,"Parsed as literal","list"
635311214823045815,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311214823055816,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311214823055816,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311214823055816,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311214823055816,"Parsed as literal",""
635311214823065816,"Parsed as literal","i"
635311214823065816,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311214823065816,"Parsed as literal"," i "
635311214823075817,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311214823075817,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311214823075817,"Parsed as literal"," "
635311214823075817,"Parsed as literal","list"
635311214823085817,"Parsed as literal","1"
635311214823085817,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311214823085817,"Parsed as literal",""
635311214823095818,"Parsed as literal","list"
635311214823095818,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311214823095818,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311214823105818,"Parsed as literal","quickSort"
635311214823105818,"Parsed as literal","list"
635311214823105818,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311214823115819,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311214823115819,"Parsed as literal","quickSort"
635311214823115819,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311214823115819,"Parsed as literal","filter"
635311214823125820,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311214823125820,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311214823125820,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311214823135820,"Parsed as literal",""
635311214823135820,"Parsed as literal","i"
635311214823135820,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311214823145821,"Parsed as literal"," i "
635311214823145821,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311214823145821,"Parsed as literal"," "
635311214823145821,"Parsed as literal","list"
635311214823155821,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311214823155821,"Parsed as literal",""
635311214823155821,"Parsed as literal","list"
635311214823165822,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311214823165822,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311214823165822,"Parsed as literal"," "
635311214823165822,"Parsed as literal","list "
635311214823175822,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311214823175822,"Parsed as literal","quickSort"
635311214823175822,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311214823185823,"Parsed as literal","filter"
635311214823185823,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311214823185823,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311214823195824,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311214823195824,"Parsed as literal",""
635311214823195824,"Parsed as literal","i"
635311214823195824,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311214823205824,"Parsed as literal"," i "
635311214823205824,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311214823205824,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311214823205824,"Parsed as literal"," "
635311214823215825,"Parsed as literal","list"
635311214823215825,"Parsed as literal","1"
635311214823215825,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311214823225825,"Parsed as literal",""
635311214823225825,"Parsed as literal","list"
635311214823225825,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311214823225825,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311214823235826,"Parsed as literal","mergeSort"
635311214823235826,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311214823235826,"Parsed as literal",""
635311214823235826,"Parsed as literal",""
635311214823245826,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311214823245826,"Parsed as literal",""
635311214823245826,"Parsed as literal",""
635311214823255827,"Invalid operator","@mergeSort([]) -> []","0"
635311214823255827,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311214823255827,"Parsed as literal","mergeSort"
635311214823255827,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311214823265828,"Parsed as literal",""
635311214823265828,"Parsed as literal",""
635311214823265828,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311214823265828,"Parsed as literal",""
635311214823275828,"Parsed as literal",""
635311214823275828,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311214823275828,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311214823285829,"Parsed as literal","mergeSort"
635311214823285829,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311214823285829,"Parsed as literal","list"
635311214823295829,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311214823295829,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311214823295829,"Parsed as literal",""
635311214823295829,"Parsed as literal","list"
635311214823305830,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311214823305830,"Parsed as literal",""
635311214823305830,"Parsed as literal",""
635311214823305830,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311214823315830,"Parsed as literal"," "
635311214823315830,"Parsed as literal","list"
635311214823315830,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311214823325831,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311214823325831,"Parsed as literal","mergeSort"
635311214823325831,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311214823325831,"Parsed as literal","list"
635311214823335832,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311214823335832,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311214823335832,"Parsed as literal",""
635311214823345832,"Parsed as literal","list"
635311214823345832,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311214823345832,"Parsed as literal",""
635311214823345832,"Parsed as literal",""
635311214823355833,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311214823355833,"Parsed as literal"," "
635311214823355833,"Parsed as literal","list"
635311214823365833,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311214823365833,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311214823365833,"Parsed as literal","mergeSort"
635311214823375834,"Parsed as literal","list"
635311214823375834,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311214823375834,"Parsed as literal","merge"
635311214823385834,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311214823385834,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311214823385834,"Parsed as literal","mergeSort"
635311214823395835,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311214823395835,"Parsed as literal","take"
635311214823395835,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311214823405836,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311214823405836,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311214823405836,"Parsed as literal","count"
635311214823405836,"Parsed as literal","list"
635311214823415836,"Parsed as literal","2"
635311214823415836,"Parsed as literal","list"
635311214823415836,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311214823425837,"Parsed as literal","mergeSort"
635311214823425837,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311214823425837,"Parsed as literal","skip"
635311214823425837,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311214823435837,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311214823435837,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311214823435837,"Parsed as literal","count"
635311214823445838,"Parsed as literal","list"
635311214823445838,"Parsed as literal","2"
635311214823445838,"Parsed as literal","list"
635311214823445838,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311214823455838,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311214823455838,"Parsed as literal","mergeSort"
635311214823455838,"Parsed as literal","list"
635311214823465839,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311214823465839,"Parsed as literal","merge"
635311214823465839,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311214823475840,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311214823475840,"Parsed as literal","mergeSort"
635311214823475840,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311214823485840,"Parsed as literal","take"
635311214823485840,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311214823485840,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311214823495841,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311214823495841,"Parsed as literal","count"
635311214823495841,"Parsed as literal","list"
635311214823495841,"Parsed as literal","2"
635311214823505841,"Parsed as literal","list"
635311214823505841,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311214823505841,"Parsed as literal","mergeSort"
635311214823515842,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311214823515842,"Parsed as literal","skip"
635311214823515842,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311214823525842,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311214823525842,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311214823525842,"Parsed as literal","count"
635311214823525842,"Parsed as literal","list"
635311214823535843,"Parsed as literal","2"
635311214823535843,"Parsed as literal","list"
635311214823535843,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311214823545844,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311214823545844,"Parsed as literal","merge"
635311214823545844,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311214823545844,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311214823555844,"Parsed as literal",""
635311214823555844,"Parsed as literal",""
635311214823555844,"Parsed as literal","list"
635311214823565845,"Parsed as literal"," list"
635311214823565845,"Invalid operator","@merge([],list) -> list","0"
635311214823565845,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311214823575845,"Parsed as literal","merge"
635311214823575845,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311214823575845,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311214823575845,"Parsed as literal",""
635311214823585846,"Parsed as literal",""
635311214823585846,"Parsed as literal","list"
635311214823585846,"Parsed as literal"," list"
635311214823595846,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311214823595846,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311214823595846,"Parsed as literal","merge"
635311214823595846,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311214823605847,"Parsed as literal","list"
635311214823605847,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311214823605847,"Parsed as literal",""
635311214823615848,"Parsed as literal",""
635311214823615848,"Parsed as literal"," list"
635311214823615848,"Invalid operator","@merge(list,[]) -> list","0"
635311214823625848,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311214823625848,"Parsed as literal","merge"
635311214823625848,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311214823635849,"Parsed as literal","list"
635311214823635849,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311214823635849,"Parsed as literal",""
635311214823635849,"Parsed as literal",""
635311214823645849,"Parsed as literal"," list"
635311214823645849,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311214823645849,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311214823655850,"Parsed as literal","merge"
635311214823655850,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311214823655850,"Parsed as literal","left"
635311214823665850,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311214823665850,"Parsed as literal","right "
635311214823665850,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311214823665850,"Parsed as literal"," "
635311214823675851,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311214823675851,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311214823675851,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311214823685852,"Parsed as literal",""
635311214823685852,"Parsed as literal","left "
635311214823685852,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311214823685852,"Parsed as literal"," "
635311214823695852,"Parsed as literal","right"
635311214823695852,"Parsed as literal",""
635311214823695852,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311214823705853,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311214823705853,"Parsed as literal"," "
635311214823705853,"Parsed as literal","left "
635311214823705853,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311214823715853,"Parsed as literal","merge"
635311214823715853,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311214823715853,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311214823725854,"Parsed as literal",""
635311214823725854,"Parsed as literal","left"
635311214823725854,"Parsed as literal","right"
635311214823725854,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311214823735854,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311214823735854,"Parsed as literal","merge"
635311214823735854,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311214823745855,"Parsed as literal","left"
635311214823745855,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311214823745855,"Parsed as literal","right "
635311214823745855,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311214823755856,"Parsed as literal"," "
635311214823755856,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311214823755856,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311214823765856,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311214823765856,"Parsed as literal",""
635311214823765856,"Parsed as literal","left "
635311214823765856,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311214823775857,"Parsed as literal"," "
635311214823775857,"Parsed as literal","right"
635311214823775857,"Parsed as literal",""
635311214823785857,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311214823785857,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311214823785857,"Parsed as literal"," "
635311214823785857,"Parsed as literal","left "
635311214823795858,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311214823795858,"Parsed as literal","merge"
635311214823795858,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311214823805858,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311214823805858,"Parsed as literal",""
635311214823805858,"Parsed as literal","left"
635311214823805858,"Parsed as literal","right"
635311214823815859,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311214823815859,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311214823815859,"Parsed as literal","merge"
635311214823825860,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311214823825860,"Parsed as literal","left"
635311214823825860,"Parsed as literal","right"
635311214823835860,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311214823835860,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311214823835860,"Parsed as literal"," "
635311214823835860,"Parsed as literal","right "
635311214823845861,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311214823845861,"Parsed as literal","merge"
635311214823845861,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311214823855861,"Parsed as literal","left"
635311214823855861,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311214823855861,"Parsed as literal",""
635311214823855861,"Parsed as literal","right"
635311214823865862,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311214823865862,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311214823865862,"Parsed as literal","merge"
635311214823875862,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311214823875862,"Parsed as literal","left"
635311214823875862,"Parsed as literal","right"
635311214823875862,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311214823885863,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311214823885863,"Parsed as literal"," "
635311214823885863,"Parsed as literal","right "
635311214823895864,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311214823895864,"Parsed as literal","merge"
635311214823895864,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311214823895864,"Parsed as literal","left"
635311214823905864,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311214823905864,"Parsed as literal",""
635311214823905864,"Parsed as literal","right"
635311214823915865,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311214823915865,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311214823915865,"Parsed as literal","bubbleSort"
635311214823925865,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311214823925865,"Parsed as literal","list"
635311214823925865,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311214823925865,"Parsed as literal","isSorted"
635311214823935866,"Parsed as literal","list"
635311214823935866,"Parsed as literal"," list"
635311214823935866,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311214823945866,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311214823945866,"Parsed as literal","bubbleSort"
635311214823945866,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311214823945866,"Parsed as literal","list"
635311214823955867,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311214823955867,"Parsed as literal","isSorted"
635311214823955867,"Parsed as literal","list"
635311214823965868,"Parsed as literal"," list"
635311214823965868,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311214823965868,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311214823975868,"Parsed as literal","bubbleSort"
635311214823975868,"Parsed as literal","list"
635311214823975868,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311214823975868,"Parsed as literal","bubbleSort"
635311214823985869,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311214823985869,"Parsed as literal","bubbleSortPass"
635311214823985869,"Parsed as literal","list"
635311214823995869,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311214823995869,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311214823995869,"Parsed as literal","bubbleSort"
635311214823995869,"Parsed as literal","list"
635311214824005870,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311214824005870,"Parsed as literal","bubbleSort"
635311214824005870,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311214824015870,"Parsed as literal","bubbleSortPass"
635311214824015870,"Parsed as literal","list"
635311214824015870,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311214824025871,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311214824025871,"Parsed as literal","bubbleSortPass"
635311214824025871,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311214824025871,"Parsed as literal",""
635311214824035872,"Parsed as literal",""
635311214824035872,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311214824035872,"Parsed as literal",""
635311214824035872,"Parsed as literal",""
635311214824045872,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311214824045872,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311214824045872,"Parsed as literal","bubbleSortPass"
635311214824055873,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311214824055873,"Parsed as literal",""
635311214824055873,"Parsed as literal",""
635311214824055873,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311214824065873,"Parsed as literal",""
635311214824065873,"Parsed as literal",""
635311214824065873,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311214824075874,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311214824075874,"Parsed as literal","bubbleSortPass"
635311214824075874,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311214824085874,"Parsed as literal","list"
635311214824085874,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311214824085874,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311214824085874,"Parsed as literal",""
635311214824095875,"Parsed as literal","list "
635311214824095875,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311214824095875,"Parsed as literal",""
635311214824105876,"Parsed as literal",""
635311214824105876,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311214824105876,"Parsed as literal"," "
635311214824105876,"Parsed as literal","list"
635311214824115876,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311214824115876,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311214824115876,"Parsed as literal","bubbleSortPass"
635311214824125877,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311214824125877,"Parsed as literal","list"
635311214824125877,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311214824125877,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311214824135877,"Parsed as literal",""
635311214824135877,"Parsed as literal","list "
635311214824135877,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311214824145878,"Parsed as literal",""
635311214824145878,"Parsed as literal",""
635311214824145878,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311214824145878,"Parsed as literal"," "
635311214824155878,"Parsed as literal","list"
635311214824155878,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311214824155878,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311214824165879,"Parsed as literal","bubbleSortPass"
635311214824165879,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311214824165879,"Parsed as literal","list"
635311214824165879,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311214824175880,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311214824175880,"Parsed as literal",""
635311214824175880,"Parsed as literal","list "
635311214824185880,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311214824185880,"Parsed as literal"," "
635311214824185880,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311214824185880,"Parsed as literal",""
635311214824195881,"Parsed as literal","list"
635311214824195881,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311214824195881,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311214824205881,"Parsed as literal"," "
635311214824205881,"Parsed as literal","list "
635311214824205881,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311214824205881,"Parsed as literal","bubbleSortPass"
635311214824215882,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311214824215882,"Parsed as literal",""
635311214824215882,"Parsed as literal","list"
635311214824225882,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311214824225882,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311214824225882,"Parsed as literal","bubbleSortPass"
635311214824225882,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311214824235883,"Parsed as literal","list"
635311214824235883,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311214824235883,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311214824245884,"Parsed as literal",""
635311214824245884,"Parsed as literal","list "
635311214824245884,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311214824245884,"Parsed as literal"," "
635311214824255884,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311214824255884,"Parsed as literal",""
635311214824255884,"Parsed as literal","list"
635311214824265885,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311214824265885,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311214824265885,"Parsed as literal"," "
635311214824265885,"Parsed as literal","list "
635311214824275885,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311214824275885,"Parsed as literal","bubbleSortPass"
635311214824275885,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311214824285886,"Parsed as literal",""
635311214824285886,"Parsed as literal","list"
635311214824285886,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311214824285886,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311214824295886,"Parsed as literal","bubbleSortPass"
635311214824295886,"Parsed as literal","list"
635311214824295886,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311214824305887,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311214824305887,"Parsed as literal"," "
635311214824305887,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311214824305887,"Parsed as literal",""
635311214824315888,"Parsed as literal","list "
635311214824315888,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311214824315888,"Parsed as literal","bubbleSortPass"
635311214824325888,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311214824325888,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311214824325888,"Parsed as literal",""
635311214824325888,"Parsed as literal","list "
635311214824335889,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311214824335889,"Parsed as literal"," "
635311214824335889,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311214824345889,"Parsed as literal",""
635311214824345889,"Parsed as literal","list"
635311214824345889,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311214824345889,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311214824355890,"Parsed as literal","bubbleSortPass"
635311214824355890,"Parsed as literal","list"
635311214824355890,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311214824365890,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311214824365890,"Parsed as literal"," "
635311214824365890,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311214824365890,"Parsed as literal",""
635311214824375891,"Parsed as literal","list "
635311214824375891,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311214824375891,"Parsed as literal","bubbleSortPass"
635311214824385892,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311214824385892,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311214824385892,"Parsed as literal",""
635311214824385892,"Parsed as literal","list "
635311214824395892,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311214824395892,"Parsed as literal"," "
635311214824395892,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311214824405893,"Parsed as literal",""
635311214824405893,"Parsed as literal","list"
635311214824405893,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311214824405893,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311214824415893,"Parsed as literal","isSorted"
635311214824415893,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311214824415893,"Parsed as literal",""
635311214824425894,"Parsed as literal",""
635311214824425894,"Parsed as literal"," true"
635311214824425894,"Invalid operator","@isSorted([]) -> true","0"
635311214824435894,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311214824435894,"Parsed as literal","isSorted"
635311214824435894,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311214824435894,"Parsed as literal",""
635311214824445895,"Parsed as literal",""
635311214824445895,"Parsed as literal"," true"
635311214824445895,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311214824455896,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311214824455896,"Parsed as literal","isSorted"
635311214824455896,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311214824455896,"Parsed as literal","list"
635311214824465896,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311214824465896,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311214824465896,"Parsed as literal",""
635311214824475897,"Parsed as literal","list "
635311214824475897,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311214824475897,"Parsed as literal",""
635311214824475897,"Parsed as literal",""
635311214824485897,"Parsed as literal"," true"
635311214824485897,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311214824485897,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311214824495898,"Parsed as literal","isSorted"
635311214824495898,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311214824495898,"Parsed as literal","list"
635311214824495898,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311214824505898,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311214824505898,"Parsed as literal",""
635311214824505898,"Parsed as literal","list "
635311214824515899,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311214824515899,"Parsed as literal",""
635311214824515899,"Parsed as literal",""
635311214824515899,"Parsed as literal"," true"
635311214824525900,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311214824525900,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311214824535900,"Parsed as literal","isSorted"
635311214824535900,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311214824535900,"Parsed as literal","list"
635311214824545901,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311214824545901,"Parsed as literal",""
635311214824545901,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311214824545901,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311214824555901,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311214824555901,"Parsed as literal",""
635311214824555901,"Parsed as literal","list "
635311214824565902,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311214824565902,"Parsed as literal"," "
635311214824565902,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311214824565902,"Parsed as literal",""
635311214824575902,"Parsed as literal","list"
635311214824575902,"Parsed as literal",""
635311214824575902,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311214824585903,"Parsed as literal","isSorted"
635311214824585903,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311214824585903,"Parsed as literal",""
635311214824585903,"Parsed as literal","list"
635311214824595904,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311214824595904,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311214824595904,"Parsed as literal","isSorted"
635311214824605904,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311214824605904,"Parsed as literal","list"
635311214824605904,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311214824605904,"Parsed as literal",""
635311214824615905,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311214824615905,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311214824615905,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311214824625905,"Parsed as literal",""
635311214824625905,"Parsed as literal","list "
635311214824625905,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311214824625905,"Parsed as literal"," "
635311214824635906,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311214824635906,"Parsed as literal",""
635311214824635906,"Parsed as literal","list"
635311214824645906,"Parsed as literal",""
635311214824645906,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311214824645906,"Parsed as literal","isSorted"
635311214824645906,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311214824655907,"Parsed as literal",""
635311214824655907,"Parsed as literal","list"
635311214824655907,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311214824665908,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311214824665908,"Parsed as literal","isSorted"
635311214824665908,"Parsed as literal","list"
635311214824675908,"Parsed as literal"," false"
635311214824675908,"Invalid operator","@isSorted(list) -> false","0"
635311214824675908,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311214824675908,"Parsed as literal","isSorted"
635311214824685909,"Parsed as literal","list"
635311214824685909,"Parsed as literal"," false"
635311214824685909,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311214824695909,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311214824695909,"Parsed as literal","insertionSort"
635311214824695909,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311214824695909,"Parsed as literal",""
635311214824705910,"Parsed as literal",""
635311214824705910,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311214824705910,"Parsed as literal",""
635311214824715910,"Parsed as literal",""
635311214824715910,"Invalid operator","@insertionSort([]) -> []","0"
635311214824715910,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311214824715910,"Parsed as literal","insertionSort"
635311214824725911,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311214824725911,"Parsed as literal",""
635311214824725911,"Parsed as literal",""
635311214824735912,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311214824735912,"Parsed as literal",""
635311214824735912,"Parsed as literal",""
635311214824735912,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311214824745912,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311214824745912,"Parsed as literal","insertionSort"
635311214824745912,"Parsed as literal","list"
635311214824755913,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311214824755913,"Parsed as literal","insert"
635311214824755913,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311214824765913,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311214824765913,"Parsed as literal",""
635311214824765913,"Parsed as literal","list"
635311214824765913,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311214824775914,"Parsed as literal","insertionSort"
635311214824775914,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311214824775914,"Parsed as literal",""
635311214824775914,"Parsed as literal","list"
635311214824785914,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311214824785914,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311214824785914,"Parsed as literal","insertionSort"
635311214824795915,"Parsed as literal","list"
635311214824795915,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311214824795915,"Parsed as literal","insert"
635311214824805916,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311214824805916,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311214824805916,"Parsed as literal",""
635311214824805916,"Parsed as literal","list"
635311214824815916,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311214824815916,"Parsed as literal","insertionSort"
635311214824815916,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311214824815916,"Parsed as literal",""
635311214824825917,"Parsed as literal","list"
635311214824825917,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311214824825917,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311214824835917,"Parsed as literal","insert"
635311214824835917,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311214824835917,"Parsed as literal","item"
635311214824835917,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311214824845918,"Parsed as literal",""
635311214824845918,"Parsed as literal",""
635311214824845918,"Parsed as literal"," item"
635311214824855918,"Invalid operator","@insert(item,[]) -> item","0"
635311214824855918,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311214824855918,"Parsed as literal","insert"
635311214824855918,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311214824865919,"Parsed as literal","item"
635311214824865919,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311214824865919,"Parsed as literal",""
635311214824865919,"Parsed as literal",""
635311214824875920,"Parsed as literal"," item"
635311214824875920,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311214824875920,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311214824885920,"Parsed as literal","insert"
635311214824885920,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311214824885920,"Parsed as literal","item"
635311214824895921,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311214824895921,"Parsed as literal","list "
635311214824895921,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311214824895921,"Parsed as literal"," item "
635311214824905921,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311214824905921,"Parsed as literal"," "
635311214824905921,"Parsed as literal","list"
635311214824915922,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311214824915922,"Parsed as literal"," item "
635311214824915922,"Parsed as literal"," list"
635311214824915922,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311214824925922,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311214824925922,"Parsed as literal","insert"
635311214824925922,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311214824935923,"Parsed as literal","item"
635311214824935923,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311214824935923,"Parsed as literal","list "
635311214824935923,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311214824945924,"Parsed as literal"," item "
635311214824945924,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311214824945924,"Parsed as literal"," "
635311214824955924,"Parsed as literal","list"
635311214824955924,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311214824955924,"Parsed as literal"," item "
635311214824955924,"Parsed as literal"," list"
635311214824965925,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311214824965925,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311214824965925,"Parsed as literal","insert"
635311214824975925,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311214824975925,"Parsed as literal","item"
635311214824975925,"Parsed as literal","list"
635311214824985926,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311214824985926,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311214824985926,"Parsed as literal"," "
635311214824985926,"Parsed as literal","list "
635311214824995926,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311214824995926,"Parsed as literal","insert"
635311214824995926,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311214825005927,"Parsed as literal","item"
635311214825005927,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311214825005927,"Parsed as literal",""
635311214825005927,"Parsed as literal","list"
635311214825015928,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311214825015928,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311214825015928,"Parsed as literal","insert"
635311214825015928,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311214825025928,"Parsed as literal","item"
635311214825025928,"Parsed as literal","list"
635311214825025928,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311214825035929,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311214825035929,"Parsed as literal"," "
635311214825035929,"Parsed as literal","list "
635311214825035929,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311214825045929,"Parsed as literal","insert"
635311214825045929,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311214825045929,"Parsed as literal","item"
635311214825055930,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311214825055930,"Parsed as literal",""
635311214825055930,"Parsed as literal","list"
635311214825065930,"StepEvaluate","->","Changed","Declared @quickSort"
635311214825065930,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311214825065930,"StepEvaluate","->","Changed","Declared @quickSort"
635311214825065930,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311214825075931,"StepEvaluate","->","Changed","Declared @mergeSort"
635311214825075931,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311214825075931,"StepEvaluate","->","Changed","Declared @mergeSort"
635311214825075931,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311214825085932,"StepEvaluate","->","Changed","Declared @mergeSort"
635311214825085932,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311214825085932,"StepEvaluate","->","Changed","Declared @merge"
635311214825085932,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311214825095932,"StepEvaluate","->","Changed","Declared @merge"
635311214825095932,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311214825095932,"StepEvaluate","->","Changed","Declared @merge"
635311214825105933,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311214825105933,"StepEvaluate","->","Changed","Declared @merge"
635311214825105933,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311214825105933,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311214825115933,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311214825115933,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311214825115933,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311214825115933,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311214825125934,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311214825125934,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311214825125934,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311214825135934,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311214825135934,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311214825135934,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311214825135934,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311214825145935,"StepEvaluate","->","Changed","Declared @isSorted"
635311214825145935,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311214825145935,"StepEvaluate","->","Changed","Declared @isSorted"
635311214825145935,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311214825155936,"StepEvaluate","->","Changed","Declared @isSorted"
635311214825155936,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311214825155936,"StepEvaluate","->","Changed","Declared @isSorted"
635311214825155936,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311214825165936,"StepEvaluate","->","Changed","Declared @insertionSort"
635311214825165936,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311214825165936,"StepEvaluate","->","Changed","Declared @insertionSort"
635311214825175937,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311214825175937,"StepEvaluate","->","Changed","Declared @insert"
635311214825175937,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311214825175937,"StepEvaluate","->","Changed","Declared @insert"
635311214825185937,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311214825185937,"StepEvaluate","->","Changed","Declared @insert"
635311214825185937,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311214825185937,"StepEvaluate","[]","Changed","File imported"
635311214825195938,"StepEvaluate","File imported","Unchanged","File imported"
635311214825195938,"StepEvaluate","[]","Changed","File imported"
635311214825195938,"StepEvaluate","File imported","Unchanged","File imported"
635311214825195938,"ParseInternal","@makeRange(1,4) , @makeRange(10,14)","0","CommaOperator","0","17","@makeRange(1,4) "," @makeRange(10,14)"
635311214825205938,"ParseInternal","@makeRange(1,4) ","0","FunctionCallOperator","1","10","makeRange","1,4"
635311214825205938,"Parsed as literal","makeRange"
635311214825205938,"ParseInternal","1,4","10","CommaOperator","10","12","1","4"
635311214825215939,"Parsed as literal","1"
635311214825215939,"Parsed as literal","4"
635311214825215939,"ParseInternal"," @makeRange(10,14)","17","FunctionCallOperator","19","28","makeRange","10,14"
635311214825215939,"Parsed as literal","makeRange"
635311214825225940,"ParseInternal","10,14","28","CommaOperator","28","31","10","14"
635311214825225940,"Parsed as literal","10"
635311214825225940,"Parsed as literal","14"
635311214836726597,"StepEvaluate",",","Changed",","
635311214836736598,"StepEvaluate",",","Unchanged",","
635311214836756599,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214836766600,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214836776600,"StepEvaluate",",","Unchanged",","
635311214836786601,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214836786601,"StepEvaluate",",","Unchanged",","
635311214836796601,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214836816603,"StepEvaluate","|","Unchanged","|"
635311214836826603,"StepEvaluate","b","Unchanged","b"
635311214836836604,"StepEvaluate","==","Changed","False"
635311214836846604,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214836846604,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214836856605,"StepEvaluate",",","Unchanged",","
635311214836876606,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214836886607,"StepEvaluate",",","Unchanged",","
635311214836886607,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214836896607,"StepEvaluate","|","Unchanged","|"
635311214836906608,"StepEvaluate","b","Unchanged","b"
635311214836916608,"StepEvaluate","==","Changed","False"
635311214836926609,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214836926609,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214836936609,"StepEvaluate",",","Unchanged",","
635311214836946610,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214836956611,"StepEvaluate",",","Unchanged",","
635311214836956611,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214836966611,"StepEvaluate","|","Unchanged","|"
635311214836976612,"StepEvaluate","b","Unchanged","b"
635311214836986612,"StepEvaluate","==","Changed","False"
635311214836986612,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214836996613,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837006613,"StepEvaluate",",","Unchanged",","
635311214837016614,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214837016614,"StepEvaluate",",","Unchanged",","
635311214837036615,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214837046616,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837046616,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214837056616,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214837066617,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837076617,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837076617,"StepEvaluate",",","Unchanged",","
635311214837086618,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214837096619,"StepEvaluate",",","Unchanged",","
635311214837096619,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837106619,"StepEvaluate","|","Unchanged","|"
635311214837116620,"StepEvaluate","b","Unchanged","b"
635311214837136621,"StepEvaluate","<","Changed","True"
635311214837146621,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837146621,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837156622,"StepEvaluate",",","Unchanged",","
635311214837166623,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214837166623,"StepEvaluate",",","Unchanged",","
635311214837176623,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837186624,"StepEvaluate","|","Unchanged","|"
635311214837196624,"StepEvaluate","b","Unchanged","b"
635311214837196624,"StepEvaluate","<","Changed","True"
635311214837206625,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837216625,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837216625,"StepEvaluate",",","Unchanged",","
635311214837226626,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214837236627,"StepEvaluate",",","Unchanged",","
635311214837246627,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837246627,"StepEvaluate","|","Unchanged","|"
635311214837256628,"StepEvaluate","b","Unchanged","b"
635311214837266628,"StepEvaluate","<","Changed","True"
635311214837276629,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837286629,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837286629,"StepEvaluate",",","Unchanged",","
635311214837296630,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214837306631,"StepEvaluate",",","Unchanged",","
635311214837516643,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214837516643,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837526643,"StepEvaluate","PAT@-M","Changed","&"
635311214837526643,"StepEvaluate","SEL@makeRange","Changed","&"
635311214837536644,"StepEvaluate","@","Changed","&"
635311214837536644,"StepEvaluate",",","Unchanged",","
635311214837546644,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837556645,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837556645,"StepEvaluate",",","Unchanged",","
635311214837566645,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214837566645,"StepEvaluate",",","Unchanged",","
635311214837566645,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837576646,"StepEvaluate","|","Unchanged","|"
635311214837576646,"StepEvaluate","b","Unchanged","b"
635311214837586647,"StepEvaluate","==","Changed","False"
635311214837586647,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837596647,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837596647,"StepEvaluate",",","Unchanged",","
635311214837606648,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214837606648,"StepEvaluate",",","Unchanged",","
635311214837616648,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837616648,"StepEvaluate","|","Unchanged","|"
635311214837626649,"StepEvaluate","b","Unchanged","b"
635311214837636649,"StepEvaluate","==","Changed","False"
635311214837636649,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837646650,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837646650,"StepEvaluate",",","Unchanged",","
635311214837656651,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214837656651,"StepEvaluate",",","Unchanged",","
635311214837666651,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837676652,"StepEvaluate","|","Unchanged","|"
635311214837676652,"StepEvaluate","b","Unchanged","b"
635311214837686652,"StepEvaluate","==","Changed","False"
635311214837696653,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837696653,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837706653,"StepEvaluate",",","Unchanged",","
635311214837706653,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214837716654,"StepEvaluate",",","Unchanged",","
635311214837726655,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214837726655,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837736655,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214837736655,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214837746656,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837756656,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837756656,"StepEvaluate",",","Unchanged",","
635311214837766657,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214837766657,"StepEvaluate",",","Unchanged",","
635311214837776657,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837786658,"StepEvaluate","|","Unchanged","|"
635311214837796659,"StepEvaluate","b","Unchanged","b"
635311214837796659,"StepEvaluate","<","Changed","True"
635311214837806659,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837806659,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837816660,"StepEvaluate",",","Unchanged",","
635311214837826660,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214837826660,"StepEvaluate",",","Unchanged",","
635311214837836661,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837836661,"StepEvaluate","|","Unchanged","|"
635311214837846662,"StepEvaluate","b","Unchanged","b"
635311214837856662,"StepEvaluate","<","Changed","True"
635311214837856662,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837866663,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837866663,"StepEvaluate",",","Unchanged",","
635311214837876663,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214837886664,"StepEvaluate",",","Unchanged",","
635311214837886664,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837896664,"StepEvaluate","|","Unchanged","|"
635311214837896664,"StepEvaluate","b","Unchanged","b"
635311214837906665,"StepEvaluate","<","Changed","True"
635311214837916666,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837916666,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837916666,"StepEvaluate",",","Unchanged",","
635311214837926666,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214837926666,"StepEvaluate",",","Unchanged",","
635311214837926666,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214837936667,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837936667,"StepEvaluate","PAT@-M","Changed","&"
635311214837946667,"StepEvaluate","SEL@makeRange","Changed","&"
635311214837946667,"StepEvaluate","@","Changed","&"
635311214837956668,"StepEvaluate",",","Unchanged",","
635311214837956668,"StepEvaluate","&","Unchanged","&"
635311214837956668,"StepEvaluate","1","Unchanged","1"
635311214837966668,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214837976669,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214837976669,"StepEvaluate",",","Unchanged",","
635311214837976669,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214837986670,"StepEvaluate",",","Unchanged",","
635311214837986670,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214837996670,"StepEvaluate","|","Unchanged","|"
635311214837996670,"StepEvaluate","b","Unchanged","b"
635311214837996670,"StepEvaluate","==","Unchanged","=="
635311214838006671,"StepEvaluate","+","Changed","2"
635311214838006671,"StepEvaluate","4","Unchanged","4"
635311214838006671,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838016671,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838016671,"StepEvaluate",",","Unchanged",","
635311214838026672,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214838026672,"StepEvaluate",",","Unchanged",","
635311214838026672,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838036672,"StepEvaluate","|","Unchanged","|"
635311214838036672,"StepEvaluate","b","Unchanged","b"
635311214838036672,"StepEvaluate","==","Unchanged","=="
635311214838046673,"StepEvaluate","+","Changed","2"
635311214838046673,"StepEvaluate","4","Unchanged","4"
635311214838056674,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838056674,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838056674,"StepEvaluate",",","Unchanged",","
635311214838066674,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838066674,"StepEvaluate",",","Unchanged",","
635311214838076675,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838076675,"StepEvaluate","|","Unchanged","|"
635311214838076675,"StepEvaluate","b","Unchanged","b"
635311214838086675,"StepEvaluate","==","Unchanged","=="
635311214838086675,"StepEvaluate","+","Changed","2"
635311214838096676,"StepEvaluate","4","Unchanged","4"
635311214838096676,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838096676,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838106676,"StepEvaluate",",","Unchanged",","
635311214838106676,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838106676,"StepEvaluate",",","Unchanged",","
635311214838116677,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838116677,"StepEvaluate","|","Unchanged","|"
635311214838126678,"StepEvaluate","b","Unchanged","b"
635311214838126678,"StepEvaluate","==","Changed","False"
635311214838126678,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838136678,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838136678,"StepEvaluate",",","Unchanged",","
635311214838146679,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838146679,"StepEvaluate",",","Unchanged",","
635311214838146679,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214838156679,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838156679,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214838166680,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214838166680,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838166680,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838366691,"StepEvaluate",",","Unchanged",","
635311214838376692,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214838386692,"StepEvaluate",",","Unchanged",","
635311214838386692,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838386692,"StepEvaluate","|","Unchanged","|"
635311214838396693,"StepEvaluate","b","Unchanged","b"
635311214838396693,"StepEvaluate","<","Unchanged","<"
635311214838406694,"StepEvaluate","+","Changed","2"
635311214838406694,"StepEvaluate","4","Unchanged","4"
635311214838416694,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838416694,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838416694,"StepEvaluate",",","Unchanged",","
635311214838426695,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214838426695,"StepEvaluate",",","Unchanged",","
635311214838426695,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838436695,"StepEvaluate","|","Unchanged","|"
635311214838436695,"StepEvaluate","b","Unchanged","b"
635311214838446696,"StepEvaluate","<","Unchanged","<"
635311214838446696,"StepEvaluate","+","Changed","2"
635311214838446696,"StepEvaluate","4","Unchanged","4"
635311214838456696,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838456696,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838466697,"StepEvaluate",",","Unchanged",","
635311214838466697,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838476698,"StepEvaluate",",","Unchanged",","
635311214838476698,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838476698,"StepEvaluate","|","Unchanged","|"
635311214838486698,"StepEvaluate","b","Unchanged","b"
635311214838486698,"StepEvaluate","<","Unchanged","<"
635311214838496699,"StepEvaluate","+","Changed","2"
635311214838496699,"StepEvaluate","4","Unchanged","4"
635311214838496699,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838506699,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838506699,"StepEvaluate",",","Unchanged",","
635311214838506699,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838516700,"StepEvaluate",",","Unchanged",","
635311214838516700,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838526700,"StepEvaluate","|","Unchanged","|"
635311214838526700,"StepEvaluate","b","Unchanged","b"
635311214838526700,"StepEvaluate","<","Changed","True"
635311214838586704,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838596704,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838596704,"StepEvaluate",",","Unchanged",","
635311214838596704,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838606705,"StepEvaluate",",","Unchanged",","
635311214838606705,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214838616706,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838616706,"StepEvaluate","PAT@-M","Changed","&"
635311214838626706,"StepEvaluate","SEL@makeRange","Changed","&"
635311214838626706,"StepEvaluate","@","Changed","&"
635311214838626706,"StepEvaluate",",","Unchanged",","
635311214838636707,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838636707,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838646707,"StepEvaluate",",","Unchanged",","
635311214838646707,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214838656708,"StepEvaluate",",","Unchanged",","
635311214838656708,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838656708,"StepEvaluate","|","Unchanged","|"
635311214838666708,"StepEvaluate","b","Unchanged","b"
635311214838666708,"StepEvaluate","==","Changed","False"
635311214838676709,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838676709,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838676709,"StepEvaluate",",","Unchanged",","
635311214838686710,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214838686710,"StepEvaluate",",","Unchanged",","
635311214838686710,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838696710,"StepEvaluate","|","Unchanged","|"
635311214838696710,"StepEvaluate","b","Unchanged","b"
635311214838706711,"StepEvaluate","==","Changed","False"
635311214838706711,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838706711,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838716711,"StepEvaluate",",","Unchanged",","
635311214838716711,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838726712,"StepEvaluate",",","Unchanged",","
635311214838726712,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214838726712,"StepEvaluate","|","Unchanged","|"
635311214838736712,"StepEvaluate","b","Unchanged","b"
635311214838936724,"StepEvaluate","==","Changed","False"
635311214838946724,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838956725,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838956725,"StepEvaluate",",","Unchanged",","
635311214838956725,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214838966726,"StepEvaluate",",","Unchanged",","
635311214838966726,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214838976726,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838976726,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214838986727,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214838986727,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214838986727,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214838996727,"StepEvaluate",",","Unchanged",","
635311214838996727,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214839006728,"StepEvaluate",",","Unchanged",","
635311214839006728,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214839216740,"StepEvaluate","|","Unchanged","|"
635311214839226740,"StepEvaluate","b","Unchanged","b"
635311214839236741,"StepEvaluate","<","Changed","True"
635311214839456754,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214839466754,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214839476755,"StepEvaluate",",","Unchanged",","
635311214839486755,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214839496756,"StepEvaluate",",","Unchanged",","
635311214839496756,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214839506756,"StepEvaluate","|","Unchanged","|"
635311214839516757,"StepEvaluate","b","Unchanged","b"
635311214839526758,"StepEvaluate","<","Changed","True"
635311214839536758,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214839536758,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214839546759,"StepEvaluate",",","Unchanged",","
635311214839556759,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214839566760,"StepEvaluate",",","Unchanged",","
635311214839566760,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214839576760,"StepEvaluate","|","Unchanged","|"
635311214839586761,"StepEvaluate","b","Unchanged","b"
635311214839596762,"StepEvaluate","<","Changed","True"
635311214839606762,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214839606762,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214839616763,"StepEvaluate",",","Unchanged",","
635311214839626763,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214839636764,"StepEvaluate",",","Unchanged",","
635311214839636764,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214839646764,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214839656765,"StepEvaluate","PAT@-M","Changed","&"
635311214839666766,"StepEvaluate","SEL@makeRange","Changed","&"
635311214839666766,"StepEvaluate","@","Changed","&"
635311214839676766,"StepEvaluate",",","Unchanged",","
635311214839686767,"StepEvaluate","&","Unchanged","&"
635311214839696767,"StepEvaluate","1","Unchanged","1"
635311214839706768,"StepEvaluate","&","Unchanged","&"
635311214839706768,"StepEvaluate","+","Changed","2"
635311214839716768,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214839726769,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214839736770,"StepEvaluate",",","Unchanged",","
635311214839736770,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214839746770,"StepEvaluate",",","Unchanged",","
635311214839746770,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214839756771,"StepEvaluate","|","Unchanged","|"
635311214839756771,"StepEvaluate","b","Unchanged","b"
635311214839766771,"StepEvaluate","==","Unchanged","=="
635311214839766771,"StepEvaluate","+","Unchanged","+"
635311214839776772,"StepEvaluate","+","Changed","2"
635311214839776772,"StepEvaluate","1","Unchanged","1"
635311214839786772,"StepEvaluate","4","Unchanged","4"
635311214839796773,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214839796773,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214839806774,"StepEvaluate",",","Unchanged",","
635311214839806774,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214839816774,"StepEvaluate",",","Unchanged",","
635311214839816774,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214839826775,"StepEvaluate","|","Unchanged","|"
635311214839826775,"StepEvaluate","b","Unchanged","b"
635311214839836775,"StepEvaluate","==","Unchanged","=="
635311214839836775,"StepEvaluate","+","Unchanged","+"
635311214839846776,"StepEvaluate","+","Changed","2"
635311214839846776,"StepEvaluate","1","Unchanged","1"
635311214839856776,"StepEvaluate","4","Unchanged","4"
635311214839856776,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214839866777,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214839866777,"StepEvaluate",",","Unchanged",","
635311214839876778,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214839876778,"StepEvaluate",",","Unchanged",","
635311214839886778,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214839886778,"StepEvaluate","|","Unchanged","|"
635311214839896779,"StepEvaluate","b","Unchanged","b"
635311214839896779,"StepEvaluate","==","Unchanged","=="
635311214839906779,"StepEvaluate","+","Unchanged","+"
635311214839906779,"StepEvaluate","+","Changed","2"
635311214839916780,"StepEvaluate","1","Unchanged","1"
635311214839916780,"StepEvaluate","4","Unchanged","4"
635311214839926780,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840126792,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840136792,"StepEvaluate",",","Unchanged",","
635311214840146793,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840156794,"StepEvaluate",",","Unchanged",","
635311214840156794,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840166794,"StepEvaluate","|","Unchanged","|"
635311214840166794,"StepEvaluate","b","Unchanged","b"
635311214840176795,"StepEvaluate","==","Unchanged","=="
635311214840176795,"StepEvaluate","+","Changed","3"
635311214840186795,"StepEvaluate","4","Unchanged","4"
635311214840186795,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840196796,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840196796,"StepEvaluate",",","Unchanged",","
635311214840206796,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840216797,"StepEvaluate",",","Unchanged",","
635311214840226798,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840226798,"StepEvaluate","|","Unchanged","|"
635311214840236798,"StepEvaluate","b","Unchanged","b"
635311214840236798,"StepEvaluate","==","Changed","False"
635311214840246799,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840246799,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840256799,"StepEvaluate",",","Unchanged",","
635311214840256799,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840266800,"StepEvaluate",",","Unchanged",","
635311214840266800,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214840276800,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840276800,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214840286801,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214840286801,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840296802,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840296802,"StepEvaluate",",","Unchanged",","
635311214840306802,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214840306802,"StepEvaluate",",","Unchanged",","
635311214840316803,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840316803,"StepEvaluate","|","Unchanged","|"
635311214840326803,"StepEvaluate","b","Unchanged","b"
635311214840326803,"StepEvaluate","<","Unchanged","<"
635311214840336804,"StepEvaluate","+","Unchanged","+"
635311214840336804,"StepEvaluate","+","Changed","2"
635311214840346805,"StepEvaluate","1","Unchanged","1"
635311214840346805,"StepEvaluate","4","Unchanged","4"
635311214840356805,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840356805,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840366806,"StepEvaluate",",","Unchanged",","
635311214840366806,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214840376806,"StepEvaluate",",","Unchanged",","
635311214840376806,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840386807,"StepEvaluate","|","Unchanged","|"
635311214840386807,"StepEvaluate","b","Unchanged","b"
635311214840396807,"StepEvaluate","<","Unchanged","<"
635311214840396807,"StepEvaluate","+","Unchanged","+"
635311214840406808,"StepEvaluate","+","Changed","2"
635311214840406808,"StepEvaluate","1","Unchanged","1"
635311214840416809,"StepEvaluate","4","Unchanged","4"
635311214840416809,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840426809,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840426809,"StepEvaluate",",","Unchanged",","
635311214840436810,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840436810,"StepEvaluate",",","Unchanged",","
635311214840446810,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840446810,"StepEvaluate","|","Unchanged","|"
635311214840456811,"StepEvaluate","b","Unchanged","b"
635311214840456811,"StepEvaluate","<","Unchanged","<"
635311214840466811,"StepEvaluate","+","Unchanged","+"
635311214840466811,"StepEvaluate","+","Changed","2"
635311214840476812,"StepEvaluate","1","Unchanged","1"
635311214840476812,"StepEvaluate","4","Unchanged","4"
635311214840486813,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840486813,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840496813,"StepEvaluate",",","Unchanged",","
635311214840496813,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840506814,"StepEvaluate",",","Unchanged",","
635311214840506814,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840516814,"StepEvaluate","|","Unchanged","|"
635311214840516814,"StepEvaluate","b","Unchanged","b"
635311214840526815,"StepEvaluate","<","Unchanged","<"
635311214840526815,"StepEvaluate","+","Changed","3"
635311214840536815,"StepEvaluate","4","Unchanged","4"
635311214840536815,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840546816,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840546816,"StepEvaluate",",","Unchanged",","
635311214840556817,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840556817,"StepEvaluate",",","Unchanged",","
635311214840566817,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840566817,"StepEvaluate","|","Unchanged","|"
635311214840576818,"StepEvaluate","b","Unchanged","b"
635311214840576818,"StepEvaluate","<","Changed","True"
635311214840586818,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840586818,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840596819,"StepEvaluate",",","Unchanged",","
635311214840596819,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840606819,"StepEvaluate",",","Unchanged",","
635311214840606819,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214840616820,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840616820,"StepEvaluate","PAT@-M","Changed","&"
635311214840616820,"StepEvaluate","SEL@makeRange","Changed","&"
635311214840626821,"StepEvaluate","@","Changed","&"
635311214840626821,"StepEvaluate",",","Unchanged",","
635311214840626821,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840636821,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840636821,"StepEvaluate",",","Unchanged",","
635311214840636821,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214840646822,"StepEvaluate",",","Unchanged",","
635311214840646822,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840646822,"StepEvaluate","|","Unchanged","|"
635311214840656822,"StepEvaluate","b","Unchanged","b"
635311214840656822,"StepEvaluate","==","Changed","False"
635311214840656822,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840666823,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840666823,"StepEvaluate",",","Unchanged",","
635311214840666823,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214840676823,"StepEvaluate",",","Unchanged",","
635311214840676823,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840676823,"StepEvaluate","|","Unchanged","|"
635311214840676823,"StepEvaluate","b","Unchanged","b"
635311214840686824,"StepEvaluate","==","Changed","False"
635311214840686824,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840686824,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840696825,"StepEvaluate",",","Unchanged",","
635311214840696825,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840696825,"StepEvaluate",",","Unchanged",","
635311214840706825,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840706825,"StepEvaluate","|","Unchanged","|"
635311214840706825,"StepEvaluate","b","Unchanged","b"
635311214840706825,"StepEvaluate","==","Changed","False"
635311214840716826,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840716826,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840716826,"StepEvaluate",",","Unchanged",","
635311214840726826,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840726826,"StepEvaluate",",","Unchanged",","
635311214840726826,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214840736827,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840736827,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214840736827,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214840746827,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840746827,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840746827,"StepEvaluate",",","Unchanged",","
635311214840756828,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214840756828,"StepEvaluate",",","Unchanged",","
635311214840756828,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840756828,"StepEvaluate","|","Unchanged","|"
635311214840766829,"StepEvaluate","b","Unchanged","b"
635311214840766829,"StepEvaluate","<","Changed","True"
635311214840766829,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840776829,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840776829,"StepEvaluate",",","Unchanged",","
635311214840776829,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214840786830,"StepEvaluate",",","Unchanged",","
635311214840786830,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840786830,"StepEvaluate","|","Unchanged","|"
635311214840786830,"StepEvaluate","b","Unchanged","b"
635311214840796830,"StepEvaluate","<","Changed","True"
635311214840796830,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840796830,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840806831,"StepEvaluate",",","Unchanged",","
635311214840806831,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840806831,"StepEvaluate",",","Unchanged",","
635311214840816831,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840816831,"StepEvaluate","|","Unchanged","|"
635311214840816831,"StepEvaluate","b","Unchanged","b"
635311214840826832,"StepEvaluate","<","Changed","True"
635311214840826832,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840826832,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840826832,"StepEvaluate",",","Unchanged",","
635311214840836833,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840836833,"StepEvaluate",",","Unchanged",","
635311214840836833,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214840846833,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840846833,"StepEvaluate","PAT@-M","Changed","&"
635311214840846833,"StepEvaluate","SEL@makeRange","Changed","&"
635311214840856834,"StepEvaluate","@","Changed","&"
635311214840856834,"StepEvaluate",",","Unchanged",","
635311214840856834,"StepEvaluate","&","Unchanged","&"
635311214840866834,"StepEvaluate","1","Unchanged","1"
635311214840866834,"StepEvaluate","&","Unchanged","&"
635311214840866834,"StepEvaluate","2","Unchanged","2"
635311214840876835,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840876835,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840876835,"StepEvaluate",",","Unchanged",","
635311214840886835,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214840886835,"StepEvaluate",",","Unchanged",","
635311214840896836,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840896836,"StepEvaluate","|","Unchanged","|"
635311214840896836,"StepEvaluate","b","Unchanged","b"
635311214840896836,"StepEvaluate","==","Unchanged","=="
635311214840906837,"StepEvaluate","+","Unchanged","+"
635311214840906837,"StepEvaluate","+","Changed","2"
635311214840906837,"StepEvaluate","1","Unchanged","1"
635311214840916837,"StepEvaluate","4","Unchanged","4"
635311214840916837,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840916837,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840926838,"StepEvaluate",",","Unchanged",","
635311214840926838,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214840926838,"StepEvaluate",",","Unchanged",","
635311214840936838,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840936838,"StepEvaluate","|","Unchanged","|"
635311214840936838,"StepEvaluate","b","Unchanged","b"
635311214840936838,"StepEvaluate","==","Unchanged","=="
635311214840946839,"StepEvaluate","+","Unchanged","+"
635311214840946839,"StepEvaluate","+","Changed","2"
635311214840946839,"StepEvaluate","1","Unchanged","1"
635311214840956839,"StepEvaluate","4","Unchanged","4"
635311214840956839,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840956839,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214840966840,"StepEvaluate",",","Unchanged",","
635311214840966840,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214840966840,"StepEvaluate",",","Unchanged",","
635311214840976841,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214840976841,"StepEvaluate","|","Unchanged","|"
635311214840976841,"StepEvaluate","b","Unchanged","b"
635311214840976841,"StepEvaluate","==","Unchanged","=="
635311214840986841,"StepEvaluate","+","Unchanged","+"
635311214840986841,"StepEvaluate","+","Changed","2"
635311214840986841,"StepEvaluate","1","Unchanged","1"
635311214840996842,"StepEvaluate","4","Unchanged","4"
635311214840996842,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214840996842,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841006842,"StepEvaluate",",","Unchanged",","
635311214841006842,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841006842,"StepEvaluate",",","Unchanged",","
635311214841016843,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841016843,"StepEvaluate","|","Unchanged","|"
635311214841016843,"StepEvaluate","b","Unchanged","b"
635311214841016843,"StepEvaluate","==","Unchanged","=="
635311214841026843,"StepEvaluate","+","Changed","3"
635311214841026843,"StepEvaluate","4","Unchanged","4"
635311214841026843,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841036844,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841036844,"StepEvaluate",",","Unchanged",","
635311214841036844,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841046845,"StepEvaluate",",","Unchanged",","
635311214841046845,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841046845,"StepEvaluate","|","Unchanged","|"
635311214841056845,"StepEvaluate","b","Unchanged","b"
635311214841056845,"StepEvaluate","==","Changed","False"
635311214841056845,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841056845,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841066846,"StepEvaluate",",","Unchanged",","
635311214841066846,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841066846,"StepEvaluate",",","Unchanged",","
635311214841076846,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214841076846,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841076846,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214841086847,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214841086847,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841086847,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841086847,"StepEvaluate",",","Unchanged",","
635311214841096847,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214841096847,"StepEvaluate",",","Unchanged",","
635311214841096847,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841106848,"StepEvaluate","|","Unchanged","|"
635311214841106848,"StepEvaluate","b","Unchanged","b"
635311214841106848,"StepEvaluate","<","Unchanged","<"
635311214841116849,"StepEvaluate","+","Unchanged","+"
635311214841116849,"StepEvaluate","+","Changed","2"
635311214841116849,"StepEvaluate","1","Unchanged","1"
635311214841126849,"StepEvaluate","4","Unchanged","4"
635311214841126849,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841126849,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841136850,"StepEvaluate",",","Unchanged",","
635311214841136850,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214841136850,"StepEvaluate",",","Unchanged",","
635311214841136850,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841146850,"StepEvaluate","|","Unchanged","|"
635311214841146850,"StepEvaluate","b","Unchanged","b"
635311214841146850,"StepEvaluate","<","Unchanged","<"
635311214841156851,"StepEvaluate","+","Unchanged","+"
635311214841156851,"StepEvaluate","+","Changed","2"
635311214841156851,"StepEvaluate","1","Unchanged","1"
635311214841166851,"StepEvaluate","4","Unchanged","4"
635311214841166851,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841166851,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841166851,"StepEvaluate",",","Unchanged",","
635311214841176852,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841176852,"StepEvaluate",",","Unchanged",","
635311214841176852,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841186853,"StepEvaluate","|","Unchanged","|"
635311214841186853,"StepEvaluate","b","Unchanged","b"
635311214841186853,"StepEvaluate","<","Unchanged","<"
635311214841196853,"StepEvaluate","+","Unchanged","+"
635311214841196853,"StepEvaluate","+","Changed","2"
635311214841196853,"StepEvaluate","1","Unchanged","1"
635311214841196853,"StepEvaluate","4","Unchanged","4"
635311214841206854,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841206854,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841206854,"StepEvaluate",",","Unchanged",","
635311214841216854,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841216854,"StepEvaluate",",","Unchanged",","
635311214841216854,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841226855,"StepEvaluate","|","Unchanged","|"
635311214841226855,"StepEvaluate","b","Unchanged","b"
635311214841226855,"StepEvaluate","<","Unchanged","<"
635311214841226855,"StepEvaluate","+","Changed","3"
635311214841236855,"StepEvaluate","4","Unchanged","4"
635311214841236855,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841236855,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841246856,"StepEvaluate",",","Unchanged",","
635311214841246856,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841246856,"StepEvaluate",",","Unchanged",","
635311214841256857,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841256857,"StepEvaluate","|","Unchanged","|"
635311214841256857,"StepEvaluate","b","Unchanged","b"
635311214841256857,"StepEvaluate","<","Changed","True"
635311214841266857,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841266857,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841266857,"StepEvaluate",",","Unchanged",","
635311214841276858,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841276858,"StepEvaluate",",","Unchanged",","
635311214841276858,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214841286858,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841286858,"StepEvaluate","PAT@-M","Changed","&"
635311214841286858,"StepEvaluate","SEL@makeRange","Changed","&"
635311214841296859,"StepEvaluate","@","Changed","&"
635311214841296859,"StepEvaluate",",","Unchanged",","
635311214841296859,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841306859,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841306859,"StepEvaluate",",","Unchanged",","
635311214841306859,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214841316860,"StepEvaluate",",","Unchanged",","
635311214841516871,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841526872,"StepEvaluate","|","Unchanged","|"
635311214841726883,"StepEvaluate","b","Unchanged","b"
635311214841736884,"StepEvaluate","==","Changed","False"
635311214841736884,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841746885,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841746885,"StepEvaluate",",","Unchanged",","
635311214841756885,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214841756885,"StepEvaluate",",","Unchanged",","
635311214841756885,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841756885,"StepEvaluate","|","Unchanged","|"
635311214841766886,"StepEvaluate","b","Unchanged","b"
635311214841766886,"StepEvaluate","==","Changed","False"
635311214841766886,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841776886,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841776886,"StepEvaluate",",","Unchanged",","
635311214841776886,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841786887,"StepEvaluate",",","Unchanged",","
635311214841786887,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214841786887,"StepEvaluate","|","Unchanged","|"
635311214841796887,"StepEvaluate","b","Unchanged","b"
635311214841796887,"StepEvaluate","==","Changed","False"
635311214841796887,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841806888,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841806888,"StepEvaluate",",","Unchanged",","
635311214841806888,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214841806888,"StepEvaluate",",","Unchanged",","
635311214841816889,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214841816889,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841816889,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214841826889,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214841826889,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214841826889,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214841836890,"StepEvaluate",",","Unchanged",","
635311214841836890,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214841836890,"StepEvaluate",",","Unchanged",","
635311214842036901,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214842046902,"StepEvaluate","|","Unchanged","|"
635311214842056902,"StepEvaluate","b","Unchanged","b"
635311214842056902,"StepEvaluate","<","Changed","True"
635311214842056902,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214842066903,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214842066903,"StepEvaluate",",","Unchanged",","
635311214842066903,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214842076903,"StepEvaluate",",","Unchanged",","
635311214842076903,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214842076903,"StepEvaluate","|","Unchanged","|"
635311214842086904,"StepEvaluate","b","Unchanged","b"
635311214842086904,"StepEvaluate","<","Changed","True"
635311214842086904,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214842086904,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214842096905,"StepEvaluate",",","Unchanged",","
635311214842096905,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214842096905,"StepEvaluate",",","Unchanged",","
635311214842106905,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214842106905,"StepEvaluate","|","Unchanged","|"
635311214842106905,"StepEvaluate","b","Unchanged","b"
635311214842116906,"StepEvaluate","<","Changed","True"
635311214842116906,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214842116906,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214842126906,"StepEvaluate",",","Unchanged",","
635311214842126906,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214842126906,"StepEvaluate",",","Unchanged",","
635311214842326918,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214842336918,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214842346919,"StepEvaluate","PAT@-M","Changed","&"
635311214842346919,"StepEvaluate","SEL@makeRange","Changed","&"
635311214842346919,"StepEvaluate","@","Changed","&"
635311214842356919,"StepEvaluate",",","Unchanged",","
635311214842356919,"StepEvaluate","&","Unchanged","&"
635311214842356919,"StepEvaluate","1","Unchanged","1"
635311214842366920,"StepEvaluate","&","Unchanged","&"
635311214842366920,"StepEvaluate","2","Unchanged","2"
635311214842366920,"StepEvaluate","&","Unchanged","&"
635311214842376921,"StepEvaluate","+","Unchanged","+"
635311214842376921,"StepEvaluate","+","Changed","2"
635311214842376921,"StepEvaluate","1","Unchanged","1"
635311214842386921,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214842386921,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214842396922,"StepEvaluate",",","Unchanged",","
635311214842396922,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214842396922,"StepEvaluate",",","Unchanged",","
635311214842396922,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214842406922,"StepEvaluate","|","Unchanged","|"
635311214842406922,"StepEvaluate","b","Unchanged","b"
635311214842406922,"StepEvaluate","==","Unchanged","=="
635311214842416923,"StepEvaluate","+","Unchanged","+"
635311214842416923,"StepEvaluate","+","Unchanged","+"
635311214842416923,"StepEvaluate","+","Changed","2"
635311214842426923,"StepEvaluate","1","Unchanged","1"
635311214842426923,"StepEvaluate","1","Unchanged","1"
635311214842426923,"StepEvaluate","4","Unchanged","4"
635311214842626935,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214842636935,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214842846948,"StepEvaluate",",","Unchanged",","
635311214842856948,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214842866949,"StepEvaluate",",","Unchanged",","
635311214842876949,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214842886950,"StepEvaluate","|","Unchanged","|"
635311214842896950,"StepEvaluate","b","Unchanged","b"
635311214842896950,"StepEvaluate","==","Unchanged","=="
635311214842906951,"StepEvaluate","+","Unchanged","+"
635311214842916952,"StepEvaluate","+","Unchanged","+"
635311214842926952,"StepEvaluate","+","Changed","2"
635311214842926952,"StepEvaluate","1","Unchanged","1"
635311214842936953,"StepEvaluate","1","Unchanged","1"
635311214842946953,"StepEvaluate","4","Unchanged","4"
635311214842956954,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214842966954,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214842966954,"StepEvaluate",",","Unchanged",","
635311214842976955,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214842986956,"StepEvaluate",",","Unchanged",","
635311214842996956,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214842996956,"StepEvaluate","|","Unchanged","|"
635311214843006957,"StepEvaluate","b","Unchanged","b"
635311214843016957,"StepEvaluate","==","Unchanged","=="
635311214843016957,"StepEvaluate","+","Unchanged","+"
635311214843026958,"StepEvaluate","+","Unchanged","+"
635311214843036958,"StepEvaluate","+","Changed","2"
635311214843036958,"StepEvaluate","1","Unchanged","1"
635311214843046959,"StepEvaluate","1","Unchanged","1"
635311214843056960,"StepEvaluate","4","Unchanged","4"
635311214843056960,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843066960,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843076961,"StepEvaluate",",","Unchanged",","
635311214843076961,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843086961,"StepEvaluate",",","Unchanged",","
635311214843086961,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843096962,"StepEvaluate","|","Unchanged","|"
635311214843106962,"StepEvaluate","b","Unchanged","b"
635311214843106962,"StepEvaluate","==","Unchanged","=="
635311214843116963,"StepEvaluate","+","Unchanged","+"
635311214843126964,"StepEvaluate","+","Changed","3"
635311214843126964,"StepEvaluate","1","Unchanged","1"
635311214843136964,"StepEvaluate","4","Unchanged","4"
635311214843146965,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843146965,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843156965,"StepEvaluate",",","Unchanged",","
635311214843156965,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843166966,"StepEvaluate",",","Unchanged",","
635311214843176966,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843176966,"StepEvaluate","|","Unchanged","|"
635311214843186967,"StepEvaluate","b","Unchanged","b"
635311214843196968,"StepEvaluate","==","Unchanged","=="
635311214843196968,"StepEvaluate","+","Changed","4"
635311214843206968,"StepEvaluate","4","Unchanged","4"
635311214843216969,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843426981,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843436981,"StepEvaluate",",","Unchanged",","
635311214843446982,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843446982,"StepEvaluate",",","Unchanged",","
635311214843456982,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843466983,"StepEvaluate","|","Unchanged","|"
635311214843466983,"StepEvaluate","b","Unchanged","b"
635311214843476984,"StepEvaluate","==","Changed","True"
635311214843486984,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843486984,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843496985,"StepEvaluate",",","Unchanged",","
635311214843506985,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843506985,"StepEvaluate",",","Unchanged",","
635311214843516986,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214843526986,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843526986,"StepEvaluate","PAT@-M","Changed","+"
635311214843536987,"StepEvaluate","SEL@makeRange","Changed","+"
635311214843546988,"StepEvaluate","@","Changed","+"
635311214843546988,"StepEvaluate",",","Unchanged",","
635311214843556988,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843566989,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843576989,"StepEvaluate",",","Unchanged",","
635311214843576989,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214843586990,"StepEvaluate",",","Unchanged",","
635311214843596990,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843596990,"StepEvaluate","|","Unchanged","|"
635311214843606991,"StepEvaluate","b","Unchanged","b"
635311214843616992,"StepEvaluate","==","Changed","False"
635311214843616992,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843626992,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843636993,"StepEvaluate",",","Unchanged",","
635311214843636993,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214843646993,"StepEvaluate",",","Unchanged",","
635311214843646993,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843656994,"StepEvaluate","|","Unchanged","|"
635311214843666994,"StepEvaluate","b","Unchanged","b"
635311214843666994,"StepEvaluate","==","Changed","False"
635311214843676995,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843676995,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843686996,"StepEvaluate",",","Unchanged",","
635311214843696996,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843696996,"StepEvaluate",",","Unchanged",","
635311214843706997,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843706997,"StepEvaluate","|","Unchanged","|"
635311214843716997,"StepEvaluate","b","Unchanged","b"
635311214843726998,"StepEvaluate","==","Changed","False"
635311214843726998,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843736998,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843736998,"StepEvaluate",",","Unchanged",","
635311214843746999,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843757000,"StepEvaluate",",","Unchanged",","
635311214843757000,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214843767000,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843767000,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214843777001,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214843787001,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843787001,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843797002,"StepEvaluate",",","Unchanged",","
635311214843797002,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214843807002,"StepEvaluate",",","Unchanged",","
635311214843817003,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843817003,"StepEvaluate","|","Unchanged","|"
635311214843827004,"StepEvaluate","b","Unchanged","b"
635311214843827004,"StepEvaluate","<","Changed","True"
635311214843837004,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843847005,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843847005,"StepEvaluate",",","Unchanged",","
635311214843857005,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214843857005,"StepEvaluate",",","Unchanged",","
635311214843867006,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843867006,"StepEvaluate","|","Unchanged","|"
635311214843877006,"StepEvaluate","b","Unchanged","b"
635311214843887007,"StepEvaluate","<","Changed","True"
635311214843887007,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843897008,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843907008,"StepEvaluate",",","Unchanged",","
635311214843907008,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843917009,"StepEvaluate",",","Unchanged",","
635311214843917009,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214843917009,"StepEvaluate","|","Unchanged","|"
635311214843927009,"StepEvaluate","b","Unchanged","b"
635311214843927009,"StepEvaluate","<","Changed","True"
635311214843937010,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843937010,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214843937010,"StepEvaluate",",","Unchanged",","
635311214843947010,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214843947010,"StepEvaluate",",","Unchanged",","
635311214843957011,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214843957011,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214843957011,"StepEvaluate","PAT@-M","Changed","&"
635311214843967012,"StepEvaluate","SEL@makeRange","Changed","&"
635311214843967012,"StepEvaluate","@","Changed","&"
635311214843977012,"StepEvaluate",",","Unchanged",","
635311214843977012,"StepEvaluate","&","Unchanged","&"
635311214843987013,"StepEvaluate","1","Unchanged","1"
635311214843987013,"StepEvaluate","&","Unchanged","&"
635311214843987013,"StepEvaluate","2","Unchanged","2"
635311214843997013,"StepEvaluate","&","Unchanged","&"
635311214843997013,"StepEvaluate","+","Changed","3"
635311214844007014,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214844007014,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214844017014,"StepEvaluate",",","Unchanged",","
635311214844017014,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214844017014,"StepEvaluate",",","Unchanged",","
635311214844027015,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214844027015,"StepEvaluate","|","Unchanged","|"
635311214844027015,"StepEvaluate","b","Unchanged","b"
635311214844037016,"StepEvaluate","==","Unchanged","=="
635311214844037016,"StepEvaluate","+","Unchanged","+"
635311214844047016,"StepEvaluate","+","Unchanged","+"
635311214844047016,"StepEvaluate","+","Changed","2"
635311214844047016,"StepEvaluate","1","Unchanged","1"
635311214844057017,"StepEvaluate","1","Unchanged","1"
635311214844057017,"StepEvaluate","4","Unchanged","4"
635311214844057017,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214844067017,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214844067017,"StepEvaluate",",","Unchanged",","
635311214844077018,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214844077018,"StepEvaluate",",","Unchanged",","
635311214844077018,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214844087018,"StepEvaluate","|","Unchanged","|"
635311214844087018,"StepEvaluate","b","Unchanged","b"
635311214844097019,"StepEvaluate","==","Unchanged","=="
635311214844097019,"StepEvaluate","+","Unchanged","+"
635311214844097019,"StepEvaluate","+","Unchanged","+"
635311214844107020,"StepEvaluate","+","Changed","2"
635311214844107020,"StepEvaluate","1","Unchanged","1"
635311214844107020,"StepEvaluate","1","Unchanged","1"
635311214844317032,"StepEvaluate","4","Unchanged","4"
635311214844327032,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214844337033,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214844337033,"StepEvaluate",",","Unchanged",","
635311214844347033,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214844347033,"StepEvaluate",",","Unchanged",","
635311214844347033,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214844357034,"StepEvaluate","|","Unchanged","|"
635311214844357034,"StepEvaluate","b","Unchanged","b"
635311214844367034,"StepEvaluate","==","Unchanged","=="
635311214844367034,"StepEvaluate","+","Unchanged","+"
635311214844367034,"StepEvaluate","+","Unchanged","+"
635311214844377035,"StepEvaluate","+","Changed","2"
635311214844587047,"StepEvaluate","1","Unchanged","1"
635311214844597048,"StepEvaluate","1","Unchanged","1"
635311214844607048,"StepEvaluate","4","Unchanged","4"
635311214844617049,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214844627049,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214844627049,"StepEvaluate",",","Unchanged",","
635311214844637050,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214844647050,"StepEvaluate",",","Unchanged",","
635311214844657051,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214844667052,"StepEvaluate","|","Unchanged","|"
635311214844667052,"StepEvaluate","b","Unchanged","b"
635311214844677052,"StepEvaluate","==","Unchanged","=="
635311214844687053,"StepEvaluate","+","Unchanged","+"
635311214844697053,"StepEvaluate","+","Changed","3"
635311214844907065,"StepEvaluate","1","Unchanged","1"
635311214844917066,"StepEvaluate","4","Unchanged","4"
635311214844927066,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214844937067,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214844947068,"StepEvaluate",",","Unchanged",","
635311214844957068,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214844957068,"StepEvaluate",",","Unchanged",","
635311214844967069,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214844977069,"StepEvaluate","|","Unchanged","|"
635311214844987070,"StepEvaluate","b","Unchanged","b"
635311214844987070,"StepEvaluate","==","Unchanged","=="
635311214845207082,"StepEvaluate","+","Changed","4"
635311214845217083,"StepEvaluate","4","Unchanged","4"
635311214845227084,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214845437096,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214845447096,"StepEvaluate",",","Unchanged",","
635311214845457097,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214845467097,"StepEvaluate",",","Unchanged",","
635311214845477098,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214845477098,"StepEvaluate","|","Unchanged","|"
635311214845487099,"StepEvaluate","b","Unchanged","b"
635311214845497099,"StepEvaluate","==","Changed","True"
635311214845507100,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214845517100,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214845517100,"StepEvaluate",",","Unchanged",","
635311214845527101,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214845737113,"StepEvaluate",",","Unchanged",","
635311214845747113,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214845757114,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214845767115,"StepEvaluate","PAT@-M","Changed","+"
635311214845777115,"StepEvaluate","SEL@makeRange","Changed","+"
635311214845777115,"StepEvaluate","@","Changed","+"
635311214845787116,"StepEvaluate",",","Unchanged",","
635311214845797116,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214845807117,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214845817117,"StepEvaluate",",","Unchanged",","
635311214845827118,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214845837119,"StepEvaluate",",","Unchanged",","
635311214845837119,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846057131,"StepEvaluate","|","Unchanged","|"
635311214846067132,"StepEvaluate","b","Unchanged","b"
635311214846077132,"StepEvaluate","==","Changed","False"
635311214846087133,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846097133,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846097133,"StepEvaluate",",","Unchanged",","
635311214846107134,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214846117135,"StepEvaluate",",","Unchanged",","
635311214846127135,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846137136,"StepEvaluate","|","Unchanged","|"
635311214846137136,"StepEvaluate","b","Unchanged","b"
635311214846147136,"StepEvaluate","==","Changed","False"
635311214846157137,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846167137,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846167137,"StepEvaluate",",","Unchanged",","
635311214846177138,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846187139,"StepEvaluate",",","Unchanged",","
635311214846187139,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846197139,"StepEvaluate","|","Unchanged","|"
635311214846207140,"StepEvaluate","b","Unchanged","b"
635311214846217140,"StepEvaluate","==","Changed","False"
635311214846227141,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846227141,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846237141,"StepEvaluate",",","Unchanged",","
635311214846247142,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846257143,"StepEvaluate",",","Unchanged",","
635311214846257143,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214846267143,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846277144,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214846287144,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214846287144,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846297145,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846307145,"StepEvaluate",",","Unchanged",","
635311214846307145,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214846317146,"StepEvaluate",",","Unchanged",","
635311214846327147,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846327147,"StepEvaluate","|","Unchanged","|"
635311214846337147,"StepEvaluate","b","Unchanged","b"
635311214846337147,"StepEvaluate","<","Changed","True"
635311214846347148,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846357148,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846357148,"StepEvaluate",",","Unchanged",","
635311214846367149,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214846367149,"StepEvaluate",",","Unchanged",","
635311214846377149,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846387150,"StepEvaluate","|","Unchanged","|"
635311214846387150,"StepEvaluate","b","Unchanged","b"
635311214846397151,"StepEvaluate","<","Changed","True"
635311214846407151,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846407151,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846417152,"StepEvaluate",",","Unchanged",","
635311214846417152,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846427152,"StepEvaluate",",","Unchanged",","
635311214846437153,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846437153,"StepEvaluate","|","Unchanged","|"
635311214846447153,"StepEvaluate","b","Unchanged","b"
635311214846447153,"StepEvaluate","<","Changed","True"
635311214846457154,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846467155,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846467155,"StepEvaluate",",","Unchanged",","
635311214846477155,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846477155,"StepEvaluate",",","Unchanged",","
635311214846487156,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214846497156,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846497156,"StepEvaluate","PAT@-M","Changed","&"
635311214846507157,"StepEvaluate","SEL@makeRange","Changed","&"
635311214846517157,"StepEvaluate","@","Changed","&"
635311214846517157,"StepEvaluate",",","Unchanged",","
635311214846527158,"StepEvaluate","&","Unchanged","&"
635311214846537159,"StepEvaluate","1","Unchanged","1"
635311214846537159,"StepEvaluate","&","Unchanged","&"
635311214846547159,"StepEvaluate","2","Unchanged","2"
635311214846547159,"StepEvaluate","&","Unchanged","&"
635311214846557160,"StepEvaluate","3","Unchanged","3"
635311214846567160,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846577161,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846577161,"StepEvaluate",",","Unchanged",","
635311214846587161,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214846587161,"StepEvaluate",",","Unchanged",","
635311214846597162,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846607163,"StepEvaluate","|","Unchanged","|"
635311214846607163,"StepEvaluate","b","Unchanged","b"
635311214846617163,"StepEvaluate","==","Unchanged","=="
635311214846617163,"StepEvaluate","+","Unchanged","+"
635311214846617163,"StepEvaluate","+","Unchanged","+"
635311214846627164,"StepEvaluate","+","Changed","2"
635311214846627164,"StepEvaluate","1","Unchanged","1"
635311214846627164,"StepEvaluate","1","Unchanged","1"
635311214846637164,"StepEvaluate","4","Unchanged","4"
635311214846637164,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846637164,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846647165,"StepEvaluate",",","Unchanged",","
635311214846647165,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214846657165,"StepEvaluate",",","Unchanged",","
635311214846657165,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846657165,"StepEvaluate","|","Unchanged","|"
635311214846667166,"StepEvaluate","b","Unchanged","b"
635311214846667166,"StepEvaluate","==","Unchanged","=="
635311214846667166,"StepEvaluate","+","Unchanged","+"
635311214846677167,"StepEvaluate","+","Unchanged","+"
635311214846677167,"StepEvaluate","+","Changed","2"
635311214846687167,"StepEvaluate","1","Unchanged","1"
635311214846687167,"StepEvaluate","1","Unchanged","1"
635311214846687167,"StepEvaluate","4","Unchanged","4"
635311214846697168,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846697168,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846697168,"StepEvaluate",",","Unchanged",","
635311214846707168,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846707168,"StepEvaluate",",","Unchanged",","
635311214846707168,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846717169,"StepEvaluate","|","Unchanged","|"
635311214846717169,"StepEvaluate","b","Unchanged","b"
635311214846727169,"StepEvaluate","==","Unchanged","=="
635311214846727169,"StepEvaluate","+","Unchanged","+"
635311214846727169,"StepEvaluate","+","Unchanged","+"
635311214846737170,"StepEvaluate","+","Changed","2"
635311214846737170,"StepEvaluate","1","Unchanged","1"
635311214846737170,"StepEvaluate","1","Unchanged","1"
635311214846747171,"StepEvaluate","4","Unchanged","4"
635311214846747171,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846757171,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846757171,"StepEvaluate",",","Unchanged",","
635311214846757171,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846767172,"StepEvaluate",",","Unchanged",","
635311214846767172,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846767172,"StepEvaluate","|","Unchanged","|"
635311214846777172,"StepEvaluate","b","Unchanged","b"
635311214846777172,"StepEvaluate","==","Unchanged","=="
635311214846787173,"StepEvaluate","+","Unchanged","+"
635311214846787173,"StepEvaluate","+","Changed","3"
635311214846787173,"StepEvaluate","1","Unchanged","1"
635311214846797173,"StepEvaluate","4","Unchanged","4"
635311214846797173,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846797173,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846807174,"StepEvaluate",",","Unchanged",","
635311214846807174,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846817175,"StepEvaluate",",","Unchanged",","
635311214846817175,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846817175,"StepEvaluate","|","Unchanged","|"
635311214846827175,"StepEvaluate","b","Unchanged","b"
635311214846827175,"StepEvaluate","==","Unchanged","=="
635311214846827175,"StepEvaluate","+","Changed","4"
635311214846837176,"StepEvaluate","4","Unchanged","4"
635311214846837176,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846847176,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846847176,"StepEvaluate",",","Unchanged",","
635311214846847176,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846857177,"StepEvaluate",",","Unchanged",","
635311214846857177,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846857177,"StepEvaluate","|","Unchanged","|"
635311214846867177,"StepEvaluate","b","Unchanged","b"
635311214846867177,"StepEvaluate","==","Changed","True"
635311214846867177,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846877178,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846877178,"StepEvaluate",",","Unchanged",","
635311214846877178,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846887179,"StepEvaluate",",","Unchanged",","
635311214846887179,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214846897179,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846897179,"StepEvaluate","PAT@-M","Changed","+"
635311214846897179,"StepEvaluate","SEL@makeRange","Changed","+"
635311214846907180,"StepEvaluate","@","Changed","+"
635311214846907180,"StepEvaluate",",","Unchanged",","
635311214846917180,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846917180,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846917180,"StepEvaluate",",","Unchanged",","
635311214846927181,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214846927181,"StepEvaluate",",","Unchanged",","
635311214846927181,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846927181,"StepEvaluate","|","Unchanged","|"
635311214846937181,"StepEvaluate","b","Unchanged","b"
635311214846937181,"StepEvaluate","==","Changed","False"
635311214846937181,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846947182,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846947182,"StepEvaluate",",","Unchanged",","
635311214846947182,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214846957183,"StepEvaluate",",","Unchanged",","
635311214846957183,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846957183,"StepEvaluate","|","Unchanged","|"
635311214846957183,"StepEvaluate","b","Unchanged","b"
635311214846967183,"StepEvaluate","==","Changed","False"
635311214846967183,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846967183,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846977184,"StepEvaluate",",","Unchanged",","
635311214846977184,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214846977184,"StepEvaluate",",","Unchanged",","
635311214846977184,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214846987184,"StepEvaluate","|","Unchanged","|"
635311214846987184,"StepEvaluate","b","Unchanged","b"
635311214846987184,"StepEvaluate","==","Changed","False"
635311214846997185,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214846997185,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214846997185,"StepEvaluate",",","Unchanged",","
635311214847007185,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847007185,"StepEvaluate",",","Unchanged",","
635311214847007185,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214847007185,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847017186,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214847017186,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214847017186,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847027187,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847027187,"StepEvaluate",",","Unchanged",","
635311214847027187,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847037187,"StepEvaluate",",","Unchanged",","
635311214847037187,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847037187,"StepEvaluate","|","Unchanged","|"
635311214847037187,"StepEvaluate","b","Unchanged","b"
635311214847047188,"StepEvaluate","<","Changed","True"
635311214847047188,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847047188,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847057188,"StepEvaluate",",","Unchanged",","
635311214847057188,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214847057188,"StepEvaluate",",","Unchanged",","
635311214847057188,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847067189,"StepEvaluate","|","Unchanged","|"
635311214847067189,"StepEvaluate","b","Unchanged","b"
635311214847067189,"StepEvaluate","<","Changed","True"
635311214847077189,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847077189,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847077189,"StepEvaluate",",","Unchanged",","
635311214847087190,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847087190,"StepEvaluate",",","Unchanged",","
635311214847087190,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847097191,"StepEvaluate","|","Unchanged","|"
635311214847097191,"StepEvaluate","b","Unchanged","b"
635311214847097191,"StepEvaluate","<","Changed","True"
635311214847107191,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847107191,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847107191,"StepEvaluate",",","Unchanged",","
635311214847107191,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847117192,"StepEvaluate",",","Unchanged",","
635311214847117192,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847117192,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847127192,"StepEvaluate","PAT@-M","Changed","&"
635311214847127192,"StepEvaluate","SEL@makeRange","Changed","&"
635311214847127192,"StepEvaluate","@","Changed","&"
635311214847137193,"StepEvaluate",",","Unchanged",","
635311214847137193,"StepEvaluate","&","Unchanged","&"
635311214847137193,"StepEvaluate","1","Unchanged","1"
635311214847147193,"StepEvaluate","&","Unchanged","&"
635311214847147193,"StepEvaluate","2","Unchanged","2"
635311214847147193,"StepEvaluate","&","Changed",","
635311214847157194,"StepEvaluate",",","Unchanged",","
635311214847157194,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847157194,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847167195,"StepEvaluate",",","Unchanged",","
635311214847167195,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847167195,"StepEvaluate",",","Unchanged",","
635311214847177195,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847177195,"StepEvaluate","|","Unchanged","|"
635311214847177195,"StepEvaluate","b","Unchanged","b"
635311214847177195,"StepEvaluate","==","Changed","False"
635311214847187196,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847187196,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847187196,"StepEvaluate",",","Unchanged",","
635311214847197196,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214847197196,"StepEvaluate",",","Unchanged",","
635311214847197196,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847207197,"StepEvaluate","|","Unchanged","|"
635311214847207197,"StepEvaluate","b","Unchanged","b"
635311214847207197,"StepEvaluate","==","Changed","False"
635311214847217197,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847217197,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847217197,"StepEvaluate",",","Unchanged",","
635311214847217197,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847227198,"StepEvaluate",",","Unchanged",","
635311214847227198,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847227198,"StepEvaluate","|","Unchanged","|"
635311214847237199,"StepEvaluate","b","Unchanged","b"
635311214847237199,"StepEvaluate","==","Changed","False"
635311214847237199,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847237199,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847247199,"StepEvaluate",",","Unchanged",","
635311214847247199,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847247199,"StepEvaluate",",","Unchanged",","
635311214847257200,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214847257200,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847327204,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214847327204,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214847337204,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847337204,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847337204,"StepEvaluate",",","Unchanged",","
635311214847347205,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847347205,"StepEvaluate",",","Unchanged",","
635311214847347205,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847357205,"StepEvaluate","|","Unchanged","|"
635311214847357205,"StepEvaluate","b","Unchanged","b"
635311214847357205,"StepEvaluate","<","Changed","True"
635311214847357205,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847367206,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847367206,"StepEvaluate",",","Unchanged",","
635311214847367206,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214847377207,"StepEvaluate",",","Unchanged",","
635311214847377207,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847377207,"StepEvaluate","|","Unchanged","|"
635311214847377207,"StepEvaluate","b","Unchanged","b"
635311214847387207,"StepEvaluate","<","Changed","True"
635311214847387207,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847387207,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847397208,"StepEvaluate",",","Unchanged",","
635311214847397208,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847397208,"StepEvaluate",",","Unchanged",","
635311214847407208,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847407208,"StepEvaluate","|","Unchanged","|"
635311214847407208,"StepEvaluate","b","Unchanged","b"
635311214847417209,"StepEvaluate","<","Changed","True"
635311214847417209,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847417209,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847417209,"StepEvaluate",",","Unchanged",","
635311214847427209,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847427209,"StepEvaluate",",","Unchanged",","
635311214847427209,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847437210,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847437210,"StepEvaluate","PAT@-M","Changed","&"
635311214847437210,"StepEvaluate","SEL@makeRange","Changed","&"
635311214847447211,"StepEvaluate","@","Changed","&"
635311214847447211,"StepEvaluate",",","Unchanged",","
635311214847447211,"StepEvaluate","&","Changed",","
635311214847457211,"StepEvaluate",",","Unchanged",","
635311214847457211,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847467212,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847467212,"StepEvaluate",",","Unchanged",","
635311214847467212,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847477212,"StepEvaluate",",","Unchanged",","
635311214847477212,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847477212,"StepEvaluate","|","Unchanged","|"
635311214847477212,"StepEvaluate","b","Unchanged","b"
635311214847487213,"StepEvaluate","==","Changed","False"
635311214847487213,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847487213,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847497213,"StepEvaluate",",","Unchanged",","
635311214847497213,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214847497213,"StepEvaluate",",","Unchanged",","
635311214847497213,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847507214,"StepEvaluate","|","Unchanged","|"
635311214847507214,"StepEvaluate","b","Unchanged","b"
635311214847507214,"StepEvaluate","==","Changed","False"
635311214847517215,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847517215,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847517215,"StepEvaluate",",","Unchanged",","
635311214847527215,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847527215,"StepEvaluate",",","Unchanged",","
635311214847527215,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847537216,"StepEvaluate","|","Unchanged","|"
635311214847537216,"StepEvaluate","b","Unchanged","b"
635311214847537216,"StepEvaluate","==","Changed","False"
635311214847547216,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847547216,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847547216,"StepEvaluate",",","Unchanged",","
635311214847547216,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847557217,"StepEvaluate",",","Unchanged",","
635311214847557217,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214847557217,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847567217,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214847567217,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214847567217,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847577218,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847577218,"StepEvaluate",",","Unchanged",","
635311214847577218,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847587219,"StepEvaluate",",","Unchanged",","
635311214847587219,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847587219,"StepEvaluate","|","Unchanged","|"
635311214847597219,"StepEvaluate","b","Unchanged","b"
635311214847597219,"StepEvaluate","<","Changed","True"
635311214847597219,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847597219,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847607220,"StepEvaluate",",","Unchanged",","
635311214847607220,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214847607220,"StepEvaluate",",","Unchanged",","
635311214847617220,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847617220,"StepEvaluate","|","Unchanged","|"
635311214847617220,"StepEvaluate","b","Unchanged","b"
635311214847627221,"StepEvaluate","<","Changed","True"
635311214847627221,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847627221,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847827232,"StepEvaluate",",","Unchanged",","
635311214847837233,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847837233,"StepEvaluate",",","Unchanged",","
635311214847847234,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847847234,"StepEvaluate","|","Unchanged","|"
635311214847847234,"StepEvaluate","b","Unchanged","b"
635311214847857234,"StepEvaluate","<","Changed","True"
635311214847857234,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847857234,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847867235,"StepEvaluate",",","Unchanged",","
635311214847867235,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847867235,"StepEvaluate",",","Unchanged",","
635311214847877235,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847877235,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847877235,"StepEvaluate","PAT@-M","Changed","&"
635311214847887236,"StepEvaluate","SEL@makeRange","Changed","&"
635311214847887236,"StepEvaluate","@","Changed","&"
635311214847887236,"StepEvaluate",",","Unchanged",","
635311214847897236,"StepEvaluate",",","Unchanged",","
635311214847897236,"StepEvaluate","1","Unchanged","1"
635311214847897236,"StepEvaluate","&","Changed",","
635311214847897236,"StepEvaluate",",","Unchanged",","
635311214847907237,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847907237,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847917238,"StepEvaluate",",","Unchanged",","
635311214847917238,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214847917238,"StepEvaluate",",","Unchanged",","
635311214847927238,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847927238,"StepEvaluate","|","Unchanged","|"
635311214847927238,"StepEvaluate","b","Unchanged","b"
635311214847937239,"StepEvaluate","==","Changed","False"
635311214847937239,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847937239,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847947239,"StepEvaluate",",","Unchanged",","
635311214847947239,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214847947239,"StepEvaluate",",","Unchanged",","
635311214847947239,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847957240,"StepEvaluate","|","Unchanged","|"
635311214847957240,"StepEvaluate","b","Unchanged","b"
635311214847957240,"StepEvaluate","==","Changed","False"
635311214847967240,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847967240,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847967240,"StepEvaluate",",","Unchanged",","
635311214847977241,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214847977241,"StepEvaluate",",","Unchanged",","
635311214847977241,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214847987242,"StepEvaluate","|","Unchanged","|"
635311214847987242,"StepEvaluate","b","Unchanged","b"
635311214847987242,"StepEvaluate","==","Changed","False"
635311214847987242,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214847997242,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214847997242,"StepEvaluate",",","Unchanged",","
635311214847997242,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214848007243,"StepEvaluate",",","Unchanged",","
635311214848007243,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214848007243,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848017243,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214848017243,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214848017243,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848017243,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848027244,"StepEvaluate",",","Unchanged",","
635311214848027244,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214848027244,"StepEvaluate",",","Unchanged",","
635311214848037244,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848037244,"StepEvaluate","|","Unchanged","|"
635311214848037244,"StepEvaluate","b","Unchanged","b"
635311214848047245,"StepEvaluate","<","Changed","True"
635311214848047245,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848047245,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848057246,"StepEvaluate",",","Unchanged",","
635311214848057246,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214848057246,"StepEvaluate",",","Unchanged",","
635311214848057246,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848067246,"StepEvaluate","|","Unchanged","|"
635311214848067246,"StepEvaluate","b","Unchanged","b"
635311214848067246,"StepEvaluate","<","Changed","True"
635311214848077247,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848077247,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848077247,"StepEvaluate",",","Unchanged",","
635311214848087247,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214848087247,"StepEvaluate",",","Unchanged",","
635311214848087247,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848087247,"StepEvaluate","|","Unchanged","|"
635311214848097248,"StepEvaluate","b","Unchanged","b"
635311214848097248,"StepEvaluate","<","Changed","True"
635311214848097248,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848107248,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848107248,"StepEvaluate",",","Unchanged",","
635311214848107248,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214848117249,"StepEvaluate",",","Unchanged",","
635311214848117249,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214848117249,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848117249,"StepEvaluate","PAT@-M","Changed","&"
635311214848127250,"StepEvaluate","SEL@makeRange","Changed","&"
635311214848127250,"StepEvaluate","@","Changed","&"
635311214848137250,"StepEvaluate",",","Unchanged",","
635311214848137250,"StepEvaluate",",","Unchanged",","
635311214848137250,"StepEvaluate","1","Unchanged","1"
635311214848137250,"StepEvaluate",",","Unchanged",","
635311214848147251,"StepEvaluate","2","Unchanged","2"
635311214848147251,"StepEvaluate",",","Unchanged",","
635311214848147251,"StepEvaluate","3","Unchanged","3"
635311214848157251,"StepEvaluate",",","Unchanged",","
635311214848157251,"StepEvaluate","+","Unchanged","+"
635311214848157251,"StepEvaluate","+","Unchanged","+"
635311214848157251,"StepEvaluate","+","Changed","2"
635311214848167252,"StepEvaluate","1","Unchanged","1"
635311214848167252,"StepEvaluate","1","Unchanged","1"
635311214848167252,"StepEvaluate",",","Unchanged",","
635311214848177252,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848177252,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848187253,"StepEvaluate",",","Unchanged",","
635311214848387264,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214848397265,"StepEvaluate",",","Unchanged",","
635311214848397265,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848397265,"StepEvaluate","|","Unchanged","|"
635311214848407266,"StepEvaluate","b","Unchanged","b"
635311214848407266,"StepEvaluate","==","Changed","False"
635311214848407266,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848417266,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848417266,"StepEvaluate",",","Unchanged",","
635311214848417266,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214848427267,"StepEvaluate",",","Unchanged",","
635311214848427267,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848427267,"StepEvaluate","|","Unchanged","|"
635311214848437267,"StepEvaluate","b","Unchanged","b"
635311214848437267,"StepEvaluate","==","Changed","False"
635311214848437267,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848447268,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848447268,"StepEvaluate",",","Unchanged",","
635311214848447268,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214848447268,"StepEvaluate",",","Unchanged",","
635311214848457268,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848457268,"StepEvaluate","|","Unchanged","|"
635311214848457268,"StepEvaluate","b","Unchanged","b"
635311214848467269,"StepEvaluate","==","Changed","False"
635311214848467269,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848467269,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848477270,"StepEvaluate",",","Unchanged",","
635311214848477270,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214848477270,"StepEvaluate",",","Unchanged",","
635311214848487270,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214848487270,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848487270,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214848497271,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214848497271,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848497271,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848507271,"StepEvaluate",",","Unchanged",","
635311214848507271,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214848507271,"StepEvaluate",",","Unchanged",","
635311214848507271,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848517272,"StepEvaluate","|","Unchanged","|"
635311214848517272,"StepEvaluate","b","Unchanged","b"
635311214848517272,"StepEvaluate","<","Changed","True"
635311214848527272,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848527272,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848527272,"StepEvaluate",",","Unchanged",","
635311214848537273,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214848537273,"StepEvaluate",",","Unchanged",","
635311214848537273,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848537273,"StepEvaluate","|","Unchanged","|"
635311214848547274,"StepEvaluate","b","Unchanged","b"
635311214848547274,"StepEvaluate","<","Changed","True"
635311214848547274,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848557274,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848557274,"StepEvaluate",",","Unchanged",","
635311214848557274,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214848567275,"StepEvaluate",",","Unchanged",","
635311214848767286,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848777287,"StepEvaluate","|","Unchanged","|"
635311214848777287,"StepEvaluate","b","Unchanged","b"
635311214848777287,"StepEvaluate","<","Changed","True"
635311214848787287,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848787287,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848787287,"StepEvaluate",",","Unchanged",","
635311214848797288,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214848797288,"StepEvaluate",",","Unchanged",","
635311214848797288,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214848807288,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848807288,"StepEvaluate","PAT@-M","Changed","&"
635311214848807288,"StepEvaluate","SEL@makeRange","Changed","&"
635311214848817289,"StepEvaluate","@","Changed","&"
635311214848817289,"StepEvaluate",",","Unchanged",","
635311214848817289,"StepEvaluate",",","Unchanged",","
635311214848827290,"StepEvaluate","1","Unchanged","1"
635311214848827290,"StepEvaluate",",","Unchanged",","
635311214848827290,"StepEvaluate","2","Unchanged","2"
635311214848837290,"StepEvaluate",",","Unchanged",","
635311214848837290,"StepEvaluate","3","Unchanged","3"
635311214848837290,"StepEvaluate",",","Unchanged",","
635311214848847291,"StepEvaluate","+","Unchanged","+"
635311214848847291,"StepEvaluate","+","Changed","3"
635311214848847291,"StepEvaluate","1","Unchanged","1"
635311214848847291,"StepEvaluate",",","Unchanged",","
635311214848857291,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848857291,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848867292,"StepEvaluate",",","Unchanged",","
635311214848867292,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214848867292,"StepEvaluate",",","Unchanged",","
635311214848877292,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848877292,"StepEvaluate","|","Unchanged","|"
635311214848877292,"StepEvaluate","b","Unchanged","b"
635311214848877292,"StepEvaluate","==","Changed","False"
635311214848887293,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214848887293,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214848887293,"StepEvaluate",",","Unchanged",","
635311214848897294,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214848897294,"StepEvaluate",",","Unchanged",","
635311214848897294,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214848907294,"StepEvaluate","|","Unchanged","|"
635311214848907294,"StepEvaluate","b","Unchanged","b"
635311214849107306,"StepEvaluate","==","Changed","False"
635311214849117306,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849117306,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849127307,"StepEvaluate",",","Unchanged",","
635311214849127307,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849127307,"StepEvaluate",",","Unchanged",","
635311214849137307,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849137307,"StepEvaluate","|","Unchanged","|"
635311214849137307,"StepEvaluate","b","Unchanged","b"
635311214849147308,"StepEvaluate","==","Changed","False"
635311214849147308,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849147308,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849157308,"StepEvaluate",",","Unchanged",","
635311214849157308,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849157308,"StepEvaluate",",","Unchanged",","
635311214849167309,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214849167309,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849167309,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214849167309,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214849177310,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849177310,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849177310,"StepEvaluate",",","Unchanged",","
635311214849187310,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214849187310,"StepEvaluate",",","Unchanged",","
635311214849187310,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849197311,"StepEvaluate","|","Unchanged","|"
635311214849197311,"StepEvaluate","b","Unchanged","b"
635311214849197311,"StepEvaluate","<","Changed","True"
635311214849207311,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849207311,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849207311,"StepEvaluate",",","Unchanged",","
635311214849207311,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214849217312,"StepEvaluate",",","Unchanged",","
635311214849217312,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849217312,"StepEvaluate","|","Unchanged","|"
635311214849227312,"StepEvaluate","b","Unchanged","b"
635311214849227312,"StepEvaluate","<","Changed","True"
635311214849227312,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849237313,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849237313,"StepEvaluate",",","Unchanged",","
635311214849237313,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849247314,"StepEvaluate",",","Unchanged",","
635311214849247314,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849247314,"StepEvaluate","|","Unchanged","|"
635311214849257314,"StepEvaluate","b","Unchanged","b"
635311214849257314,"StepEvaluate","<","Changed","True"
635311214849257314,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849257314,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849267315,"StepEvaluate",",","Unchanged",","
635311214849267315,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849267315,"StepEvaluate",",","Unchanged",","
635311214849277315,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214849277315,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849277315,"StepEvaluate","PAT@-M","Changed","&"
635311214849287316,"StepEvaluate","SEL@makeRange","Changed","&"
635311214849287316,"StepEvaluate","@","Changed","&"
635311214849287316,"StepEvaluate",",","Unchanged",","
635311214849297316,"StepEvaluate",",","Unchanged",","
635311214849297316,"StepEvaluate","1","Unchanged","1"
635311214849297316,"StepEvaluate",",","Unchanged",","
635311214849307317,"StepEvaluate","2","Unchanged","2"
635311214849307317,"StepEvaluate",",","Unchanged",","
635311214849307317,"StepEvaluate","3","Unchanged","3"
635311214849307317,"StepEvaluate",",","Unchanged",","
635311214849317318,"StepEvaluate","+","Changed","4"
635311214849317318,"StepEvaluate",",","Unchanged",","
635311214849327318,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849327318,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849327318,"StepEvaluate",",","Unchanged",","
635311214849337319,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214849337319,"StepEvaluate",",","Unchanged",","
635311214849337319,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849337319,"StepEvaluate","|","Unchanged","|"
635311214849347319,"StepEvaluate","b","Unchanged","b"
635311214849347319,"StepEvaluate","==","Changed","False"
635311214849347319,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849357320,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849357320,"StepEvaluate",",","Unchanged",","
635311214849357320,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214849367320,"StepEvaluate",",","Unchanged",","
635311214849367320,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849367320,"StepEvaluate","|","Unchanged","|"
635311214849377321,"StepEvaluate","b","Unchanged","b"
635311214849377321,"StepEvaluate","==","Changed","False"
635311214849377321,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849387322,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849387322,"StepEvaluate",",","Unchanged",","
635311214849387322,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849387322,"StepEvaluate",",","Unchanged",","
635311214849397322,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849397322,"StepEvaluate","|","Unchanged","|"
635311214849397322,"StepEvaluate","b","Unchanged","b"
635311214849407323,"StepEvaluate","==","Changed","False"
635311214849407323,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849407323,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849417323,"StepEvaluate",",","Unchanged",","
635311214849417323,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849417323,"StepEvaluate",",","Unchanged",","
635311214849417323,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214849427324,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849427324,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214849427324,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214849437324,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849437324,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849437324,"StepEvaluate",",","Unchanged",","
635311214849447325,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214849447325,"StepEvaluate",",","Unchanged",","
635311214849447325,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849447325,"StepEvaluate","|","Unchanged","|"
635311214849457326,"StepEvaluate","b","Unchanged","b"
635311214849457326,"StepEvaluate","<","Changed","True"
635311214849457326,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849467326,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849467326,"StepEvaluate",",","Unchanged",","
635311214849467326,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214849477327,"StepEvaluate",",","Unchanged",","
635311214849477327,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849477327,"StepEvaluate","|","Unchanged","|"
635311214849477327,"StepEvaluate","b","Unchanged","b"
635311214849487327,"StepEvaluate","<","Changed","True"
635311214849487327,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849487327,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849497328,"StepEvaluate",",","Unchanged",","
635311214849497328,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849497328,"StepEvaluate",",","Unchanged",","
635311214849507328,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849507328,"StepEvaluate","|","Unchanged","|"
635311214849507328,"StepEvaluate","b","Unchanged","b"
635311214849507328,"StepEvaluate","<","Changed","True"
635311214849517329,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849517329,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849517329,"StepEvaluate",",","Unchanged",","
635311214849527330,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849527330,"StepEvaluate",",","Unchanged",","
635311214849527330,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214849537330,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849537330,"StepEvaluate","PAT@-M","Changed","&"
635311214849537330,"StepEvaluate","SEL@makeRange","Changed","&"
635311214849547331,"StepEvaluate","@","Changed","&"
635311214849547331,"StepEvaluate",",","Unchanged",","
635311214849547331,"StepEvaluate",",","Unchanged",","
635311214849557331,"StepEvaluate","1","Unchanged","1"
635311214849557331,"StepEvaluate",",","Unchanged",","
635311214849557331,"StepEvaluate","2","Unchanged","2"
635311214849557331,"StepEvaluate",",","Unchanged",","
635311214849567332,"StepEvaluate","3","Unchanged","3"
635311214849567332,"StepEvaluate",",","Unchanged",","
635311214849567332,"StepEvaluate","4","Unchanged","4"
635311214849577332,"StepEvaluate",",","Unchanged",","
635311214849577332,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849577332,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849587333,"StepEvaluate",",","Unchanged",","
635311214849587333,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214849587333,"StepEvaluate",",","Unchanged",","
635311214849597334,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849597334,"StepEvaluate","|","Unchanged","|"
635311214849597334,"StepEvaluate","b","Unchanged","b"
635311214849607334,"StepEvaluate","==","Changed","False"
635311214849607334,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849607334,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849617335,"StepEvaluate",",","Unchanged",","
635311214849617335,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214849617335,"StepEvaluate",",","Unchanged",","
635311214849617335,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849627335,"StepEvaluate","|","Unchanged","|"
635311214849627335,"StepEvaluate","b","Unchanged","b"
635311214849627335,"StepEvaluate","==","Changed","False"
635311214849637336,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849637336,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849637336,"StepEvaluate",",","Unchanged",","
635311214849647336,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849647336,"StepEvaluate",",","Unchanged",","
635311214849647336,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849657337,"StepEvaluate","|","Unchanged","|"
635311214849657337,"StepEvaluate","b","Unchanged","b"
635311214849657337,"StepEvaluate","==","Changed","False"
635311214849657337,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849667338,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849667338,"StepEvaluate",",","Unchanged",","
635311214849667338,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214849677338,"StepEvaluate",",","Unchanged",","
635311214849677338,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214849677338,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849687339,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214849687339,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214849687339,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849697339,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849697339,"StepEvaluate",",","Unchanged",","
635311214849697339,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214849697339,"StepEvaluate",",","Unchanged",","
635311214849707340,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849707340,"StepEvaluate","|","Unchanged","|"
635311214849707340,"StepEvaluate","b","Unchanged","b"
635311214849717340,"StepEvaluate","<","Changed","True"
635311214849717340,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849717340,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849727341,"StepEvaluate",",","Unchanged",","
635311214849727341,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214849727341,"StepEvaluate",",","Unchanged",","
635311214849737342,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214849737342,"StepEvaluate","|","Unchanged","|"
635311214849737342,"StepEvaluate","b","Unchanged","b"
635311214849737342,"StepEvaluate","<","Changed","True"
635311214849747342,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214849947354,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214849957354,"StepEvaluate",",","Unchanged",","
635311214850157366,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214850167366,"StepEvaluate",",","Unchanged",","
635311214850167366,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214850177367,"StepEvaluate","|","Unchanged","|"
635311214850177367,"StepEvaluate","b","Unchanged","b"
635311214850177367,"StepEvaluate","<","Changed","True"
635311214850187367,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214850187367,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214850187367,"StepEvaluate",",","Unchanged",","
635311214850197368,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214850197368,"StepEvaluate",",","Unchanged",","
635311214850197368,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214850207368,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214850207368,"StepEvaluate","PAT@-M","Changed","&"
635311214850207368,"StepEvaluate","SEL@makeRange","Changed","&"
635311214850217369,"StepEvaluate","@","Changed","&"
635311214850227370,"StepEvaluate",",","Unchanged",","
635311214850227370,"StepEvaluate",",","Unchanged",","
635311214850237370,"StepEvaluate","1","Unchanged","1"
635311214850247371,"StepEvaluate",",","Unchanged",","
635311214850257371,"StepEvaluate","2","Unchanged","2"
635311214850257371,"StepEvaluate",",","Unchanged",","
635311214850267372,"StepEvaluate","3","Unchanged","3"
635311214850277372,"StepEvaluate",",","Unchanged",","
635311214850287373,"StepEvaluate","4","Unchanged","4"
635311214850287373,"StepEvaluate",",","Unchanged",","
635311214850297374,"StepEvaluate","&","Unchanged","&"
635311214850307374,"StepEvaluate","10","Unchanged","10"
635311214850317375,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214850327375,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214850337376,"StepEvaluate",",","Unchanged",","
635311214850337376,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214850347377,"StepEvaluate",",","Unchanged",","
635311214850557389,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214850567389,"StepEvaluate","|","Unchanged","|"
635311214850577390,"StepEvaluate","b","Unchanged","b"
635311214850587390,"StepEvaluate","==","Unchanged","=="
635311214850587390,"StepEvaluate","+","Changed","11"
635311214850597391,"StepEvaluate","14","Unchanged","14"
635311214850607391,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214850617392,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214850627393,"StepEvaluate",",","Unchanged",","
635311214850627393,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214850637393,"StepEvaluate",",","Unchanged",","
635311214850647394,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214850657394,"StepEvaluate","|","Unchanged","|"
635311214850657394,"StepEvaluate","b","Unchanged","b"
635311214850667395,"StepEvaluate","==","Unchanged","=="
635311214850887407,"StepEvaluate","+","Changed","11"
635311214850897408,"StepEvaluate","14","Unchanged","14"
635311214850907409,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214851117421,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214851127421,"StepEvaluate",",","Unchanged",","
635311214851137422,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214851147422,"StepEvaluate",",","Unchanged",","
635311214851157423,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214851167423,"StepEvaluate","|","Unchanged","|"
635311214851167423,"StepEvaluate","b","Unchanged","b"
635311214851177424,"StepEvaluate","==","Unchanged","=="
635311214851187425,"StepEvaluate","+","Changed","11"
635311214851197425,"StepEvaluate","14","Unchanged","14"
635311214851197425,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214851207426,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214851217426,"StepEvaluate",",","Unchanged",","
635311214851227427,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214851227427,"StepEvaluate",",","Unchanged",","
635311214851237427,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214851447439,"StepEvaluate","|","Unchanged","|"
635311214851457440,"StepEvaluate","b","Unchanged","b"
635311214851467441,"StepEvaluate","==","Changed","False"
635311214851477441,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214851487442,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214851487442,"StepEvaluate",",","Unchanged",","
635311214851497442,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214851707454,"StepEvaluate",",","Unchanged",","
635311214851717455,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214851727455,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214851737456,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214851867463,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214851877464,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214851887465,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214851897465,"StepEvaluate",",","Unchanged",","
635311214851907466,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214851907466,"StepEvaluate",",","Unchanged",","
635311214851917466,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214851927467,"StepEvaluate","|","Unchanged","|"
635311214851937467,"StepEvaluate","b","Unchanged","b"
635311214851947468,"StepEvaluate","<","Unchanged","<"
635311214851957469,"StepEvaluate","+","Changed","11"
635311214851957469,"StepEvaluate","14","Unchanged","14"
635311214851967469,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214851977470,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214851987470,"StepEvaluate",",","Unchanged",","
635311214851987470,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214851997471,"StepEvaluate",",","Unchanged",","
635311214852007471,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852007471,"StepEvaluate","|","Unchanged","|"
635311214852017472,"StepEvaluate","b","Unchanged","b"
635311214852017472,"StepEvaluate","<","Unchanged","<"
635311214852027473,"StepEvaluate","+","Changed","11"
635311214852027473,"StepEvaluate","14","Unchanged","14"
635311214852037473,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852037473,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852047474,"StepEvaluate",",","Unchanged",","
635311214852047474,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852057474,"StepEvaluate",",","Unchanged",","
635311214852057474,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852057474,"StepEvaluate","|","Unchanged","|"
635311214852067475,"StepEvaluate","b","Unchanged","b"
635311214852067475,"StepEvaluate","<","Unchanged","<"
635311214852077475,"StepEvaluate","+","Changed","11"
635311214852077475,"StepEvaluate","14","Unchanged","14"
635311214852087476,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852087476,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852097477,"StepEvaluate",",","Unchanged",","
635311214852097477,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852107477,"StepEvaluate",",","Unchanged",","
635311214852107477,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852107477,"StepEvaluate","|","Unchanged","|"
635311214852117478,"StepEvaluate","b","Unchanged","b"
635311214852117478,"StepEvaluate","<","Changed","True"
635311214852127478,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852127478,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852137479,"StepEvaluate",",","Unchanged",","
635311214852137479,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852137479,"StepEvaluate",",","Unchanged",","
635311214852147479,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214852147479,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852157480,"StepEvaluate","PAT@-M","Changed","&"
635311214852157480,"StepEvaluate","SEL@makeRange","Changed","&"
635311214852167481,"StepEvaluate","@","Changed","&"
635311214852167481,"StepEvaluate",",","Unchanged",","
635311214852177481,"StepEvaluate",",","Unchanged",","
635311214852177481,"StepEvaluate","1","Unchanged","1"
635311214852187482,"StepEvaluate",",","Unchanged",","
635311214852187482,"StepEvaluate","2","Unchanged","2"
635311214852197482,"StepEvaluate",",","Unchanged",","
635311214852197482,"StepEvaluate","3","Unchanged","3"
635311214852197482,"StepEvaluate",",","Unchanged",","
635311214852207483,"StepEvaluate","4","Unchanged","4"
635311214852207483,"StepEvaluate",",","Unchanged",","
635311214852217483,"StepEvaluate","&","Unchanged","&"
635311214852217483,"StepEvaluate","10","Unchanged","10"
635311214852227484,"StepEvaluate","&","Unchanged","&"
635311214852227484,"StepEvaluate","+","Changed","11"
635311214852237485,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852237485,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852247485,"StepEvaluate",",","Unchanged",","
635311214852247485,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214852257486,"StepEvaluate",",","Unchanged",","
635311214852257486,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852267486,"StepEvaluate","|","Unchanged","|"
635311214852267486,"StepEvaluate","b","Unchanged","b"
635311214852267486,"StepEvaluate","==","Unchanged","=="
635311214852277487,"StepEvaluate","+","Unchanged","+"
635311214852277487,"StepEvaluate","+","Changed","11"
635311214852287487,"StepEvaluate","1","Unchanged","1"
635311214852287487,"StepEvaluate","14","Unchanged","14"
635311214852297488,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852297488,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852307489,"StepEvaluate",",","Unchanged",","
635311214852307489,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214852307489,"StepEvaluate",",","Unchanged",","
635311214852317489,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852317489,"StepEvaluate","|","Unchanged","|"
635311214852317489,"StepEvaluate","b","Unchanged","b"
635311214852327490,"StepEvaluate","==","Unchanged","=="
635311214852327490,"StepEvaluate","+","Unchanged","+"
635311214852327490,"StepEvaluate","+","Changed","11"
635311214852337490,"StepEvaluate","1","Unchanged","1"
635311214852337490,"StepEvaluate","14","Unchanged","14"
635311214852337490,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852347491,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852347491,"StepEvaluate",",","Unchanged",","
635311214852347491,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852347491,"StepEvaluate",",","Unchanged",","
635311214852357491,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852357491,"StepEvaluate","|","Unchanged","|"
635311214852357491,"StepEvaluate","b","Unchanged","b"
635311214852367492,"StepEvaluate","==","Unchanged","=="
635311214852367492,"StepEvaluate","+","Unchanged","+"
635311214852567503,"StepEvaluate","+","Changed","11"
635311214852577504,"StepEvaluate","1","Unchanged","1"
635311214852587505,"StepEvaluate","14","Unchanged","14"
635311214852587505,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852587505,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852587505,"StepEvaluate",",","Unchanged",","
635311214852597505,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852597505,"StepEvaluate",",","Unchanged",","
635311214852597505,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852607506,"StepEvaluate","|","Unchanged","|"
635311214852607506,"StepEvaluate","b","Unchanged","b"
635311214852607506,"StepEvaluate","==","Unchanged","=="
635311214852617506,"StepEvaluate","+","Changed","12"
635311214852627507,"StepEvaluate","14","Unchanged","14"
635311214852637507,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852647508,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852647508,"StepEvaluate",",","Unchanged",","
635311214852657509,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852667509,"StepEvaluate",",","Unchanged",","
635311214852677510,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852677510,"StepEvaluate","|","Unchanged","|"
635311214852687510,"StepEvaluate","b","Unchanged","b"
635311214852697511,"StepEvaluate","==","Changed","False"
635311214852697511,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852707511,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852717512,"StepEvaluate",",","Unchanged",","
635311214852717512,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852727513,"StepEvaluate",",","Unchanged",","
635311214852737513,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214852747514,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852747514,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214852757514,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214852767515,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852767515,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852777515,"StepEvaluate",",","Unchanged",","
635311214852787516,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214852787516,"StepEvaluate",",","Unchanged",","
635311214852797517,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852807517,"StepEvaluate","|","Unchanged","|"
635311214852807517,"StepEvaluate","b","Unchanged","b"
635311214852817518,"StepEvaluate","<","Unchanged","<"
635311214852827518,"StepEvaluate","+","Unchanged","+"
635311214852827518,"StepEvaluate","+","Changed","11"
635311214852837519,"StepEvaluate","1","Unchanged","1"
635311214852847520,"StepEvaluate","14","Unchanged","14"
635311214852847520,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852857520,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852867521,"StepEvaluate",",","Unchanged",","
635311214852867521,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214852877521,"StepEvaluate",",","Unchanged",","
635311214852887522,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852887522,"StepEvaluate","|","Unchanged","|"
635311214852897522,"StepEvaluate","b","Unchanged","b"
635311214852907523,"StepEvaluate","<","Unchanged","<"
635311214852907523,"StepEvaluate","+","Unchanged","+"
635311214852917524,"StepEvaluate","+","Changed","11"
635311214852927524,"StepEvaluate","1","Unchanged","1"
635311214852927524,"StepEvaluate","14","Unchanged","14"
635311214852937525,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214852937525,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214852937525,"StepEvaluate",",","Unchanged",","
635311214852947525,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214852947525,"StepEvaluate",",","Unchanged",","
635311214852957526,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214852967526,"StepEvaluate","|","Unchanged","|"
635311214852967526,"StepEvaluate","b","Unchanged","b"
635311214852977527,"StepEvaluate","<","Unchanged","<"
635311214852977527,"StepEvaluate","+","Unchanged","+"
635311214852987528,"StepEvaluate","+","Changed","11"
635311214852987528,"StepEvaluate","1","Unchanged","1"
635311214852997528,"StepEvaluate","14","Unchanged","14"
635311214852997528,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853007529,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853007529,"StepEvaluate",",","Unchanged",","
635311214853017529,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853017529,"StepEvaluate",",","Unchanged",","
635311214853027530,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853027530,"StepEvaluate","|","Unchanged","|"
635311214853037530,"StepEvaluate","b","Unchanged","b"
635311214853037530,"StepEvaluate","<","Unchanged","<"
635311214853047531,"StepEvaluate","+","Changed","12"
635311214853047531,"StepEvaluate","14","Unchanged","14"
635311214853057532,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853057532,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853067532,"StepEvaluate",",","Unchanged",","
635311214853067532,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853077533,"StepEvaluate",",","Unchanged",","
635311214853077533,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853087533,"StepEvaluate","|","Unchanged","|"
635311214853097534,"StepEvaluate","b","Unchanged","b"
635311214853097534,"StepEvaluate","<","Changed","True"
635311214853107534,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853107534,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853117535,"StepEvaluate",",","Unchanged",","
635311214853117535,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853127536,"StepEvaluate",",","Unchanged",","
635311214853127536,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214853137536,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853137536,"StepEvaluate","PAT@-M","Changed","&"
635311214853147537,"StepEvaluate","SEL@makeRange","Changed","&"
635311214853147537,"StepEvaluate","@","Changed","&"
635311214853157537,"StepEvaluate",",","Unchanged",","
635311214853167538,"StepEvaluate",",","Unchanged",","
635311214853167538,"StepEvaluate","1","Unchanged","1"
635311214853177538,"StepEvaluate",",","Unchanged",","
635311214853177538,"StepEvaluate","2","Unchanged","2"
635311214853187539,"StepEvaluate",",","Unchanged",","
635311214853187539,"StepEvaluate","3","Unchanged","3"
635311214853197540,"StepEvaluate",",","Unchanged",","
635311214853197540,"StepEvaluate","4","Unchanged","4"
635311214853207540,"StepEvaluate",",","Unchanged",","
635311214853207540,"StepEvaluate","&","Unchanged","&"
635311214853217541,"StepEvaluate","10","Unchanged","10"
635311214853217541,"StepEvaluate","&","Unchanged","&"
635311214853217541,"StepEvaluate","11","Unchanged","11"
635311214853227541,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853227541,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853237542,"StepEvaluate",",","Unchanged",","
635311214853237542,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214853237542,"StepEvaluate",",","Unchanged",","
635311214853237542,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853247542,"StepEvaluate","|","Unchanged","|"
635311214853247542,"StepEvaluate","b","Unchanged","b"
635311214853447554,"StepEvaluate","==","Unchanged","=="
635311214853457554,"StepEvaluate","+","Unchanged","+"
635311214853457554,"StepEvaluate","+","Changed","11"
635311214853457554,"StepEvaluate","1","Unchanged","1"
635311214853467555,"StepEvaluate","14","Unchanged","14"
635311214853467555,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853467555,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853477556,"StepEvaluate",",","Unchanged",","
635311214853477556,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214853477556,"StepEvaluate",",","Unchanged",","
635311214853487556,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853487556,"StepEvaluate","|","Unchanged","|"
635311214853487556,"StepEvaluate","b","Unchanged","b"
635311214853487556,"StepEvaluate","==","Unchanged","=="
635311214853497557,"StepEvaluate","+","Unchanged","+"
635311214853497557,"StepEvaluate","+","Changed","11"
635311214853497557,"StepEvaluate","1","Unchanged","1"
635311214853507557,"StepEvaluate","14","Unchanged","14"
635311214853507557,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853507557,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853517558,"StepEvaluate",",","Unchanged",","
635311214853517558,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853517558,"StepEvaluate",",","Unchanged",","
635311214853527558,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853527558,"StepEvaluate","|","Unchanged","|"
635311214853527558,"StepEvaluate","b","Unchanged","b"
635311214853527558,"StepEvaluate","==","Unchanged","=="
635311214853537559,"StepEvaluate","+","Unchanged","+"
635311214853537559,"StepEvaluate","+","Changed","11"
635311214853537559,"StepEvaluate","1","Unchanged","1"
635311214853547560,"StepEvaluate","14","Unchanged","14"
635311214853547560,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853547560,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853557560,"StepEvaluate",",","Unchanged",","
635311214853557560,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853557560,"StepEvaluate",",","Unchanged",","
635311214853557560,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853567561,"StepEvaluate","|","Unchanged","|"
635311214853567561,"StepEvaluate","b","Unchanged","b"
635311214853567561,"StepEvaluate","==","Unchanged","=="
635311214853577561,"StepEvaluate","+","Changed","12"
635311214853577561,"StepEvaluate","14","Unchanged","14"
635311214853577561,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853587562,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853587562,"StepEvaluate",",","Unchanged",","
635311214853587562,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853587562,"StepEvaluate",",","Unchanged",","
635311214853597562,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853597562,"StepEvaluate","|","Unchanged","|"
635311214853597562,"StepEvaluate","b","Unchanged","b"
635311214853607563,"StepEvaluate","==","Changed","False"
635311214853607563,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853607563,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853617564,"StepEvaluate",",","Unchanged",","
635311214853617564,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853617564,"StepEvaluate",",","Unchanged",","
635311214853617564,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214853627564,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853627564,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214853627564,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214853637565,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853637565,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853637565,"StepEvaluate",",","Unchanged",","
635311214853647565,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214853647565,"StepEvaluate",",","Unchanged",","
635311214853647565,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853647565,"StepEvaluate","|","Unchanged","|"
635311214853657566,"StepEvaluate","b","Unchanged","b"
635311214853657566,"StepEvaluate","<","Unchanged","<"
635311214853657566,"StepEvaluate","+","Unchanged","+"
635311214853667566,"StepEvaluate","+","Changed","11"
635311214853667566,"StepEvaluate","1","Unchanged","1"
635311214853667566,"StepEvaluate","14","Unchanged","14"
635311214853667566,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853677567,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853677567,"StepEvaluate",",","Unchanged",","
635311214853677567,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214853687568,"StepEvaluate",",","Unchanged",","
635311214853687568,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853687568,"StepEvaluate","|","Unchanged","|"
635311214853697568,"StepEvaluate","b","Unchanged","b"
635311214853697568,"StepEvaluate","<","Unchanged","<"
635311214853697568,"StepEvaluate","+","Unchanged","+"
635311214853707569,"StepEvaluate","+","Changed","11"
635311214853707569,"StepEvaluate","1","Unchanged","1"
635311214853707569,"StepEvaluate","14","Unchanged","14"
635311214853707569,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853717569,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853717569,"StepEvaluate",",","Unchanged",","
635311214853717569,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853727570,"StepEvaluate",",","Unchanged",","
635311214853727570,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853727570,"StepEvaluate","|","Unchanged","|"
635311214853727570,"StepEvaluate","b","Unchanged","b"
635311214853737570,"StepEvaluate","<","Unchanged","<"
635311214853737570,"StepEvaluate","+","Unchanged","+"
635311214853737570,"StepEvaluate","+","Changed","11"
635311214853747571,"StepEvaluate","1","Unchanged","1"
635311214853947582,"StepEvaluate","14","Unchanged","14"
635311214853957583,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853957583,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853967584,"StepEvaluate",",","Unchanged",","
635311214853967584,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214853967584,"StepEvaluate",",","Unchanged",","
635311214853977584,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214853977584,"StepEvaluate","|","Unchanged","|"
635311214853977584,"StepEvaluate","b","Unchanged","b"
635311214853987585,"StepEvaluate","<","Unchanged","<"
635311214853987585,"StepEvaluate","+","Changed","12"
635311214853987585,"StepEvaluate","14","Unchanged","14"
635311214853997585,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214853997585,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214853997585,"StepEvaluate",",","Unchanged",","
635311214853997585,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854007586,"StepEvaluate",",","Unchanged",","
635311214854007586,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854007586,"StepEvaluate","|","Unchanged","|"
635311214854017586,"StepEvaluate","b","Unchanged","b"
635311214854017586,"StepEvaluate","<","Changed","True"
635311214854017586,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854027587,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854027587,"StepEvaluate",",","Unchanged",","
635311214854027587,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854037588,"StepEvaluate",",","Unchanged",","
635311214854037588,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214854037588,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854047588,"StepEvaluate","PAT@-M","Changed","&"
635311214854047588,"StepEvaluate","SEL@makeRange","Changed","&"
635311214854047588,"StepEvaluate","@","Changed","&"
635311214854057589,"StepEvaluate",",","Unchanged",","
635311214854057589,"StepEvaluate",",","Unchanged",","
635311214854057589,"StepEvaluate","1","Unchanged","1"
635311214854067589,"StepEvaluate",",","Unchanged",","
635311214854067589,"StepEvaluate","2","Unchanged","2"
635311214854067589,"StepEvaluate",",","Unchanged",","
635311214854077590,"StepEvaluate","3","Unchanged","3"
635311214854077590,"StepEvaluate",",","Unchanged",","
635311214854077590,"StepEvaluate","4","Unchanged","4"
635311214854087590,"StepEvaluate",",","Unchanged",","
635311214854087590,"StepEvaluate","&","Unchanged","&"
635311214854087590,"StepEvaluate","10","Unchanged","10"
635311214854087590,"StepEvaluate","&","Unchanged","&"
635311214854097591,"StepEvaluate","11","Unchanged","11"
635311214854097591,"StepEvaluate","&","Unchanged","&"
635311214854097591,"StepEvaluate","+","Unchanged","+"
635311214854107592,"StepEvaluate","+","Changed","11"
635311214854107592,"StepEvaluate","1","Unchanged","1"
635311214854117592,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854117592,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854117592,"StepEvaluate",",","Unchanged",","
635311214854127593,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214854127593,"StepEvaluate",",","Unchanged",","
635311214854127593,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854127593,"StepEvaluate","|","Unchanged","|"
635311214854137593,"StepEvaluate","b","Unchanged","b"
635311214854137593,"StepEvaluate","==","Unchanged","=="
635311214854137593,"StepEvaluate","+","Unchanged","+"
635311214854147594,"StepEvaluate","+","Unchanged","+"
635311214854147594,"StepEvaluate","+","Changed","11"
635311214854147594,"StepEvaluate","1","Unchanged","1"
635311214854157594,"StepEvaluate","1","Unchanged","1"
635311214854157594,"StepEvaluate","14","Unchanged","14"
635311214854157594,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854167595,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854167595,"StepEvaluate",",","Unchanged",","
635311214854167595,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214854167595,"StepEvaluate",",","Unchanged",","
635311214854177596,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854177596,"StepEvaluate","|","Unchanged","|"
635311214854177596,"StepEvaluate","b","Unchanged","b"
635311214854187596,"StepEvaluate","==","Unchanged","=="
635311214854187596,"StepEvaluate","+","Unchanged","+"
635311214854187596,"StepEvaluate","+","Unchanged","+"
635311214854187596,"StepEvaluate","+","Changed","11"
635311214854197597,"StepEvaluate","1","Unchanged","1"
635311214854197597,"StepEvaluate","1","Unchanged","1"
635311214854197597,"StepEvaluate","14","Unchanged","14"
635311214854207597,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854207597,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854207597,"StepEvaluate",",","Unchanged",","
635311214854217598,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854217598,"StepEvaluate",",","Unchanged",","
635311214854217598,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854227598,"StepEvaluate","|","Unchanged","|"
635311214854227598,"StepEvaluate","b","Unchanged","b"
635311214854227598,"StepEvaluate","==","Unchanged","=="
635311214854227598,"StepEvaluate","+","Unchanged","+"
635311214854237599,"StepEvaluate","+","Unchanged","+"
635311214854237599,"StepEvaluate","+","Changed","11"
635311214854237599,"StepEvaluate","1","Unchanged","1"
635311214854237599,"StepEvaluate","1","Unchanged","1"
635311214854247600,"StepEvaluate","14","Unchanged","14"
635311214854247600,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854247600,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854257600,"StepEvaluate",",","Unchanged",","
635311214854257600,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854257600,"StepEvaluate",",","Unchanged",","
635311214854267601,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854267601,"StepEvaluate","|","Unchanged","|"
635311214854267601,"StepEvaluate","b","Unchanged","b"
635311214854267601,"StepEvaluate","==","Unchanged","=="
635311214854277601,"StepEvaluate","+","Unchanged","+"
635311214854277601,"StepEvaluate","+","Changed","12"
635311214854277601,"StepEvaluate","1","Unchanged","1"
635311214854287602,"StepEvaluate","14","Unchanged","14"
635311214854287602,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854287602,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854297602,"StepEvaluate",",","Unchanged",","
635311214854297602,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854297602,"StepEvaluate",",","Unchanged",","
635311214854297602,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854307603,"StepEvaluate","|","Unchanged","|"
635311214854307603,"StepEvaluate","b","Unchanged","b"
635311214854307603,"StepEvaluate","==","Unchanged","=="
635311214854317604,"StepEvaluate","+","Changed","13"
635311214854317604,"StepEvaluate","14","Unchanged","14"
635311214854317604,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854327604,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854327604,"StepEvaluate",",","Unchanged",","
635311214854327604,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854327604,"StepEvaluate",",","Unchanged",","
635311214854337605,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854337605,"StepEvaluate","|","Unchanged","|"
635311214854337605,"StepEvaluate","b","Unchanged","b"
635311214854347605,"StepEvaluate","==","Changed","False"
635311214854347605,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854347605,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854357606,"StepEvaluate",",","Unchanged",","
635311214854357606,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854357606,"StepEvaluate",",","Unchanged",","
635311214854367606,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214854367606,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854367606,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214854367606,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214854377607,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854377607,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854377607,"StepEvaluate",",","Unchanged",","
635311214854387608,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214854387608,"StepEvaluate",",","Unchanged",","
635311214854387608,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854397608,"StepEvaluate","|","Unchanged","|"
635311214854397608,"StepEvaluate","b","Unchanged","b"
635311214854397608,"StepEvaluate","<","Unchanged","<"
635311214854397608,"StepEvaluate","+","Unchanged","+"
635311214854407609,"StepEvaluate","+","Unchanged","+"
635311214854407609,"StepEvaluate","+","Changed","11"
635311214854407609,"StepEvaluate","1","Unchanged","1"
635311214854417609,"StepEvaluate","1","Unchanged","1"
635311214854417609,"StepEvaluate","14","Unchanged","14"
635311214854417609,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854427610,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854427610,"StepEvaluate",",","Unchanged",","
635311214854427610,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214854437610,"StepEvaluate",",","Unchanged",","
635311214854437610,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854437610,"StepEvaluate","|","Unchanged","|"
635311214854437610,"StepEvaluate","b","Unchanged","b"
635311214854447611,"StepEvaluate","<","Unchanged","<"
635311214854447611,"StepEvaluate","+","Unchanged","+"
635311214854447611,"StepEvaluate","+","Unchanged","+"
635311214854457612,"StepEvaluate","+","Changed","11"
635311214854457612,"StepEvaluate","1","Unchanged","1"
635311214854457612,"StepEvaluate","1","Unchanged","1"
635311214854467612,"StepEvaluate","14","Unchanged","14"
635311214854467612,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854467612,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854467612,"StepEvaluate",",","Unchanged",","
635311214854477613,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854477613,"StepEvaluate",",","Unchanged",","
635311214854477613,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854487613,"StepEvaluate","|","Unchanged","|"
635311214854487613,"StepEvaluate","b","Unchanged","b"
635311214854487613,"StepEvaluate","<","Unchanged","<"
635311214854497614,"StepEvaluate","+","Unchanged","+"
635311214854497614,"StepEvaluate","+","Unchanged","+"
635311214854497614,"StepEvaluate","+","Changed","11"
635311214854497614,"StepEvaluate","1","Unchanged","1"
635311214854507614,"StepEvaluate","1","Unchanged","1"
635311214854507614,"StepEvaluate","14","Unchanged","14"
635311214854507614,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854517615,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854517615,"StepEvaluate",",","Unchanged",","
635311214854517615,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854527616,"StepEvaluate",",","Unchanged",","
635311214854527616,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854527616,"StepEvaluate","|","Unchanged","|"
635311214854537616,"StepEvaluate","b","Unchanged","b"
635311214854537616,"StepEvaluate","<","Unchanged","<"
635311214854537616,"StepEvaluate","+","Unchanged","+"
635311214854537616,"StepEvaluate","+","Changed","12"
635311214854547617,"StepEvaluate","1","Unchanged","1"
635311214854547617,"StepEvaluate","14","Unchanged","14"
635311214854547617,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854557617,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854557617,"StepEvaluate",",","Unchanged",","
635311214854557617,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854567618,"StepEvaluate",",","Unchanged",","
635311214854567618,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854567618,"StepEvaluate","|","Unchanged","|"
635311214854567618,"StepEvaluate","b","Unchanged","b"
635311214854577618,"StepEvaluate","<","Unchanged","<"
635311214854577618,"StepEvaluate","+","Changed","13"
635311214854577618,"StepEvaluate","14","Unchanged","14"
635311214854587619,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854587619,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854587619,"StepEvaluate",",","Unchanged",","
635311214854597620,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854597620,"StepEvaluate",",","Unchanged",","
635311214854597620,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214854607620,"StepEvaluate","|","Unchanged","|"
635311214854607620,"StepEvaluate","b","Unchanged","b"
635311214854607620,"StepEvaluate","<","Changed","True"
635311214854607620,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854617621,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854617621,"StepEvaluate",",","Unchanged",","
635311214854617621,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214854627621,"StepEvaluate",",","Unchanged",","
635311214854627621,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214854627621,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854637622,"StepEvaluate","PAT@-M","Changed","&"
635311214854637622,"StepEvaluate","SEL@makeRange","Changed","&"
635311214854637622,"StepEvaluate","@","Changed","&"
635311214854647622,"StepEvaluate",",","Unchanged",","
635311214854647622,"StepEvaluate",",","Unchanged",","
635311214854647622,"StepEvaluate","1","Unchanged","1"
635311214854647622,"StepEvaluate",",","Unchanged",","
635311214854657623,"StepEvaluate","2","Unchanged","2"
635311214854657623,"StepEvaluate",",","Unchanged",","
635311214854657623,"StepEvaluate","3","Unchanged","3"
635311214854667624,"StepEvaluate",",","Unchanged",","
635311214854667624,"StepEvaluate","4","Unchanged","4"
635311214854667624,"StepEvaluate",",","Unchanged",","
635311214854677624,"StepEvaluate","&","Unchanged","&"
635311214854677624,"StepEvaluate","10","Unchanged","10"
635311214854677624,"StepEvaluate","&","Unchanged","&"
635311214854687625,"StepEvaluate","11","Unchanged","11"
635311214854687625,"StepEvaluate","&","Unchanged","&"
635311214854687625,"StepEvaluate","+","Changed","12"
635311214854697625,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214854697625,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214854897637,"StepEvaluate",",","Unchanged",","
635311214855117649,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214855127650,"StepEvaluate",",","Unchanged",","
635311214855137650,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214855147651,"StepEvaluate","|","Unchanged","|"
635311214855157652,"StepEvaluate","b","Unchanged","b"
635311214855167652,"StepEvaluate","==","Unchanged","=="
635311214855167652,"StepEvaluate","+","Unchanged","+"
635311214855177653,"StepEvaluate","+","Unchanged","+"
635311214855187653,"StepEvaluate","+","Changed","11"
635311214855197654,"StepEvaluate","1","Unchanged","1"
635311214855407666,"StepEvaluate","1","Unchanged","1"
635311214855417667,"StepEvaluate","14","Unchanged","14"
635311214855427667,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855437668,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214855447668,"StepEvaluate",",","Unchanged",","
635311214855457669,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214855457669,"StepEvaluate",",","Unchanged",","
635311214855467669,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214855477670,"StepEvaluate","|","Unchanged","|"
635311214855487671,"StepEvaluate","b","Unchanged","b"
635311214855487671,"StepEvaluate","==","Unchanged","=="
635311214855497671,"StepEvaluate","+","Unchanged","+"
635311214855507672,"StepEvaluate","+","Unchanged","+"
635311214855517672,"StepEvaluate","+","Changed","11"
635311214855527673,"StepEvaluate","1","Unchanged","1"
635311214855527673,"StepEvaluate","1","Unchanged","1"
635311214855537673,"StepEvaluate","14","Unchanged","14"
635311214855547674,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855557675,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214855557675,"StepEvaluate",",","Unchanged",","
635311214855567675,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214855577676,"StepEvaluate",",","Unchanged",","
635311214855587676,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214855587676,"StepEvaluate","|","Unchanged","|"
635311214855597677,"StepEvaluate","b","Unchanged","b"
635311214855607677,"StepEvaluate","==","Unchanged","=="
635311214855617678,"StepEvaluate","+","Unchanged","+"
635311214855617678,"StepEvaluate","+","Unchanged","+"
635311214855627679,"StepEvaluate","+","Changed","11"
635311214855637679,"StepEvaluate","1","Unchanged","1"
635311214855647680,"StepEvaluate","1","Unchanged","1"
635311214855657680,"StepEvaluate","14","Unchanged","14"
635311214855657680,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855667681,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214855677681,"StepEvaluate",",","Unchanged",","
635311214855677681,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214855687682,"StepEvaluate",",","Unchanged",","
635311214855697683,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214855707683,"StepEvaluate","|","Unchanged","|"
635311214855707683,"StepEvaluate","b","Unchanged","b"
635311214855717684,"StepEvaluate","==","Unchanged","=="
635311214855727684,"StepEvaluate","+","Unchanged","+"
635311214855727684,"StepEvaluate","+","Changed","12"
635311214855737685,"StepEvaluate","1","Unchanged","1"
635311214855747685,"StepEvaluate","14","Unchanged","14"
635311214855747685,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855757686,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214855767687,"StepEvaluate",",","Unchanged",","
635311214855767687,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214855777687,"StepEvaluate",",","Unchanged",","
635311214855787688,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214855787688,"StepEvaluate","|","Unchanged","|"
635311214855797688,"StepEvaluate","b","Unchanged","b"
635311214855807689,"StepEvaluate","==","Unchanged","=="
635311214855807689,"StepEvaluate","+","Changed","13"
635311214855817689,"StepEvaluate","14","Unchanged","14"
635311214855827690,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855837691,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214855837691,"StepEvaluate",",","Unchanged",","
635311214855847691,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214855847691,"StepEvaluate",",","Unchanged",","
635311214855857692,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214855867692,"StepEvaluate","|","Unchanged","|"
635311214855877693,"StepEvaluate","b","Unchanged","b"
635311214855877693,"StepEvaluate","==","Changed","False"
635311214855887693,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855897694,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214855897694,"StepEvaluate",",","Unchanged",","
635311214855907695,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214855917695,"StepEvaluate",",","Unchanged",","
635311214855927696,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214855927696,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855937696,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214855947697,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214855947697,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214855957697,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214855967698,"StepEvaluate",",","Unchanged",","
635311214855977699,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214855977699,"StepEvaluate",",","Unchanged",","
635311214855987699,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214855997700,"StepEvaluate","|","Unchanged","|"
635311214855997700,"StepEvaluate","b","Unchanged","b"
635311214856007700,"StepEvaluate","<","Unchanged","<"
635311214856017701,"StepEvaluate","+","Unchanged","+"
635311214856017701,"StepEvaluate","+","Unchanged","+"
635311214856027701,"StepEvaluate","+","Changed","11"
635311214856037702,"StepEvaluate","1","Unchanged","1"
635311214856037702,"StepEvaluate","1","Unchanged","1"
635311214856047703,"StepEvaluate","14","Unchanged","14"
635311214856057703,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856067704,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856067704,"StepEvaluate",",","Unchanged",","
635311214856077704,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214856087705,"StepEvaluate",",","Unchanged",","
635311214856097705,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856097705,"StepEvaluate","|","Unchanged","|"
635311214856107706,"StepEvaluate","b","Unchanged","b"
635311214856117707,"StepEvaluate","<","Unchanged","<"
635311214856117707,"StepEvaluate","+","Unchanged","+"
635311214856127707,"StepEvaluate","+","Unchanged","+"
635311214856137708,"StepEvaluate","+","Changed","11"
635311214856137708,"StepEvaluate","1","Unchanged","1"
635311214856147708,"StepEvaluate","1","Unchanged","1"
635311214856157709,"StepEvaluate","14","Unchanged","14"
635311214856157709,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856167709,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856177710,"StepEvaluate",",","Unchanged",","
635311214856187711,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214856187711,"StepEvaluate",",","Unchanged",","
635311214856197711,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856207712,"StepEvaluate","|","Unchanged","|"
635311214856207712,"StepEvaluate","b","Unchanged","b"
635311214856217712,"StepEvaluate","<","Unchanged","<"
635311214856217712,"StepEvaluate","+","Unchanged","+"
635311214856227713,"StepEvaluate","+","Unchanged","+"
635311214856227713,"StepEvaluate","+","Changed","11"
635311214856237713,"StepEvaluate","1","Unchanged","1"
635311214856237713,"StepEvaluate","1","Unchanged","1"
635311214856247714,"StepEvaluate","14","Unchanged","14"
635311214856247714,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856247714,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856257715,"StepEvaluate",",","Unchanged",","
635311214856257715,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214856267715,"StepEvaluate",",","Unchanged",","
635311214856267715,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856267715,"StepEvaluate","|","Unchanged","|"
635311214856277716,"StepEvaluate","b","Unchanged","b"
635311214856277716,"StepEvaluate","<","Unchanged","<"
635311214856287716,"StepEvaluate","+","Unchanged","+"
635311214856287716,"StepEvaluate","+","Changed","12"
635311214856297717,"StepEvaluate","1","Unchanged","1"
635311214856297717,"StepEvaluate","14","Unchanged","14"
635311214856297717,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856307717,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856307717,"StepEvaluate",",","Unchanged",","
635311214856317718,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214856317718,"StepEvaluate",",","Unchanged",","
635311214856327719,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856327719,"StepEvaluate","|","Unchanged","|"
635311214856327719,"StepEvaluate","b","Unchanged","b"
635311214856337719,"StepEvaluate","<","Unchanged","<"
635311214856337719,"StepEvaluate","+","Changed","13"
635311214856347720,"StepEvaluate","14","Unchanged","14"
635311214856347720,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856347720,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856357720,"StepEvaluate",",","Unchanged",","
635311214856357720,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214856367721,"StepEvaluate",",","Unchanged",","
635311214856367721,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856377721,"StepEvaluate","|","Unchanged","|"
635311214856377721,"StepEvaluate","b","Unchanged","b"
635311214856377721,"StepEvaluate","<","Changed","True"
635311214856387722,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856397723,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856397723,"StepEvaluate",",","Unchanged",","
635311214856397723,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214856407723,"StepEvaluate",",","Unchanged",","
635311214856407723,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214856417724,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856417724,"StepEvaluate","PAT@-M","Changed","&"
635311214856427724,"StepEvaluate","SEL@makeRange","Changed","&"
635311214856427724,"StepEvaluate","@","Changed","&"
635311214856437725,"StepEvaluate",",","Unchanged",","
635311214856437725,"StepEvaluate",",","Unchanged",","
635311214856447725,"StepEvaluate","1","Unchanged","1"
635311214856447725,"StepEvaluate",",","Unchanged",","
635311214856457726,"StepEvaluate","2","Unchanged","2"
635311214856457726,"StepEvaluate",",","Unchanged",","
635311214856467727,"StepEvaluate","3","Unchanged","3"
635311214856467727,"StepEvaluate",",","Unchanged",","
635311214856467727,"StepEvaluate","4","Unchanged","4"
635311214856477727,"StepEvaluate",",","Unchanged",","
635311214856477727,"StepEvaluate","&","Unchanged","&"
635311214856687739,"StepEvaluate","10","Unchanged","10"
635311214856697740,"StepEvaluate","&","Unchanged","&"
635311214856707740,"StepEvaluate","11","Unchanged","11"
635311214856707740,"StepEvaluate","&","Unchanged","&"
635311214856717741,"StepEvaluate","12","Unchanged","12"
635311214856787745,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856807746,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856807746,"StepEvaluate",",","Unchanged",","
635311214856817747,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214856817747,"StepEvaluate",",","Unchanged",","
635311214856817747,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856827747,"StepEvaluate","|","Unchanged","|"
635311214856827747,"StepEvaluate","b","Unchanged","b"
635311214856837748,"StepEvaluate","==","Unchanged","=="
635311214856837748,"StepEvaluate","+","Unchanged","+"
635311214856847748,"StepEvaluate","+","Unchanged","+"
635311214856847748,"StepEvaluate","+","Changed","11"
635311214856857749,"StepEvaluate","1","Unchanged","1"
635311214856857749,"StepEvaluate","1","Unchanged","1"
635311214856867749,"StepEvaluate","14","Unchanged","14"
635311214856867749,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856867749,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856877750,"StepEvaluate",",","Unchanged",","
635311214856877750,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214856887751,"StepEvaluate",",","Unchanged",","
635311214856887751,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856897751,"StepEvaluate","|","Unchanged","|"
635311214856897751,"StepEvaluate","b","Unchanged","b"
635311214856897751,"StepEvaluate","==","Unchanged","=="
635311214856907752,"StepEvaluate","+","Unchanged","+"
635311214856907752,"StepEvaluate","+","Unchanged","+"
635311214856917752,"StepEvaluate","+","Changed","11"
635311214856917752,"StepEvaluate","1","Unchanged","1"
635311214856917752,"StepEvaluate","1","Unchanged","1"
635311214856927753,"StepEvaluate","14","Unchanged","14"
635311214856927753,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856937753,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214856937753,"StepEvaluate",",","Unchanged",","
635311214856947754,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214856947754,"StepEvaluate",",","Unchanged",","
635311214856957755,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214856957755,"StepEvaluate","|","Unchanged","|"
635311214856967755,"StepEvaluate","b","Unchanged","b"
635311214856967755,"StepEvaluate","==","Unchanged","=="
635311214856967755,"StepEvaluate","+","Unchanged","+"
635311214856977756,"StepEvaluate","+","Unchanged","+"
635311214856977756,"StepEvaluate","+","Changed","11"
635311214856987756,"StepEvaluate","1","Unchanged","1"
635311214856987756,"StepEvaluate","1","Unchanged","1"
635311214856987756,"StepEvaluate","14","Unchanged","14"
635311214856997757,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214856997757,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214857007757,"StepEvaluate",",","Unchanged",","
635311214857007757,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214857017758,"StepEvaluate",",","Unchanged",","
635311214857017758,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214857027759,"StepEvaluate","|","Unchanged","|"
635311214857027759,"StepEvaluate","b","Unchanged","b"
635311214857027759,"StepEvaluate","==","Unchanged","=="
635311214857037759,"StepEvaluate","+","Unchanged","+"
635311214857037759,"StepEvaluate","+","Changed","12"
635311214857047760,"StepEvaluate","1","Unchanged","1"
635311214857047760,"StepEvaluate","14","Unchanged","14"
635311214857057760,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214857057760,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214857257772,"StepEvaluate",",","Unchanged",","
635311214857267772,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214857277773,"StepEvaluate",",","Unchanged",","
635311214857277773,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214857287773,"StepEvaluate","|","Unchanged","|"
635311214857287773,"StepEvaluate","b","Unchanged","b"
635311214857297774,"StepEvaluate","==","Unchanged","=="
635311214857297774,"StepEvaluate","+","Changed","13"
635311214857307775,"StepEvaluate","14","Unchanged","14"
635311214857307775,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214857317775,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214857317775,"StepEvaluate",",","Unchanged",","
635311214857317775,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214857327776,"StepEvaluate",",","Unchanged",","
635311214857327776,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214857337776,"StepEvaluate","|","Unchanged","|"
635311214857337776,"StepEvaluate","b","Unchanged","b"
635311214857347777,"StepEvaluate","==","Changed","False"
635311214857347777,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214857357777,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214857357777,"StepEvaluate",",","Unchanged",","
635311214857357777,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214857367778,"StepEvaluate",",","Unchanged",","
635311214857367778,"StepEvaluate","@Arg","Changed","@Arg-X"
635311214857377779,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214857377779,"StepEvaluate","PAT@-X","Changed","PAT@-X"
635311214857387779,"StepEvaluate","SEL@makeRange","Changed","SEL@makeRange"
635311214857387779,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214857397780,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214857397780,"StepEvaluate",",","Unchanged",","
635311214857407780,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214857407780,"StepEvaluate",",","Unchanged",","
635311214857407780,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214857417781,"StepEvaluate","|","Unchanged","|"
635311214857417781,"StepEvaluate","b","Unchanged","b"
635311214857427781,"StepEvaluate","<","Unchanged","<"
635311214857427781,"StepEvaluate","+","Unchanged","+"
635311214857437782,"StepEvaluate","+","Unchanged","+"
635311214857437782,"StepEvaluate","+","Changed","11"
635311214857447783,"StepEvaluate","1","Unchanged","1"
635311214857647794,"StepEvaluate","1","Unchanged","1"
635311214857657795,"StepEvaluate","14","Unchanged","14"
635311214857667795,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214857667795,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214857677796,"StepEvaluate",",","Unchanged",","
635311214857677796,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214857687796,"StepEvaluate",",","Unchanged",","
635311214857687796,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214857697797,"StepEvaluate","|","Unchanged","|"
635311214857697797,"StepEvaluate","b","Unchanged","b"
635311214857907809,"StepEvaluate","<","Unchanged","<"
635311214857917810,"StepEvaluate","+","Unchanged","+"
635311214857927810,"StepEvaluate","+","Unchanged","+"
635311214857937811,"StepEvaluate","+","Changed","11"
635311214857947811,"StepEvaluate","1","Unchanged","1"
635311214857957812,"StepEvaluate","1","Unchanged","1"
635311214858167824,"StepEvaluate","14","Unchanged","14"
635311214858177824,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214858397837,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214858407838,"StepEvaluate",",","Unchanged",","
635311214858417838,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214858627850,"StepEvaluate",",","Unchanged",","
635311214858637851,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214858647851,"StepEvaluate","|","Unchanged","|"
635311214858647851,"StepEvaluate","b","Unchanged","b"
635311214858657852,"StepEvaluate","<","Unchanged","<"
635311214858667852,"StepEvaluate","+","Unchanged","+"
635311214858677853,"StepEvaluate","+","Unchanged","+"
635311214858687854,"StepEvaluate","+","Changed","11"
635311214858687854,"StepEvaluate","1","Unchanged","1"
635311214858907866,"StepEvaluate","1","Unchanged","1"
635311214858917867,"StepEvaluate","14","Unchanged","14"
635311214858927867,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214858937868,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214858947868,"StepEvaluate",",","Unchanged",","
635311214858957869,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214858957869,"StepEvaluate",",","Unchanged",","
635311214858967870,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214858977870,"StepEvaluate","|","Unchanged","|"
635311214859187882,"StepEvaluate","b","Unchanged","b"
635311214859197883,"StepEvaluate","<","Unchanged","<"
635311214859207883,"StepEvaluate","+","Unchanged","+"
635311214859217884,"StepEvaluate","+","Changed","12"
635311214859227884,"StepEvaluate","1","Unchanged","1"
635311214859227884,"StepEvaluate","14","Unchanged","14"
635311214859237885,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214859247886,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214859257886,"StepEvaluate",",","Unchanged",","
635311214859257886,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214859267887,"StepEvaluate",",","Unchanged",","
635311214859277887,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214859287888,"StepEvaluate","|","Unchanged","|"
635311214859497900,"StepEvaluate","b","Unchanged","b"
635311214859507900,"StepEvaluate","<","Unchanged","<"
635311214859517901,"StepEvaluate","+","Changed","13"
635311214859527902,"StepEvaluate","14","Unchanged","14"
635311214859537902,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214859747914,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214859757915,"StepEvaluate",",","Unchanged",","
635311214859767915,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214859777916,"StepEvaluate",",","Unchanged",","
635311214859987928,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214859997928,"StepEvaluate","|","Unchanged","|"
635311214860007929,"StepEvaluate","b","Unchanged","b"
635311214860017930,"StepEvaluate","<","Changed","True"
635311214860017930,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214860027930,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214860237942,"StepEvaluate",",","Unchanged",","
635311214860247943,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214860257943,"StepEvaluate",",","Unchanged",","
635311214860267944,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214860277944,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214860277944,"StepEvaluate","PAT@-M","Changed","&"
635311214860287945,"StepEvaluate","SEL@makeRange","Changed","&"
635311214860297946,"StepEvaluate","@","Changed","&"
635311214860307946,"StepEvaluate",",","Unchanged",","
635311214860317947,"StepEvaluate",",","Unchanged",","
635311214860527959,"StepEvaluate","1","Unchanged","1"
635311214860537959,"StepEvaluate",",","Unchanged",","
635311214860547960,"StepEvaluate","2","Unchanged","2"
635311214860557961,"StepEvaluate",",","Unchanged",","
635311214860567961,"StepEvaluate","3","Unchanged","3"
635311214860567961,"StepEvaluate",",","Unchanged",","
635311214860577962,"StepEvaluate","4","Unchanged","4"
635311214860587962,"StepEvaluate",",","Unchanged",","
635311214860597963,"StepEvaluate","&","Unchanged","&"
635311214860597963,"StepEvaluate","10","Unchanged","10"
635311214860607963,"StepEvaluate","&","Unchanged","&"
635311214860617964,"StepEvaluate","11","Unchanged","11"
635311214860627965,"StepEvaluate","&","Unchanged","&"
635311214860637965,"StepEvaluate","12","Unchanged","12"
635311214860637965,"StepEvaluate","&","Unchanged","&"
635311214860647966,"StepEvaluate","+","Unchanged","+"
635311214860657966,"StepEvaluate","+","Unchanged","+"
635311214860667967,"StepEvaluate","+","Changed","11"
635311214860667967,"StepEvaluate","1","Unchanged","1"
635311214860677967,"StepEvaluate","1","Unchanged","1"
635311214860697969,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214860697969,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214860707969,"StepEvaluate",",","Unchanged",","
635311214860717970,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214860727970,"StepEvaluate",",","Unchanged",","
635311214860737971,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214860737971,"StepEvaluate","|","Unchanged","|"
635311214860957983,"StepEvaluate","b","Unchanged","b"
635311214860967984,"StepEvaluate","==","Unchanged","=="
635311214860977985,"StepEvaluate","+","Unchanged","+"
635311214860987985,"StepEvaluate","+","Unchanged","+"
635311214860987985,"StepEvaluate","+","Unchanged","+"
635311214860997986,"StepEvaluate","+","Changed","11"
635311214861007986,"StepEvaluate","1","Unchanged","1"
635311214861017987,"StepEvaluate","1","Unchanged","1"
635311214861017987,"StepEvaluate","1","Unchanged","1"
635311214861027987,"StepEvaluate","14","Unchanged","14"
635311214861037988,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861047989,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214861047989,"StepEvaluate",",","Unchanged",","
635311214861057989,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214861067990,"StepEvaluate",",","Unchanged",","
635311214861067990,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214861077990,"StepEvaluate","|","Unchanged","|"
635311214861087991,"StepEvaluate","b","Unchanged","b"
635311214861097991,"StepEvaluate","==","Unchanged","=="
635311214861097991,"StepEvaluate","+","Unchanged","+"
635311214861107992,"StepEvaluate","+","Unchanged","+"
635311214861117993,"StepEvaluate","+","Unchanged","+"
635311214861117993,"StepEvaluate","+","Changed","11"
635311214861127993,"StepEvaluate","1","Unchanged","1"
635311214861137994,"StepEvaluate","1","Unchanged","1"
635311214861137994,"StepEvaluate","1","Unchanged","1"
635311214861147994,"StepEvaluate","14","Unchanged","14"
635311214861157995,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861167995,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214861167995,"StepEvaluate",",","Unchanged",","
635311214861177996,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214861187997,"StepEvaluate",",","Unchanged",","
635311214861187997,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214861197997,"StepEvaluate","|","Unchanged","|"
635311214861207998,"StepEvaluate","b","Unchanged","b"
635311214861207998,"StepEvaluate","==","Unchanged","=="
635311214861217998,"StepEvaluate","+","Unchanged","+"
635311214861227999,"StepEvaluate","+","Unchanged","+"
635311214861237999,"StepEvaluate","+","Unchanged","+"
635311214861237999,"StepEvaluate","+","Changed","11"
635311214861248000,"StepEvaluate","1","Unchanged","1"
635311214861258001,"StepEvaluate","1","Unchanged","1"
635311214861258001,"StepEvaluate","1","Unchanged","1"
635311214861268001,"StepEvaluate","14","Unchanged","14"
635311214861278002,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861278002,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214861288002,"StepEvaluate",",","Unchanged",","
635311214861298003,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214861308003,"StepEvaluate",",","Unchanged",","
635311214861308003,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214861318004,"StepEvaluate","|","Unchanged","|"
635311214861328005,"StepEvaluate","b","Unchanged","b"
635311214861328005,"StepEvaluate","==","Unchanged","=="
635311214861338005,"StepEvaluate","+","Unchanged","+"
635311214861348006,"StepEvaluate","+","Unchanged","+"
635311214861348006,"StepEvaluate","+","Changed","12"
635311214861358006,"StepEvaluate","1","Unchanged","1"
635311214861368007,"StepEvaluate","1","Unchanged","1"
635311214861368007,"StepEvaluate","14","Unchanged","14"
635311214861378007,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861388008,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214861398009,"StepEvaluate",",","Unchanged",","
635311214861398009,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214861408009,"StepEvaluate",",","Unchanged",","
635311214861418010,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214861418010,"StepEvaluate","|","Unchanged","|"
635311214861428010,"StepEvaluate","b","Unchanged","b"
635311214861438011,"StepEvaluate","==","Unchanged","=="
635311214861448011,"StepEvaluate","+","Unchanged","+"
635311214861448011,"StepEvaluate","+","Changed","13"
635311214861458012,"StepEvaluate","1","Unchanged","1"
635311214861468013,"StepEvaluate","14","Unchanged","14"
635311214861478013,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861478013,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214861488014,"StepEvaluate",",","Unchanged",","
635311214861498014,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214861498014,"StepEvaluate",",","Unchanged",","
635311214861508015,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214861518015,"StepEvaluate","|","Unchanged","|"
635311214861518015,"StepEvaluate","b","Unchanged","b"
635311214861528016,"StepEvaluate","==","Unchanged","=="
635311214861538017,"StepEvaluate","+","Changed","14"
635311214861548017,"StepEvaluate","14","Unchanged","14"
635311214861558018,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861558018,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214861568018,"StepEvaluate",",","Unchanged",","
635311214861578019,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214861578019,"StepEvaluate",",","Unchanged",","
635311214861588019,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214861598020,"StepEvaluate","|","Unchanged","|"
635311214861608021,"StepEvaluate","b","Unchanged","b"
635311214861608021,"StepEvaluate","==","Changed","True"
635311214861618021,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861628022,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214861638022,"StepEvaluate",",","Unchanged",","
635311214861848034,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214861858035,"StepEvaluate",",","Unchanged",","
635311214861868035,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214861878036,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214861878036,"StepEvaluate","PAT@-M","Changed","+"
635311214861888037,"StepEvaluate","SEL@makeRange","Changed","+"
635311214861898037,"StepEvaluate","@","Changed","+"
635311214861908038,"StepEvaluate",",","Unchanged",","
635311214861918038,"StepEvaluate",",","Unchanged",","
635311214861928039,"StepEvaluate","1","Unchanged","1"
635311214861928039,"StepEvaluate",",","Unchanged",","
635311214861938039,"StepEvaluate","2","Unchanged","2"
635311214861948040,"StepEvaluate",",","Unchanged",","
635311214861948040,"StepEvaluate","3","Unchanged","3"
635311214861958041,"StepEvaluate",",","Unchanged",","
635311214861968041,"StepEvaluate","4","Unchanged","4"
635311214861978042,"StepEvaluate",",","Unchanged",","
635311214861988042,"StepEvaluate","&","Unchanged","&"
635311214861988042,"StepEvaluate","10","Unchanged","10"
635311214861998043,"StepEvaluate","&","Unchanged","&"
635311214862008043,"StepEvaluate","11","Unchanged","11"
635311214862008043,"StepEvaluate","&","Unchanged","&"
635311214862018044,"StepEvaluate","12","Unchanged","12"
635311214862028045,"StepEvaluate","&","Unchanged","&"
635311214862028045,"StepEvaluate","+","Unchanged","+"
635311214862038045,"StepEvaluate","+","Changed","12"
635311214862048046,"StepEvaluate","1","Unchanged","1"
635311214862058046,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862068047,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862078047,"StepEvaluate",",","Unchanged",","
635311214862078047,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214862088048,"StepEvaluate",",","Unchanged",","
635311214862098049,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214862108049,"StepEvaluate","|","Unchanged","|"
635311214862108049,"StepEvaluate","b","Unchanged","b"
635311214862118050,"StepEvaluate","==","Unchanged","=="
635311214862128050,"StepEvaluate","+","Unchanged","+"
635311214862138051,"StepEvaluate","+","Unchanged","+"
635311214862138051,"StepEvaluate","+","Unchanged","+"
635311214862148051,"StepEvaluate","+","Changed","11"
635311214862158052,"StepEvaluate","1","Unchanged","1"
635311214862158052,"StepEvaluate","1","Unchanged","1"
635311214862168053,"StepEvaluate","1","Unchanged","1"
635311214862178053,"StepEvaluate","14","Unchanged","14"
635311214862178053,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862188054,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862198054,"StepEvaluate",",","Unchanged",","
635311214862198054,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214862208055,"StepEvaluate",",","Unchanged",","
635311214862218055,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214862218055,"StepEvaluate","|","Unchanged","|"
635311214862228056,"StepEvaluate","b","Unchanged","b"
635311214862238057,"StepEvaluate","==","Unchanged","=="
635311214862248057,"StepEvaluate","+","Unchanged","+"
635311214862248057,"StepEvaluate","+","Unchanged","+"
635311214862258058,"StepEvaluate","+","Unchanged","+"
635311214862268058,"StepEvaluate","+","Changed","11"
635311214862278059,"StepEvaluate","1","Unchanged","1"
635311214862278059,"StepEvaluate","1","Unchanged","1"
635311214862288059,"StepEvaluate","1","Unchanged","1"
635311214862298060,"StepEvaluate","14","Unchanged","14"
635311214862308061,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862308061,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862318061,"StepEvaluate",",","Unchanged",","
635311214862328062,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214862328062,"StepEvaluate",",","Unchanged",","
635311214862338062,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214862348063,"StepEvaluate","|","Unchanged","|"
635311214862348063,"StepEvaluate","b","Unchanged","b"
635311214862358063,"StepEvaluate","==","Unchanged","=="
635311214862368064,"StepEvaluate","+","Unchanged","+"
635311214862378065,"StepEvaluate","+","Unchanged","+"
635311214862378065,"StepEvaluate","+","Unchanged","+"
635311214862388065,"StepEvaluate","+","Changed","11"
635311214862398066,"StepEvaluate","1","Unchanged","1"
635311214862398066,"StepEvaluate","1","Unchanged","1"
635311214862408066,"StepEvaluate","1","Unchanged","1"
635311214862418067,"StepEvaluate","14","Unchanged","14"
635311214862428067,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862428067,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862438068,"StepEvaluate",",","Unchanged",","
635311214862448069,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214862448069,"StepEvaluate",",","Unchanged",","
635311214862458069,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214862468070,"StepEvaluate","|","Unchanged","|"
635311214862478070,"StepEvaluate","b","Unchanged","b"
635311214862478070,"StepEvaluate","==","Unchanged","=="
635311214862488071,"StepEvaluate","+","Unchanged","+"
635311214862498071,"StepEvaluate","+","Unchanged","+"
635311214862498071,"StepEvaluate","+","Changed","12"
635311214862508072,"StepEvaluate","1","Unchanged","1"
635311214862518073,"StepEvaluate","1","Unchanged","1"
635311214862518073,"StepEvaluate","14","Unchanged","14"
635311214862528073,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862538074,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862548074,"StepEvaluate",",","Unchanged",","
635311214862548074,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214862558075,"StepEvaluate",",","Unchanged",","
635311214862568075,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214862578076,"StepEvaluate","|","Unchanged","|"
635311214862578076,"StepEvaluate","b","Unchanged","b"
635311214862588077,"StepEvaluate","==","Unchanged","=="
635311214862598077,"StepEvaluate","+","Unchanged","+"
635311214862598077,"StepEvaluate","+","Changed","13"
635311214862608078,"StepEvaluate","1","Unchanged","1"
635311214862618078,"StepEvaluate","14","Unchanged","14"
635311214862628079,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862628079,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862638079,"StepEvaluate",",","Unchanged",","
635311214862648080,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214862648080,"StepEvaluate",",","Unchanged",","
635311214862658081,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214862668081,"StepEvaluate","|","Unchanged","|"
635311214862678082,"StepEvaluate","b","Unchanged","b"
635311214862678082,"StepEvaluate","==","Unchanged","=="
635311214862688082,"StepEvaluate","+","Changed","14"
635311214862698083,"StepEvaluate","14","Unchanged","14"
635311214862698083,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862708083,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862718084,"StepEvaluate",",","Unchanged",","
635311214862728085,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214862728085,"StepEvaluate",",","Unchanged",","
635311214862738085,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214862748086,"StepEvaluate","|","Unchanged","|"
635311214862748086,"StepEvaluate","b","Unchanged","b"
635311214862758086,"StepEvaluate","==","Changed","True"
635311214862768087,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862778087,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862778087,"StepEvaluate",",","Unchanged",","
635311214862788088,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214862798089,"StepEvaluate",",","Unchanged",","
635311214862798089,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214862808089,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862818090,"StepEvaluate","PAT@-M","Changed","+"
635311214862828090,"StepEvaluate","SEL@makeRange","Changed","+"
635311214862828090,"StepEvaluate","@","Changed","+"
635311214862838091,"StepEvaluate",",","Unchanged",","
635311214862848092,"StepEvaluate",",","Unchanged",","
635311214862858092,"StepEvaluate","1","Unchanged","1"
635311214862868093,"StepEvaluate",",","Unchanged",","
635311214862868093,"StepEvaluate","2","Unchanged","2"
635311214862878093,"StepEvaluate",",","Unchanged",","
635311214862888094,"StepEvaluate","3","Unchanged","3"
635311214862888094,"StepEvaluate",",","Unchanged",","
635311214862898094,"StepEvaluate","4","Unchanged","4"
635311214862908095,"StepEvaluate",",","Unchanged",","
635311214862918096,"StepEvaluate","&","Unchanged","&"
635311214862918096,"StepEvaluate","10","Unchanged","10"
635311214862928096,"StepEvaluate","&","Unchanged","&"
635311214862938097,"StepEvaluate","11","Unchanged","11"
635311214862938097,"StepEvaluate","&","Unchanged","&"
635311214862948097,"StepEvaluate","12","Unchanged","12"
635311214862958098,"StepEvaluate","&","Unchanged","&"
635311214862968098,"StepEvaluate","+","Changed","13"
635311214862978099,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214862988100,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214862988100,"StepEvaluate",",","Unchanged",","
635311214862998100,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214863008101,"StepEvaluate",",","Unchanged",","
635311214863018101,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863018101,"StepEvaluate","|","Unchanged","|"
635311214863028102,"StepEvaluate","b","Unchanged","b"
635311214863038102,"StepEvaluate","==","Unchanged","=="
635311214863048103,"StepEvaluate","+","Unchanged","+"
635311214863048103,"StepEvaluate","+","Unchanged","+"
635311214863058104,"StepEvaluate","+","Unchanged","+"
635311214863068104,"StepEvaluate","+","Changed","11"
635311214863068104,"StepEvaluate","1","Unchanged","1"
635311214863078105,"StepEvaluate","1","Unchanged","1"
635311214863088105,"StepEvaluate","1","Unchanged","1"
635311214863088105,"StepEvaluate","14","Unchanged","14"
635311214863098106,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863108106,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863118107,"StepEvaluate",",","Unchanged",","
635311214863128108,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214863138108,"StepEvaluate",",","Unchanged",","
635311214863138108,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863148109,"StepEvaluate","|","Unchanged","|"
635311214863158109,"StepEvaluate","b","Unchanged","b"
635311214863158109,"StepEvaluate","==","Unchanged","=="
635311214863168110,"StepEvaluate","+","Unchanged","+"
635311214863178110,"StepEvaluate","+","Unchanged","+"
635311214863188111,"StepEvaluate","+","Unchanged","+"
635311214863188111,"StepEvaluate","+","Changed","11"
635311214863198112,"StepEvaluate","1","Unchanged","1"
635311214863208112,"StepEvaluate","1","Unchanged","1"
635311214863208112,"StepEvaluate","1","Unchanged","1"
635311214863218113,"StepEvaluate","14","Unchanged","14"
635311214863228113,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863238114,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863238114,"StepEvaluate",",","Unchanged",","
635311214863248114,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214863258115,"StepEvaluate",",","Unchanged",","
635311214863268116,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863268116,"StepEvaluate","|","Unchanged","|"
635311214863278116,"StepEvaluate","b","Unchanged","b"
635311214863288117,"StepEvaluate","==","Unchanged","=="
635311214863288117,"StepEvaluate","+","Unchanged","+"
635311214863298117,"StepEvaluate","+","Unchanged","+"
635311214863308118,"StepEvaluate","+","Unchanged","+"
635311214863318118,"StepEvaluate","+","Changed","11"
635311214863318118,"StepEvaluate","1","Unchanged","1"
635311214863328119,"StepEvaluate","1","Unchanged","1"
635311214863338120,"StepEvaluate","1","Unchanged","1"
635311214863348120,"StepEvaluate","14","Unchanged","14"
635311214863348120,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863358121,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863368121,"StepEvaluate",",","Unchanged",","
635311214863378122,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214863378122,"StepEvaluate",",","Unchanged",","
635311214863388122,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863398123,"StepEvaluate","|","Unchanged","|"
635311214863398123,"StepEvaluate","b","Unchanged","b"
635311214863408124,"StepEvaluate","==","Unchanged","=="
635311214863418124,"StepEvaluate","+","Unchanged","+"
635311214863428125,"StepEvaluate","+","Unchanged","+"
635311214863428125,"StepEvaluate","+","Changed","12"
635311214863438125,"StepEvaluate","1","Unchanged","1"
635311214863448126,"StepEvaluate","1","Unchanged","1"
635311214863458126,"StepEvaluate","14","Unchanged","14"
635311214863458126,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863468127,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863478128,"StepEvaluate",",","Unchanged",","
635311214863488128,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214863488128,"StepEvaluate",",","Unchanged",","
635311214863498129,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863508129,"StepEvaluate","|","Unchanged","|"
635311214863518130,"StepEvaluate","b","Unchanged","b"
635311214863518130,"StepEvaluate","==","Unchanged","=="
635311214863528130,"StepEvaluate","+","Unchanged","+"
635311214863538131,"StepEvaluate","+","Changed","13"
635311214863538131,"StepEvaluate","1","Unchanged","1"
635311214863548132,"StepEvaluate","14","Unchanged","14"
635311214863558132,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863558132,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863568133,"StepEvaluate",",","Unchanged",","
635311214863578133,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214863588134,"StepEvaluate",",","Unchanged",","
635311214863588134,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863598134,"StepEvaluate","|","Unchanged","|"
635311214863608135,"StepEvaluate","b","Unchanged","b"
635311214863618136,"StepEvaluate","==","Unchanged","=="
635311214863618136,"StepEvaluate","+","Changed","14"
635311214863628136,"StepEvaluate","14","Unchanged","14"
635311214863638137,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863648137,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863648137,"StepEvaluate",",","Unchanged",","
635311214863658138,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214863668138,"StepEvaluate",",","Unchanged",","
635311214863668138,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863678139,"StepEvaluate","|","Unchanged","|"
635311214863688140,"StepEvaluate","b","Unchanged","b"
635311214863688140,"StepEvaluate","==","Changed","True"
635311214863698140,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863708141,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863718141,"StepEvaluate",",","Unchanged",","
635311214863718141,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214863728142,"StepEvaluate",",","Unchanged",","
635311214863738142,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214863748143,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863748143,"StepEvaluate","PAT@-M","Changed","+"
635311214863758144,"StepEvaluate","SEL@makeRange","Changed","+"
635311214863768144,"StepEvaluate","@","Changed","+"
635311214863778145,"StepEvaluate",",","Unchanged",","
635311214863788145,"StepEvaluate",",","Unchanged",","
635311214863788145,"StepEvaluate","1","Unchanged","1"
635311214863798146,"StepEvaluate",",","Unchanged",","
635311214863808146,"StepEvaluate","2","Unchanged","2"
635311214863808146,"StepEvaluate",",","Unchanged",","
635311214863818147,"StepEvaluate","3","Unchanged","3"
635311214863828148,"StepEvaluate",",","Unchanged",","
635311214863838148,"StepEvaluate","4","Unchanged","4"
635311214863838148,"StepEvaluate",",","Unchanged",","
635311214863848149,"StepEvaluate","&","Unchanged","&"
635311214863858149,"StepEvaluate","10","Unchanged","10"
635311214863858149,"StepEvaluate","&","Unchanged","&"
635311214863868150,"StepEvaluate","11","Unchanged","11"
635311214863878150,"StepEvaluate","&","Unchanged","&"
635311214863888151,"StepEvaluate","12","Unchanged","12"
635311214863888151,"StepEvaluate","&","Unchanged","&"
635311214863898152,"StepEvaluate","13","Unchanged","13"
635311214863908152,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214863918153,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214863928153,"StepEvaluate",",","Unchanged",","
635311214863938154,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214863938154,"StepEvaluate",",","Unchanged",","
635311214863948154,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214863958155,"StepEvaluate","|","Unchanged","|"
635311214863958155,"StepEvaluate","b","Unchanged","b"
635311214863968156,"StepEvaluate","==","Unchanged","=="
635311214863978156,"StepEvaluate","+","Unchanged","+"
635311214863988157,"StepEvaluate","+","Unchanged","+"
635311214863988157,"StepEvaluate","+","Unchanged","+"
635311214863998157,"StepEvaluate","+","Changed","11"
635311214864008158,"StepEvaluate","1","Unchanged","1"
635311214864008158,"StepEvaluate","1","Unchanged","1"
635311214864018158,"StepEvaluate","1","Unchanged","1"
635311214864028159,"StepEvaluate","14","Unchanged","14"
635311214864038160,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864038160,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214864048160,"StepEvaluate",",","Unchanged",","
635311214864058161,"StepEvaluate","@Arg-M","Changed","IsMatch"
635311214864058161,"StepEvaluate",",","Unchanged",","
635311214864068161,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214864078162,"StepEvaluate","|","Unchanged","|"
635311214864288174,"StepEvaluate","b","Unchanged","b"
635311214864298174,"StepEvaluate","==","Unchanged","=="
635311214864308175,"StepEvaluate","+","Unchanged","+"
635311214864318176,"StepEvaluate","+","Unchanged","+"
635311214864328176,"StepEvaluate","+","Unchanged","+"
635311214864328176,"StepEvaluate","+","Changed","11"
635311214864368178,"StepEvaluate","1","Unchanged","1"
635311214864378179,"StepEvaluate","1","Unchanged","1"
635311214864378179,"StepEvaluate","1","Unchanged","1"
635311214864388180,"StepEvaluate","14","Unchanged","14"
635311214864398180,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864408181,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214864408181,"StepEvaluate",",","Unchanged",","
635311214864418181,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214864428182,"StepEvaluate",",","Unchanged",","
635311214864428182,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214864438182,"StepEvaluate","|","Unchanged","|"
635311214864448183,"StepEvaluate","b","Unchanged","b"
635311214864458184,"StepEvaluate","==","Unchanged","=="
635311214864458184,"StepEvaluate","+","Unchanged","+"
635311214864468184,"StepEvaluate","+","Unchanged","+"
635311214864478185,"StepEvaluate","+","Unchanged","+"
635311214864478185,"StepEvaluate","+","Changed","11"
635311214864488185,"StepEvaluate","1","Unchanged","1"
635311214864498186,"StepEvaluate","1","Unchanged","1"
635311214864508186,"StepEvaluate","1","Unchanged","1"
635311214864508186,"StepEvaluate","14","Unchanged","14"
635311214864518187,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864528188,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214864528188,"StepEvaluate",",","Unchanged",","
635311214864538188,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214864548189,"StepEvaluate",",","Unchanged",","
635311214864558189,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214864558189,"StepEvaluate","|","Unchanged","|"
635311214864568190,"StepEvaluate","b","Unchanged","b"
635311214864578190,"StepEvaluate","==","Unchanged","=="
635311214864588191,"StepEvaluate","+","Unchanged","+"
635311214864588191,"StepEvaluate","+","Unchanged","+"
635311214864598192,"StepEvaluate","+","Changed","12"
635311214864608192,"StepEvaluate","1","Unchanged","1"
635311214864608192,"StepEvaluate","1","Unchanged","1"
635311214864618193,"StepEvaluate","14","Unchanged","14"
635311214864628193,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864638194,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214864638194,"StepEvaluate",",","Unchanged",","
635311214864648194,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214864658195,"StepEvaluate",",","Unchanged",","
635311214864658195,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214864668196,"StepEvaluate","|","Unchanged","|"
635311214864678196,"StepEvaluate","b","Unchanged","b"
635311214864688197,"StepEvaluate","==","Unchanged","=="
635311214864688197,"StepEvaluate","+","Unchanged","+"
635311214864698197,"StepEvaluate","+","Changed","13"
635311214864708198,"StepEvaluate","1","Unchanged","1"
635311214864708198,"StepEvaluate","14","Unchanged","14"
635311214864718198,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864728199,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214864738200,"StepEvaluate",",","Unchanged",","
635311214864738200,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214864748200,"StepEvaluate",",","Unchanged",","
635311214864758201,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214864758201,"StepEvaluate","|","Unchanged","|"
635311214864768201,"StepEvaluate","b","Unchanged","b"
635311214864778202,"StepEvaluate","==","Unchanged","=="
635311214864788202,"StepEvaluate","+","Changed","14"
635311214864788202,"StepEvaluate","14","Unchanged","14"
635311214864798203,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864808204,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214864808204,"StepEvaluate",",","Unchanged",","
635311214864818204,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214864828205,"StepEvaluate",",","Unchanged",","
635311214864838205,"StepEvaluate","@Arg","Unchanged","@Arg"
635311214864838205,"StepEvaluate","|","Unchanged","|"
635311214864848206,"StepEvaluate","b","Unchanged","b"
635311214864858206,"StepEvaluate","==","Changed","True"
635311214864858206,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864868207,"StepEvaluate","PAT@","Unchanged","PAT@"
635311214864878208,"StepEvaluate",",","Unchanged",","
635311214864878208,"StepEvaluate","IsMatch","Unchanged","IsMatch"
635311214864888208,"StepEvaluate",",","Unchanged",","
635311214864898209,"StepEvaluate","@Arg","Changed","@Arg-M"
635311214864908209,"StepEvaluate","SEL@makeRange","Unchanged","SEL@makeRange"
635311214864908209,"StepEvaluate","PAT@-M","Changed","+"
635311214864918210,"StepEvaluate","SEL@makeRange","Changed","+"
635311214864928210,"StepEvaluate","@","Changed","+"
635311214864938211,"StepEvaluate",",","Unchanged",","
635311214864938211,"StepEvaluate",",","Unchanged",","
635311214864948212,"StepEvaluate","1","Unchanged","1"
635311214864958212,"StepEvaluate",",","Unchanged",","
635311214864968213,"StepEvaluate","2","Unchanged","2"
635311214864968213,"StepEvaluate",",","Unchanged",","
635311214864978213,"StepEvaluate","3","Unchanged","3"
635311214864988214,"StepEvaluate",",","Unchanged",","
635311214864988214,"StepEvaluate","4","Unchanged","4"
635311214864998214,"StepEvaluate",",","Unchanged",","
635311214865008215,"StepEvaluate","&","Unchanged","&"
635311214865018216,"StepEvaluate","10","Unchanged","10"
635311214865018216,"StepEvaluate","&","Unchanged","&"
635311214865028216,"StepEvaluate","11","Unchanged","11"
635311214865038217,"StepEvaluate","&","Unchanged","&"
635311214865038217,"StepEvaluate","12","Unchanged","12"
635311214865048217,"StepEvaluate","&","Changed",","
635311214865058218,"StepEvaluate",",","Unchanged",","
635311214865068218,"StepEvaluate",",","Unchanged",","
635311214865078219,"StepEvaluate","1","Unchanged","1"
635311214865078219,"StepEvaluate",",","Unchanged",","
635311214865088220,"StepEvaluate","2","Unchanged","2"
635311214865098220,"StepEvaluate",",","Unchanged",","
635311214865108221,"StepEvaluate","3","Unchanged","3"
635311214865108221,"StepEvaluate",",","Unchanged",","
635311214865118221,"StepEvaluate","4","Unchanged","4"
635311214865128222,"StepEvaluate",",","Unchanged",","
635311214865128222,"StepEvaluate","&","Changed",","
635311214865148223,"StepEvaluate",",","Unchanged",","
635311214865148223,"StepEvaluate",",","Unchanged",","
635311214865158224,"StepEvaluate","1","Unchanged","1"
635311214865168224,"StepEvaluate",",","Unchanged",","
635311214865168224,"StepEvaluate","2","Unchanged","2"
635311214865178225,"StepEvaluate",",","Unchanged",","
635311214865188225,"StepEvaluate","3","Unchanged","3"
635311214865188225,"StepEvaluate",",","Unchanged",","
635311214865198226,"StepEvaluate","4","Unchanged","4"
635311214865208226,"StepEvaluate",",","Unchanged",","
635311214865218227,"StepEvaluate",",","Unchanged",","
635311214865218227,"StepEvaluate","10","Unchanged","10"
635311214865228228,"StepEvaluate","&","Changed",","
635311214865238228,"StepEvaluate",",","Unchanged",","
635311214865248229,"StepEvaluate",",","Unchanged",","
635311214865248229,"StepEvaluate","1","Unchanged","1"
635311214865258229,"StepEvaluate",",","Unchanged",","
635311214865268230,"StepEvaluate","2","Unchanged","2"
635311214865278230,"StepEvaluate",",","Unchanged",","
635311214865278230,"StepEvaluate","3","Unchanged","3"
635311214865288231,"StepEvaluate",",","Unchanged",","
635311214865298232,"StepEvaluate","4","Unchanged","4"
635311214865298232,"StepEvaluate",",","Unchanged",","
635311214865308232,"StepEvaluate",",","Unchanged",","
635311214865318233,"StepEvaluate","10","Unchanged","10"
635311214865318233,"StepEvaluate",",","Unchanged",","
635311214865328233,"StepEvaluate","11","Unchanged","11"
635311214865338234,"StepEvaluate","&","Changed",","
635311214865348235,"StepEvaluate",",","Unchanged",","
635311214865358235,"StepEvaluate",",","Unchanged",","
635311214865358235,"StepEvaluate","1","Unchanged","1"
635311214865368236,"StepEvaluate",",","Unchanged",","
635311214865378236,"StepEvaluate","2","Unchanged","2"
635311214865388237,"StepEvaluate",",","Unchanged",","
635311214865388237,"StepEvaluate","3","Unchanged","3"
635311214865398237,"StepEvaluate",",","Unchanged",","
635311214865408238,"StepEvaluate","4","Unchanged","4"
635311214865418239,"StepEvaluate",",","Unchanged",","
635311214865418239,"StepEvaluate",",","Unchanged",","
635311214865428239,"StepEvaluate","10","Unchanged","10"
635311214865438240,"StepEvaluate",",","Unchanged",","
635311214865438240,"StepEvaluate","11","Unchanged","11"
635311214865448240,"StepEvaluate",",","Unchanged",","
635311214865458241,"StepEvaluate","12","Unchanged","12"
635311214865468241,"StepEvaluate",",","Unchanged",","
635311214865468241,"StepEvaluate","13","Unchanged","13"
635311214865478242,"StepEvaluate",",","Unchanged",","
635311214865488243,"StepEvaluate","+","Unchanged","+"
635311214865488243,"StepEvaluate","+","Unchanged","+"
635311214865498243,"StepEvaluate","+","Unchanged","+"
635311214865508244,"StepEvaluate","+","Changed","11"
635311214865508244,"StepEvaluate","1","Unchanged","1"
635311214865518244,"StepEvaluate","1","Unchanged","1"
635311214865528245,"StepEvaluate","1","Unchanged","1"
635311214865538245,"StepEvaluate",",","Unchanged",","
635311214865548246,"StepEvaluate",",","Unchanged",","
635311214865548246,"StepEvaluate","1","Unchanged","1"
635311214865558247,"StepEvaluate",",","Unchanged",","
635311214865568247,"StepEvaluate","2","Unchanged","2"
635311214865578248,"StepEvaluate",",","Unchanged",","
635311214865578248,"StepEvaluate","3","Unchanged","3"
635311214865588248,"StepEvaluate",",","Unchanged",","
635311214865598249,"StepEvaluate","4","Unchanged","4"
635311214865598249,"StepEvaluate",",","Unchanged",","
635311214865608249,"StepEvaluate",",","Unchanged",","
635311214865618250,"StepEvaluate","10","Unchanged","10"
635311214865628251,"StepEvaluate",",","Unchanged",","
635311214865628251,"StepEvaluate","11","Unchanged","11"
635311214865638251,"StepEvaluate",",","Unchanged",","
635311214865848263,"StepEvaluate","12","Unchanged","12"
635311214865858264,"StepEvaluate",",","Unchanged",","
635311214865868264,"StepEvaluate","13","Unchanged","13"
635311214865878265,"StepEvaluate",",","Unchanged",","
635311214865878265,"StepEvaluate","+","Unchanged","+"
635311214865888265,"StepEvaluate","+","Unchanged","+"
635311214865898266,"StepEvaluate","+","Changed","12"
635311214865908267,"StepEvaluate","1","Unchanged","1"
635311214865918267,"StepEvaluate","1","Unchanged","1"
635311214865928268,"StepEvaluate",",","Unchanged",","
635311214865928268,"StepEvaluate",",","Unchanged",","
635311214865938268,"StepEvaluate","1","Unchanged","1"
635311214865948269,"StepEvaluate",",","Unchanged",","
635311214865968270,"StepEvaluate","2","Unchanged","2"
635311214865978271,"StepEvaluate",",","Unchanged",","
635311214865988271,"StepEvaluate","3","Unchanged","3"
635311214865988271,"StepEvaluate",",","Unchanged",","
635311214865998272,"StepEvaluate","4","Unchanged","4"
635311214866008272,"StepEvaluate",",","Unchanged",","
635311214866018273,"StepEvaluate",",","Unchanged",","
635311214866018273,"StepEvaluate","10","Unchanged","10"
635311214866028273,"StepEvaluate",",","Unchanged",","
635311214866038274,"StepEvaluate","11","Unchanged","11"
635311214866048275,"StepEvaluate",",","Unchanged",","
635311214866058275,"StepEvaluate","12","Unchanged","12"
635311214866058275,"StepEvaluate",",","Unchanged",","
635311214866068276,"StepEvaluate","13","Unchanged","13"
635311214866078276,"StepEvaluate",",","Unchanged",","
635311214866088277,"StepEvaluate","+","Unchanged","+"
635311214866088277,"StepEvaluate","+","Changed","13"
635311214866098277,"StepEvaluate","1","Unchanged","1"
635311214866108278,"StepEvaluate",",","Unchanged",","
635311214866118279,"StepEvaluate",",","Unchanged",","
635311214866128279,"StepEvaluate","1","Unchanged","1"
635311214866128279,"StepEvaluate",",","Unchanged",","
635311214866138280,"StepEvaluate","2","Unchanged","2"
635311214866148280,"StepEvaluate",",","Unchanged",","
635311214866158281,"StepEvaluate","3","Unchanged","3"
635311214866158281,"StepEvaluate",",","Unchanged",","
635311214866168281,"StepEvaluate","4","Unchanged","4"
635311214866178282,"StepEvaluate",",","Unchanged",","
635311214866178282,"StepEvaluate",",","Unchanged",","
635311214866188283,"StepEvaluate","10","Unchanged","10"
635311214866198283,"StepEvaluate",",","Unchanged",","
635311214866198283,"StepEvaluate","11","Unchanged","11"
635311214866208284,"StepEvaluate",",","Unchanged",","
635311214866218284,"StepEvaluate","12","Unchanged","12"
635311214866218284,"StepEvaluate",",","Unchanged",","
635311214866228285,"StepEvaluate","13","Unchanged","13"
635311214866238285,"StepEvaluate",",","Unchanged",","
635311214866248286,"StepEvaluate","+","Changed","14"
635311214866258287,"StepEvaluate",",","Unchanged",","
635311214866468299,"StepEvaluate",",","Unchanged",","
635311214866478299,"StepEvaluate","1","Unchanged","1"
635311214866488300,"StepEvaluate",",","Unchanged",","
635311214866498300,"StepEvaluate","2","Unchanged","2"
635311214866508301,"StepEvaluate",",","Unchanged",","
635311214866508301,"StepEvaluate","3","Unchanged","3"
635311214866518301,"StepEvaluate",",","Unchanged",","
635311214866528302,"StepEvaluate","4","Unchanged","4"
635311214866538303,"StepEvaluate",",","Unchanged",","
635311214866538303,"StepEvaluate",",","Unchanged",","
635311214866548303,"StepEvaluate","10","Unchanged","10"
635311214866558304,"StepEvaluate",",","Unchanged",","
635311214866558304,"StepEvaluate","11","Unchanged","11"
635311214866568304,"StepEvaluate",",","Unchanged",","
635311214866578305,"StepEvaluate","12","Unchanged","12"
635311214866588305,"StepEvaluate",",","Unchanged",","
635311214866588305,"StepEvaluate","13","Unchanged","13"
635311214866598306,"StepEvaluate",",","Unchanged",","
635311214866608307,"StepEvaluate","14","Unchanged","14"
635311216455379179,"StepEvaluate",",","Unchanged",","
635311216455419181,"StepEvaluate",",","Unchanged",","
635311216455429182,"StepEvaluate","1","Unchanged","1"
635311216455429182,"StepEvaluate",",","Unchanged",","
635311216455439183,"StepEvaluate","2","Unchanged","2"
635311216455449183,"StepEvaluate",",","Unchanged",","
635311216455459184,"StepEvaluate","3","Unchanged","3"
635311216455459184,"StepEvaluate",",","Unchanged",","
635311216455469184,"StepEvaluate","4","Unchanged","4"
635311216455479185,"StepEvaluate",",","Unchanged",","
635311216455489185,"StepEvaluate",",","Unchanged",","
635311216455499186,"StepEvaluate","10","Unchanged","10"
635311216455499186,"StepEvaluate",",","Unchanged",","
635311216455509187,"StepEvaluate","11","Unchanged","11"
635311216455519187,"StepEvaluate",",","Unchanged",","
635311216455519187,"StepEvaluate","12","Unchanged","12"
635311216455529188,"StepEvaluate",",","Unchanged",","
635311216455539188,"StepEvaluate","13","Unchanged","13"
635311216455539188,"StepEvaluate",",","Unchanged",","
635311216455549189,"StepEvaluate","14","Unchanged","14"
635311216460489471,"StepEvaluate",",","Unchanged",","
635311216460509473,"StepEvaluate",",","Unchanged",","
635311216460519473,"StepEvaluate","1","Unchanged","1"
635311216460519473,"StepEvaluate",",","Unchanged",","
635311216460529474,"StepEvaluate","2","Unchanged","2"
635311216460539474,"StepEvaluate",",","Unchanged",","
635311216460549475,"StepEvaluate","3","Unchanged","3"
635311216460549475,"StepEvaluate",",","Unchanged",","
635311216460559475,"StepEvaluate","4","Unchanged","4"
635311216460569476,"StepEvaluate",",","Unchanged",","
635311216460569476,"StepEvaluate",",","Unchanged",","
635311216460579477,"StepEvaluate","10","Unchanged","10"
635311216460589477,"StepEvaluate",",","Unchanged",","
635311216460599478,"StepEvaluate","11","Unchanged","11"
635311216460599478,"StepEvaluate",",","Unchanged",","
635311216460609478,"StepEvaluate","12","Unchanged","12"
635311216460619479,"StepEvaluate",",","Unchanged",","
635311216460619479,"StepEvaluate","13","Unchanged","13"
635311216460629479,"StepEvaluate",",","Unchanged",","
635311216460629479,"StepEvaluate","14","Unchanged","14"
635311216464949726,"StepEvaluate",",","Unchanged",","
635311216464969728,"StepEvaluate",",","Unchanged",","
635311216464979728,"StepEvaluate","1","Unchanged","1"
635311216464979728,"StepEvaluate",",","Unchanged",","
635311216464989729,"StepEvaluate","2","Unchanged","2"
635311216464999729,"StepEvaluate",",","Unchanged",","
635311216465009730,"StepEvaluate","3","Unchanged","3"
635311216465009730,"StepEvaluate",",","Unchanged",","
635311216465019730,"StepEvaluate","4","Unchanged","4"
635311216465029731,"StepEvaluate",",","Unchanged",","
635311216465039732,"StepEvaluate",",","Unchanged",","
635311216465039732,"StepEvaluate","10","Unchanged","10"
635311216465049732,"StepEvaluate",",","Unchanged",","
635311216465059733,"StepEvaluate","11","Unchanged","11"
635311216465059733,"StepEvaluate",",","Unchanged",","
635311216465069733,"StepEvaluate","12","Unchanged","12"
635311216465079734,"StepEvaluate",",","Unchanged",","
635311216465079734,"StepEvaluate","13","Unchanged","13"
635311216465089734,"StepEvaluate",",","Unchanged",","
635311216465099735,"StepEvaluate","14","Unchanged","14"
635311219520854514,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311219520874515,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311219520884516,"Parsed as literal","import"
635311219520894517,"Parsed as literal","file"
635311219520904517,"Parsed as literal"," 0"
635311219520904517,"Invalid operator","@import(file) -> 0","0"
635311219520914518,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311219520914518,"Parsed as literal","import"
635311219520924518,"Parsed as literal","file"
635311219520924518,"Parsed as literal"," 0"
635311219520934519,"StepEvaluate","->","Changed","Declared @import"
635311219520934519,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311219520944519,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311219520944519,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311219520954520,"Parsed as literal","operator"
635311219520954520,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311219520954520,"Parsed as literal","op"
635311219520964521,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311219520964521,"Parsed as literal","fn"
635311219520974521,"Parsed as literal",""
635311219520974521,"Invalid operator","@fn","12"
635311219520984522,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311219520984522,"Parsed as literal","fn"
635311219520994522,"Parsed as literal",""
635311219520994522,"Invalid operator","@fn","12"
635311219521004523,"Parsed as literal","@fn"
635311219521004523,"Parsed as literal"," 0"
635311219521014523,"Invalid operator","@operator(op,@fn) -> 0","0"
635311219521014523,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311219521014523,"Parsed as literal","operator"
635311219521024524,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311219521024524,"Parsed as literal","op"
635311219521034525,"Parsed as literal","@fn"
635311219521034525,"Parsed as literal"," 0"
635311219521044525,"StepEvaluate","->","Changed","Declared @operator"
635311219521044525,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311219521054526,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311219521054526,"Parsed as literal","import"
635311219521054526,"Parsed as literal","main.toast"
635311219521064526,"StepEvaluate","@","Changed","@"
635311219521064526,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219521074527,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219521074527,"StepEvaluate",",","Unchanged",","
635311219521074527,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219521084527,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219521084527,"StepEvaluate","PAT@-M","Changed","[]"
635311219521094528,"StepEvaluate","SEL@import","Changed","[]"
635311219521094528,"StepEvaluate","@","Changed","[]"
635311219521104529,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311219521104529,"Parsed as literal","import"
635311219521114529,"Parsed as literal","'core.toast'"
635311219521114529,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311219521124530,"Parsed as literal","import"
635311219521124530,"Parsed as literal","'list.toast'"
635311219521124530,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311219521134530,"Parsed as literal","import"
635311219521134530,"Parsed as literal","'math.toast'"
635311219521144531,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311219521144531,"Parsed as literal","import"
635311219521154531,"Parsed as literal","'sorting.toast'"
635311219521154531,"StepEvaluate","@","Changed","@"
635311219521154531,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219521164532,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219521164532,"StepEvaluate",",","Unchanged",","
635311219521174533,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219521174533,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219521184533,"StepEvaluate","PAT@-M","Changed","[]"
635311219521184533,"StepEvaluate","SEL@import","Changed","[]"
635311219521184533,"StepEvaluate","@","Changed","[]"
635311219521194534,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311219521194534,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311219521204534,"Parsed as literal","map"
635311219521204534,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311219521214535,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311219521214535,"Parsed as literal","func"
635311219521214535,"Parsed as literal",""
635311219521224535,"Invalid operator","@func","4"
635311219521224535,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311219521224535,"Parsed as literal","func"
635311219521224535,"Parsed as literal",""
635311219521234536,"Invalid operator","@func","4"
635311219521234536,"Parsed as literal","@func"
635311219521234536,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311219521244537,"Parsed as literal",""
635311219521244537,"Parsed as literal",""
635311219521244537,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219521254537,"Parsed as literal",""
635311219521254537,"Parsed as literal",""
635311219521254537,"Invalid operator","@map(@func, []) -> []","0"
635311219521254537,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311219521264538,"Parsed as literal","map"
635311219521264538,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311219521264538,"Parsed as literal","@func"
635311219521274538,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311219521274538,"Parsed as literal",""
635311219521274538,"Parsed as literal",""
635311219521274538,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219521284539,"Parsed as literal",""
635311219521284539,"Parsed as literal",""
635311219521284539,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311219521294539,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311219521294539,"Parsed as literal","map"
635311219521294539,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311219521304540,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311219521304540,"Parsed as literal","func"
635311219521304540,"Parsed as literal",""
635311219521314541,"Invalid operator","@func","4"
635311219521314541,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311219521314541,"Parsed as literal","func"
635311219521314541,"Parsed as literal",""
635311219521324541,"Invalid operator","@func","4"
635311219521324541,"Parsed as literal","@func"
635311219521324541,"Parsed as literal"," list"
635311219521334542,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311219521334542,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311219521334542,"Parsed as literal","func"
635311219521344542,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219521344542,"Parsed as literal",""
635311219521344542,"Parsed as literal","list"
635311219521354543,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311219521354543,"Parsed as literal","map"
635311219521354543,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311219521354543,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311219521364543,"Parsed as literal","func"
635311219521364543,"Parsed as literal",""
635311219521364543,"Invalid operator","@func","41"
635311219521374544,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311219521374544,"Parsed as literal","func"
635311219521374544,"Parsed as literal",""
635311219521384545,"Invalid operator","@func","41"
635311219521384545,"Parsed as literal","@func"
635311219521384545,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311219521384545,"Parsed as literal",""
635311219521394545,"Parsed as literal","list"
635311219521394545,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311219521394545,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311219521394545,"Parsed as literal","map"
635311219521404546,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311219521404546,"Parsed as literal","@func"
635311219521404546,"Parsed as literal"," list"
635311219521414546,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311219521414546,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311219521414546,"Parsed as literal","func"
635311219521424547,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219521424547,"Parsed as literal",""
635311219521424547,"Parsed as literal","list"
635311219521424547,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311219521434547,"Parsed as literal","map"
635311219521434547,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311219521434547,"Parsed as literal","@func"
635311219521444548,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311219521444548,"Parsed as literal",""
635311219521444548,"Parsed as literal","list"
635311219521444548,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311219521454549,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311219521454549,"Parsed as literal","filter"
635311219521454549,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311219521464549,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311219521464549,"Parsed as literal","pred"
635311219521464549,"Parsed as literal",""
635311219521464549,"Invalid operator","@pred","7"
635311219521474550,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311219521474550,"Parsed as literal","pred"
635311219521474550,"Parsed as literal",""
635311219521474550,"Invalid operator","@pred","7"
635311219521484550,"Parsed as literal","@pred"
635311219521484550,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311219521484550,"Parsed as literal",""
635311219521484550,"Parsed as literal",""
635311219521494551,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311219521494551,"Parsed as literal",""
635311219521494551,"Parsed as literal",""
635311219521494551,"Invalid operator","@filter(@pred,[]) -> []","0"
635311219521504551,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311219521504551,"Parsed as literal","filter"
635311219521504551,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311219521514552,"Parsed as literal","@pred"
635311219521514552,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311219521514552,"Parsed as literal",""
635311219521514552,"Parsed as literal",""
635311219521524553,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311219521524553,"Parsed as literal",""
635311219521524553,"Parsed as literal",""
635311219521534553,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311219521534553,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311219521534553,"Parsed as literal","filter"
635311219521534553,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311219521544554,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311219521544554,"Parsed as literal","pred"
635311219521544554,"Parsed as literal",""
635311219521554554,"Invalid operator","@pred","7"
635311219521554554,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311219521554554,"Parsed as literal","pred"
635311219521554554,"Parsed as literal",""
635311219521564555,"Invalid operator","@pred","7"
635311219521564555,"Parsed as literal","@pred"
635311219521564555,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311219521564555,"Parsed as literal"," list "
635311219521574555,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311219521574555,"Parsed as literal","pred"
635311219521574555,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219521584556,"Parsed as literal",""
635311219521584556,"Parsed as literal","list"
635311219521584556,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311219521594557,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311219521594557,"Parsed as literal"," "
635311219521594557,"Parsed as literal","list "
635311219521594557,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311219521604557,"Parsed as literal","filter"
635311219521604557,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311219521604557,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311219521604557,"Parsed as literal","pred"
635311219521614558,"Parsed as literal",""
635311219521614558,"Invalid operator","@pred","56"
635311219521614558,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311219521624558,"Parsed as literal","pred"
635311219521624558,"Parsed as literal",""
635311219521624558,"Invalid operator","@pred","56"
635311219521624558,"Parsed as literal","@pred"
635311219521634559,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311219521634559,"Parsed as literal"," "
635311219521634559,"Parsed as literal","list"
635311219521634559,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311219521644559,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311219521644559,"Parsed as literal","filter"
635311219521644559,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311219521654560,"Parsed as literal","@pred"
635311219521654560,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311219521654560,"Parsed as literal"," list "
635311219521664561,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311219521664561,"Parsed as literal","pred"
635311219521664561,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219521664561,"Parsed as literal",""
635311219521674561,"Parsed as literal","list"
635311219521674561,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311219521674561,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311219521674561,"Parsed as literal"," "
635311219521684562,"Parsed as literal","list "
635311219521684562,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311219521684562,"Parsed as literal","filter"
635311219521694562,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311219521694562,"Parsed as literal","@pred"
635311219521694562,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311219521694562,"Parsed as literal"," "
635311219521704563,"Parsed as literal","list"
635311219521704563,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311219521704563,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311219521704563,"Parsed as literal","filter"
635311219521714563,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311219521714563,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311219521714563,"Parsed as literal","pred"
635311219521714563,"Parsed as literal",""
635311219521724564,"Invalid operator","@pred","7"
635311219521724564,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311219521724564,"Parsed as literal","pred"
635311219521734565,"Parsed as literal",""
635311219521734565,"Invalid operator","@pred","7"
635311219521734565,"Parsed as literal","@pred"
635311219521734565,"Parsed as literal","list"
635311219521744565,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311219521744565,"Parsed as literal","filter"
635311219521744565,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311219521754566,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311219521754566,"Parsed as literal","pred"
635311219521754566,"Parsed as literal",""
635311219521754566,"Invalid operator","@pred","30"
635311219521764566,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311219521764566,"Parsed as literal","pred"
635311219521764566,"Parsed as literal",""
635311219521764566,"Invalid operator","@pred","30"
635311219521774567,"Parsed as literal","@pred"
635311219521774567,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311219521774567,"Parsed as literal",""
635311219521784567,"Parsed as literal","list"
635311219521784567,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311219521784567,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311219521784567,"Parsed as literal","filter"
635311219521794568,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311219521794568,"Parsed as literal","@pred"
635311219521794568,"Parsed as literal","list"
635311219521824570,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311219521824570,"Parsed as literal","filter"
635311219521824570,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311219521834570,"Parsed as literal","@pred"
635311219521834570,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311219521834570,"Parsed as literal",""
635311219521834570,"Parsed as literal","list"
635311219521844571,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311219521844571,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311219521854571,"Parsed as literal","call"
635311219521854571,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311219521854571,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311219521864572,"Parsed as literal","fun"
635311219521864572,"Parsed as literal",""
635311219521864572,"Invalid operator","@fun","5"
635311219521864572,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311219521874573,"Parsed as literal","fun"
635311219521874573,"Parsed as literal",""
635311219521874573,"Invalid operator","@fun","5"
635311219521884573,"Parsed as literal","@fun"
635311219521884573,"Parsed as literal","arg"
635311219521884573,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311219521884573,"Parsed as literal","fun"
635311219521894574,"Parsed as literal","arg"
635311219521894574,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311219521894574,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311219521904574,"Parsed as literal","call"
635311219521904574,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311219521904574,"Parsed as literal","@fun"
635311219521904574,"Parsed as literal","arg"
635311219521914575,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311219521914575,"Parsed as literal","fun"
635311219521914575,"Parsed as literal","arg"
635311219521924575,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311219521924575,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311219521924575,"Parsed as literal","curry"
635311219521924575,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311219521934576,"Parsed as literal","seed"
635311219521934576,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219521934576,"Parsed as literal",""
635311219521934576,"Parsed as literal",""
635311219521944577,"Parsed as literal"," seed"
635311219521944577,"Invalid operator","@curry(seed,[]) -> seed","0"
635311219521944577,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311219521954577,"Parsed as literal","curry"
635311219521954577,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311219521954577,"Parsed as literal","seed"
635311219521954577,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219521964578,"Parsed as literal",""
635311219521964578,"Parsed as literal",""
635311219521964578,"Parsed as literal"," seed"
635311219521974578,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311219521974578,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311219521974578,"Parsed as literal","curry"
635311219521984579,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311219521984579,"Parsed as literal","seed"
635311219521984579,"Parsed as literal"," funcList"
635311219521984579,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311219521994579,"Parsed as literal","curry"
635311219521994579,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311219521994579,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311219522004580,"Parsed as literal","call"
635311219522004580,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311219522004580,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311219522004580,"Parsed as literal",""
635311219522014581,"Parsed as literal","funcList"
635311219522014581,"Parsed as literal","seed"
635311219522014581,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311219522024581,"Parsed as literal",""
635311219522024581,"Parsed as literal","funcList"
635311219522024581,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311219522024581,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311219522034582,"Parsed as literal","curry"
635311219522034582,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311219522034582,"Parsed as literal","seed"
635311219522034582,"Parsed as literal"," funcList"
635311219522044582,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311219522044582,"Parsed as literal","curry"
635311219522044582,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311219522044582,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311219522054583,"Parsed as literal","call"
635311219522054583,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311219522054583,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311219522064583,"Parsed as literal",""
635311219522064583,"Parsed as literal","funcList"
635311219522064583,"Parsed as literal","seed"
635311219522064583,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311219522074584,"Parsed as literal",""
635311219522074584,"Parsed as literal","funcList"
635311219522074584,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311219522074584,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311219522084585,"Parsed as literal","fold"
635311219522084585,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311219522084585,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311219522084585,"Parsed as literal","func"
635311219522094585,"Parsed as literal",""
635311219522094585,"Invalid operator","@func","5"
635311219522094585,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311219522094585,"Parsed as literal","func"
635311219522104586,"Parsed as literal",""
635311219522104586,"Invalid operator","@func","5"
635311219522104586,"Parsed as literal","@func"
635311219522104586,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219522114586,"Parsed as literal",""
635311219522114586,"Parsed as literal",""
635311219522114586,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219522124587,"Parsed as literal",""
635311219522124587,"Parsed as literal",""
635311219522124587,"Invalid operator","@fold(@func,[]) -> []","0"
635311219522124587,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311219522134587,"Parsed as literal","fold"
635311219522134587,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311219522134587,"Parsed as literal","@func"
635311219522134587,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219522144588,"Parsed as literal",""
635311219522144588,"Parsed as literal",""
635311219522144588,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219522144588,"Parsed as literal",""
635311219522154589,"Parsed as literal",""
635311219522154589,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311219522154589,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311219522164589,"Parsed as literal","fold"
635311219522164589,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311219522164589,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311219522164589,"Parsed as literal","func"
635311219522174590,"Parsed as literal",""
635311219522174590,"Invalid operator","@func","5"
635311219522174590,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311219522174590,"Parsed as literal","func"
635311219522184590,"Parsed as literal",""
635311219522184590,"Invalid operator","@func","5"
635311219522184590,"Parsed as literal","@func"
635311219522184590,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311219522194591,"Parsed as literal","list"
635311219522194591,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311219522194591,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311219522194591,"Parsed as literal",""
635311219522204591,"Parsed as literal","list"
635311219522204591,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311219522204591,"Parsed as literal",""
635311219522204591,"Parsed as literal",""
635311219522214592,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311219522214592,"Parsed as literal"," "
635311219522214592,"Parsed as literal","list"
635311219522224593,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311219522224593,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311219522224593,"Parsed as literal","fold"
635311219522224593,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311219522234593,"Parsed as literal","@func"
635311219522234593,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311219522234593,"Parsed as literal","list"
635311219522234593,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311219522244594,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311219522244594,"Parsed as literal",""
635311219522244594,"Parsed as literal","list"
635311219522244594,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311219522254594,"Parsed as literal",""
635311219522254594,"Parsed as literal",""
635311219522254594,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311219522254594,"Parsed as literal"," "
635311219522264595,"Parsed as literal","list"
635311219522264595,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311219522264595,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311219522274595,"Parsed as literal","fold"
635311219522274595,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311219522274595,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311219522274595,"Parsed as literal","func"
635311219522284596,"Parsed as literal",""
635311219522284596,"Invalid operator","@func","5"
635311219522284596,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311219522284596,"Parsed as literal","func"
635311219522294597,"Parsed as literal",""
635311219522294597,"Invalid operator","@func","5"
635311219522294597,"Parsed as literal","@func"
635311219522294597,"Parsed as literal","list"
635311219522304597,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311219522304597,"Parsed as literal","fold"
635311219522304597,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311219522314598,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311219522314598,"Parsed as literal","func"
635311219522314598,"Parsed as literal",""
635311219522314598,"Invalid operator","@func","26"
635311219522324598,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311219522324598,"Parsed as literal","func"
635311219522324598,"Parsed as literal",""
635311219522324598,"Invalid operator","@func","26"
635311219522334599,"Parsed as literal","@func"
635311219522334599,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311219522334599,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311219522344599,"Parsed as literal","func"
635311219522344599,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311219522344599,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311219522344599,"Parsed as literal",""
635311219522354600,"Parsed as literal","list"
635311219522354600,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311219522354600,"Parsed as literal",""
635311219522354600,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311219522364601,"Parsed as literal",""
635311219522364601,"Parsed as literal","list"
635311219522364601,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311219522374601,"Parsed as literal"," "
635311219522374601,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311219522374601,"Parsed as literal",""
635311219522374601,"Parsed as literal","list"
635311219522384602,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311219522384602,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311219522384602,"Parsed as literal","fold"
635311219522394602,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311219522394602,"Parsed as literal","@func"
635311219522394602,"Parsed as literal","list"
635311219522394602,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311219522404603,"Parsed as literal","fold"
635311219522404603,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311219522404603,"Parsed as literal","@func"
635311219522414603,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311219522414603,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311219522414603,"Parsed as literal","func"
635311219522414603,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311219522424604,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311219522424604,"Parsed as literal",""
635311219522424604,"Parsed as literal","list"
635311219522434605,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311219522434605,"Parsed as literal",""
635311219522434605,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311219522434605,"Parsed as literal",""
635311219522444605,"Parsed as literal","list"
635311219522444605,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311219522444605,"Parsed as literal"," "
635311219522444605,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311219522454606,"Parsed as literal",""
635311219522454606,"Parsed as literal","list"
635311219522454606,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311219522464606,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311219522464606,"Parsed as literal","foldr"
635311219522464606,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311219522474607,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311219522474607,"Parsed as literal","func"
635311219522474607,"Parsed as literal",""
635311219522474607,"Invalid operator","@func","6"
635311219522484607,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311219522484607,"Parsed as literal","func"
635311219522484607,"Parsed as literal",""
635311219522484607,"Invalid operator","@func","6"
635311219522494608,"Parsed as literal","@func"
635311219522494608,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219522494608,"Parsed as literal",""
635311219522494608,"Parsed as literal",""
635311219522504609,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219522504609,"Parsed as literal",""
635311219522504609,"Parsed as literal",""
635311219522514609,"Invalid operator","@foldr(@func,[]) -> []","0"
635311219522514609,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311219522514609,"Parsed as literal","foldr"
635311219522514609,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311219522524610,"Parsed as literal","@func"
635311219522524610,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219522524610,"Parsed as literal",""
635311219522524610,"Parsed as literal",""
635311219522534610,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219522534610,"Parsed as literal",""
635311219522534610,"Parsed as literal",""
635311219522534610,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311219522544611,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311219522544611,"Parsed as literal","foldr"
635311219522544611,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311219522554611,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311219522554611,"Parsed as literal","func"
635311219522554611,"Parsed as literal",""
635311219522554611,"Invalid operator","@func","6"
635311219522564612,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311219522564612,"Parsed as literal","func"
635311219522564612,"Parsed as literal",""
635311219522564612,"Invalid operator","@func","6"
635311219522574613,"Parsed as literal","@func"
635311219522574613,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311219522574613,"Parsed as literal","list"
635311219522584613,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311219522584613,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311219522584613,"Parsed as literal",""
635311219522584613,"Parsed as literal","list"
635311219522594614,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219522594614,"Parsed as literal",""
635311219522594614,"Parsed as literal",""
635311219522604614,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311219522604614,"Parsed as literal"," "
635311219522604614,"Parsed as literal","list"
635311219522604614,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311219522614615,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311219522614615,"Parsed as literal","foldr"
635311219522614615,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311219522624615,"Parsed as literal","@func"
635311219522624615,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311219522624615,"Parsed as literal","list"
635311219522624615,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311219522634616,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311219522634616,"Parsed as literal",""
635311219522634616,"Parsed as literal","list"
635311219522634616,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219522644617,"Parsed as literal",""
635311219522644617,"Parsed as literal",""
635311219522644617,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311219522654617,"Parsed as literal"," "
635311219522654617,"Parsed as literal","list"
635311219522654617,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311219522664618,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311219522664618,"Parsed as literal","foldr"
635311219522664618,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311219522664618,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311219522674618,"Parsed as literal","func"
635311219522674618,"Parsed as literal",""
635311219522674618,"Invalid operator","@func","6"
635311219522674618,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311219522684619,"Parsed as literal","func"
635311219522684619,"Parsed as literal",""
635311219522684619,"Invalid operator","@func","6"
635311219522684619,"Parsed as literal","@func"
635311219522694619,"Parsed as literal","list"
635311219522694619,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311219522694619,"Parsed as literal","func"
635311219522704620,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311219522714621,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311219522714621,"Parsed as literal","foldr"
635311219522714621,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311219522714621,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311219522724621,"Parsed as literal","func"
635311219522724621,"Parsed as literal",""
635311219522724621,"Invalid operator","@func","33"
635311219522734622,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311219522734622,"Parsed as literal","func"
635311219522734622,"Parsed as literal",""
635311219522734622,"Invalid operator","@func","33"
635311219522744622,"Parsed as literal","@func"
635311219522744622,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311219522744622,"Parsed as literal","superHead"
635311219522744622,"Parsed as literal","list"
635311219522754623,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311219522754623,"Parsed as literal","last"
635311219522754623,"Parsed as literal","list"
635311219522764623,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311219522764623,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311219522764623,"Parsed as literal","foldr"
635311219522764623,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311219522774624,"Parsed as literal","@func"
635311219522774624,"Parsed as literal","list"
635311219522774624,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311219522784625,"Parsed as literal","func"
635311219522784625,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311219522784625,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311219522794625,"Parsed as literal","foldr"
635311219522794625,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311219522794625,"Parsed as literal","@func"
635311219522794625,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311219522804626,"Parsed as literal","superHead"
635311219522804626,"Parsed as literal","list"
635311219522804626,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311219522814626,"Parsed as literal","last"
635311219522814626,"Parsed as literal","list"
635311219522814626,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311219522814626,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311219522824627,"Parsed as literal","superHead"
635311219522824627,"Parsed as literal","list"
635311219522824627,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311219522834627,"Parsed as literal","reverse"
635311219522834627,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311219522834627,"Parsed as literal",""
635311219522834627,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311219522844628,"Parsed as literal","reverse"
635311219522844628,"Parsed as literal","list"
635311219522844628,"StepEvaluate","->","Changed","Declared @map"
635311219522854629,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311219522854629,"StepEvaluate","->","Changed","Declared @map"
635311219522854629,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311219522854629,"StepEvaluate","->","Changed","Declared @filter"
635311219522864629,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311219522864629,"StepEvaluate","->","Changed","Declared @filter"
635311219522864629,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311219522864629,"StepEvaluate","->","Changed","Declared @filter"
635311219522874630,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311219522874630,"StepEvaluate","->","Changed","Declared @call"
635311219522874630,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311219522874630,"StepEvaluate","->","Changed","Declared @curry"
635311219522884630,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311219522884630,"StepEvaluate","->","Changed","Declared @curry"
635311219522884630,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311219522884630,"StepEvaluate","->","Changed","Declared @fold"
635311219522894631,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311219522894631,"StepEvaluate","->","Changed","Declared @fold"
635311219522894631,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311219522894631,"StepEvaluate","->","Changed","Declared @fold"
635311219522904631,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311219522904631,"StepEvaluate","->","Changed","Declared @foldr"
635311219522904631,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311219522904631,"StepEvaluate","->","Changed","Declared @foldr"
635311219522914632,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311219522914632,"StepEvaluate","->","Changed","Declared @foldr"
635311219522914632,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311219522914632,"StepEvaluate","==","Unchanged","=="
635311219522924633,"StepEvaluate","@","Changed","@"
635311219522924633,"StepEvaluate","@","Changed","@"
635311219522924633,"StepEvaluate","==","Unchanged","=="
635311219522924633,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311219522934633,"StepEvaluate","superHead","Unchanged","superHead"
635311219522934633,"StepEvaluate",",","Unchanged",","
635311219522934633,"StepEvaluate","list","Unchanged","list"
635311219522944634,"StepEvaluate","@","Changed","@"
635311219522944634,"StepEvaluate","==","Unchanged","=="
635311219522944634,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311219522944634,"StepEvaluate","superHead","Unchanged","superHead"
635311219522954634,"StepEvaluate",",","Unchanged",","
635311219522954634,"StepEvaluate","list","Unchanged","list"
635311219522954634,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311219522954634,"StepEvaluate","reverse","Unchanged","reverse"
635311219522964635,"StepEvaluate",",","Unchanged",","
635311219522964635,"StepEvaluate","tail","Unchanged","tail"
635311219522964635,"StepEvaluate","@","Changed","@"
635311219522964635,"StepEvaluate","==","Unchanged","=="
635311219522974635,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311219522974635,"StepEvaluate","superHead","Unchanged","superHead"
635311219522974635,"StepEvaluate",",","Unchanged",","
635311219522974635,"StepEvaluate","list","Unchanged","list"
635311219522984636,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311219522984636,"StepEvaluate","reverse","Unchanged","reverse"
635311219522984636,"StepEvaluate",",","Unchanged",","
635311219522984636,"StepEvaluate","tail","Unchanged","tail"
635311219522994637,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311219522994637,"StepEvaluate","reverse","Unchanged","reverse"
635311219522994637,"StepEvaluate",",","Unchanged",","
635311219522994637,"StepEvaluate","list","Unchanged","list"
635311219523004637,"StepEvaluate","[]","Changed","File imported"
635311219523004637,"StepEvaluate","File imported","Unchanged","File imported"
635311219523004637,"StepEvaluate","@","Changed","@"
635311219523004637,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219523014638,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219523014638,"StepEvaluate",",","Unchanged",","
635311219523014638,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219523014638,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219523014638,"StepEvaluate","PAT@-M","Changed","[]"
635311219523024638,"StepEvaluate","SEL@import","Changed","[]"
635311219523024638,"StepEvaluate","@","Changed","[]"
635311219523024638,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311219523034639,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311219523034639,"Parsed as literal","zipWith"
635311219523034639,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311219523034639,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311219523044639,"Parsed as literal","func"
635311219523044639,"Parsed as literal",""
635311219523044639,"Invalid operator","@func","8"
635311219523044639,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311219523054640,"Parsed as literal","func"
635311219523054640,"Parsed as literal",""
635311219523054640,"Invalid operator","@func","8"
635311219523054640,"Parsed as literal","@func"
635311219523064641,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311219523064641,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219523064641,"Parsed as literal",""
635311219523074641,"Parsed as literal",""
635311219523074641,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311219523074641,"Parsed as literal",""
635311219523074641,"Parsed as literal",""
635311219523084642,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311219523084642,"Parsed as literal",""
635311219523084642,"Parsed as literal",""
635311219523084642,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311219523094642,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311219523094642,"Parsed as literal","zipWith"
635311219523094642,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311219523094642,"Parsed as literal","@func"
635311219523104643,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311219523104643,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219523104643,"Parsed as literal",""
635311219523104643,"Parsed as literal",""
635311219523114644,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311219523114644,"Parsed as literal",""
635311219523114644,"Parsed as literal",""
635311219523124644,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311219523124644,"Parsed as literal",""
635311219523124644,"Parsed as literal",""
635311219523124644,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311219523134645,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311219523134645,"Parsed as literal","zipWith"
635311219523134645,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311219523134645,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311219523144645,"Parsed as literal","func"
635311219523144645,"Parsed as literal",""
635311219523144645,"Invalid operator","@func","8"
635311219523144645,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311219523154646,"Parsed as literal","func"
635311219523154646,"Parsed as literal",""
635311219523154646,"Invalid operator","@func","8"
635311219523164646,"Parsed as literal","@func"
635311219523164646,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311219523164646,"Parsed as literal","list1"
635311219523164646,"Parsed as literal","list2"
635311219523174647,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311219523174647,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311219523174647,"Parsed as literal","func"
635311219523184648,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311219523184648,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311219523184648,"Parsed as literal",""
635311219523184648,"Parsed as literal","list1"
635311219523194648,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311219523194648,"Parsed as literal",""
635311219523194648,"Parsed as literal","list2"
635311219523194648,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311219523204649,"Parsed as literal","zipWith"
635311219523204649,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311219523204649,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311219523214649,"Parsed as literal","func"
635311219523214649,"Parsed as literal",""
635311219523214649,"Invalid operator","@func","64"
635311219523214649,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311219523224650,"Parsed as literal","func"
635311219523224650,"Parsed as literal",""
635311219523224650,"Invalid operator","@func","64"
635311219523224650,"Parsed as literal","@func"
635311219523234650,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311219523234650,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311219523234650,"Parsed as literal",""
635311219523234650,"Parsed as literal","list1"
635311219523244651,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311219523244651,"Parsed as literal",""
635311219523244651,"Parsed as literal","list2"
635311219523244651,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311219523254652,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311219523254652,"Parsed as literal","zipWith"
635311219523254652,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311219523254652,"Parsed as literal","@func"
635311219523264652,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311219523264652,"Parsed as literal","list1"
635311219523264652,"Parsed as literal","list2"
635311219523274653,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311219523274653,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311219523274653,"Parsed as literal","func"
635311219523274653,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311219523284653,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311219523284653,"Parsed as literal",""
635311219523284653,"Parsed as literal","list1"
635311219523284653,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311219523294654,"Parsed as literal",""
635311219523294654,"Parsed as literal","list2"
635311219523294654,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311219523294654,"Parsed as literal","zipWith"
635311219523304654,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311219523304654,"Parsed as literal","@func"
635311219523304654,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311219523304654,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311219523314655,"Parsed as literal",""
635311219523314655,"Parsed as literal","list1"
635311219523314655,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311219523314655,"Parsed as literal",""
635311219523324656,"Parsed as literal","list2"
635311219523324656,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311219523324656,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311219523334656,"Parsed as literal","count"
635311219523334656,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219523334656,"Parsed as literal",""
635311219523334656,"Parsed as literal",""
635311219523344657,"Parsed as literal"," 0"
635311219523344657,"Invalid operator","@count([]) -> 0","0"
635311219523344657,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311219523344657,"Parsed as literal","count"
635311219523354657,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219523354657,"Parsed as literal",""
635311219523354657,"Parsed as literal",""
635311219523354657,"Parsed as literal"," 0"
635311219523364658,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311219523364658,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311219523364658,"Parsed as literal","count"
635311219523374658,"Parsed as literal","list"
635311219523374658,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311219523374658,"Parsed as literal"," 1 "
635311219523374658,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311219523384659,"Parsed as literal","count"
635311219523384659,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219523384659,"Parsed as literal",""
635311219523384659,"Parsed as literal","list"
635311219523394660,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311219523394660,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311219523394660,"Parsed as literal","count"
635311219523394660,"Parsed as literal","list"
635311219523404660,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311219523404660,"Parsed as literal"," 1 "
635311219523404660,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311219523404660,"Parsed as literal","count"
635311219523414661,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219523414661,"Parsed as literal",""
635311219523414661,"Parsed as literal","list"
635311219523424661,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311219523424661,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311219523424661,"Parsed as literal","skip"
635311219523424661,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311219523434662,"Parsed as literal","0"
635311219523434662,"Parsed as literal","list"
635311219523434662,"Parsed as literal"," list"
635311219523434662,"Invalid operator","@skip(0,list) -> list","0"
635311219523444662,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311219523444662,"Parsed as literal","skip"
635311219523444662,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311219523444662,"Parsed as literal","0"
635311219523454663,"Parsed as literal","list"
635311219523454663,"Parsed as literal"," list"
635311219523454663,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311219523454663,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311219523464664,"Parsed as literal","skip"
635311219523464664,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219523464664,"Parsed as literal","n"
635311219523474664,"Parsed as literal","list"
635311219523474664,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311219523474664,"Parsed as literal","skip"
635311219523474664,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311219523484665,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219523484665,"Parsed as literal","n"
635311219523484665,"Parsed as literal","1"
635311219523484665,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219523494665,"Parsed as literal",""
635311219523494665,"Parsed as literal","list"
635311219523494665,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311219523494665,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311219523504666,"Parsed as literal","skip"
635311219523504666,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219523504666,"Parsed as literal","n"
635311219523504666,"Parsed as literal","list"
635311219523514666,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311219523514666,"Parsed as literal","skip"
635311219523514666,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311219523514666,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219523524667,"Parsed as literal","n"
635311219523524667,"Parsed as literal","1"
635311219523524667,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219523524667,"Parsed as literal",""
635311219523534668,"Parsed as literal","list"
635311219523534668,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311219523534668,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311219523534668,"Parsed as literal","take"
635311219523544668,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311219523544668,"Parsed as literal","1"
635311219523544668,"Parsed as literal","list"
635311219523544668,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311219523554669,"Parsed as literal"," "
635311219523554669,"Parsed as literal","list"
635311219523554669,"Invalid operator","@take(1,list) -> h:list","0"
635311219523564669,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311219523564669,"Parsed as literal","take"
635311219523564669,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311219523564669,"Parsed as literal","1"
635311219523574670,"Parsed as literal","list"
635311219523574670,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311219523574670,"Parsed as literal"," "
635311219523574670,"Parsed as literal","list"
635311219523584670,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311219523584670,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311219523584670,"Parsed as literal","take"
635311219523584670,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219523594671,"Parsed as literal","n"
635311219523594671,"Parsed as literal","list"
635311219523594671,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311219523604672,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311219523604672,"Parsed as literal"," "
635311219523604672,"Parsed as literal","list "
635311219523604672,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311219523614672,"Parsed as literal","take"
635311219523614672,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311219523614672,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219523614672,"Parsed as literal","n"
635311219523624673,"Parsed as literal","1"
635311219523624673,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311219523624673,"Parsed as literal",""
635311219523634673,"Parsed as literal","list"
635311219523634673,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311219523634673,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311219523634673,"Parsed as literal","take"
635311219523644674,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219523644674,"Parsed as literal","n"
635311219523644674,"Parsed as literal","list"
635311219523644674,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311219523654674,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311219523654674,"Parsed as literal"," "
635311219523654674,"Parsed as literal","list "
635311219523654674,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311219523664675,"Parsed as literal","take"
635311219523664675,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311219523664675,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219523674676,"Parsed as literal","n"
635311219523674676,"Parsed as literal","1"
635311219523674676,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311219523674676,"Parsed as literal",""
635311219523684676,"Parsed as literal","list"
635311219523684676,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311219523684676,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311219523684676,"Parsed as literal","nthItem"
635311219523694677,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311219523694677,"Parsed as literal","list"
635311219523694677,"Parsed as literal","0"
635311219523694677,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219523704677,"Parsed as literal",""
635311219523704677,"Parsed as literal",""
635311219523704677,"Invalid operator","@nthItem(list,0) -> []","0"
635311219523704677,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311219523714678,"Parsed as literal","nthItem"
635311219523714678,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311219523714678,"Parsed as literal","list"
635311219523714678,"Parsed as literal","0"
635311219523724678,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219523724678,"Parsed as literal",""
635311219523744680,"Parsed as literal",""
635311219523744680,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311219523754680,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311219523754680,"Parsed as literal","nthItem"
635311219523754680,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311219523754680,"Parsed as literal","list"
635311219523764681,"Parsed as literal","1"
635311219523764681,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311219523764681,"Parsed as literal"," "
635311219523774681,"Parsed as literal","list"
635311219523774681,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311219523774681,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311219523774681,"Parsed as literal","nthItem"
635311219523784682,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311219523784682,"Parsed as literal","list"
635311219523784682,"Parsed as literal","1"
635311219523784682,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311219523794682,"Parsed as literal"," "
635311219523794682,"Parsed as literal","list"
635311219523794682,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311219523794682,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311219523804683,"Parsed as literal","nthItem"
635311219523804683,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311219523804683,"Parsed as literal","list"
635311219523804683,"Parsed as literal","n"
635311219523814684,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311219523814684,"Parsed as literal","nthItem"
635311219523814684,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311219523824684,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311219523824684,"Parsed as literal",""
635311219523824684,"Parsed as literal","list"
635311219523824684,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311219523834685,"Parsed as literal","n"
635311219523834685,"Parsed as literal","1"
635311219523834685,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311219523834685,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311219523844685,"Parsed as literal","nthItem"
635311219523844685,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311219523844685,"Parsed as literal","list"
635311219523844685,"Parsed as literal","n"
635311219523854686,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311219523854686,"Parsed as literal","nthItem"
635311219523854686,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311219523854686,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311219523864686,"Parsed as literal",""
635311219523864686,"Parsed as literal","list"
635311219523864686,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311219523864686,"Parsed as literal","n"
635311219523874687,"Parsed as literal","1"
635311219523874687,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311219523874687,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311219523884688,"Parsed as literal","makeRange"
635311219523884688,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311219523884688,"Parsed as literal","a"
635311219523884688,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311219523894688,"Parsed as literal","b"
635311219523894688,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311219523894688,"Parsed as literal","a"
635311219523904689,"Parsed as literal","b"
635311219523904689,"Parsed as literal"," a"
635311219523904689,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311219523904689,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311219523914689,"Parsed as literal","makeRange"
635311219523914689,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311219523914689,"Parsed as literal","a"
635311219523914689,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311219523924690,"Parsed as literal","b"
635311219523924690,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311219523924690,"Parsed as literal","a"
635311219523924690,"Parsed as literal","b"
635311219523934690,"Parsed as literal"," a"
635311219523934690,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311219523934690,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311219523944691,"Parsed as literal","makeRange"
635311219523944691,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311219523944691,"Parsed as literal","a"
635311219523944691,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311219523954692,"Parsed as literal","b"
635311219523954692,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311219523954692,"Parsed as literal","a"
635311219523954692,"Parsed as literal","b"
635311219523964692,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311219523964692,"Parsed as literal"," a "
635311219523964692,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311219523974693,"Parsed as literal","makeRange"
635311219523974693,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311219523974693,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311219523974693,"Parsed as literal","a"
635311219523984693,"Parsed as literal","1"
635311219523984693,"Parsed as literal","b"
635311219523984693,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311219523984693,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311219523994694,"Parsed as literal","makeRange"
635311219523994694,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311219523994694,"Parsed as literal","a"
635311219523994694,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311219524004694,"Parsed as literal","b"
635311219524004694,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311219524004694,"Parsed as literal","a"
635311219524004694,"Parsed as literal","b"
635311219524014695,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311219524014695,"Parsed as literal"," a "
635311219524014695,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311219524024696,"Parsed as literal","makeRange"
635311219524024696,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311219524024696,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311219524024696,"Parsed as literal","a"
635311219524034696,"Parsed as literal","1"
635311219524034696,"Parsed as literal","b"
635311219524034696,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311219524034696,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311219524044697,"Parsed as literal","reverse"
635311219524044697,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311219524044697,"Parsed as literal",""
635311219524044697,"Parsed as literal",""
635311219524054697,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311219524054697,"Parsed as literal",""
635311219524054697,"Parsed as literal",""
635311219524054697,"Invalid operator","@reverse([]) -> []","0"
635311219524064698,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311219524064698,"Parsed as literal","reverse"
635311219524064698,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311219524064698,"Parsed as literal",""
635311219524074698,"Parsed as literal",""
635311219524074698,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311219524074698,"Parsed as literal",""
635311219524084699,"Parsed as literal",""
635311219524084699,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311219524084699,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311219524084699,"Parsed as literal","reverse"
635311219524094700,"Parsed as literal","list"
635311219524094700,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311219524094700,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311219524094700,"Parsed as literal","reverse"
635311219524104700,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219524104700,"Parsed as literal",""
635311219524104700,"Parsed as literal","list"
635311219524104700,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311219524114701,"Parsed as literal"," "
635311219524114701,"Parsed as literal","list"
635311219524114701,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311219524124701,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311219524124701,"Parsed as literal","reverse"
635311219524124701,"Parsed as literal","list"
635311219524124701,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311219524134702,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311219524134702,"Parsed as literal","reverse"
635311219524134702,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219524134702,"Parsed as literal",""
635311219524144702,"Parsed as literal","list"
635311219524144702,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311219524144702,"Parsed as literal"," "
635311219524144702,"Parsed as literal","list"
635311219524154703,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311219524154703,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311219524154703,"Parsed as literal","max"
635311219524164704,"Parsed as literal","list"
635311219524164704,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311219524164704,"Parsed as literal","fold"
635311219524164704,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311219524174704,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311219524174704,"Parsed as literal","max"
635311219524174704,"Parsed as literal",""
635311219524174704,"Invalid operator","@max","19"
635311219524184705,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311219524184705,"Parsed as literal","max"
635311219524184705,"Parsed as literal",""
635311219524184705,"Invalid operator","@max","19"
635311219524194705,"Parsed as literal","@max"
635311219524194705,"Parsed as literal","list"
635311219524194705,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311219524204706,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311219524204706,"Parsed as literal","max"
635311219524204706,"Parsed as literal","list"
635311219524204706,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311219524214706,"Parsed as literal","fold"
635311219524214706,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311219524214706,"Parsed as literal","@max"
635311219524214706,"Parsed as literal","list"
635311219524224707,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311219524224707,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311219524224707,"Parsed as literal","elementAt"
635311219524224707,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311219524234708,"Parsed as literal","0"
635311219524234708,"Parsed as literal","list"
635311219524234708,"Parsed as literal"," 'list"
635311219524244708,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311219524244708,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311219524244708,"Parsed as literal","elementAt"
635311219524244708,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311219524254709,"Parsed as literal","n"
635311219524254709,"Parsed as literal","list"
635311219524254709,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311219524254709,"Parsed as literal","elementAt"
635311219524264709,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311219524264709,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219524264709,"Parsed as literal","n"
635311219524264709,"Parsed as literal","1"
635311219524274710,"Parsed as literal","list'"
635311219524274710,"StepEvaluate","->","Changed","Declared @zipWith"
635311219524274710,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311219524284710,"StepEvaluate","->","Changed","Declared @zipWith"
635311219524284710,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311219524284710,"StepEvaluate","->","Changed","Declared @count"
635311219524284710,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311219524294711,"StepEvaluate","->","Changed","Declared @count"
635311219524294711,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311219524294711,"StepEvaluate","->","Changed","Declared @skip"
635311219524294711,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311219524294711,"StepEvaluate","->","Changed","Declared @skip"
635311219524304712,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311219524304712,"StepEvaluate","->","Changed","Declared @take"
635311219524304712,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311219524304712,"StepEvaluate","->","Changed","Declared @take"
635311219524314712,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311219524314712,"StepEvaluate","->","Changed","Declared @nthItem"
635311219524314712,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311219524314712,"StepEvaluate","->","Changed","Declared @nthItem"
635311219524324713,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311219524324713,"StepEvaluate","->","Changed","Declared @nthItem"
635311219524324713,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311219524324713,"StepEvaluate","->","Changed","Declared @makeRange"
635311219524334713,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311219524334713,"StepEvaluate","->","Changed","Declared @makeRange"
635311219524334713,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311219524334713,"StepEvaluate","->","Changed","Declared @reverse"
635311219524344714,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311219524344714,"StepEvaluate","->","Changed","Declared @reverse"
635311219524344714,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311219524344714,"StepEvaluate","->","Changed","Declared @max"
635311219524354714,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311219524354714,"StepEvaluate","==","Unchanged","=="
635311219524354714,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311219524354714,"StepEvaluate","elementAt","Unchanged","elementAt"
635311219524364715,"StepEvaluate",",","Unchanged",","
635311219524364715,"StepEvaluate","0","Unchanged","0"
635311219524364715,"StepEvaluate",",","Unchanged",","
635311219524364715,"StepEvaluate","list","Unchanged","list"
635311219524374716,"StepEvaluate","'list","Unchanged","'list"
635311219524374716,"StepEvaluate","==","Unchanged","=="
635311219524374716,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311219524374716,"StepEvaluate","elementAt","Unchanged","elementAt"
635311219524384716,"StepEvaluate",",","Unchanged",","
635311219524384716,"StepEvaluate","n","Unchanged","n"
635311219524384716,"StepEvaluate",",","Unchanged",","
635311219524384716,"StepEvaluate","list","Unchanged","list"
635311219524394717,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311219524394717,"StepEvaluate","elementAt","Unchanged","elementAt"
635311219524394717,"StepEvaluate",",","Unchanged",","
635311219524394717,"StepEvaluate","-","Unchanged","-"
635311219524404717,"StepEvaluate","n","Unchanged","n"
635311219524404717,"StepEvaluate","1","Unchanged","1"
635311219524404717,"StepEvaluate",",","Unchanged",","
635311219524404717,"StepEvaluate","list'","Unchanged","list'"
635311219524404717,"StepEvaluate","[]","Changed","File imported"
635311219524414718,"StepEvaluate","File imported","Unchanged","File imported"
635311219524414718,"StepEvaluate","@","Changed","@"
635311219524414718,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219524424718,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219524424718,"StepEvaluate",",","Unchanged",","
635311219524424718,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219524424718,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219524434719,"StepEvaluate","PAT@-M","Changed","[]"
635311219524434719,"StepEvaluate","SEL@import","Changed","[]"
635311219524434719,"StepEvaluate","@","Changed","[]"
635311219524444720,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311219524444720,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311219524444720,"Parsed as literal","naturalNumbers"
635311219524444720,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219524454720,"Parsed as literal",""
635311219524454720,"Parsed as literal",""
635311219524454720,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311219524454720,"Parsed as literal","naturalNumbers"
635311219524464721,"Parsed as literal","0"
635311219524464721,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311219524464721,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311219524474721,"Parsed as literal","naturalNumbers"
635311219524474721,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219524474721,"Parsed as literal",""
635311219524474721,"Parsed as literal",""
635311219524484722,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311219524484722,"Parsed as literal","naturalNumbers"
635311219524484722,"Parsed as literal","0"
635311219524494722,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311219524494722,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311219524494722,"Parsed as literal","naturalNumbers"
635311219524494722,"Parsed as literal","n"
635311219524504723,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311219524504723,"Parsed as literal"," n "
635311219524504723,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311219524504723,"Parsed as literal","naturalNumbers"
635311219524514724,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311219524514724,"Parsed as literal","n"
635311219524514724,"Parsed as literal","1"
635311219524524724,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311219524524724,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311219524524724,"Parsed as literal","naturalNumbers"
635311219524524724,"Parsed as literal","n"
635311219524534725,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311219524534725,"Parsed as literal"," n "
635311219524534725,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311219524544725,"Parsed as literal","naturalNumbers"
635311219524544725,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311219524544725,"Parsed as literal","n"
635311219524544725,"Parsed as literal","1"
635311219524554726,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311219524554726,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311219524554726,"Parsed as literal","max"
635311219524554726,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311219524564726,"Parsed as literal","a"
635311219524564726,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311219524564726,"Parsed as literal","b"
635311219524574727,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311219524574727,"Parsed as literal","a"
635311219524574727,"Parsed as literal","b"
635311219524574727,"Parsed as literal","b"
635311219524584728,"Invalid operator","@max(a,b|a<b)->b","0"
635311219524584728,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311219524584728,"Parsed as literal","max"
635311219524584728,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311219524594728,"Parsed as literal","a"
635311219524594728,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311219524594728,"Parsed as literal","b"
635311219524604729,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311219524604729,"Parsed as literal","a"
635311219524604729,"Parsed as literal","b"
635311219524604729,"Parsed as literal","b"
635311219524614729,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311219524614729,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311219524614729,"Parsed as literal","max"
635311219524624730,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219524624730,"Parsed as literal","a"
635311219524624730,"Parsed as literal","b"
635311219524624730,"Parsed as literal","a"
635311219524634730,"Invalid operator","@max(a,b)->a","0"
635311219524634730,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311219524634730,"Parsed as literal","max"
635311219524634730,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219524644731,"Parsed as literal","a"
635311219524644731,"Parsed as literal","b"
635311219524644731,"Parsed as literal","a"
635311219524654732,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311219524654732,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311219524654732,"Parsed as literal","random"
635311219524664732,"Parsed as literal","0"
635311219524664732,"Parsed as literal"," 0"
635311219524664732,"Invalid operator","@random(0) -> 0","0"
635311219524664732,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311219524674733,"Parsed as literal","random"
635311219524674733,"Parsed as literal","0"
635311219524674733,"Parsed as literal"," 0"
635311219524684733,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311219524684733,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311219524684733,"Parsed as literal","random"
635311219524684733,"Parsed as literal","n"
635311219524694734,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311219524694734,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311219524694734,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311219524704734,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311219524704734,"Parsed as literal","1664525 "
635311219524704734,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311219524704734,"Parsed as literal","random"
635311219524714735,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219524714735,"Parsed as literal","n"
635311219524714735,"Parsed as literal","1"
635311219524724736,"Parsed as literal"," 1013904223"
635311219524724736,"Parsed as literal",""
635311219524724736,"Parsed as literal"," 4294967296"
635311219524724736,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311219524734736,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311219524734736,"Parsed as literal","random"
635311219524734736,"Parsed as literal","n"
635311219524734736,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311219524744737,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311219524744737,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311219524744737,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311219524754737,"Parsed as literal","1664525 "
635311219524754737,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311219524754737,"Parsed as literal","random"
635311219524754737,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219524764738,"Parsed as literal","n"
635311219524764738,"Parsed as literal","1"
635311219524764738,"Parsed as literal"," 1013904223"
635311219524774738,"Parsed as literal",""
635311219524774738,"Parsed as literal"," 4294967296"
635311219524774738,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311219524774738,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311219524784739,"Parsed as literal","gcd"
635311219524784739,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311219524784739,"Parsed as literal","a"
635311219524794740,"Parsed as literal","0"
635311219524794740,"Parsed as literal"," a"
635311219524794740,"Invalid operator","@gcd(a,0) -> a","0"
635311219524804740,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311219524804740,"Parsed as literal","gcd"
635311219524804740,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311219524814741,"Parsed as literal","a"
635311219524814741,"Parsed as literal","0"
635311219524814741,"Parsed as literal"," a"
635311219524814741,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311219524824741,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311219524824741,"Parsed as literal","gcd"
635311219524824741,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219524834742,"Parsed as literal","a"
635311219524834742,"Parsed as literal","b"
635311219524834742,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311219524834742,"Parsed as literal","gcd"
635311219524844742,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311219524844742,"Parsed as literal","b"
635311219524844742,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311219524854743,"Parsed as literal","a "
635311219524854743,"Parsed as literal"," b"
635311219524854743,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311219524854743,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311219524864744,"Parsed as literal","gcd"
635311219524864744,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219524864744,"Parsed as literal","a"
635311219524864744,"Parsed as literal","b"
635311219524874744,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311219524874744,"Parsed as literal","gcd"
635311219524874744,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311219524884745,"Parsed as literal","b"
635311219524884745,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311219524884745,"Parsed as literal","a "
635311219524884745,"Parsed as literal"," b"
635311219524894745,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311219524894745,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311219524894745,"Parsed as literal","gcd"
635311219524904746,"Parsed as literal","list"
635311219524904746,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311219524904746,"Parsed as literal","fold"
635311219524904746,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311219524914746,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311219524914746,"Parsed as literal","gcd"
635311219524914746,"Parsed as literal",""
635311219524914746,"Invalid operator","@gcd","19"
635311219524924747,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311219524924747,"Parsed as literal","gcd"
635311219524924747,"Parsed as literal",""
635311219524924747,"Invalid operator","@gcd","19"
635311219524934748,"Parsed as literal","@gcd"
635311219524934748,"Parsed as literal","list"
635311219524934748,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311219524944748,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311219524944748,"Parsed as literal","gcd"
635311219524944748,"Parsed as literal","list"
635311219524944748,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311219524954749,"Parsed as literal","fold"
635311219524954749,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311219524954749,"Parsed as literal","@gcd"
635311219524964749,"Parsed as literal","list"
635311219524964749,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311219524964749,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311219524964749,"Parsed as literal","fib"
635311219524974750,"Parsed as literal","0"
635311219524974750,"Parsed as literal"," 1"
635311219524974750,"Invalid operator","@fib(0) -> 1","0"
635311219524984750,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311219524984750,"Parsed as literal","fib"
635311219524984750,"Parsed as literal","0"
635311219524994751,"Parsed as literal"," 1"
635311219524994751,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311219524994751,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311219524994751,"Parsed as literal","fib"
635311219525004752,"Parsed as literal","1"
635311219525004752,"Parsed as literal"," 1"
635311219525004752,"Invalid operator","@fib(1) -> 1","0"
635311219525004752,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311219525004752,"Parsed as literal","fib"
635311219525014752,"Parsed as literal","1"
635311219525014752,"Parsed as literal"," 1"
635311219525014752,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311219525024753,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311219525024753,"Parsed as literal","fib"
635311219525024753,"Parsed as literal","n"
635311219525024753,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311219525034753,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311219525034753,"Parsed as literal","fib"
635311219525034753,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311219525034753,"Parsed as literal","n"
635311219525044754,"Parsed as literal","2"
635311219525044754,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311219525044754,"Parsed as literal","fib"
635311219525054754,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219525054754,"Parsed as literal","n"
635311219525054754,"Parsed as literal","1"
635311219525054754,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311219525064755,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311219525064755,"Parsed as literal","fib"
635311219525064755,"Parsed as literal","n"
635311219525064755,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311219525074756,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311219525074756,"Parsed as literal","fib"
635311219525074756,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311219525074756,"Parsed as literal","n"
635311219525084756,"Parsed as literal","2"
635311219525084756,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311219525084756,"Parsed as literal","fib"
635311219525084756,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219525094757,"Parsed as literal","n"
635311219525094757,"Parsed as literal","1"
635311219525094757,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219525104757,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311219525104757,"Parsed as literal","fib2"
635311219525104757,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311219525104757,"Parsed as literal",""
635311219525114758,"Parsed as literal",""
635311219525114758,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219525114758,"Parsed as literal"," 0 "
635311219525124758,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219525124758,"Parsed as literal"," 1 "
635311219525124758,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311219525124758,"Parsed as literal","zipWith"
635311219525134759,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311219525134759,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311219525134759,"Parsed as literal",""
635311219525134759,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219525144760,"Parsed as literal","a"
635311219525144760,"Parsed as literal","b"
635311219525144760,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311219525154760,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219525154760,"Parsed as literal","a"
635311219525154760,"Parsed as literal","b"
635311219525154760,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219525164761,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219525164761,"Parsed as literal","fib2"
635311219525164761,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219525164761,"Parsed as literal",""
635311219525174761,"Parsed as literal",""
635311219525174761,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219525174761,"Parsed as literal"," "
635311219525184762,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219525184762,"Parsed as literal","fib2"
635311219525184762,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219525184762,"Parsed as literal",""
635311219525194762,"Parsed as literal",""
635311219525194762,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311219525194762,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311219525194762,"Parsed as literal",""
635311219525204763,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219525204763,"Parsed as literal","a"
635311219525204763,"Parsed as literal","b"
635311219525204763,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311219525214764,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219525214764,"Parsed as literal","a"
635311219525214764,"Parsed as literal","b"
635311219525214764,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219525224764,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219525224764,"Parsed as literal","fib2"
635311219525224764,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219525224764,"Parsed as literal",""
635311219525234765,"Parsed as literal",""
635311219525234765,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219525234765,"Parsed as literal"," "
635311219525234765,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219525244765,"Parsed as literal","fib2"
635311219525244765,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219525244765,"Parsed as literal",""
635311219525244765,"Parsed as literal",""
635311219525254766,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311219525254766,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311219525254766,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311219525264766,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311219525264766,"Parsed as literal",""
635311219525264766,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219525264766,"Parsed as literal","a"
635311219525274767,"Parsed as literal","b"
635311219525274767,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219525274767,"Parsed as literal","a"
635311219525274767,"Parsed as literal","b"
635311219525284768,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219525284768,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219525284768,"Parsed as literal","fib2"
635311219525294768,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219525294768,"Parsed as literal",""
635311219525294768,"Parsed as literal",""
635311219525294768,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219525304769,"Parsed as literal"," "
635311219525304769,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219525304769,"Parsed as literal","fib2"
635311219525304769,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219525314769,"Parsed as literal",""
635311219525314769,"Parsed as literal",""
635311219525314769,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311219525314769,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311219525324770,"Parsed as literal","fib2"
635311219525324770,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311219525324770,"Parsed as literal",""
635311219525324770,"Parsed as literal",""
635311219525334770,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219525334770,"Parsed as literal"," 0 "
635311219525334770,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219525344771,"Parsed as literal"," 1 "
635311219525344771,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311219525344771,"Parsed as literal","zipWith"
635311219525344771,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311219525354772,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311219525354772,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311219525354772,"Parsed as literal",""
635311219525364772,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219525364772,"Parsed as literal","a"
635311219525364772,"Parsed as literal","b"
635311219525364772,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219525374773,"Parsed as literal","a"
635311219525374773,"Parsed as literal","b"
635311219525374773,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219525374773,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219525384773,"Parsed as literal","fib2"
635311219525384773,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219525384773,"Parsed as literal",""
635311219525384773,"Parsed as literal",""
635311219525394774,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219525394774,"Parsed as literal"," "
635311219525394774,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219525394774,"Parsed as literal","fib2"
635311219525404774,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219525404774,"Parsed as literal",""
635311219525404774,"Parsed as literal",""
635311219525414775,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311219525414775,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311219525414775,"Parsed as literal","fib2"
635311219525414775,"Parsed as literal","n"
635311219525424776,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311219525424776,"Parsed as literal","take"
635311219525424776,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311219525424776,"Parsed as literal","n"
635311219525434776,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311219525434776,"Parsed as literal","fib2"
635311219525434776,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219525434776,"Parsed as literal",""
635311219525444777,"Parsed as literal",""
635311219525444777,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311219525444777,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311219525444777,"Parsed as literal","fib2"
635311219525454777,"Parsed as literal","n"
635311219525454777,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311219525454777,"Parsed as literal","take"
635311219525464778,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311219525464778,"Parsed as literal","n"
635311219525464778,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311219525464778,"Parsed as literal","fib2"
635311219525474778,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219525474778,"Parsed as literal",""
635311219525474778,"Parsed as literal",""
635311219525474778,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311219525484779,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311219525484779,"Parsed as literal","fac"
635311219525484779,"Parsed as literal","0"
635311219525484779,"Parsed as literal"," 1"
635311219525494780,"Invalid operator","@fac(0) -> 1","0"
635311219525494780,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311219525494780,"Parsed as literal","fac"
635311219525494780,"Parsed as literal","0"
635311219525504780,"Parsed as literal"," 1"
635311219525504780,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311219525504780,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311219525514781,"Parsed as literal","fac"
635311219525514781,"Parsed as literal","n"
635311219525514781,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311219525514781,"Parsed as literal"," n "
635311219525524781,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311219525524781,"Parsed as literal","fac"
635311219525524781,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311219525524781,"Parsed as literal","n"
635311219525534782,"Parsed as literal","1"
635311219525534782,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311219525534782,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311219525534782,"Parsed as literal","fac"
635311219525544782,"Parsed as literal","n"
635311219525544782,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311219525544782,"Parsed as literal"," n "
635311219525554783,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311219525554783,"Parsed as literal","fac"
635311219525554783,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311219525554783,"Parsed as literal","n"
635311219525554783,"Parsed as literal","1"
635311219525564784,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311219525564784,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311219525564784,"Parsed as literal","pow"
635311219525574784,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311219525574784,"Parsed as literal","num"
635311219525574784,"Parsed as literal","0"
635311219525574784,"Parsed as literal"," 1"
635311219525584785,"Invalid operator","@pow(num,0) -> 1","0"
635311219525584785,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311219525584785,"Parsed as literal","pow"
635311219525584785,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311219525594785,"Parsed as literal","num"
635311219525594785,"Parsed as literal","0"
635311219525594785,"Parsed as literal"," 1"
635311219525604786,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311219525604786,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311219525604786,"Parsed as literal","pow"
635311219525604786,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311219525614787,"Parsed as literal","num"
635311219525614787,"Parsed as literal","1"
635311219525614787,"Parsed as literal"," num"
635311219525614787,"Invalid operator","@pow(num,1) -> num","0"
635311219525624787,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311219525624787,"Parsed as literal","pow"
635311219525624787,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311219525624787,"Parsed as literal","num"
635311219525634788,"Parsed as literal","1"
635311219525634788,"Parsed as literal"," num"
635311219525644788,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311219525644788,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311219525644788,"Parsed as literal","pow"
635311219525644788,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311219525654789,"Parsed as literal","num"
635311219525654789,"Parsed as literal"," power"
635311219525654789,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311219525654789,"Parsed as literal"," num "
635311219525664789,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311219525664789,"Parsed as literal","pow"
635311219525664789,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311219525664789,"Parsed as literal","num"
635311219525674790,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311219525674790,"Parsed as literal","power"
635311219525674790,"Parsed as literal","1"
635311219525684791,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311219525684791,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311219525684791,"Parsed as literal","pow"
635311219525684791,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311219525694791,"Parsed as literal","num"
635311219525694791,"Parsed as literal"," power"
635311219525694791,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311219525694791,"Parsed as literal"," num "
635311219525704792,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311219525704792,"Parsed as literal","pow"
635311219525704792,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311219525704792,"Parsed as literal","num"
635311219525714792,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311219525714792,"Parsed as literal","power"
635311219525714792,"Parsed as literal","1"
635311219525714792,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311219525724793,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311219525724793,"Parsed as literal","upArrow"
635311219525724793,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311219525724793,"Parsed as literal","a"
635311219525734793,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311219525734793,"Parsed as literal","b"
635311219525734793,"Parsed as literal","1"
635311219525744794,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311219525744794,"Parsed as literal","pow"
635311219525744794,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311219525744794,"Parsed as literal","a"
635311219525754795,"Parsed as literal","b"
635311219525754795,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311219525754795,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311219525754795,"Parsed as literal","upArrow"
635311219525764795,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311219525764795,"Parsed as literal","a"
635311219525764795,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311219525764795,"Parsed as literal","b"
635311219525774796,"Parsed as literal","1"
635311219525774796,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311219525774796,"Parsed as literal","pow"
635311219525774796,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311219525784796,"Parsed as literal","a"
635311219525784796,"Parsed as literal","b"
635311219525784796,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311219525794797,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311219525794797,"Parsed as literal","upArrow"
635311219525794797,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311219525794797,"Parsed as literal","a"
635311219525804797,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311219525804797,"Parsed as literal","1"
635311219525804797,"Parsed as literal","n"
635311219525804797,"Parsed as literal"," a"
635311219525814798,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311219525814798,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311219525814798,"Parsed as literal","upArrow"
635311219525814798,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311219525824799,"Parsed as literal","a"
635311219525824799,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311219525824799,"Parsed as literal","1"
635311219525824799,"Parsed as literal","n"
635311219525834799,"Parsed as literal"," a"
635311219525834799,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311219525834799,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311219525844800,"Parsed as literal","upArrow"
635311219525844800,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311219525844800,"Parsed as literal","a"
635311219525844800,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311219525854800,"Parsed as literal","b"
635311219525854800,"Parsed as literal","n"
635311219525854800,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311219525854800,"Parsed as literal","upArrow"
635311219525864801,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311219525864801,"Parsed as literal","a"
635311219525864801,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311219525864801,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311219525874801,"Parsed as literal","upArrow"
635311219525874801,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311219525874801,"Parsed as literal","a"
635311219525874801,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311219525884802,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311219525884802,"Parsed as literal","b"
635311219525884802,"Parsed as literal","1"
635311219525884802,"Parsed as literal","n"
635311219525894803,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311219525894803,"Parsed as literal","n"
635311219525894803,"Parsed as literal","1"
635311219525904803,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311219525904803,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311219525904803,"Parsed as literal","upArrow"
635311219525904803,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311219525914804,"Parsed as literal","a"
635311219525914804,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311219525914804,"Parsed as literal","b"
635311219525914804,"Parsed as literal","n"
635311219525924804,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311219525924804,"Parsed as literal","upArrow"
635311219525924804,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311219525924804,"Parsed as literal","a"
635311219525934805,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311219525934805,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311219525934805,"Parsed as literal","upArrow"
635311219525934805,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311219525944805,"Parsed as literal","a"
635311219525944805,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311219525944805,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311219525944805,"Parsed as literal","b"
635311219525954806,"Parsed as literal","1"
635311219525954806,"Parsed as literal","n"
635311219525954806,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311219525954806,"Parsed as literal","n"
635311219525964807,"Parsed as literal","1"
635311219525964807,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311219525964807,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311219525974807,"Parsed as literal","graham"
635311219525974807,"Parsed as literal","0"
635311219525974807,"Parsed as literal"," 4"
635311219525974807,"Invalid operator","@graham(0) -> 4","0"
635311219525984808,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311219525984808,"Parsed as literal","graham"
635311219525984808,"Parsed as literal","0"
635311219525984808,"Parsed as literal"," 4"
635311219525994808,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311219525994808,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311219525994808,"Parsed as literal","graham"
635311219526004809,"Parsed as literal","n"
635311219526004809,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311219526004809,"Parsed as literal","upArrow"
635311219526004809,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311219526014809,"Parsed as literal","3"
635311219526014809,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311219526014809,"Parsed as literal","3"
635311219526014809,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311219526024810,"Parsed as literal","graham"
635311219526024810,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311219526024810,"Parsed as literal","n"
635311219526024810,"Parsed as literal","1"
635311219526034811,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311219526034811,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311219526034811,"Parsed as literal","graham"
635311219526034811,"Parsed as literal","n"
635311219526044811,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311219526044811,"Parsed as literal","upArrow"
635311219526044811,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311219526054812,"Parsed as literal","3"
635311219526054812,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311219526054812,"Parsed as literal","3"
635311219526054812,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311219526064812,"Parsed as literal","graham"
635311219526064812,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311219526064812,"Parsed as literal","n"
635311219526064812,"Parsed as literal","1"
635311219526074813,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311219526074813,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311219526074813,"Parsed as literal","grahamsNumber"
635311219526084813,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219526084813,"Parsed as literal",""
635311219526084813,"Parsed as literal",""
635311219526084813,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311219526094814,"Parsed as literal","graham"
635311219526094814,"Parsed as literal","64"
635311219526094814,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311219526094814,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311219526104815,"Parsed as literal","grahamsNumber"
635311219526104815,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219526104815,"Parsed as literal",""
635311219526104815,"Parsed as literal",""
635311219526114815,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311219526114815,"Parsed as literal","graham"
635311219526114815,"Parsed as literal","64"
635311219526114815,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311219526124816,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311219526124816,"Parsed as literal","ack"
635311219526124816,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311219526124816,"Parsed as literal","0"
635311219526134816,"Parsed as literal","n"
635311219526134816,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311219526134816,"Parsed as literal"," n "
635311219526144817,"Parsed as literal"," 1"
635311219526144817,"Invalid operator","@ack(0,n) -> n + 1","0"
635311219526144817,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311219526144817,"Parsed as literal","ack"
635311219526154817,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311219526154817,"Parsed as literal","0"
635311219526154817,"Parsed as literal","n"
635311219526154817,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311219526164818,"Parsed as literal"," n "
635311219526164818,"Parsed as literal"," 1"
635311219526164818,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311219526174819,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311219526174819,"Parsed as literal","ack"
635311219526174819,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311219526174819,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311219526184819,"Parsed as literal","m"
635311219526184819,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311219526184819,"Parsed as literal","m"
635311219526184819,"Parsed as literal","0"
635311219526194820,"Parsed as literal","0"
635311219526194820,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311219526194820,"Parsed as literal","ack"
635311219526194820,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311219526204820,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311219526204820,"Parsed as literal","m"
635311219526204820,"Parsed as literal","1"
635311219526204820,"Parsed as literal","1"
635311219526214821,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311219526214821,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311219526214821,"Parsed as literal","ack"
635311219526214821,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311219526224821,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311219526224821,"Parsed as literal","m"
635311219526224821,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311219526224821,"Parsed as literal","m"
635311219526234822,"Parsed as literal","0"
635311219526234822,"Parsed as literal","0"
635311219526234822,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311219526234822,"Parsed as literal","ack"
635311219526244823,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311219526244823,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311219526244823,"Parsed as literal","m"
635311219526244823,"Parsed as literal","1"
635311219526254823,"Parsed as literal","1"
635311219526254823,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311219526254823,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311219526264824,"Parsed as literal","ack"
635311219526264824,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311219526264824,"Parsed as literal","m"
635311219526264824,"Parsed as literal","n"
635311219526274824,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311219526274824,"Parsed as literal","ack"
635311219526274824,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311219526284825,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311219526284825,"Parsed as literal","m"
635311219526284825,"Parsed as literal","1"
635311219526284825,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311219526294825,"Parsed as literal","ack"
635311219526294825,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311219526294825,"Parsed as literal","m"
635311219526294825,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219526294825,"Parsed as literal","n"
635311219526304826,"Parsed as literal","1"
635311219526304826,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311219526304826,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311219526314827,"Parsed as literal","ack"
635311219526314827,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311219526314827,"Parsed as literal","m"
635311219526314827,"Parsed as literal","n"
635311219526324827,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311219526324827,"Parsed as literal","ack"
635311219526324827,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311219526324827,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311219526334828,"Parsed as literal","m"
635311219526334828,"Parsed as literal","1"
635311219526334828,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311219526334828,"Parsed as literal","ack"
635311219526344828,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311219526344828,"Parsed as literal","m"
635311219526344828,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219526344828,"Parsed as literal","n"
635311219526354829,"Parsed as literal","1"
635311219526354829,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311219526354829,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311219526364829,"Parsed as literal","acker"
635311219526364829,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311219526364829,"Parsed as literal","m"
635311219526364829,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311219526374830,"Parsed as literal","n"
635311219526374830,"Parsed as literal","0"
635311219526374830,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311219526374830,"Parsed as literal"," m"
635311219526384831,"Parsed as literal","n"
635311219526384831,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311219526384831,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311219526384831,"Parsed as literal","acker"
635311219526394831,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311219526394831,"Parsed as literal","m"
635311219526394831,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311219526394831,"Parsed as literal","n"
635311219526404832,"Parsed as literal","0"
635311219526404832,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311219526404832,"Parsed as literal"," m"
635311219526404832,"Parsed as literal","n"
635311219526414832,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311219526414832,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311219526414832,"Parsed as literal","acker"
635311219526424833,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311219526424833,"Parsed as literal","m"
635311219526424833,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311219526424833,"Parsed as literal","0"
635311219526434833,"Parsed as literal","1"
635311219526434833,"Parsed as literal"," 0"
635311219526434833,"Invalid operator","@acker(m,0,1) -> 0","0"
635311219526434833,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311219526444834,"Parsed as literal","acker"
635311219526444834,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311219526444834,"Parsed as literal","m"
635311219526444834,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311219526454835,"Parsed as literal","0"
635311219526454835,"Parsed as literal","1"
635311219526454835,"Parsed as literal"," 0"
635311219526464835,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311219526464835,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311219526464835,"Parsed as literal","acker"
635311219526464835,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311219526474836,"Parsed as literal","m"
635311219526474836,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311219526474836,"Parsed as literal","0"
635311219526474836,"Parsed as literal","2"
635311219526484836,"Parsed as literal"," 1"
635311219526484836,"Invalid operator","@acker(m,0,2) -> 1","0"
635311219526484836,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311219526484836,"Parsed as literal","acker"
635311219526494837,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311219526494837,"Parsed as literal","m"
635311219526494837,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311219526494837,"Parsed as literal","0"
635311219526504837,"Parsed as literal","2"
635311219526504837,"Parsed as literal"," 1"
635311219526504837,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311219526514838,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311219526514838,"Parsed as literal","acker"
635311219526514838,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311219526524839,"Parsed as literal","m"
635311219526524839,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311219526524839,"Parsed as literal","0"
635311219526524839,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311219526534839,"Parsed as literal","p"
635311219526534839,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311219526534839,"Parsed as literal","p"
635311219526534839,"Parsed as literal","2"
635311219526544840,"Parsed as literal"," m"
635311219526544840,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311219526544840,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311219526554840,"Parsed as literal","acker"
635311219526554840,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311219526554840,"Parsed as literal","m"
635311219526554840,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311219526564841,"Parsed as literal","0"
635311219526564841,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311219526564841,"Parsed as literal","p"
635311219526564841,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311219526574841,"Parsed as literal","p"
635311219526574841,"Parsed as literal","2"
635311219526574841,"Parsed as literal"," m"
635311219526584842,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311219526584842,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311219526584842,"Parsed as literal","acker"
635311219526584842,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311219526594843,"Parsed as literal","m"
635311219526594843,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311219526594843,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311219526594843,"Parsed as literal","n"
635311219526604843,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311219526604843,"Parsed as literal","n"
635311219526604843,"Parsed as literal","0"
635311219526604843,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311219526614844,"Parsed as literal","p"
635311219526614844,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311219526614844,"Parsed as literal","p"
635311219526614844,"Parsed as literal","0"
635311219526624844,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311219526624844,"Parsed as literal","acker"
635311219526624844,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311219526634845,"Parsed as literal","m"
635311219526634845,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311219526634845,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311219526634845,"Parsed as literal","acker"
635311219526644845,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311219526644845,"Parsed as literal","m"
635311219526644845,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311219526644845,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311219526654846,"Parsed as literal","n"
635311219526654846,"Parsed as literal","1"
635311219526654846,"Parsed as literal","p"
635311219526654846,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311219526664847,"Parsed as literal","p"
635311219526664847,"Parsed as literal","1"
635311219526664847,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311219526674847,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311219526674847,"Parsed as literal","acker"
635311219526674847,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311219526674847,"Parsed as literal","m"
635311219526684848,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311219526684848,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311219526684848,"Parsed as literal","n"
635311219526684848,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311219526694848,"Parsed as literal","n"
635311219526694848,"Parsed as literal","0"
635311219526694848,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311219526694848,"Parsed as literal","p"
635311219526704849,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311219526704849,"Parsed as literal","p"
635311219526704849,"Parsed as literal","0"
635311219526704849,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311219526714849,"Parsed as literal","acker"
635311219526714849,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311219526714849,"Parsed as literal","m"
635311219526724850,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311219526724850,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311219526724850,"Parsed as literal","acker"
635311219526724850,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311219526734851,"Parsed as literal","m"
635311219526734851,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311219526734851,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311219526734851,"Parsed as literal","n"
635311219526744851,"Parsed as literal","1"
635311219526744851,"Parsed as literal","p"
635311219526744851,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311219526744851,"Parsed as literal","p"
635311219526754852,"Parsed as literal","1"
635311219526754852,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311219526754852,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311219526754852,"Parsed as literal","hyper"
635311219526764852,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311219526764852,"Parsed as literal","0"
635311219526764852,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219526764852,"Parsed as literal","a"
635311219526774853,"Parsed as literal","b"
635311219526774853,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311219526774853,"Parsed as literal"," b"
635311219526784853,"Parsed as literal","1"
635311219526784853,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311219526784853,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311219526784853,"Parsed as literal","hyper"
635311219526794854,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311219526794854,"Parsed as literal","0"
635311219526794854,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219526794854,"Parsed as literal","a"
635311219526804855,"Parsed as literal","b"
635311219526804855,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311219526804855,"Parsed as literal"," b"
635311219526814855,"Parsed as literal","1"
635311219526814855,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311219526814855,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311219526814855,"Parsed as literal","hyper"
635311219526824856,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311219526824856,"Parsed as literal","1"
635311219526824856,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219526824856,"Parsed as literal","a"
635311219526834856,"Parsed as literal","0"
635311219526834856,"Parsed as literal"," a"
635311219526834856,"Invalid operator","@hyper(1,a,0) -> a","0"
635311219526834856,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311219526844857,"Parsed as literal","hyper"
635311219526844857,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311219526844857,"Parsed as literal","1"
635311219526844857,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219526854857,"Parsed as literal","a"
635311219526854857,"Parsed as literal","0"
635311219526854857,"Parsed as literal"," a"
635311219526864858,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311219526864858,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311219526864858,"Parsed as literal","hyper"
635311219526864858,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311219526874859,"Parsed as literal","2"
635311219526874859,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219526874859,"Parsed as literal","a"
635311219526874859,"Parsed as literal","0"
635311219526884859,"Parsed as literal"," 0"
635311219526884859,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311219526884859,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311219526884859,"Parsed as literal","hyper"
635311219526894860,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311219526894860,"Parsed as literal","2"
635311219526894860,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219526894860,"Parsed as literal","a"
635311219526904860,"Parsed as literal","0"
635311219526904860,"Parsed as literal"," 0"
635311219526904860,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311219526904860,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311219526914861,"Parsed as literal","hyper"
635311219526914861,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311219526914861,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311219526914861,"Parsed as literal","n"
635311219526924861,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311219526924861,"Parsed as literal","n"
635311219526924861,"Parsed as literal","2"
635311219526924861,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311219526934862,"Parsed as literal","a"
635311219526934862,"Parsed as literal","0"
635311219526934862,"Parsed as literal"," 1"
635311219526944863,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311219526944863,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311219526944863,"Parsed as literal","hyper"
635311219526944863,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311219526954863,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311219526954863,"Parsed as literal","n"
635311219526954863,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311219526954863,"Parsed as literal","n"
635311219526964864,"Parsed as literal","2"
635311219526964864,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311219526964864,"Parsed as literal","a"
635311219526964864,"Parsed as literal","0"
635311219526974864,"Parsed as literal"," 1"
635311219526974864,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311219526974864,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311219526984865,"Parsed as literal","hyper"
635311219526984865,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311219526984865,"Parsed as literal","n"
635311219526984865,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219526994865,"Parsed as literal","a"
635311219526994865,"Parsed as literal","b"
635311219526994865,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311219526994865,"Parsed as literal","hyper"
635311219527004866,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311219527004866,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311219527004866,"Parsed as literal","n"
635311219527004866,"Parsed as literal","1"
635311219527014867,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311219527014867,"Parsed as literal","a"
635311219527014867,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311219527014867,"Parsed as literal","hyper"
635311219527024867,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311219527024867,"Parsed as literal","n"
635311219527024867,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311219527024867,"Parsed as literal","a"
635311219527034868,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311219527034868,"Parsed as literal","b"
635311219527034868,"Parsed as literal","1"
635311219527034868,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311219527044868,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311219527044868,"Parsed as literal","hyper"
635311219527044868,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311219527054869,"Parsed as literal","n"
635311219527054869,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219527054869,"Parsed as literal","a"
635311219527054869,"Parsed as literal","b"
635311219527064869,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311219527064869,"Parsed as literal","hyper"
635311219527064869,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311219527064869,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311219527074870,"Parsed as literal","n"
635311219527074870,"Parsed as literal","1"
635311219527074870,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311219527074870,"Parsed as literal","a"
635311219527084871,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311219527084871,"Parsed as literal","hyper"
635311219527084871,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311219527084871,"Parsed as literal","n"
635311219527094871,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311219527094871,"Parsed as literal","a"
635311219527094871,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311219527094871,"Parsed as literal","b"
635311219527104872,"Parsed as literal","1"
635311219527104872,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311219527104872,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311219527114872,"Parsed as literal","sudan"
635311219527114872,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311219527114872,"Parsed as literal","0"
635311219527114872,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219527124873,"Parsed as literal","x"
635311219527124873,"Parsed as literal","y"
635311219527124873,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311219527124873,"Parsed as literal"," x "
635311219527134873,"Parsed as literal"," y"
635311219527134873,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311219527134873,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311219527134873,"Parsed as literal","sudan"
635311219527144874,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311219527144874,"Parsed as literal","0"
635311219527144874,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219527144874,"Parsed as literal","x"
635311219527154875,"Parsed as literal","y"
635311219527154875,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311219527154875,"Parsed as literal"," x "
635311219527154875,"Parsed as literal"," y"
635311219527164875,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311219527164875,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311219527164875,"Parsed as literal","sudan"
635311219527174876,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311219527174876,"Parsed as literal","n"
635311219527174876,"Parsed as literal","0"
635311219527174876,"Parsed as literal"," x"
635311219527184876,"Invalid operator","@sudan(n,0) -> x","0"
635311219527184876,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311219527184876,"Parsed as literal","sudan"
635311219527184876,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311219527194877,"Parsed as literal","n"
635311219527194877,"Parsed as literal","0"
635311219527194877,"Parsed as literal"," x"
635311219527204877,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311219527204877,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311219527204877,"Parsed as literal","sudan"
635311219527204877,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311219527214878,"Parsed as literal","n"
635311219527214878,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219527214878,"Parsed as literal","x"
635311219527214878,"Parsed as literal","y"
635311219527224879,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219527224879,"Parsed as literal","sudan"
635311219527224879,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219527234879,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219527234879,"Parsed as literal","n"
635311219527234879,"Parsed as literal","1"
635311219527234879,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311219527244880,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311219527244880,"Parsed as literal","sudan"
635311219527244880,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311219527244880,"Parsed as literal","n"
635311219527254880,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311219527254880,"Parsed as literal","x"
635311219527254880,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311219527254880,"Parsed as literal","y"
635311219527264881,"Parsed as literal","1"
635311219527264881,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311219527264881,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311219527264881,"Parsed as literal","sudan"
635311219527274881,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311219527274881,"Parsed as literal","n"
635311219527274881,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311219527274881,"Parsed as literal","x"
635311219527284882,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311219527284882,"Parsed as literal","y"
635311219527284882,"Parsed as literal","1"
635311219527284882,"Parsed as literal","y"
635311219527294883,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311219527294883,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311219527294883,"Parsed as literal","sudan"
635311219527304883,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311219527304883,"Parsed as literal","n"
635311219527304883,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219527304883,"Parsed as literal","x"
635311219527314884,"Parsed as literal","y"
635311219527314884,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219527314884,"Parsed as literal","sudan"
635311219527324884,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219527324884,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219527324884,"Parsed as literal","n"
635311219527324884,"Parsed as literal","1"
635311219527334885,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311219527334885,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311219527334885,"Parsed as literal","sudan"
635311219527334885,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311219527344885,"Parsed as literal","n"
635311219527344885,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311219527344885,"Parsed as literal","x"
635311219527344885,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311219527354886,"Parsed as literal","y"
635311219527354886,"Parsed as literal","1"
635311219527354886,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311219527354886,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311219527364887,"Parsed as literal","sudan"
635311219527364887,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311219527364887,"Parsed as literal","n"
635311219527364887,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311219527374887,"Parsed as literal","x"
635311219527374887,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311219527374887,"Parsed as literal","y"
635311219527374887,"Parsed as literal","1"
635311219527384888,"Parsed as literal","y"
635311219527384888,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311219527394888,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311219527394888,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311219527394888,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311219527394888,"StepEvaluate","->","Changed","Declared @max"
635311219527394888,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311219527404889,"StepEvaluate","->","Changed","Declared @max"
635311219527404889,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311219527404889,"StepEvaluate","->","Changed","Declared @random"
635311219527404889,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311219527414889,"StepEvaluate","->","Changed","Declared @random"
635311219527414889,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311219527414889,"StepEvaluate","->","Changed","Declared @gcd"
635311219527414889,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311219527424890,"StepEvaluate","->","Changed","Declared @gcd"
635311219527424890,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311219527424890,"StepEvaluate","->","Changed","Declared @gcd"
635311219527424890,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311219527434891,"StepEvaluate","->","Changed","Declared @fib"
635311219527434891,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311219527434891,"StepEvaluate","->","Changed","Declared @fib"
635311219527434891,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311219527444891,"StepEvaluate","->","Changed","Declared @fib"
635311219527444891,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311219527444891,"StepEvaluate","->","Changed","Declared @fib2"
635311219527444891,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311219527454892,"StepEvaluate","->","Changed","Declared @fib2"
635311219527454892,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311219527454892,"StepEvaluate","->","Changed","Declared @fac"
635311219527454892,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311219527464892,"StepEvaluate","->","Changed","Declared @fac"
635311219527464892,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311219527464892,"StepEvaluate","->","Changed","Declared @pow"
635311219527464892,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311219527474893,"StepEvaluate","->","Changed","Declared @pow"
635311219527474893,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311219527474893,"StepEvaluate","->","Changed","Declared @pow"
635311219527474893,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311219527484893,"StepEvaluate","->","Changed","Declared @upArrow"
635311219527484893,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311219527484893,"StepEvaluate","->","Changed","Declared @upArrow"
635311219527484893,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311219527494894,"StepEvaluate","->","Changed","Declared @upArrow"
635311219527494894,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311219527494894,"StepEvaluate","->","Changed","Declared @graham"
635311219527494894,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311219527504895,"StepEvaluate","->","Changed","Declared @graham"
635311219527504895,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311219527504895,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311219527504895,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311219527504895,"StepEvaluate","->","Changed","Declared @ack"
635311219527514895,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311219527514895,"StepEvaluate","->","Changed","Declared @ack"
635311219527514895,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311219527524896,"StepEvaluate","->","Changed","Declared @ack"
635311219527524896,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311219527524896,"StepEvaluate","->","Changed","Declared @acker"
635311219527524896,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219527524896,"StepEvaluate","->","Changed","Declared @acker"
635311219527534896,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219527534896,"StepEvaluate","->","Changed","Declared @acker"
635311219527534896,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219527534896,"StepEvaluate","->","Changed","Declared @acker"
635311219527544897,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219527544897,"StepEvaluate","->","Changed","Declared @acker"
635311219527544897,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219527544897,"StepEvaluate","->","Changed","Declared @hyper"
635311219527554897,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219527554897,"StepEvaluate","->","Changed","Declared @hyper"
635311219527554897,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219527554897,"StepEvaluate","->","Changed","Declared @hyper"
635311219527564898,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219527564898,"StepEvaluate","->","Changed","Declared @hyper"
635311219527564898,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219527564898,"StepEvaluate","->","Changed","Declared @hyper"
635311219527574899,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219527574899,"StepEvaluate","->","Changed","Declared @sudan"
635311219527574899,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311219527574899,"StepEvaluate","->","Changed","Declared @sudan"
635311219527584899,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311219527584899,"StepEvaluate","->","Changed","Declared @sudan"
635311219527584899,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311219527584899,"StepEvaluate","[]","Changed","File imported"
635311219527594900,"StepEvaluate","File imported","Unchanged","File imported"
635311219527594900,"StepEvaluate","@","Changed","@"
635311219527594900,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219527594900,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219527604900,"StepEvaluate",",","Unchanged",","
635311219527604900,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219527604900,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219527604900,"StepEvaluate","PAT@-M","Changed","[]"
635311219527614901,"StepEvaluate","SEL@import","Changed","[]"
635311219527614901,"StepEvaluate","@","Changed","[]"
635311219527614901,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311219527624901,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311219527624901,"Parsed as literal","quickSort"
635311219527624901,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219527624901,"Parsed as literal",""
635311219527634902,"Parsed as literal",""
635311219527634902,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219527634902,"Parsed as literal",""
635311219527634902,"Parsed as literal",""
635311219527644903,"Invalid operator","@quickSort([]) -> []","0"
635311219527644903,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311219527644903,"Parsed as literal","quickSort"
635311219527644903,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219527644903,"Parsed as literal",""
635311219527654903,"Parsed as literal",""
635311219527654903,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219527654903,"Parsed as literal",""
635311219527654903,"Parsed as literal",""
635311219527664904,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219527664904,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311219527664904,"Parsed as literal","quickSort"
635311219527674904,"Parsed as literal","list"
635311219527674904,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219527674904,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311219527684905,"Parsed as literal","quickSort"
635311219527684905,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311219527684905,"Parsed as literal","filter"
635311219527694905,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311219527694905,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311219527694905,"Parsed as literal",""
635311219527694905,"Parsed as literal","i"
635311219527704906,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311219527704906,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219527704906,"Parsed as literal"," i "
635311219527704906,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219527714907,"Parsed as literal"," "
635311219527714907,"Parsed as literal","list"
635311219527714907,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219527714907,"Parsed as literal",""
635311219527724907,"Parsed as literal","list"
635311219527724907,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311219527724907,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311219527724907,"Parsed as literal",""
635311219527734908,"Parsed as literal","i"
635311219527734908,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311219527734908,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219527744908,"Parsed as literal"," i "
635311219527744908,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219527744908,"Parsed as literal"," "
635311219527744908,"Parsed as literal","list"
635311219527754909,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219527754909,"Parsed as literal",""
635311219527754909,"Parsed as literal","list"
635311219527754909,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311219527764909,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311219527764909,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311219527764909,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311219527764909,"Parsed as literal",""
635311219527774910,"Parsed as literal","i"
635311219527774910,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219527774910,"Parsed as literal"," i "
635311219527774910,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219527784911,"Parsed as literal"," "
635311219527784911,"Parsed as literal","list"
635311219527784911,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219527784911,"Parsed as literal",""
635311219527794911,"Parsed as literal","list"
635311219527794911,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219527794911,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311219527804912,"Parsed as literal"," "
635311219527804912,"Parsed as literal","list "
635311219527804912,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311219527804912,"Parsed as literal","quickSort"
635311219527814912,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311219527814912,"Parsed as literal","filter"
635311219527814912,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311219527824913,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311219527824913,"Parsed as literal",""
635311219527824913,"Parsed as literal","i"
635311219527824913,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311219527834913,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219527834913,"Parsed as literal"," i "
635311219527834913,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219527834913,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219527844914,"Parsed as literal"," "
635311219527844914,"Parsed as literal","list"
635311219527844914,"Parsed as literal","1"
635311219527844914,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219527854915,"Parsed as literal",""
635311219527854915,"Parsed as literal","list"
635311219527854915,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311219527854915,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311219527864915,"Parsed as literal",""
635311219527864915,"Parsed as literal","i"
635311219527864915,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311219527864915,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219527874916,"Parsed as literal"," i "
635311219527874916,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219527874916,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219527874916,"Parsed as literal"," "
635311219527884916,"Parsed as literal","list"
635311219527884916,"Parsed as literal","1"
635311219527884916,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219527894917,"Parsed as literal",""
635311219527894917,"Parsed as literal","list"
635311219527894917,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311219527894917,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311219527904917,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311219527904917,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311219527904917,"Parsed as literal",""
635311219527904917,"Parsed as literal","i"
635311219527914918,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219527914918,"Parsed as literal"," i "
635311219527914918,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219527914918,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219527924919,"Parsed as literal"," "
635311219527924919,"Parsed as literal","list"
635311219527924919,"Parsed as literal","1"
635311219527934919,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219527934919,"Parsed as literal",""
635311219527934919,"Parsed as literal","list"
635311219527934919,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311219527944920,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311219527944920,"Parsed as literal","quickSort"
635311219527944920,"Parsed as literal","list"
635311219527954920,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219527954920,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311219527954920,"Parsed as literal","quickSort"
635311219527954920,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311219527964921,"Parsed as literal","filter"
635311219527964921,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311219527964921,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311219527974921,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311219527974921,"Parsed as literal",""
635311219527974921,"Parsed as literal","i"
635311219527974921,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219527984922,"Parsed as literal"," i "
635311219527984922,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219527984922,"Parsed as literal"," "
635311219527984922,"Parsed as literal","list"
635311219527994923,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219527994923,"Parsed as literal",""
635311219527994923,"Parsed as literal","list"
635311219527994923,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219528004923,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311219528004923,"Parsed as literal"," "
635311219528004923,"Parsed as literal","list "
635311219528004923,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311219528014924,"Parsed as literal","quickSort"
635311219528014924,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311219528014924,"Parsed as literal","filter"
635311219528024924,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311219528024924,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311219528024924,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311219528024924,"Parsed as literal",""
635311219528034925,"Parsed as literal","i"
635311219528034925,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219528034925,"Parsed as literal"," i "
635311219528034925,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219528044925,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219528044925,"Parsed as literal"," "
635311219528044925,"Parsed as literal","list"
635311219528044925,"Parsed as literal","1"
635311219528054926,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219528054926,"Parsed as literal",""
635311219528054926,"Parsed as literal","list"
635311219528064927,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311219528064927,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311219528064927,"Parsed as literal","mergeSort"
635311219528064927,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219528074927,"Parsed as literal",""
635311219528074927,"Parsed as literal",""
635311219528074927,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219528074927,"Parsed as literal",""
635311219528084928,"Parsed as literal",""
635311219528084928,"Invalid operator","@mergeSort([]) -> []","0"
635311219528084928,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311219528084928,"Parsed as literal","mergeSort"
635311219528094928,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219528094928,"Parsed as literal",""
635311219528094928,"Parsed as literal",""
635311219528094928,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219528104929,"Parsed as literal",""
635311219528104929,"Parsed as literal",""
635311219528104929,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311219528114930,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311219528114930,"Parsed as literal","mergeSort"
635311219528114930,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311219528114930,"Parsed as literal","list"
635311219528124930,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311219528124930,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311219528124930,"Parsed as literal",""
635311219528124930,"Parsed as literal","list"
635311219528134931,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311219528134931,"Parsed as literal",""
635311219528134931,"Parsed as literal",""
635311219528134931,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311219528144931,"Parsed as literal"," "
635311219528144931,"Parsed as literal","list"
635311219528144931,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311219528144931,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311219528154932,"Parsed as literal","mergeSort"
635311219528154932,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311219528154932,"Parsed as literal","list"
635311219528154932,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311219528164932,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311219528164932,"Parsed as literal",""
635311219528164932,"Parsed as literal","list"
635311219528164932,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311219528174933,"Parsed as literal",""
635311219528174933,"Parsed as literal",""
635311219528174933,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311219528174933,"Parsed as literal"," "
635311219528184934,"Parsed as literal","list"
635311219528184934,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311219528184934,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311219528194934,"Parsed as literal","mergeSort"
635311219528194934,"Parsed as literal","list"
635311219528194934,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311219528204935,"Parsed as literal","merge"
635311219528204935,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311219528204935,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311219528214935,"Parsed as literal","mergeSort"
635311219528214935,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311219528214935,"Parsed as literal","take"
635311219528214935,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311219528224936,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311219528224936,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311219528224936,"Parsed as literal","count"
635311219528224936,"Parsed as literal","list"
635311219528234936,"Parsed as literal","2"
635311219528234936,"Parsed as literal","list"
635311219528234936,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311219528244937,"Parsed as literal","mergeSort"
635311219528244937,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311219528244937,"Parsed as literal","skip"
635311219528254938,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311219528254938,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311219528254938,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311219528264938,"Parsed as literal","count"
635311219528264938,"Parsed as literal","list"
635311219528264938,"Parsed as literal","2"
635311219528264938,"Parsed as literal","list"
635311219528274939,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311219528274939,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311219528274939,"Parsed as literal","mergeSort"
635311219528274939,"Parsed as literal","list"
635311219528284939,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311219528284939,"Parsed as literal","merge"
635311219528284939,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311219528294940,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311219528294940,"Parsed as literal","mergeSort"
635311219528294940,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311219528304940,"Parsed as literal","take"
635311219528304940,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311219528304940,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311219528304940,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311219528314941,"Parsed as literal","count"
635311219528314941,"Parsed as literal","list"
635311219528314941,"Parsed as literal","2"
635311219528314941,"Parsed as literal","list"
635311219528324942,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311219528324942,"Parsed as literal","mergeSort"
635311219528324942,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311219528334942,"Parsed as literal","skip"
635311219528334942,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311219528334942,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311219528334942,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311219528344943,"Parsed as literal","count"
635311219528344943,"Parsed as literal","list"
635311219528344943,"Parsed as literal","2"
635311219528344943,"Parsed as literal","list"
635311219528354943,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311219528354943,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311219528354943,"Parsed as literal","merge"
635311219528364944,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311219528364944,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219528364944,"Parsed as literal",""
635311219528364944,"Parsed as literal",""
635311219528374944,"Parsed as literal","list"
635311219528374944,"Parsed as literal"," list"
635311219528374944,"Invalid operator","@merge([],list) -> list","0"
635311219528374944,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311219528384945,"Parsed as literal","merge"
635311219528384945,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311219528384945,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219528384945,"Parsed as literal",""
635311219528394946,"Parsed as literal",""
635311219528394946,"Parsed as literal","list"
635311219528394946,"Parsed as literal"," list"
635311219528404946,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311219528404946,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311219528404946,"Parsed as literal","merge"
635311219528404946,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311219528414947,"Parsed as literal","list"
635311219528414947,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219528414947,"Parsed as literal",""
635311219528414947,"Parsed as literal",""
635311219528424947,"Parsed as literal"," list"
635311219528424947,"Invalid operator","@merge(list,[]) -> list","0"
635311219528424947,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311219528424947,"Parsed as literal","merge"
635311219528434948,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311219528434948,"Parsed as literal","list"
635311219528434948,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219528444948,"Parsed as literal",""
635311219528444948,"Parsed as literal",""
635311219528444948,"Parsed as literal"," list"
635311219528444948,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311219528454949,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311219528454949,"Parsed as literal","merge"
635311219528454949,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311219528464950,"Parsed as literal","left"
635311219528464950,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311219528464950,"Parsed as literal","right "
635311219528464950,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311219528474950,"Parsed as literal"," "
635311219528474950,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311219528474950,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311219528474950,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311219528484951,"Parsed as literal",""
635311219528484951,"Parsed as literal","left "
635311219528484951,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311219528494951,"Parsed as literal"," "
635311219528494951,"Parsed as literal","right"
635311219528494951,"Parsed as literal",""
635311219528494951,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311219528504952,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311219528504952,"Parsed as literal"," "
635311219528504952,"Parsed as literal","left "
635311219528504952,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311219528514952,"Parsed as literal","merge"
635311219528514952,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311219528514952,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311219528514952,"Parsed as literal",""
635311219528524953,"Parsed as literal","left"
635311219528524953,"Parsed as literal","right"
635311219528524953,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311219528524953,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311219528534954,"Parsed as literal","merge"
635311219528534954,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311219528534954,"Parsed as literal","left"
635311219528544954,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311219528544954,"Parsed as literal","right "
635311219528544954,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311219528544954,"Parsed as literal"," "
635311219528554955,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311219528554955,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311219528554955,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311219528554955,"Parsed as literal",""
635311219528564955,"Parsed as literal","left "
635311219528564955,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311219528564955,"Parsed as literal"," "
635311219528564955,"Parsed as literal","right"
635311219528574956,"Parsed as literal",""
635311219528574956,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311219528574956,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311219528584956,"Parsed as literal"," "
635311219528584956,"Parsed as literal","left "
635311219528584956,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311219528584956,"Parsed as literal","merge"
635311219528594957,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311219528594957,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311219528594957,"Parsed as literal",""
635311219528594957,"Parsed as literal","left"
635311219528604958,"Parsed as literal","right"
635311219528604958,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311219528604958,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311219528614958,"Parsed as literal","merge"
635311219528614958,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311219528614958,"Parsed as literal","left"
635311219528614958,"Parsed as literal","right"
635311219528624959,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311219528624959,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311219528624959,"Parsed as literal"," "
635311219528624959,"Parsed as literal","right "
635311219528634959,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311219528634959,"Parsed as literal","merge"
635311219528634959,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311219528634959,"Parsed as literal","left"
635311219528644960,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311219528644960,"Parsed as literal",""
635311219528644960,"Parsed as literal","right"
635311219528654960,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311219528654960,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311219528654960,"Parsed as literal","merge"
635311219528654960,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311219528654960,"Parsed as literal","left"
635311219528664961,"Parsed as literal","right"
635311219528664961,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311219528664961,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311219528674962,"Parsed as literal"," "
635311219528674962,"Parsed as literal","right "
635311219528674962,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311219528674962,"Parsed as literal","merge"
635311219528684962,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311219528684962,"Parsed as literal","left"
635311219528684962,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311219528684962,"Parsed as literal",""
635311219528694963,"Parsed as literal","right"
635311219528694963,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311219528694963,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311219528704963,"Parsed as literal","bubbleSort"
635311219528704963,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311219528704963,"Parsed as literal","list"
635311219528704963,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311219528714964,"Parsed as literal","isSorted"
635311219528714964,"Parsed as literal","list"
635311219528714964,"Parsed as literal"," list"
635311219528714964,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311219528724964,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311219528724964,"Parsed as literal","bubbleSort"
635311219528724964,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311219528724964,"Parsed as literal","list"
635311219528734965,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311219528734965,"Parsed as literal","isSorted"
635311219528734965,"Parsed as literal","list"
635311219528734965,"Parsed as literal"," list"
635311219528744966,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311219528744966,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311219528744966,"Parsed as literal","bubbleSort"
635311219528754966,"Parsed as literal","list"
635311219528754966,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311219528754966,"Parsed as literal","bubbleSort"
635311219528754966,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311219528764967,"Parsed as literal","bubbleSortPass"
635311219528764967,"Parsed as literal","list"
635311219528764967,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311219528774967,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311219528774967,"Parsed as literal","bubbleSort"
635311219528774967,"Parsed as literal","list"
635311219528774967,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311219528784968,"Parsed as literal","bubbleSort"
635311219528784968,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311219528784968,"Parsed as literal","bubbleSortPass"
635311219528784968,"Parsed as literal","list"
635311219528794968,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311219528794968,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311219528794968,"Parsed as literal","bubbleSortPass"
635311219528794968,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219528804969,"Parsed as literal",""
635311219528804969,"Parsed as literal",""
635311219528804969,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219528814970,"Parsed as literal",""
635311219528814970,"Parsed as literal",""
635311219528814970,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311219528814970,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311219528824970,"Parsed as literal","bubbleSortPass"
635311219528824970,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219528824970,"Parsed as literal",""
635311219528824970,"Parsed as literal",""
635311219528834971,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219528834971,"Parsed as literal",""
635311219528834971,"Parsed as literal",""
635311219528834971,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311219528844971,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311219528844971,"Parsed as literal","bubbleSortPass"
635311219528844971,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311219528844971,"Parsed as literal","list"
635311219528854972,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311219528854972,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311219528854972,"Parsed as literal",""
635311219528854972,"Parsed as literal","list "
635311219528864972,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311219528864972,"Parsed as literal",""
635311219528864972,"Parsed as literal",""
635311219528864972,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311219528874973,"Parsed as literal"," "
635311219528874973,"Parsed as literal","list"
635311219528874973,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311219528874973,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311219528884974,"Parsed as literal","bubbleSortPass"
635311219528884974,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311219528884974,"Parsed as literal","list"
635311219528894974,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311219528894974,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311219528894974,"Parsed as literal",""
635311219528894974,"Parsed as literal","list "
635311219528904975,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311219528904975,"Parsed as literal",""
635311219528904975,"Parsed as literal",""
635311219528904975,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311219528914975,"Parsed as literal"," "
635311219528914975,"Parsed as literal","list"
635311219528914975,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311219528914975,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311219528924976,"Parsed as literal","bubbleSortPass"
635311219528924976,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311219528924976,"Parsed as literal","list"
635311219528924976,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311219528934976,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311219528934976,"Parsed as literal",""
635311219528934976,"Parsed as literal","list "
635311219528934976,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311219528944977,"Parsed as literal"," "
635311219528944977,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311219528944977,"Parsed as literal",""
635311219528944977,"Parsed as literal","list"
635311219528954978,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311219528954978,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311219528954978,"Parsed as literal"," "
635311219528964978,"Parsed as literal","list "
635311219528964978,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311219528964978,"Parsed as literal","bubbleSortPass"
635311219528964978,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311219528974979,"Parsed as literal",""
635311219528974979,"Parsed as literal","list"
635311219528974979,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311219528974979,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311219528984979,"Parsed as literal","bubbleSortPass"
635311219528984979,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311219528984979,"Parsed as literal","list"
635311219528984979,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311219528994980,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311219528994980,"Parsed as literal",""
635311219528994980,"Parsed as literal","list "
635311219528994980,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311219529004980,"Parsed as literal"," "
635311219529004980,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311219529004980,"Parsed as literal",""
635311219529004980,"Parsed as literal","list"
635311219529014981,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311219529014981,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311219529014981,"Parsed as literal"," "
635311219529014981,"Parsed as literal","list "
635311219529024982,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311219529024982,"Parsed as literal","bubbleSortPass"
635311219529024982,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311219529024982,"Parsed as literal",""
635311219529034982,"Parsed as literal","list"
635311219529034982,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311219529044983,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311219529044983,"Parsed as literal","bubbleSortPass"
635311219529044983,"Parsed as literal","list"
635311219529054983,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311219529054983,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311219529054983,"Parsed as literal"," "
635311219529054983,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311219529064984,"Parsed as literal",""
635311219529064984,"Parsed as literal","list "
635311219529064984,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311219529064984,"Parsed as literal","bubbleSortPass"
635311219529074984,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311219529074984,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311219529074984,"Parsed as literal",""
635311219529074984,"Parsed as literal","list "
635311219529084985,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311219529084985,"Parsed as literal"," "
635311219529084985,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311219529084985,"Parsed as literal",""
635311219529094986,"Parsed as literal","list"
635311219529094986,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311219529094986,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311219529094986,"Parsed as literal","bubbleSortPass"
635311219529104986,"Parsed as literal","list"
635311219529104986,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311219529104986,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311219529114987,"Parsed as literal"," "
635311219529114987,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311219529114987,"Parsed as literal",""
635311219529114987,"Parsed as literal","list "
635311219529124987,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311219529124987,"Parsed as literal","bubbleSortPass"
635311219529124987,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311219529124987,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311219529134988,"Parsed as literal",""
635311219529134988,"Parsed as literal","list "
635311219529134988,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311219529134988,"Parsed as literal"," "
635311219529144988,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311219529144988,"Parsed as literal",""
635311219529144988,"Parsed as literal","list"
635311219529144988,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311219529154989,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311219529154989,"Parsed as literal","isSorted"
635311219529154989,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311219529154989,"Parsed as literal",""
635311219529164990,"Parsed as literal",""
635311219529164990,"Parsed as literal"," true"
635311219529164990,"Invalid operator","@isSorted([]) -> true","0"
635311219529164990,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311219529174990,"Parsed as literal","isSorted"
635311219529174990,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311219529174990,"Parsed as literal",""
635311219529184991,"Parsed as literal",""
635311219529184991,"Parsed as literal"," true"
635311219529184991,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311219529184991,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311219529194991,"Parsed as literal","isSorted"
635311219529194991,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311219529194991,"Parsed as literal","list"
635311219529194991,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311219529204992,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311219529204992,"Parsed as literal",""
635311219529204992,"Parsed as literal","list "
635311219529204992,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219529214992,"Parsed as literal",""
635311219529214992,"Parsed as literal",""
635311219529214992,"Parsed as literal"," true"
635311219529214992,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311219529224993,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311219529224993,"Parsed as literal","isSorted"
635311219529224993,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311219529224993,"Parsed as literal","list"
635311219529234994,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311219529234994,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311219529234994,"Parsed as literal",""
635311219529244994,"Parsed as literal","list "
635311219529244994,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219529244994,"Parsed as literal",""
635311219529244994,"Parsed as literal",""
635311219529254995,"Parsed as literal"," true"
635311219529254995,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311219529254995,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311219529254995,"Parsed as literal","isSorted"
635311219529264995,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311219529264995,"Parsed as literal","list"
635311219529264995,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311219529264995,"Parsed as literal",""
635311219529274996,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311219529274996,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311219529274996,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311219529284996,"Parsed as literal",""
635311219529284996,"Parsed as literal","list "
635311219529284996,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311219529284996,"Parsed as literal"," "
635311219529294997,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311219529294997,"Parsed as literal",""
635311219529294997,"Parsed as literal","list"
635311219529294997,"Parsed as literal",""
635311219529304998,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311219529304998,"Parsed as literal","isSorted"
635311219529304998,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311219529304998,"Parsed as literal",""
635311219529314998,"Parsed as literal","list"
635311219529314998,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311219529314998,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311219529314998,"Parsed as literal","isSorted"
635311219529324999,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311219529324999,"Parsed as literal","list"
635311219529324999,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311219529334999,"Parsed as literal",""
635311219529334999,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311219529334999,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311219529334999,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311219529345000,"Parsed as literal",""
635311219529345000,"Parsed as literal","list "
635311219529345000,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311219529345000,"Parsed as literal"," "
635311219529355000,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311219529355000,"Parsed as literal",""
635311219529355000,"Parsed as literal","list"
635311219529355000,"Parsed as literal",""
635311219529365001,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311219529365001,"Parsed as literal","isSorted"
635311219529365001,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311219529365001,"Parsed as literal",""
635311219529375002,"Parsed as literal","list"
635311219529375002,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311219529375002,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311219529375002,"Parsed as literal","isSorted"
635311219529385002,"Parsed as literal","list"
635311219529385002,"Parsed as literal"," false"
635311219529385002,"Invalid operator","@isSorted(list) -> false","0"
635311219529395003,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311219529395003,"Parsed as literal","isSorted"
635311219529395003,"Parsed as literal","list"
635311219529395003,"Parsed as literal"," false"
635311219529405003,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311219529405003,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311219529405003,"Parsed as literal","insertionSort"
635311219529405003,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219529415004,"Parsed as literal",""
635311219529415004,"Parsed as literal",""
635311219529415004,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311219529415004,"Parsed as literal",""
635311219529425004,"Parsed as literal",""
635311219529425004,"Invalid operator","@insertionSort([]) -> []","0"
635311219529425004,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311219529425004,"Parsed as literal","insertionSort"
635311219529435005,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219529435005,"Parsed as literal",""
635311219529435005,"Parsed as literal",""
635311219529435005,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311219529445006,"Parsed as literal",""
635311219529445006,"Parsed as literal",""
635311219529445006,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311219529445006,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311219529455006,"Parsed as literal","insertionSort"
635311219529455006,"Parsed as literal","list"
635311219529455006,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311219529465007,"Parsed as literal","insert"
635311219529465007,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311219529465007,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311219529465007,"Parsed as literal",""
635311219529475007,"Parsed as literal","list"
635311219529475007,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311219529475007,"Parsed as literal","insertionSort"
635311219529475007,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311219529485008,"Parsed as literal",""
635311219529485008,"Parsed as literal","list"
635311219529485008,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311219529485008,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311219529495008,"Parsed as literal","insertionSort"
635311219529495008,"Parsed as literal","list"
635311219529495008,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311219529505009,"Parsed as literal","insert"
635311219529505009,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311219529505009,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311219529505009,"Parsed as literal",""
635311219529515010,"Parsed as literal","list"
635311219529515010,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311219529515010,"Parsed as literal","insertionSort"
635311219529515010,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311219529525010,"Parsed as literal",""
635311219529525010,"Parsed as literal","list"
635311219529525010,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311219529525010,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311219529535011,"Parsed as literal","insert"
635311219529535011,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311219529535011,"Parsed as literal","item"
635311219529545011,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219529545011,"Parsed as literal",""
635311219529545011,"Parsed as literal",""
635311219529545011,"Parsed as literal"," item"
635311219529555012,"Invalid operator","@insert(item,[]) -> item","0"
635311219529555012,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311219529555012,"Parsed as literal","insert"
635311219529555012,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311219529565012,"Parsed as literal","item"
635311219529565012,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219529565012,"Parsed as literal",""
635311219529565012,"Parsed as literal",""
635311219529575013,"Parsed as literal"," item"
635311219529575013,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311219529575013,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311219529575013,"Parsed as literal","insert"
635311219529585014,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311219529585014,"Parsed as literal","item"
635311219529585014,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311219529585014,"Parsed as literal","list "
635311219529595014,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311219529595014,"Parsed as literal"," item "
635311219529595014,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311219529605015,"Parsed as literal"," "
635311219529605015,"Parsed as literal","list"
635311219529605015,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311219529605015,"Parsed as literal"," item "
635311219529615015,"Parsed as literal"," list"
635311219529615015,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311219529615015,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311219529625016,"Parsed as literal","insert"
635311219529625016,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311219529625016,"Parsed as literal","item"
635311219529625016,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311219529635016,"Parsed as literal","list "
635311219529635016,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311219529635016,"Parsed as literal"," item "
635311219529635016,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311219529645017,"Parsed as literal"," "
635311219529645017,"Parsed as literal","list"
635311219529645017,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311219529645017,"Parsed as literal"," item "
635311219529655018,"Parsed as literal"," list"
635311219529655018,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311219529655018,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311219529665018,"Parsed as literal","insert"
635311219529665018,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311219529665018,"Parsed as literal","item"
635311219529665018,"Parsed as literal","list"
635311219529675019,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311219529675019,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311219529675019,"Parsed as literal"," "
635311219529675019,"Parsed as literal","list "
635311219529685019,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311219529685019,"Parsed as literal","insert"
635311219529685019,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311219529685019,"Parsed as literal","item"
635311219529695020,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311219529695020,"Parsed as literal",""
635311219529695020,"Parsed as literal","list"
635311219529695020,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311219529705020,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311219529705020,"Parsed as literal","insert"
635311219529705020,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311219529705020,"Parsed as literal","item"
635311219529715021,"Parsed as literal","list"
635311219529715021,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311219529715021,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311219529725022,"Parsed as literal"," "
635311219529725022,"Parsed as literal","list "
635311219529725022,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311219529725022,"Parsed as literal","insert"
635311219529735022,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311219529735022,"Parsed as literal","item"
635311219529735022,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311219529735022,"Parsed as literal",""
635311219529745023,"Parsed as literal","list"
635311219529745023,"StepEvaluate","->","Changed","Declared @quickSort"
635311219529745023,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311219529745023,"StepEvaluate","->","Changed","Declared @quickSort"
635311219529755023,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311219529755023,"StepEvaluate","->","Changed","Declared @mergeSort"
635311219529755023,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311219529755023,"StepEvaluate","->","Changed","Declared @mergeSort"
635311219529765024,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311219529765024,"StepEvaluate","->","Changed","Declared @mergeSort"
635311219529765024,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311219529765024,"StepEvaluate","->","Changed","Declared @merge"
635311219529775024,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219529775024,"StepEvaluate","->","Changed","Declared @merge"
635311219529775024,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219529775024,"StepEvaluate","->","Changed","Declared @merge"
635311219529775024,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219529785025,"StepEvaluate","->","Changed","Declared @merge"
635311219529785025,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219529785025,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311219529785025,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311219529795026,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311219529795026,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311219529795026,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219529795026,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219529805026,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219529805026,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219529805026,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219529805026,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219529815027,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219529815027,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219529815027,"StepEvaluate","->","Changed","Declared @isSorted"
635311219529815027,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219529825027,"StepEvaluate","->","Changed","Declared @isSorted"
635311219529825027,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219529825027,"StepEvaluate","->","Changed","Declared @isSorted"
635311219529825027,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219529835028,"StepEvaluate","->","Changed","Declared @isSorted"
635311219529835028,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219529835028,"StepEvaluate","->","Changed","Declared @insertionSort"
635311219529835028,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311219529845028,"StepEvaluate","->","Changed","Declared @insertionSort"
635311219529845028,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311219529845028,"StepEvaluate","->","Changed","Declared @insert"
635311219529845028,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311219529855029,"StepEvaluate","->","Changed","Declared @insert"
635311219529855029,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311219529855029,"StepEvaluate","->","Changed","Declared @insert"
635311219529855029,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311219529865030,"StepEvaluate","[]","Changed","File imported"
635311219529865030,"StepEvaluate","File imported","Unchanged","File imported"
635311219529865030,"StepEvaluate","[]","Changed","File imported"
635311219529865030,"StepEvaluate","File imported","Unchanged","File imported"
635311219529875030,"ParseInternal","@count((1,2,3))","0","FunctionCallOperator","1","6","count","(1,2,3)"
635311219529875030,"Parsed as literal","count"
635311219529875030,"ParseInternal","(1,2,3)","6","OpenParenOperator","6","6","1,2,3",""
635311219529875030,"ParseInternal","1,2,3","6","CommaOperator","6","8","1","2,3"
635311219529885031,"Parsed as literal","1"
635311219529885031,"ParseInternal","2,3","8","CommaOperator","8","10","2","3"
635311219529885031,"Parsed as literal","2"
635311219529885031,"Parsed as literal","3"
635311219529895031,"Parsed as literal",""
635311219541345686,"StepEvaluate","SEL@count","Changed","SEL@count"
635311219541385689,"StepEvaluate","SEL@count","Changed","[]"
635311219541395689,"StepEvaluate","@","Changed","[]"
635311219541405690,"StepEvaluate","[]","Unchanged","[]"
635311219588748398,"StepEvaluate","[]","Unchanged","[]"
635311219593108647,"StepEvaluate","[]","Unchanged","[]"
635311219613949839,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311219613959840,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311219613979841,"Parsed as literal","import"
635311219613979841,"Parsed as literal","file"
635311219613989841,"Parsed as literal"," 0"
635311219613999842,"Invalid operator","@import(file) -> 0","0"
635311219614009842,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311219614019843,"Parsed as literal","import"
635311219614019843,"Parsed as literal","file"
635311219614029844,"Parsed as literal"," 0"
635311219614039844,"StepEvaluate","->","Changed","Declared @import"
635311219614049845,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311219614049845,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311219614059845,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311219614069846,"Parsed as literal","operator"
635311219614079846,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311219614079846,"Parsed as literal","op"
635311219614089847,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311219614099848,"Parsed as literal","fn"
635311219614099848,"Parsed as literal",""
635311219614109848,"Invalid operator","@fn","12"
635311219614119849,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311219614119849,"Parsed as literal","fn"
635311219614129849,"Parsed as literal",""
635311219614139850,"Invalid operator","@fn","12"
635311219614139850,"Parsed as literal","@fn"
635311219614149850,"Parsed as literal"," 0"
635311219614159851,"Invalid operator","@operator(op,@fn) -> 0","0"
635311219614169852,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311219614169852,"Parsed as literal","operator"
635311219614179852,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311219614189853,"Parsed as literal","op"
635311219614189853,"Parsed as literal","@fn"
635311219614199853,"Parsed as literal"," 0"
635311219614209854,"StepEvaluate","->","Changed","Declared @operator"
635311219614219854,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311219614219854,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311219614229855,"Parsed as literal","import"
635311219614239856,"Parsed as literal","main.toast"
635311219614239856,"StepEvaluate","@","Changed","@"
635311219614249856,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219614259857,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219614259857,"StepEvaluate",",","Unchanged",","
635311219614269857,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219614279858,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219614279858,"StepEvaluate","PAT@-M","Changed","[]"
635311219614289858,"StepEvaluate","SEL@import","Changed","[]"
635311219614299859,"StepEvaluate","@","Changed","[]"
635311219614309860,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311219614309860,"Parsed as literal","import"
635311219614319860,"Parsed as literal","'core.toast'"
635311219614329861,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311219614329861,"Parsed as literal","import"
635311219614339861,"Parsed as literal","'list.toast'"
635311219614349862,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311219614349862,"Parsed as literal","import"
635311219614359862,"Parsed as literal","'math.toast'"
635311219614369863,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311219614379864,"Parsed as literal","import"
635311219614379864,"Parsed as literal","'sorting.toast'"
635311219614389864,"StepEvaluate","@","Changed","@"
635311219614399865,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219614399865,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219614409865,"StepEvaluate",",","Unchanged",","
635311219614419866,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219614419866,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219614429866,"StepEvaluate","PAT@-M","Changed","[]"
635311219614439867,"StepEvaluate","SEL@import","Changed","[]"
635311219614439867,"StepEvaluate","@","Changed","[]"
635311219614449868,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311219614459868,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311219614459868,"Parsed as literal","map"
635311219614469869,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311219614479869,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311219614489870,"Parsed as literal","func"
635311219614489870,"Parsed as literal",""
635311219614499870,"Invalid operator","@func","4"
635311219614509871,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311219614509871,"Parsed as literal","func"
635311219614519872,"Parsed as literal",""
635311219614529872,"Invalid operator","@func","4"
635311219614529872,"Parsed as literal","@func"
635311219614539873,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311219614549873,"Parsed as literal",""
635311219614549873,"Parsed as literal",""
635311219614559874,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219614569874,"Parsed as literal",""
635311219614569874,"Parsed as literal",""
635311219614579875,"Invalid operator","@map(@func, []) -> []","0"
635311219614589876,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311219614589876,"Parsed as literal","map"
635311219614599876,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311219614609877,"Parsed as literal","@func"
635311219614619877,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311219614619877,"Parsed as literal",""
635311219614629878,"Parsed as literal",""
635311219614639878,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219614639878,"Parsed as literal",""
635311219614649879,"Parsed as literal",""
635311219614659880,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311219614669880,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311219614669880,"Parsed as literal","map"
635311219614679881,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311219614689881,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311219614689881,"Parsed as literal","func"
635311219614699882,"Parsed as literal",""
635311219614709882,"Invalid operator","@func","4"
635311219614709882,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311219614719883,"Parsed as literal","func"
635311219614729884,"Parsed as literal",""
635311219614729884,"Invalid operator","@func","4"
635311219614739884,"Parsed as literal","@func"
635311219614749885,"Parsed as literal"," list"
635311219614759885,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311219614759885,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311219614769886,"Parsed as literal","func"
635311219614779886,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219614779886,"Parsed as literal",""
635311219614789887,"Parsed as literal","list"
635311219614799888,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311219614799888,"Parsed as literal","map"
635311219614809888,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311219614819889,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311219614829889,"Parsed as literal","func"
635311219614829889,"Parsed as literal",""
635311219614839890,"Invalid operator","@func","41"
635311219614839890,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311219614849890,"Parsed as literal","func"
635311219614859891,"Parsed as literal",""
635311219614859891,"Invalid operator","@func","41"
635311219614869892,"Parsed as literal","@func"
635311219614879892,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311219614879892,"Parsed as literal",""
635311219614889893,"Parsed as literal","list"
635311219614899893,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311219614909894,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311219614909894,"Parsed as literal","map"
635311219614919894,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311219614929895,"Parsed as literal","@func"
635311219614929895,"Parsed as literal"," list"
635311219614939896,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311219614949896,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311219614949896,"Parsed as literal","func"
635311219614959897,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219614969897,"Parsed as literal",""
635311219614969897,"Parsed as literal","list"
635311219614979898,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311219614989898,"Parsed as literal","map"
635311219614999899,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311219614999899,"Parsed as literal","@func"
635311219615009900,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311219615009900,"Parsed as literal",""
635311219615019900,"Parsed as literal","list"
635311219615029901,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311219615039901,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311219615039901,"Parsed as literal","filter"
635311219615049902,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311219615059902,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311219615059902,"Parsed as literal","pred"
635311219615069903,"Parsed as literal",""
635311219615079904,"Invalid operator","@pred","7"
635311219615079904,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311219615089904,"Parsed as literal","pred"
635311219615099905,"Parsed as literal",""
635311219615099905,"Invalid operator","@pred","7"
635311219615109905,"Parsed as literal","@pred"
635311219615119906,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311219615119906,"Parsed as literal",""
635311219615129906,"Parsed as literal",""
635311219615139907,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311219615139907,"Parsed as literal",""
635311219615149908,"Parsed as literal",""
635311219615159908,"Invalid operator","@filter(@pred,[]) -> []","0"
635311219615169909,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311219615169909,"Parsed as literal","filter"
635311219615179909,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311219615189910,"Parsed as literal","@pred"
635311219615189910,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311219615199910,"Parsed as literal",""
635311219615209911,"Parsed as literal",""
635311219615209911,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311219615219912,"Parsed as literal",""
635311219615229912,"Parsed as literal",""
635311219615239913,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311219615239913,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311219615249913,"Parsed as literal","filter"
635311219615259914,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311219615259914,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311219615269914,"Parsed as literal","pred"
635311219615279915,"Parsed as literal",""
635311219615279915,"Invalid operator","@pred","7"
635311219615289916,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311219615299916,"Parsed as literal","pred"
635311219615299916,"Parsed as literal",""
635311219615309917,"Invalid operator","@pred","7"
635311219615319917,"Parsed as literal","@pred"
635311219615319917,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311219615329918,"Parsed as literal"," list "
635311219615339918,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311219615339918,"Parsed as literal","pred"
635311219615349919,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219615359920,"Parsed as literal",""
635311219615359920,"Parsed as literal","list"
635311219615369920,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311219615379921,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311219615379921,"Parsed as literal"," "
635311219615389921,"Parsed as literal","list "
635311219615399922,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311219615409922,"Parsed as literal","filter"
635311219615409922,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311219615419923,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311219615429924,"Parsed as literal","pred"
635311219615449925,"Parsed as literal",""
635311219615459925,"Invalid operator","@pred","56"
635311219615469926,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311219615479926,"Parsed as literal","pred"
635311219615479926,"Parsed as literal",""
635311219615489927,"Invalid operator","@pred","56"
635311219615499928,"Parsed as literal","@pred"
635311219615499928,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311219615509928,"Parsed as literal"," "
635311219615519929,"Parsed as literal","list"
635311219615519929,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311219615529929,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311219615539930,"Parsed as literal","filter"
635311219615549930,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311219615549930,"Parsed as literal","@pred"
635311219615559931,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311219615569932,"Parsed as literal"," list "
635311219615569932,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311219615579932,"Parsed as literal","pred"
635311219615589933,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311219615589933,"Parsed as literal",""
635311219615599933,"Parsed as literal","list"
635311219615609934,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311219615619935,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311219615619935,"Parsed as literal"," "
635311219615629935,"Parsed as literal","list "
635311219615639936,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311219615649936,"Parsed as literal","filter"
635311219615649936,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311219615659937,"Parsed as literal","@pred"
635311219615669937,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311219615669937,"Parsed as literal"," "
635311219615679938,"Parsed as literal","list"
635311219615689939,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311219615689939,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311219615699939,"Parsed as literal","filter"
635311219615709940,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311219615709940,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311219615719940,"Parsed as literal","pred"
635311219615729941,"Parsed as literal",""
635311219615729941,"Invalid operator","@pred","7"
635311219615739941,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311219615749942,"Parsed as literal","pred"
635311219615749942,"Parsed as literal",""
635311219615759943,"Invalid operator","@pred","7"
635311219615769943,"Parsed as literal","@pred"
635311219615769943,"Parsed as literal","list"
635311219615779944,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311219615789944,"Parsed as literal","filter"
635311219615799945,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311219615799945,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311219615809945,"Parsed as literal","pred"
635311219615819946,"Parsed as literal",""
635311219615829947,"Invalid operator","@pred","30"
635311219615829947,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311219615839947,"Parsed as literal","pred"
635311219615839947,"Parsed as literal",""
635311219615849948,"Invalid operator","@pred","30"
635311219615859948,"Parsed as literal","@pred"
635311219615859948,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311219615869949,"Parsed as literal",""
635311219615879949,"Parsed as literal","list"
635311219615889950,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311219615889950,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311219615899951,"Parsed as literal","filter"
635311219615909951,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311219615909951,"Parsed as literal","@pred"
635311219615919952,"Parsed as literal","list"
635311219615929952,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311219615929952,"Parsed as literal","filter"
635311219615939953,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311219615949953,"Parsed as literal","@pred"
635311219615949953,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311219615959954,"Parsed as literal",""
635311219615969955,"Parsed as literal","list"
635311219615979955,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311219615979955,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311219615989956,"Parsed as literal","call"
635311219615999956,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311219615999956,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311219616009957,"Parsed as literal","fun"
635311219616019957,"Parsed as literal",""
635311219616029958,"Invalid operator","@fun","5"
635311219616029958,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311219616039959,"Parsed as literal","fun"
635311219616039959,"Parsed as literal",""
635311219616049959,"Invalid operator","@fun","5"
635311219616059960,"Parsed as literal","@fun"
635311219616069960,"Parsed as literal","arg"
635311219616069960,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311219616079961,"Parsed as literal","fun"
635311219616089961,"Parsed as literal","arg"
635311219616089961,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311219616099962,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311219616109963,"Parsed as literal","call"
635311219616109963,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311219616119963,"Parsed as literal","@fun"
635311219616129964,"Parsed as literal","arg"
635311219616139964,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311219616139964,"Parsed as literal","fun"
635311219616149965,"Parsed as literal","arg"
635311219616159965,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311219616169966,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311219616169966,"Parsed as literal","curry"
635311219616179967,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311219616189967,"Parsed as literal","seed"
635311219616189967,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219616199968,"Parsed as literal",""
635311219616209968,"Parsed as literal",""
635311219616209968,"Parsed as literal"," seed"
635311219616219969,"Invalid operator","@curry(seed,[]) -> seed","0"
635311219616229969,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311219616229969,"Parsed as literal","curry"
635311219616239970,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311219616249971,"Parsed as literal","seed"
635311219616249971,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219616259971,"Parsed as literal",""
635311219616269972,"Parsed as literal",""
635311219616269972,"Parsed as literal"," seed"
635311219616279972,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311219616289973,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311219616299973,"Parsed as literal","curry"
635311219616309974,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311219616309974,"Parsed as literal","seed"
635311219616319975,"Parsed as literal"," funcList"
635311219616329975,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311219616329975,"Parsed as literal","curry"
635311219616339976,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311219616349976,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311219616349976,"Parsed as literal","call"
635311219616359977,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311219616369977,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311219616369977,"Parsed as literal",""
635311219616379978,"Parsed as literal","funcList"
635311219616389979,"Parsed as literal","seed"
635311219616389979,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311219616399979,"Parsed as literal",""
635311219616409980,"Parsed as literal","funcList"
635311219616409980,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311219616419980,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311219616429981,"Parsed as literal","curry"
635311219616439981,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311219616439981,"Parsed as literal","seed"
635311219616449982,"Parsed as literal"," funcList"
635311219616459983,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311219616469983,"Parsed as literal","curry"
635311219616469983,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311219616479984,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311219616489984,"Parsed as literal","call"
635311219616489984,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311219616499985,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311219616509985,"Parsed as literal",""
635311219616509985,"Parsed as literal","funcList"
635311219616519986,"Parsed as literal","seed"
635311219616529987,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311219616529987,"Parsed as literal",""
635311219616539987,"Parsed as literal","funcList"
635311219616549988,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311219616559988,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311219616559988,"Parsed as literal","fold"
635311219616569989,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311219616579989,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311219616579989,"Parsed as literal","func"
635311219616589990,"Parsed as literal",""
635311219616599991,"Invalid operator","@func","5"
635311219616609991,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311219616609991,"Parsed as literal","func"
635311219616619992,"Parsed as literal",""
635311219616629992,"Invalid operator","@func","5"
635311219616629992,"Parsed as literal","@func"
635311219616639993,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219616649993,"Parsed as literal",""
635311219616649993,"Parsed as literal",""
635311219616659994,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219616669995,"Parsed as literal",""
635311219616669995,"Parsed as literal",""
635311219616679995,"Invalid operator","@fold(@func,[]) -> []","0"
635311219616689996,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311219616689996,"Parsed as literal","fold"
635311219616699996,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311219616709997,"Parsed as literal","@func"
635311219616709997,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219616719997,"Parsed as literal",""
635311219616729998,"Parsed as literal",""
635311219616739999,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311219616739999,"Parsed as literal",""
635311219616749999,"Parsed as literal",""
635311219616760000,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311219616760000,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311219616770000,"Parsed as literal","fold"
635311219616780001,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311219616790001,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311219616790001,"Parsed as literal","func"
635311219616800002,"Parsed as literal",""
635311219616810003,"Invalid operator","@func","5"
635311219616810003,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311219616820003,"Parsed as literal","func"
635311219616830004,"Parsed as literal",""
635311219616830004,"Invalid operator","@func","5"
635311219616840004,"Parsed as literal","@func"
635311219616850005,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311219616850005,"Parsed as literal","list"
635311219616860005,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311219616870006,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311219616870006,"Parsed as literal",""
635311219616880007,"Parsed as literal","list"
635311219616890007,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311219616890007,"Parsed as literal",""
635311219616900008,"Parsed as literal",""
635311219616910008,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311219616910008,"Parsed as literal"," "
635311219616920009,"Parsed as literal","list"
635311219616930009,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311219616940010,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311219616940010,"Parsed as literal","fold"
635311219616950011,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311219616960011,"Parsed as literal","@func"
635311219616960011,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311219616970012,"Parsed as literal","list"
635311219616980012,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311219616980012,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311219616990013,"Parsed as literal",""
635311219617000013,"Parsed as literal","list"
635311219617000013,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311219617010014,"Parsed as literal",""
635311219617020015,"Parsed as literal",""
635311219617020015,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311219617030015,"Parsed as literal"," "
635311219617040016,"Parsed as literal","list"
635311219617050016,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311219617050016,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311219617060017,"Parsed as literal","fold"
635311219617070017,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311219617070017,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311219617080018,"Parsed as literal","func"
635311219617090019,"Parsed as literal",""
635311219617100019,"Invalid operator","@func","5"
635311219617100019,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311219617110020,"Parsed as literal","func"
635311219617110020,"Parsed as literal",""
635311219617120020,"Invalid operator","@func","5"
635311219617130021,"Parsed as literal","@func"
635311219617140021,"Parsed as literal","list"
635311219617140021,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311219617150022,"Parsed as literal","fold"
635311219617160023,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311219617170023,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311219617170023,"Parsed as literal","func"
635311219617180024,"Parsed as literal",""
635311219617190024,"Invalid operator","@func","26"
635311219617190024,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311219617200025,"Parsed as literal","func"
635311219617210025,"Parsed as literal",""
635311219617210025,"Invalid operator","@func","26"
635311219617220026,"Parsed as literal","@func"
635311219617230027,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311219617230027,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311219617240027,"Parsed as literal","func"
635311219617250028,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311219617250028,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311219617260028,"Parsed as literal",""
635311219617270029,"Parsed as literal","list"
635311219617270029,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311219617280029,"Parsed as literal",""
635311219617290030,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311219617290030,"Parsed as literal",""
635311219617300031,"Parsed as literal","list"
635311219617310031,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311219617310031,"Parsed as literal"," "
635311219617320032,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311219617330032,"Parsed as literal",""
635311219617330032,"Parsed as literal","list"
635311219617340033,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311219617350033,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311219617350033,"Parsed as literal","fold"
635311219617360034,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311219617370035,"Parsed as literal","@func"
635311219617370035,"Parsed as literal","list"
635311219617380035,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311219617390036,"Parsed as literal","fold"
635311219617400036,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311219617400036,"Parsed as literal","@func"
635311219617410037,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311219617420037,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311219617430038,"Parsed as literal","func"
635311219617430038,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311219617440039,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311219617450039,"Parsed as literal",""
635311219617450039,"Parsed as literal","list"
635311219617460040,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311219617470040,"Parsed as literal",""
635311219617470040,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311219617480041,"Parsed as literal",""
635311219617480041,"Parsed as literal","list"
635311219617490041,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311219617500042,"Parsed as literal"," "
635311219617510043,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311219617510043,"Parsed as literal",""
635311219617520043,"Parsed as literal","list"
635311219617530044,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311219617540044,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311219617540044,"Parsed as literal","foldr"
635311219617550045,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311219617560045,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311219617560045,"Parsed as literal","func"
635311219617570046,"Parsed as literal",""
635311219617570046,"Invalid operator","@func","6"
635311219617580047,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311219617590047,"Parsed as literal","func"
635311219617590047,"Parsed as literal",""
635311219617600048,"Invalid operator","@func","6"
635311219617610048,"Parsed as literal","@func"
635311219617610048,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219617620049,"Parsed as literal",""
635311219617630049,"Parsed as literal",""
635311219617640050,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219617640050,"Parsed as literal",""
635311219617650051,"Parsed as literal",""
635311219617650051,"Invalid operator","@foldr(@func,[]) -> []","0"
635311219617660051,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311219617670052,"Parsed as literal","foldr"
635311219617680052,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311219617680052,"Parsed as literal","@func"
635311219617690053,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219617690053,"Parsed as literal",""
635311219617700053,"Parsed as literal",""
635311219617710054,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219617720055,"Parsed as literal",""
635311219617720055,"Parsed as literal",""
635311219617730055,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311219617760057,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311219617770057,"Parsed as literal","foldr"
635311219617780058,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311219617790059,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311219617800059,"Parsed as literal","func"
635311219617810060,"Parsed as literal",""
635311219617820060,"Invalid operator","@func","6"
635311219617820060,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311219617830061,"Parsed as literal","func"
635311219617840061,"Parsed as literal",""
635311219617840061,"Invalid operator","@func","6"
635311219617850062,"Parsed as literal","@func"
635311219617860063,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311219617870063,"Parsed as literal","list"
635311219617870063,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311219617880064,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311219617890064,"Parsed as literal",""
635311219617890064,"Parsed as literal","list"
635311219617900065,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219617910065,"Parsed as literal",""
635311219617910065,"Parsed as literal",""
635311219617920066,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311219617930067,"Parsed as literal"," "
635311219617930067,"Parsed as literal","list"
635311219617940067,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311219617950068,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311219617960068,"Parsed as literal","foldr"
635311219617960068,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311219617970069,"Parsed as literal","@func"
635311219617980069,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311219617980069,"Parsed as literal","list"
635311219617990070,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311219618000071,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311219618000071,"Parsed as literal",""
635311219618010071,"Parsed as literal","list"
635311219618020072,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219618020072,"Parsed as literal",""
635311219618030072,"Parsed as literal",""
635311219618040073,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311219618040073,"Parsed as literal"," "
635311219618050073,"Parsed as literal","list"
635311219618060074,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311219618070075,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311219618070075,"Parsed as literal","foldr"
635311219618080075,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311219618090076,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311219618100076,"Parsed as literal","func"
635311219618100076,"Parsed as literal",""
635311219618110077,"Invalid operator","@func","6"
635311219618110077,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311219618120078,"Parsed as literal","func"
635311219618130078,"Parsed as literal",""
635311219618140079,"Invalid operator","@func","6"
635311219618140079,"Parsed as literal","@func"
635311219618150079,"Parsed as literal","list"
635311219618160080,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311219618170080,"Parsed as literal","func"
635311219618170080,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311219618180081,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311219618190082,"Parsed as literal","foldr"
635311219618200082,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311219618200082,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311219618210083,"Parsed as literal","func"
635311219618220083,"Parsed as literal",""
635311219618220083,"Invalid operator","@func","33"
635311219618230084,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311219618240084,"Parsed as literal","func"
635311219618240084,"Parsed as literal",""
635311219618250085,"Invalid operator","@func","33"
635311219618260086,"Parsed as literal","@func"
635311219618260086,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311219618270086,"Parsed as literal","superHead"
635311219618280087,"Parsed as literal","list"
635311219618280087,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311219618290087,"Parsed as literal","last"
635311219618300088,"Parsed as literal","list"
635311219618310088,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311219618310088,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311219618320089,"Parsed as literal","foldr"
635311219618330090,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311219618330090,"Parsed as literal","@func"
635311219618340090,"Parsed as literal","list"
635311219618350091,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311219618350091,"Parsed as literal","func"
635311219618360091,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311219618370092,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311219618380092,"Parsed as literal","foldr"
635311219618380092,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311219618390093,"Parsed as literal","@func"
635311219618400094,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311219618400094,"Parsed as literal","superHead"
635311219618410094,"Parsed as literal","list"
635311219618420095,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311219618430095,"Parsed as literal","last"
635311219618430095,"Parsed as literal","list"
635311219618440096,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311219618450096,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311219618460097,"Parsed as literal","superHead"
635311219618460097,"Parsed as literal","list"
635311219618470098,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311219618480098,"Parsed as literal","reverse"
635311219618480098,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311219618490099,"Parsed as literal",""
635311219618500099,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311219618510100,"Parsed as literal","reverse"
635311219618510100,"Parsed as literal","list"
635311219618520100,"StepEvaluate","->","Changed","Declared @map"
635311219618530101,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311219618530101,"StepEvaluate","->","Changed","Declared @map"
635311219618540102,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311219618550102,"StepEvaluate","->","Changed","Declared @filter"
635311219618550102,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311219618560103,"StepEvaluate","->","Changed","Declared @filter"
635311219618570103,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311219618570103,"StepEvaluate","->","Changed","Declared @filter"
635311219618580104,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311219618590104,"StepEvaluate","->","Changed","Declared @call"
635311219618590104,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311219618600105,"StepEvaluate","->","Changed","Declared @curry"
635311219618610106,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311219618610106,"StepEvaluate","->","Changed","Declared @curry"
635311219618620106,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311219618630107,"StepEvaluate","->","Changed","Declared @fold"
635311219618630107,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311219618640107,"StepEvaluate","->","Changed","Declared @fold"
635311219618640107,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311219618650108,"StepEvaluate","->","Changed","Declared @fold"
635311219618660108,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311219618660108,"StepEvaluate","->","Changed","Declared @foldr"
635311219618670109,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311219618680110,"StepEvaluate","->","Changed","Declared @foldr"
635311219618680110,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311219618690110,"StepEvaluate","->","Changed","Declared @foldr"
635311219618700111,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311219618700111,"StepEvaluate","==","Unchanged","=="
635311219618710111,"StepEvaluate","@","Changed","@"
635311219618710111,"StepEvaluate","@","Changed","@"
635311219618720112,"StepEvaluate","==","Unchanged","=="
635311219618730112,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311219618730112,"StepEvaluate","superHead","Unchanged","superHead"
635311219618740113,"StepEvaluate",",","Unchanged",","
635311219618750114,"StepEvaluate","list","Unchanged","list"
635311219618750114,"StepEvaluate","@","Changed","@"
635311219618760114,"StepEvaluate","==","Unchanged","=="
635311219618770115,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311219618770115,"StepEvaluate","superHead","Unchanged","superHead"
635311219618780115,"StepEvaluate",",","Unchanged",","
635311219618780115,"StepEvaluate","list","Unchanged","list"
635311219618790116,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311219618800116,"StepEvaluate","reverse","Unchanged","reverse"
635311219618800116,"StepEvaluate",",","Unchanged",","
635311219618810117,"StepEvaluate","tail","Unchanged","tail"
635311219618820118,"StepEvaluate","@","Changed","@"
635311219618820118,"StepEvaluate","==","Unchanged","=="
635311219618830118,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311219618830118,"StepEvaluate","superHead","Unchanged","superHead"
635311219618840119,"StepEvaluate",",","Unchanged",","
635311219618850119,"StepEvaluate","list","Unchanged","list"
635311219618850119,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311219618860120,"StepEvaluate","reverse","Unchanged","reverse"
635311219618870120,"StepEvaluate",",","Unchanged",","
635311219618870120,"StepEvaluate","tail","Unchanged","tail"
635311219618880121,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311219618880121,"StepEvaluate","reverse","Unchanged","reverse"
635311219618890122,"StepEvaluate",",","Unchanged",","
635311219618900122,"StepEvaluate","list","Unchanged","list"
635311219618900122,"StepEvaluate","[]","Changed","File imported"
635311219618910123,"StepEvaluate","File imported","Unchanged","File imported"
635311219618920123,"StepEvaluate","@","Changed","@"
635311219618920123,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219618930124,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219618940124,"StepEvaluate",",","Unchanged",","
635311219618940124,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219618950125,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219618960126,"StepEvaluate","PAT@-M","Changed","[]"
635311219618960126,"StepEvaluate","SEL@import","Changed","[]"
635311219618970126,"StepEvaluate","@","Changed","[]"
635311219618980127,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311219618980127,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311219618990127,"Parsed as literal","zipWith"
635311219619000128,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311219619010128,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311219619010128,"Parsed as literal","func"
635311219619020129,"Parsed as literal",""
635311219619020129,"Invalid operator","@func","8"
635311219619030130,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311219619040130,"Parsed as literal","func"
635311219619040130,"Parsed as literal",""
635311219619050131,"Invalid operator","@func","8"
635311219619060131,"Parsed as literal","@func"
635311219619060131,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311219619070132,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219619080132,"Parsed as literal",""
635311219619080132,"Parsed as literal",""
635311219619090133,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311219619100134,"Parsed as literal",""
635311219619100134,"Parsed as literal",""
635311219619110134,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311219619120135,"Parsed as literal",""
635311219619120135,"Parsed as literal",""
635311219619130135,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311219619140136,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311219619150136,"Parsed as literal","zipWith"
635311219619150136,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311219619160137,"Parsed as literal","@func"
635311219619170138,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311219619170138,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219619180138,"Parsed as literal",""
635311219619190139,"Parsed as literal",""
635311219619190139,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311219619200139,"Parsed as literal",""
635311219619210140,"Parsed as literal",""
635311219619210140,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311219619220140,"Parsed as literal",""
635311219619230141,"Parsed as literal",""
635311219619240142,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311219619250142,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311219619250142,"Parsed as literal","zipWith"
635311219619260143,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311219619270143,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311219619270143,"Parsed as literal","func"
635311219619280144,"Parsed as literal",""
635311219619280144,"Invalid operator","@func","8"
635311219619290144,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311219619300145,"Parsed as literal","func"
635311219619300145,"Parsed as literal",""
635311219619310146,"Invalid operator","@func","8"
635311219619320146,"Parsed as literal","@func"
635311219619320146,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311219619330147,"Parsed as literal","list1"
635311219619340147,"Parsed as literal","list2"
635311219619350148,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311219619350148,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311219619360148,"Parsed as literal","func"
635311219619370149,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311219619370149,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311219619380150,"Parsed as literal",""
635311219619390150,"Parsed as literal","list1"
635311219619390150,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311219619400151,"Parsed as literal",""
635311219619410151,"Parsed as literal","list2"
635311219619420152,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311219619420152,"Parsed as literal","zipWith"
635311219619430152,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311219619430152,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311219619440153,"Parsed as literal","func"
635311219619450154,"Parsed as literal",""
635311219619450154,"Invalid operator","@func","64"
635311219619460154,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311219619470155,"Parsed as literal","func"
635311219619470155,"Parsed as literal",""
635311219619480155,"Invalid operator","@func","64"
635311219619490156,"Parsed as literal","@func"
635311219619490156,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311219619500156,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311219619510157,"Parsed as literal",""
635311219619510157,"Parsed as literal","list1"
635311219619520158,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311219619530158,"Parsed as literal",""
635311219619530158,"Parsed as literal","list2"
635311219619540159,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311219619550159,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311219619550159,"Parsed as literal","zipWith"
635311219619560160,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311219619570160,"Parsed as literal","@func"
635311219619570160,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311219619580161,"Parsed as literal","list1"
635311219619590162,"Parsed as literal","list2"
635311219619600162,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311219619600162,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311219619610163,"Parsed as literal","func"
635311219619620163,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311219619630164,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311219619630164,"Parsed as literal",""
635311219619640164,"Parsed as literal","list1"
635311219619650165,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311219619650165,"Parsed as literal",""
635311219619660166,"Parsed as literal","list2"
635311219619670166,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311219619670166,"Parsed as literal","zipWith"
635311219619680167,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311219619690167,"Parsed as literal","@func"
635311219619690167,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311219619700168,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311219619710168,"Parsed as literal",""
635311219619710168,"Parsed as literal","list1"
635311219619720169,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311219619730170,"Parsed as literal",""
635311219619730170,"Parsed as literal","list2"
635311219619740170,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311219619750171,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311219619760171,"Parsed as literal","count"
635311219619760171,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219619770172,"Parsed as literal",""
635311219619780172,"Parsed as literal",""
635311219619780172,"Parsed as literal"," 0"
635311219619790173,"Invalid operator","@count([]) -> 0","0"
635311219619800174,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311219619800174,"Parsed as literal","count"
635311219619810174,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219619820175,"Parsed as literal",""
635311219619820175,"Parsed as literal",""
635311219619830175,"Parsed as literal"," 0"
635311219619840176,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311219619840176,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311219619850176,"Parsed as literal","count"
635311219619860177,"Parsed as literal","list"
635311219619860177,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311219619870178,"Parsed as literal"," 1 "
635311219619880178,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311219619880178,"Parsed as literal","count"
635311219619890179,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219619900179,"Parsed as literal",""
635311219619910180,"Parsed as literal","list"
635311219619910180,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311219619920180,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311219619930181,"Parsed as literal","count"
635311219619930181,"Parsed as literal","list"
635311219619940182,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311219619950182,"Parsed as literal"," 1 "
635311219619950182,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311219619960183,"Parsed as literal","count"
635311219619970183,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219619970183,"Parsed as literal",""
635311219619980184,"Parsed as literal","list"
635311219619990184,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311219620000185,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311219620000185,"Parsed as literal","skip"
635311219620010186,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311219620010186,"Parsed as literal","0"
635311219620020186,"Parsed as literal","list"
635311219620030187,"Parsed as literal"," list"
635311219620040187,"Invalid operator","@skip(0,list) -> list","0"
635311219620040187,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311219620050188,"Parsed as literal","skip"
635311219620060188,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311219620060188,"Parsed as literal","0"
635311219620070189,"Parsed as literal","list"
635311219620080190,"Parsed as literal"," list"
635311219620080190,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311219620090190,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311219620100191,"Parsed as literal","skip"
635311219620100191,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219620110191,"Parsed as literal","n"
635311219620120192,"Parsed as literal","list"
635311219620130192,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311219620130192,"Parsed as literal","skip"
635311219620140193,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311219620150194,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219620150194,"Parsed as literal","n"
635311219620160194,"Parsed as literal","1"
635311219620170195,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219620170195,"Parsed as literal",""
635311219620180195,"Parsed as literal","list"
635311219620190196,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311219620190196,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311219620200196,"Parsed as literal","skip"
635311219620210197,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219620210197,"Parsed as literal","n"
635311219620220198,"Parsed as literal","list"
635311219620230198,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311219620230198,"Parsed as literal","skip"
635311219620240199,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311219620250199,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219620250199,"Parsed as literal","n"
635311219620260200,"Parsed as literal","1"
635311219620270200,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219620270200,"Parsed as literal",""
635311219620280201,"Parsed as literal","list"
635311219620290202,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311219620290202,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311219620300202,"Parsed as literal","take"
635311219620310203,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311219620320203,"Parsed as literal","1"
635311219620320203,"Parsed as literal","list"
635311219620340204,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311219620350205,"Parsed as literal"," "
635311219620360206,"Parsed as literal","list"
635311219620360206,"Invalid operator","@take(1,list) -> h:list","0"
635311219620370206,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311219620380207,"Parsed as literal","take"
635311219620380207,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311219620390207,"Parsed as literal","1"
635311219620400208,"Parsed as literal","list"
635311219620400208,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311219620410208,"Parsed as literal"," "
635311219620420209,"Parsed as literal","list"
635311219620430210,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311219620430210,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311219620440210,"Parsed as literal","take"
635311219620450211,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219620450211,"Parsed as literal","n"
635311219620460211,"Parsed as literal","list"
635311219620470212,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311219620470212,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311219620480212,"Parsed as literal"," "
635311219620490213,"Parsed as literal","list "
635311219620490213,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311219620500214,"Parsed as literal","take"
635311219620510214,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311219620510214,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219620520215,"Parsed as literal","n"
635311219620530215,"Parsed as literal","1"
635311219620530215,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311219620540216,"Parsed as literal",""
635311219620550216,"Parsed as literal","list"
635311219620550216,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311219620560217,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311219620570218,"Parsed as literal","take"
635311219620570218,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311219620580218,"Parsed as literal","n"
635311219620590219,"Parsed as literal","list"
635311219620600219,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311219620600219,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311219620610220,"Parsed as literal"," "
635311219620620221,"Parsed as literal","list "
635311219620620221,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311219620630221,"Parsed as literal","take"
635311219620640222,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311219620640222,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219620650222,"Parsed as literal","n"
635311219620660223,"Parsed as literal","1"
635311219620660223,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311219620670223,"Parsed as literal",""
635311219620680224,"Parsed as literal","list"
635311219620690225,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311219620700225,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311219620700225,"Parsed as literal","nthItem"
635311219620710226,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311219620710226,"Parsed as literal","list"
635311219620720226,"Parsed as literal","0"
635311219620730227,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219620740227,"Parsed as literal",""
635311219620740227,"Parsed as literal",""
635311219620750228,"Invalid operator","@nthItem(list,0) -> []","0"
635311219620760229,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311219620760229,"Parsed as literal","nthItem"
635311219620770229,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311219620780230,"Parsed as literal","list"
635311219620780230,"Parsed as literal","0"
635311219620790230,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311219620800231,"Parsed as literal",""
635311219620800231,"Parsed as literal",""
635311219620810231,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311219620820232,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311219620830233,"Parsed as literal","nthItem"
635311219620830233,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311219620840233,"Parsed as literal","list"
635311219620850234,"Parsed as literal","1"
635311219620850234,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311219620860234,"Parsed as literal"," "
635311219620870235,"Parsed as literal","list"
635311219620870235,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311219620880235,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311219620890236,"Parsed as literal","nthItem"
635311219620890236,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311219620900237,"Parsed as literal","list"
635311219620910237,"Parsed as literal","1"
635311219620910237,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311219620920238,"Parsed as literal"," "
635311219620930238,"Parsed as literal","list"
635311219620940239,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311219620940239,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311219620950239,"Parsed as literal","nthItem"
635311219620960240,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311219620970241,"Parsed as literal","list"
635311219620980241,"Parsed as literal","n"
635311219620990242,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311219620990242,"Parsed as literal","nthItem"
635311219621000242,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311219621010243,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311219621010243,"Parsed as literal",""
635311219621020243,"Parsed as literal","list"
635311219621030244,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311219621030244,"Parsed as literal","n"
635311219621040245,"Parsed as literal","1"
635311219621050245,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311219621060246,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311219621060246,"Parsed as literal","nthItem"
635311219621070246,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311219621070246,"Parsed as literal","list"
635311219621080247,"Parsed as literal","n"
635311219621090247,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311219621100248,"Parsed as literal","nthItem"
635311219621100248,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311219621110249,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311219621120249,"Parsed as literal",""
635311219621120249,"Parsed as literal","list"
635311219621130250,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311219621140250,"Parsed as literal","n"
635311219621140250,"Parsed as literal","1"
635311219621150251,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311219621160251,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311219621170252,"Parsed as literal","makeRange"
635311219621170252,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311219621180253,"Parsed as literal","a"
635311219621190253,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311219621190253,"Parsed as literal","b"
635311219621200254,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311219621210254,"Parsed as literal","a"
635311219621210254,"Parsed as literal","b"
635311219621220255,"Parsed as literal"," a"
635311219621230255,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311219621230255,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311219621240256,"Parsed as literal","makeRange"
635311219621250257,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311219621250257,"Parsed as literal","a"
635311219621260257,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311219621270258,"Parsed as literal","b"
635311219621270258,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311219621280258,"Parsed as literal","a"
635311219621290259,"Parsed as literal","b"
635311219621290259,"Parsed as literal"," a"
635311219621300259,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311219621310260,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311219621320261,"Parsed as literal","makeRange"
635311219621320261,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311219621330261,"Parsed as literal","a"
635311219621340262,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311219621340262,"Parsed as literal","b"
635311219621350262,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311219621360263,"Parsed as literal","a"
635311219621360263,"Parsed as literal","b"
635311219621370263,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311219621380264,"Parsed as literal"," a "
635311219621380264,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311219621390265,"Parsed as literal","makeRange"
635311219621400265,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311219621400265,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311219621410266,"Parsed as literal","a"
635311219621420266,"Parsed as literal","1"
635311219621430267,"Parsed as literal","b"
635311219621430267,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311219621440267,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311219621450268,"Parsed as literal","makeRange"
635311219621450268,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311219621460269,"Parsed as literal","a"
635311219621470269,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311219621470269,"Parsed as literal","b"
635311219621480270,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311219621490270,"Parsed as literal","a"
635311219621490270,"Parsed as literal","b"
635311219621500271,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311219621510271,"Parsed as literal"," a "
635311219621510271,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311219621520272,"Parsed as literal","makeRange"
635311219621530273,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311219621540273,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311219621540273,"Parsed as literal","a"
635311219621550274,"Parsed as literal","1"
635311219621560274,"Parsed as literal","b"
635311219621570275,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311219621570275,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311219621580275,"Parsed as literal","reverse"
635311219621590276,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311219621590276,"Parsed as literal",""
635311219621600277,"Parsed as literal",""
635311219621610277,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311219621610277,"Parsed as literal",""
635311219621620278,"Parsed as literal",""
635311219621630278,"Invalid operator","@reverse([]) -> []","0"
635311219621630278,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311219621640279,"Parsed as literal","reverse"
635311219621650279,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311219621650279,"Parsed as literal",""
635311219621660280,"Parsed as literal",""
635311219621670281,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311219621670281,"Parsed as literal",""
635311219621680281,"Parsed as literal",""
635311219621690282,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311219621690282,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311219621700282,"Parsed as literal","reverse"
635311219621710283,"Parsed as literal","list"
635311219621720283,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311219621720283,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311219621730284,"Parsed as literal","reverse"
635311219621740285,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219621740285,"Parsed as literal",""
635311219621750285,"Parsed as literal","list"
635311219621760286,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311219621760286,"Parsed as literal"," "
635311219621770286,"Parsed as literal","list"
635311219621780287,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311219621780287,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311219621790287,"Parsed as literal","reverse"
635311219621800288,"Parsed as literal","list"
635311219621800288,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311219621810289,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311219621820289,"Parsed as literal","reverse"
635311219621820289,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311219621830290,"Parsed as literal",""
635311219621840290,"Parsed as literal","list"
635311219621850291,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311219621850291,"Parsed as literal"," "
635311219621860291,"Parsed as literal","list"
635311219621870292,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311219621870292,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311219621880293,"Parsed as literal","max"
635311219621890293,"Parsed as literal","list"
635311219621890293,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311219621900294,"Parsed as literal","fold"
635311219621910294,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311219621910294,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311219621920295,"Parsed as literal","max"
635311219621930295,"Parsed as literal",""
635311219621930295,"Invalid operator","@max","19"
635311219621940296,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311219621950297,"Parsed as literal","max"
635311219621950297,"Parsed as literal",""
635311219621960297,"Invalid operator","@max","19"
635311219621970298,"Parsed as literal","@max"
635311219621980298,"Parsed as literal","list"
635311219621980298,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311219621990299,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311219622000299,"Parsed as literal","max"
635311219622000299,"Parsed as literal","list"
635311219622010300,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311219622020301,"Parsed as literal","fold"
635311219622020301,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311219622030301,"Parsed as literal","@max"
635311219622040302,"Parsed as literal","list"
635311219622040302,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311219622050302,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311219622060303,"Parsed as literal","elementAt"
635311219622060303,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311219622070303,"Parsed as literal","0"
635311219622080304,"Parsed as literal","list"
635311219622080304,"Parsed as literal"," 'list"
635311219622090305,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311219622100305,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311219622100305,"Parsed as literal","elementAt"
635311219622110306,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311219622120306,"Parsed as literal","n"
635311219622120306,"Parsed as literal","list"
635311219622130307,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311219622140307,"Parsed as literal","elementAt"
635311219622150308,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311219622150308,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219622160309,"Parsed as literal","n"
635311219622170309,"Parsed as literal","1"
635311219622170309,"Parsed as literal","list'"
635311219622180310,"StepEvaluate","->","Changed","Declared @zipWith"
635311219622190310,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311219622190310,"StepEvaluate","->","Changed","Declared @zipWith"
635311219622200311,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311219622210311,"StepEvaluate","->","Changed","Declared @count"
635311219622210311,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311219622220312,"StepEvaluate","->","Changed","Declared @count"
635311219622230313,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311219622230313,"StepEvaluate","->","Changed","Declared @skip"
635311219622240313,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311219622250314,"StepEvaluate","->","Changed","Declared @skip"
635311219622250314,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311219622260314,"StepEvaluate","->","Changed","Declared @take"
635311219622260314,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311219622270315,"StepEvaluate","->","Changed","Declared @take"
635311219622280315,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311219622280315,"StepEvaluate","->","Changed","Declared @nthItem"
635311219622290316,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311219622300317,"StepEvaluate","->","Changed","Declared @nthItem"
635311219622300317,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311219622310317,"StepEvaluate","->","Changed","Declared @nthItem"
635311219622320318,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311219622320318,"StepEvaluate","->","Changed","Declared @makeRange"
635311219622330318,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311219622330318,"StepEvaluate","->","Changed","Declared @makeRange"
635311219622340319,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311219622350319,"StepEvaluate","->","Changed","Declared @reverse"
635311219622350319,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311219622360320,"StepEvaluate","->","Changed","Declared @reverse"
635311219622370321,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311219622370321,"StepEvaluate","->","Changed","Declared @max"
635311219622380321,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311219622390322,"StepEvaluate","==","Unchanged","=="
635311219622390322,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311219622400322,"StepEvaluate","elementAt","Unchanged","elementAt"
635311219622400322,"StepEvaluate",",","Unchanged",","
635311219622410323,"StepEvaluate","0","Unchanged","0"
635311219622420323,"StepEvaluate",",","Unchanged",","
635311219622420323,"StepEvaluate","list","Unchanged","list"
635311219622430324,"StepEvaluate","'list","Unchanged","'list"
635311219622440325,"StepEvaluate","==","Unchanged","=="
635311219622440325,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311219622450325,"StepEvaluate","elementAt","Unchanged","elementAt"
635311219622460326,"StepEvaluate",",","Unchanged",","
635311219622460326,"StepEvaluate","n","Unchanged","n"
635311219622470326,"StepEvaluate",",","Unchanged",","
635311219622480327,"StepEvaluate","list","Unchanged","list"
635311219622480327,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311219622490327,"StepEvaluate","elementAt","Unchanged","elementAt"
635311219622500328,"StepEvaluate",",","Unchanged",","
635311219622500328,"StepEvaluate","-","Unchanged","-"
635311219622510329,"StepEvaluate","n","Unchanged","n"
635311219622520329,"StepEvaluate","1","Unchanged","1"
635311219622520329,"StepEvaluate",",","Unchanged",","
635311219622530330,"StepEvaluate","list'","Unchanged","list'"
635311219622530330,"StepEvaluate","[]","Changed","File imported"
635311219622540330,"StepEvaluate","File imported","Unchanged","File imported"
635311219622550331,"StepEvaluate","@","Changed","@"
635311219622550331,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219622560331,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219622570332,"StepEvaluate",",","Unchanged",","
635311219622570332,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219622580333,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219622590333,"StepEvaluate","PAT@-M","Changed","[]"
635311219622590333,"StepEvaluate","SEL@import","Changed","[]"
635311219622600334,"StepEvaluate","@","Changed","[]"
635311219622610334,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311219622620335,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311219622620335,"Parsed as literal","naturalNumbers"
635311219622630335,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219622640336,"Parsed as literal",""
635311219622650337,"Parsed as literal",""
635311219622650337,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311219622660337,"Parsed as literal","naturalNumbers"
635311219622670338,"Parsed as literal","0"
635311219622670338,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311219622680338,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311219622690339,"Parsed as literal","naturalNumbers"
635311219622690339,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219622700339,"Parsed as literal",""
635311219622710340,"Parsed as literal",""
635311219622710340,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311219622720341,"Parsed as literal","naturalNumbers"
635311219622730341,"Parsed as literal","0"
635311219622730341,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311219622740342,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311219622750342,"Parsed as literal","naturalNumbers"
635311219622750342,"Parsed as literal","n"
635311219622760343,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311219622770343,"Parsed as literal"," n "
635311219622780344,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311219622780344,"Parsed as literal","naturalNumbers"
635311219622790345,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311219622800345,"Parsed as literal","n"
635311219622800345,"Parsed as literal","1"
635311219622810346,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311219622820346,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311219622820346,"Parsed as literal","naturalNumbers"
635311219622830347,"Parsed as literal","n"
635311219622840347,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311219622840347,"Parsed as literal"," n "
635311219622850348,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311219622860349,"Parsed as literal","naturalNumbers"
635311219622860349,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311219622870349,"Parsed as literal","n"
635311219622880350,"Parsed as literal","1"
635311219622880350,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311219622890350,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311219622900351,"Parsed as literal","max"
635311219622900351,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311219622910351,"Parsed as literal","a"
635311219622920352,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311219622930353,"Parsed as literal","b"
635311219622930353,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311219622940353,"Parsed as literal","a"
635311219622940353,"Parsed as literal","b"
635311219622950354,"Parsed as literal","b"
635311219622960354,"Invalid operator","@max(a,b|a<b)->b","0"
635311219622970355,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311219622970355,"Parsed as literal","max"
635311219622980355,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311219622990356,"Parsed as literal","a"
635311219622990356,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311219623000357,"Parsed as literal","b"
635311219623010357,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311219623010357,"Parsed as literal","a"
635311219623020358,"Parsed as literal","b"
635311219623030358,"Parsed as literal","b"
635311219623030358,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311219623040359,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311219623050359,"Parsed as literal","max"
635311219623060360,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219623060360,"Parsed as literal","a"
635311219623070361,"Parsed as literal","b"
635311219623090362,"Parsed as literal","a"
635311219623100362,"Invalid operator","@max(a,b)->a","0"
635311219623100362,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311219623110363,"Parsed as literal","max"
635311219623120364,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219623120364,"Parsed as literal","a"
635311219623130364,"Parsed as literal","b"
635311219623140365,"Parsed as literal","a"
635311219623150365,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311219623150365,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311219623160366,"Parsed as literal","random"
635311219623170366,"Parsed as literal","0"
635311219623170366,"Parsed as literal"," 0"
635311219623180367,"Invalid operator","@random(0) -> 0","0"
635311219623190368,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311219623190368,"Parsed as literal","random"
635311219623200368,"Parsed as literal","0"
635311219623210369,"Parsed as literal"," 0"
635311219623220369,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311219623220369,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311219623230370,"Parsed as literal","random"
635311219623240370,"Parsed as literal","n"
635311219623240370,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311219623250371,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311219623260372,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311219623270372,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311219623270372,"Parsed as literal","1664525 "
635311219623280373,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311219623280373,"Parsed as literal","random"
635311219623290373,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219623300374,"Parsed as literal","n"
635311219623300374,"Parsed as literal","1"
635311219623310374,"Parsed as literal"," 1013904223"
635311219623320375,"Parsed as literal",""
635311219623330376,"Parsed as literal"," 4294967296"
635311219623340376,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311219623340376,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311219623350377,"Parsed as literal","random"
635311219623360377,"Parsed as literal","n"
635311219623370378,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311219623370378,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311219623380378,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311219623390379,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311219623390379,"Parsed as literal","1664525 "
635311219623400380,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311219623410380,"Parsed as literal","random"
635311219623410380,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311219623420381,"Parsed as literal","n"
635311219623430381,"Parsed as literal","1"
635311219623430381,"Parsed as literal"," 1013904223"
635311219623440382,"Parsed as literal",""
635311219623450382,"Parsed as literal"," 4294967296"
635311219623450382,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311219623460383,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311219623470384,"Parsed as literal","gcd"
635311219623480384,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311219623480384,"Parsed as literal","a"
635311219623490385,"Parsed as literal","0"
635311219623500385,"Parsed as literal"," a"
635311219623500385,"Invalid operator","@gcd(a,0) -> a","0"
635311219623510386,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311219623520386,"Parsed as literal","gcd"
635311219623520386,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311219623530387,"Parsed as literal","a"
635311219623540388,"Parsed as literal","0"
635311219623540388,"Parsed as literal"," a"
635311219623550388,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311219623560389,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311219623570389,"Parsed as literal","gcd"
635311219623570389,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219623580390,"Parsed as literal","a"
635311219623590390,"Parsed as literal","b"
635311219623590390,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311219623600391,"Parsed as literal","gcd"
635311219623610392,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311219623610392,"Parsed as literal","b"
635311219623620392,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311219623630393,"Parsed as literal","a "
635311219623640393,"Parsed as literal"," b"
635311219623640393,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311219623650394,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311219623660394,"Parsed as literal","gcd"
635311219623660394,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311219623670395,"Parsed as literal","a"
635311219623680396,"Parsed as literal","b"
635311219623680396,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311219623690396,"Parsed as literal","gcd"
635311219623700397,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311219623700397,"Parsed as literal","b"
635311219623710397,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311219623720398,"Parsed as literal","a "
635311219623720398,"Parsed as literal"," b"
635311219623730398,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311219623740399,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311219623750400,"Parsed as literal","gcd"
635311219623750400,"Parsed as literal","list"
635311219623760400,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311219623770401,"Parsed as literal","fold"
635311219623780401,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311219623780401,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311219623790402,"Parsed as literal","gcd"
635311219623790402,"Parsed as literal",""
635311219623800402,"Invalid operator","@gcd","19"
635311219623810403,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311219623810403,"Parsed as literal","gcd"
635311219623820404,"Parsed as literal",""
635311219623830404,"Invalid operator","@gcd","19"
635311219623830404,"Parsed as literal","@gcd"
635311219623840405,"Parsed as literal","list"
635311219623850405,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311219623850405,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311219623860406,"Parsed as literal","gcd"
635311219623870406,"Parsed as literal","list"
635311219623870406,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311219623880407,"Parsed as literal","fold"
635311219623890408,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311219623900408,"Parsed as literal","@gcd"
635311219623900408,"Parsed as literal","list"
635311219623910409,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311219623920409,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311219623920409,"Parsed as literal","fib"
635311219623930410,"Parsed as literal","0"
635311219623940410,"Parsed as literal"," 1"
635311219623940410,"Invalid operator","@fib(0) -> 1","0"
635311219623950411,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311219623960412,"Parsed as literal","fib"
635311219623960412,"Parsed as literal","0"
635311219623970412,"Parsed as literal"," 1"
635311219623980413,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311219623990413,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311219623990413,"Parsed as literal","fib"
635311219624000414,"Parsed as literal","1"
635311219624010414,"Parsed as literal"," 1"
635311219624010414,"Invalid operator","@fib(1) -> 1","0"
635311219624020415,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311219624030416,"Parsed as literal","fib"
635311219624030416,"Parsed as literal","1"
635311219624040416,"Parsed as literal"," 1"
635311219624050417,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311219624060417,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311219624060417,"Parsed as literal","fib"
635311219624070418,"Parsed as literal","n"
635311219624080418,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311219624080418,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311219624090419,"Parsed as literal","fib"
635311219624100420,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311219624110420,"Parsed as literal","n"
635311219624110420,"Parsed as literal","2"
635311219624120421,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311219624120421,"Parsed as literal","fib"
635311219624130421,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219624130421,"Parsed as literal","n"
635311219624140422,"Parsed as literal","1"
635311219624140422,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311219624140422,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311219624150422,"Parsed as literal","fib"
635311219624150422,"Parsed as literal","n"
635311219624160423,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311219624170424,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311219624170424,"Parsed as literal","fib"
635311219624180424,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311219624180424,"Parsed as literal","n"
635311219624190425,"Parsed as literal","2"
635311219624190425,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311219624190425,"Parsed as literal","fib"
635311219624200425,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219624200425,"Parsed as literal","n"
635311219624210426,"Parsed as literal","1"
635311219624220426,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219624220426,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311219624230427,"Parsed as literal","fib2"
635311219624230427,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311219624230427,"Parsed as literal",""
635311219624240428,"Parsed as literal",""
635311219624240428,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219624250428,"Parsed as literal"," 0 "
635311219624250428,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219624260429,"Parsed as literal"," 1 "
635311219624260429,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311219624270429,"Parsed as literal","zipWith"
635311219624270429,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311219624280430,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311219624280430,"Parsed as literal",""
635311219624290430,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219624300431,"Parsed as literal","a"
635311219624300431,"Parsed as literal","b"
635311219624310432,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311219624310432,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219624310432,"Parsed as literal","a"
635311219624320432,"Parsed as literal","b"
635311219624320432,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219624330433,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219624330433,"Parsed as literal","fib2"
635311219624340433,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219624340433,"Parsed as literal",""
635311219624350434,"Parsed as literal",""
635311219624350434,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219624360434,"Parsed as literal"," "
635311219624360434,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219624370435,"Parsed as literal","fib2"
635311219624370435,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219624370435,"Parsed as literal",""
635311219624380436,"Parsed as literal",""
635311219624380436,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311219624390436,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311219624390436,"Parsed as literal",""
635311219624400437,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219624400437,"Parsed as literal","a"
635311219624410437,"Parsed as literal","b"
635311219624410437,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311219624420438,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219624420438,"Parsed as literal","a"
635311219624420438,"Parsed as literal","b"
635311219624430438,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219624430438,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219624430438,"Parsed as literal","fib2"
635311219624430438,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219624440439,"Parsed as literal",""
635311219624440439,"Parsed as literal",""
635311219624440439,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219624450440,"Parsed as literal"," "
635311219624450440,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219624450440,"Parsed as literal","fib2"
635311219624460440,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219624460440,"Parsed as literal",""
635311219624460440,"Parsed as literal",""
635311219624460440,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311219624470441,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311219624470441,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311219624470441,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311219624480441,"Parsed as literal",""
635311219624480441,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219624480441,"Parsed as literal","a"
635311219624490442,"Parsed as literal","b"
635311219624490442,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219624490442,"Parsed as literal","a"
635311219624490442,"Parsed as literal","b"
635311219624500442,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219624500442,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219624500442,"Parsed as literal","fib2"
635311219624510443,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219624510443,"Parsed as literal",""
635311219624510443,"Parsed as literal",""
635311219624510443,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219624520444,"Parsed as literal"," "
635311219624520444,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219624520444,"Parsed as literal","fib2"
635311219624520444,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219624530444,"Parsed as literal",""
635311219624530444,"Parsed as literal",""
635311219624530444,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311219624540445,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311219624540445,"Parsed as literal","fib2"
635311219624540445,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311219624540445,"Parsed as literal",""
635311219624550445,"Parsed as literal",""
635311219624550445,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219624550445,"Parsed as literal"," 0 "
635311219624560446,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311219624560446,"Parsed as literal"," 1 "
635311219624560446,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311219624560446,"Parsed as literal","zipWith"
635311219624570446,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311219624570446,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311219624570446,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311219624580447,"Parsed as literal",""
635311219624580447,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311219624580447,"Parsed as literal","a"
635311219624580447,"Parsed as literal","b"
635311219624590448,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311219624590448,"Parsed as literal","a"
635311219624590448,"Parsed as literal","b"
635311219624600448,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311219624600448,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311219624600448,"Parsed as literal","fib2"
635311219624600448,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311219624610449,"Parsed as literal",""
635311219624610449,"Parsed as literal",""
635311219624610449,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311219624620449,"Parsed as literal"," "
635311219624620449,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311219624620449,"Parsed as literal","fib2"
635311219624620449,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311219624630450,"Parsed as literal",""
635311219624630450,"Parsed as literal",""
635311219624630450,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311219624640450,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311219624640450,"Parsed as literal","fib2"
635311219624640450,"Parsed as literal","n"
635311219624650451,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311219624650451,"Parsed as literal","take"
635311219624650451,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311219624650451,"Parsed as literal","n"
635311219624660452,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311219624660452,"Parsed as literal","fib2"
635311219624660452,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219624660452,"Parsed as literal",""
635311219624670452,"Parsed as literal",""
635311219624670452,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311219624670452,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311219624680453,"Parsed as literal","fib2"
635311219624680453,"Parsed as literal","n"
635311219624680453,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311219624690453,"Parsed as literal","take"
635311219624690453,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311219624700454,"Parsed as literal","n"
635311219624700454,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311219624700454,"Parsed as literal","fib2"
635311219624700454,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311219624710454,"Parsed as literal",""
635311219624710454,"Parsed as literal",""
635311219624710454,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311219624720455,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311219624720455,"Parsed as literal","fac"
635311219624720455,"Parsed as literal","0"
635311219624720455,"Parsed as literal"," 1"
635311219624730456,"Invalid operator","@fac(0) -> 1","0"
635311219624730456,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311219624730456,"Parsed as literal","fac"
635311219624740456,"Parsed as literal","0"
635311219624740456,"Parsed as literal"," 1"
635311219624740456,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311219624740456,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311219624750457,"Parsed as literal","fac"
635311219624750457,"Parsed as literal","n"
635311219624750457,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311219624760457,"Parsed as literal"," n "
635311219624760457,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311219624760457,"Parsed as literal","fac"
635311219624760457,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311219624770458,"Parsed as literal","n"
635311219624770458,"Parsed as literal","1"
635311219624770458,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311219624770458,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311219624780458,"Parsed as literal","fac"
635311219624780458,"Parsed as literal","n"
635311219624780458,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311219624790459,"Parsed as literal"," n "
635311219624790459,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311219624790459,"Parsed as literal","fac"
635311219624790459,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311219624800460,"Parsed as literal","n"
635311219624800460,"Parsed as literal","1"
635311219624800460,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311219624810460,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311219624810460,"Parsed as literal","pow"
635311219624810460,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311219624810460,"Parsed as literal","num"
635311219624820461,"Parsed as literal","0"
635311219624820461,"Parsed as literal"," 1"
635311219624820461,"Invalid operator","@pow(num,0) -> 1","0"
635311219624830461,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311219624830461,"Parsed as literal","pow"
635311219624830461,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311219624830461,"Parsed as literal","num"
635311219624840462,"Parsed as literal","0"
635311219624840462,"Parsed as literal"," 1"
635311219624840462,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311219624850462,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311219624850462,"Parsed as literal","pow"
635311219624850462,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311219624850462,"Parsed as literal","num"
635311219624860463,"Parsed as literal","1"
635311219624860463,"Parsed as literal"," num"
635311219624860463,"Invalid operator","@pow(num,1) -> num","0"
635311219624860463,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311219624870464,"Parsed as literal","pow"
635311219624870464,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311219624870464,"Parsed as literal","num"
635311219624870464,"Parsed as literal","1"
635311219624880464,"Parsed as literal"," num"
635311219624880464,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311219624880464,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311219624890465,"Parsed as literal","pow"
635311219624890465,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311219624890465,"Parsed as literal","num"
635311219624890465,"Parsed as literal"," power"
635311219624900465,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311219624900465,"Parsed as literal"," num "
635311219624900465,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311219624910466,"Parsed as literal","pow"
635311219624910466,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311219624910466,"Parsed as literal","num"
635311219624910466,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311219624920466,"Parsed as literal","power"
635311219624920466,"Parsed as literal","1"
635311219624920466,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311219624930467,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311219624930467,"Parsed as literal","pow"
635311219624930467,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311219624930467,"Parsed as literal","num"
635311219624940468,"Parsed as literal"," power"
635311219624940468,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311219624940468,"Parsed as literal"," num "
635311219624950468,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311219624950468,"Parsed as literal","pow"
635311219624950468,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311219624950468,"Parsed as literal","num"
635311219624960469,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311219624960469,"Parsed as literal","power"
635311219624960469,"Parsed as literal","1"
635311219624970469,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311219624970469,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311219624970469,"Parsed as literal","upArrow"
635311219624970469,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311219624980470,"Parsed as literal","a"
635311219624980470,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311219624980470,"Parsed as literal","b"
635311219624980470,"Parsed as literal","1"
635311219624990470,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311219624990470,"Parsed as literal","pow"
635311219624990470,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311219625000471,"Parsed as literal","a"
635311219625000471,"Parsed as literal","b"
635311219625000471,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311219625000471,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311219625010472,"Parsed as literal","upArrow"
635311219625010472,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311219625010472,"Parsed as literal","a"
635311219625020472,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311219625020472,"Parsed as literal","b"
635311219625020472,"Parsed as literal","1"
635311219625020472,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311219625030473,"Parsed as literal","pow"
635311219625030473,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311219625030473,"Parsed as literal","a"
635311219625030473,"Parsed as literal","b"
635311219625040473,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311219625040473,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311219625040473,"Parsed as literal","upArrow"
635311219625050474,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311219625050474,"Parsed as literal","a"
635311219625050474,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311219625050474,"Parsed as literal","1"
635311219625060474,"Parsed as literal","n"
635311219625060474,"Parsed as literal"," a"
635311219625060474,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311219625070475,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311219625070475,"Parsed as literal","upArrow"
635311219625070475,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311219625070475,"Parsed as literal","a"
635311219625080476,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311219625080476,"Parsed as literal","1"
635311219625080476,"Parsed as literal","n"
635311219625090476,"Parsed as literal"," a"
635311219625090476,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311219625090476,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311219625090476,"Parsed as literal","upArrow"
635311219625100477,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311219625100477,"Parsed as literal","a"
635311219625100477,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311219625110477,"Parsed as literal","b"
635311219625110477,"Parsed as literal","n"
635311219625110477,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311219625110477,"Parsed as literal","upArrow"
635311219625120478,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311219625120478,"Parsed as literal","a"
635311219625120478,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311219625130478,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311219625130478,"Parsed as literal","upArrow"
635311219625130478,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311219625130478,"Parsed as literal","a"
635311219625140479,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311219625140479,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311219625140479,"Parsed as literal","b"
635311219625140479,"Parsed as literal","1"
635311219625150480,"Parsed as literal","n"
635311219625150480,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311219625150480,"Parsed as literal","n"
635311219625160480,"Parsed as literal","1"
635311219625160480,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311219625160480,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311219625160480,"Parsed as literal","upArrow"
635311219625170481,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311219625170481,"Parsed as literal","a"
635311219625170481,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311219625180481,"Parsed as literal","b"
635311219625180481,"Parsed as literal","n"
635311219625180481,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311219625180481,"Parsed as literal","upArrow"
635311219625190482,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311219625190482,"Parsed as literal","a"
635311219625190482,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311219625200482,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311219625200482,"Parsed as literal","upArrow"
635311219625200482,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311219625200482,"Parsed as literal","a"
635311219625210483,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311219625210483,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311219625210483,"Parsed as literal","b"
635311219625210483,"Parsed as literal","1"
635311219625220484,"Parsed as literal","n"
635311219625220484,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311219625220484,"Parsed as literal","n"
635311219625230484,"Parsed as literal","1"
635311219625230484,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311219625230484,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311219625230484,"Parsed as literal","graham"
635311219625240485,"Parsed as literal","0"
635311219625240485,"Parsed as literal"," 4"
635311219625240485,"Invalid operator","@graham(0) -> 4","0"
635311219625250485,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311219625250485,"Parsed as literal","graham"
635311219625250485,"Parsed as literal","0"
635311219625250485,"Parsed as literal"," 4"
635311219625260486,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311219625260486,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311219625260486,"Parsed as literal","graham"
635311219625270486,"Parsed as literal","n"
635311219625270486,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311219625270486,"Parsed as literal","upArrow"
635311219625270486,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311219625280487,"Parsed as literal","3"
635311219625280487,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311219625280487,"Parsed as literal","3"
635311219625290488,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311219625290488,"Parsed as literal","graham"
635311219625290488,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311219625290488,"Parsed as literal","n"
635311219625300488,"Parsed as literal","1"
635311219625300488,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311219625300488,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311219625310489,"Parsed as literal","graham"
635311219625310489,"Parsed as literal","n"
635311219625310489,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311219625310489,"Parsed as literal","upArrow"
635311219625320489,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311219625320489,"Parsed as literal","3"
635311219625320489,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311219625320489,"Parsed as literal","3"
635311219625330490,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311219625330490,"Parsed as literal","graham"
635311219625330490,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311219625340490,"Parsed as literal","n"
635311219625340490,"Parsed as literal","1"
635311219625340490,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311219625350491,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311219625350491,"Parsed as literal","grahamsNumber"
635311219625350491,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219625350491,"Parsed as literal",""
635311219625360492,"Parsed as literal",""
635311219625360492,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311219625360492,"Parsed as literal","graham"
635311219625360492,"Parsed as literal","64"
635311219625370492,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311219625370492,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311219625370492,"Parsed as literal","grahamsNumber"
635311219625380493,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219625380493,"Parsed as literal",""
635311219625380493,"Parsed as literal",""
635311219625380493,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311219625390493,"Parsed as literal","graham"
635311219625390493,"Parsed as literal","64"
635311219625390493,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311219625400494,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311219625400494,"Parsed as literal","ack"
635311219625400494,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311219625400494,"Parsed as literal","0"
635311219625410494,"Parsed as literal","n"
635311219625410494,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311219625410494,"Parsed as literal"," n "
635311219625410494,"Parsed as literal"," 1"
635311219625420495,"Invalid operator","@ack(0,n) -> n + 1","0"
635311219625420495,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311219625420495,"Parsed as literal","ack"
635311219625430496,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311219625430496,"Parsed as literal","0"
635311219625430496,"Parsed as literal","n"
635311219625430496,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311219625440496,"Parsed as literal"," n "
635311219625440496,"Parsed as literal"," 1"
635311219625440496,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311219625450497,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311219625450497,"Parsed as literal","ack"
635311219625450497,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311219625450497,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311219625460497,"Parsed as literal","m"
635311219625460497,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311219625460497,"Parsed as literal","m"
635311219625470498,"Parsed as literal","0"
635311219625470498,"Parsed as literal","0"
635311219625470498,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311219625470498,"Parsed as literal","ack"
635311219625480498,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311219625480498,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311219625480498,"Parsed as literal","m"
635311219625480498,"Parsed as literal","1"
635311219625490499,"Parsed as literal","1"
635311219625490499,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311219625490499,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311219625500500,"Parsed as literal","ack"
635311219625500500,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311219625500500,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311219625500500,"Parsed as literal","m"
635311219625510500,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311219625510500,"Parsed as literal","m"
635311219625510500,"Parsed as literal","0"
635311219625520501,"Parsed as literal","0"
635311219625520501,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311219625520501,"Parsed as literal","ack"
635311219625520501,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311219625530501,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311219625530501,"Parsed as literal","m"
635311219625530501,"Parsed as literal","1"
635311219625530501,"Parsed as literal","1"
635311219625540502,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311219625540502,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311219625540502,"Parsed as literal","ack"
635311219625550502,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311219625550502,"Parsed as literal","m"
635311219625550502,"Parsed as literal","n"
635311219625560503,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311219625560503,"Parsed as literal","ack"
635311219625560503,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311219625560503,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311219625570504,"Parsed as literal","m"
635311219625570504,"Parsed as literal","1"
635311219625570504,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311219625570504,"Parsed as literal","ack"
635311219625580504,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311219625580504,"Parsed as literal","m"
635311219625580504,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219625590505,"Parsed as literal","n"
635311219625590505,"Parsed as literal","1"
635311219625590505,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311219625590505,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311219625600505,"Parsed as literal","ack"
635311219625600505,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311219625600505,"Parsed as literal","m"
635311219625610506,"Parsed as literal","n"
635311219625610506,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311219625610506,"Parsed as literal","ack"
635311219625610506,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311219625620507,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311219625620507,"Parsed as literal","m"
635311219625630507,"Parsed as literal","1"
635311219625630507,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311219625640508,"Parsed as literal","ack"
635311219625640508,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311219625640508,"Parsed as literal","m"
635311219625640508,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311219625650508,"Parsed as literal","n"
635311219625650508,"Parsed as literal","1"
635311219625650508,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311219625660509,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311219625660509,"Parsed as literal","acker"
635311219625660509,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311219625660509,"Parsed as literal","m"
635311219625670509,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311219625670509,"Parsed as literal","n"
635311219625670509,"Parsed as literal","0"
635311219625680510,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311219625680510,"Parsed as literal"," m"
635311219625680510,"Parsed as literal","n"
635311219625680510,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311219625690511,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311219625690511,"Parsed as literal","acker"
635311219625690511,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311219625690511,"Parsed as literal","m"
635311219625700511,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311219625700511,"Parsed as literal","n"
635311219625700511,"Parsed as literal","0"
635311219625710512,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311219625710512,"Parsed as literal"," m"
635311219625710512,"Parsed as literal","n"
635311219625710512,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311219625720512,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311219625720512,"Parsed as literal","acker"
635311219625720512,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311219625730513,"Parsed as literal","m"
635311219625730513,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311219625730513,"Parsed as literal","0"
635311219625730513,"Parsed as literal","1"
635311219625740513,"Parsed as literal"," 0"
635311219625740513,"Invalid operator","@acker(m,0,1) -> 0","0"
635311219625740513,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311219625740513,"Parsed as literal","acker"
635311219625750514,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311219625750514,"Parsed as literal","m"
635311219625750514,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311219625750514,"Parsed as literal","0"
635311219625760515,"Parsed as literal","1"
635311219625760515,"Parsed as literal"," 0"
635311219625760515,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311219625770515,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311219625770515,"Parsed as literal","acker"
635311219625770515,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311219625770515,"Parsed as literal","m"
635311219625780516,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311219625780516,"Parsed as literal","0"
635311219625780516,"Parsed as literal","2"
635311219625790516,"Parsed as literal"," 1"
635311219625790516,"Invalid operator","@acker(m,0,2) -> 1","0"
635311219625790516,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311219625790516,"Parsed as literal","acker"
635311219625800517,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311219625800517,"Parsed as literal","m"
635311219625800517,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311219625810517,"Parsed as literal","0"
635311219625810517,"Parsed as literal","2"
635311219625810517,"Parsed as literal"," 1"
635311219625810517,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311219625820518,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311219625820518,"Parsed as literal","acker"
635311219625820518,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311219625830519,"Parsed as literal","m"
635311219625830519,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311219625830519,"Parsed as literal","0"
635311219625830519,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311219625840519,"Parsed as literal","p"
635311219625840519,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311219625840519,"Parsed as literal","p"
635311219625840519,"Parsed as literal","2"
635311219625850520,"Parsed as literal"," m"
635311219625850520,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311219625850520,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311219625860520,"Parsed as literal","acker"
635311219625860520,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311219625860520,"Parsed as literal","m"
635311219625870521,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311219625870521,"Parsed as literal","0"
635311219625870521,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311219625870521,"Parsed as literal","p"
635311219625880521,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311219625880521,"Parsed as literal","p"
635311219625880521,"Parsed as literal","2"
635311219625880521,"Parsed as literal"," m"
635311219625890522,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311219625890522,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311219625890522,"Parsed as literal","acker"
635311219625900523,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311219625900523,"Parsed as literal","m"
635311219625900523,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311219625900523,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311219625910523,"Parsed as literal","n"
635311219625910523,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311219625910523,"Parsed as literal","n"
635311219625920524,"Parsed as literal","0"
635311219625920524,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311219625920524,"Parsed as literal","p"
635311219625920524,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311219625930524,"Parsed as literal","p"
635311219625930524,"Parsed as literal","0"
635311219625930524,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311219625940525,"Parsed as literal","acker"
635311219625940525,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311219625940525,"Parsed as literal","m"
635311219625940525,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311219625950525,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311219625950525,"Parsed as literal","acker"
635311219625950525,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311219625960526,"Parsed as literal","m"
635311219625960526,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311219625960526,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311219625960526,"Parsed as literal","n"
635311219625970527,"Parsed as literal","1"
635311219625970527,"Parsed as literal","p"
635311219625970527,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311219625980527,"Parsed as literal","p"
635311219625980527,"Parsed as literal","1"
635311219625980527,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311219625980527,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311219625990528,"Parsed as literal","acker"
635311219625990528,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311219625990528,"Parsed as literal","m"
635311219625990528,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311219626000528,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311219626000528,"Parsed as literal","n"
635311219626000528,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311219626010529,"Parsed as literal","n"
635311219626010529,"Parsed as literal","0"
635311219626010529,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311219626010529,"Parsed as literal","p"
635311219626020529,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311219626020529,"Parsed as literal","p"
635311219626020529,"Parsed as literal","0"
635311219626030530,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311219626030530,"Parsed as literal","acker"
635311219626030530,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311219626030530,"Parsed as literal","m"
635311219626040531,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311219626040531,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311219626040531,"Parsed as literal","acker"
635311219626040531,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311219626050531,"Parsed as literal","m"
635311219626050531,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311219626050531,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311219626060532,"Parsed as literal","n"
635311219626060532,"Parsed as literal","1"
635311219626060532,"Parsed as literal","p"
635311219626060532,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311219626070532,"Parsed as literal","p"
635311219626070532,"Parsed as literal","1"
635311219626070532,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311219626080533,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311219626080533,"Parsed as literal","hyper"
635311219626080533,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311219626080533,"Parsed as literal","0"
635311219626090533,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219626090533,"Parsed as literal","a"
635311219626090533,"Parsed as literal","b"
635311219626100534,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311219626100534,"Parsed as literal"," b"
635311219626100534,"Parsed as literal","1"
635311219626100534,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311219626110535,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311219626110535,"Parsed as literal","hyper"
635311219626110535,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311219626110535,"Parsed as literal","0"
635311219626120535,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219626120535,"Parsed as literal","a"
635311219626120535,"Parsed as literal","b"
635311219626130536,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311219626130536,"Parsed as literal"," b"
635311219626130536,"Parsed as literal","1"
635311219626130536,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311219626140536,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311219626140536,"Parsed as literal","hyper"
635311219626140536,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311219626150537,"Parsed as literal","1"
635311219626150537,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219626150537,"Parsed as literal","a"
635311219626150537,"Parsed as literal","0"
635311219626160537,"Parsed as literal"," a"
635311219626160537,"Invalid operator","@hyper(1,a,0) -> a","0"
635311219626160537,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311219626170538,"Parsed as literal","hyper"
635311219626170538,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311219626170538,"Parsed as literal","1"
635311219626170538,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219626180539,"Parsed as literal","a"
635311219626180539,"Parsed as literal","0"
635311219626180539,"Parsed as literal"," a"
635311219626180539,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311219626190539,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311219626190539,"Parsed as literal","hyper"
635311219626190539,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311219626200540,"Parsed as literal","2"
635311219626200540,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219626200540,"Parsed as literal","a"
635311219626200540,"Parsed as literal","0"
635311219626210540,"Parsed as literal"," 0"
635311219626210540,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311219626210540,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311219626220541,"Parsed as literal","hyper"
635311219626220541,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311219626220541,"Parsed as literal","2"
635311219626220541,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311219626230541,"Parsed as literal","a"
635311219626230541,"Parsed as literal","0"
635311219626230541,"Parsed as literal"," 0"
635311219626240542,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311219626240542,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311219626240542,"Parsed as literal","hyper"
635311219626240542,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311219626250543,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311219626250543,"Parsed as literal","n"
635311219626250543,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311219626250543,"Parsed as literal","n"
635311219626260543,"Parsed as literal","2"
635311219626260543,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311219626260543,"Parsed as literal","a"
635311219626270544,"Parsed as literal","0"
635311219626270544,"Parsed as literal"," 1"
635311219626270544,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311219626270544,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311219626280544,"Parsed as literal","hyper"
635311219626280544,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311219626280544,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311219626290545,"Parsed as literal","n"
635311219626290545,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311219626290545,"Parsed as literal","n"
635311219626290545,"Parsed as literal","2"
635311219626300545,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311219626300545,"Parsed as literal","a"
635311219626300545,"Parsed as literal","0"
635311219626310546,"Parsed as literal"," 1"
635311219626310546,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311219626310546,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311219626320547,"Parsed as literal","hyper"
635311219626320547,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311219626320547,"Parsed as literal","n"
635311219626320547,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219626330547,"Parsed as literal","a"
635311219626330547,"Parsed as literal","b"
635311219626330547,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311219626330547,"Parsed as literal","hyper"
635311219626340548,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311219626340548,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311219626340548,"Parsed as literal","n"
635311219626350548,"Parsed as literal","1"
635311219626350548,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311219626350548,"Parsed as literal","a"
635311219626350548,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311219626360549,"Parsed as literal","hyper"
635311219626360549,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311219626360549,"Parsed as literal","n"
635311219626370549,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311219626370549,"Parsed as literal","a"
635311219626370549,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311219626370549,"Parsed as literal","b"
635311219626380550,"Parsed as literal","1"
635311219626380550,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311219626380550,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311219626380550,"Parsed as literal","hyper"
635311219626390551,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311219626390551,"Parsed as literal","n"
635311219626390551,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311219626390551,"Parsed as literal","a"
635311219626400551,"Parsed as literal","b"
635311219626400551,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311219626400551,"Parsed as literal","hyper"
635311219626410552,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311219626410552,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311219626410552,"Parsed as literal","n"
635311219626420552,"Parsed as literal","1"
635311219626420552,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311219626420552,"Parsed as literal","a"
635311219626420552,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311219626430553,"Parsed as literal","hyper"
635311219626430553,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311219626430553,"Parsed as literal","n"
635311219626440553,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311219626440553,"Parsed as literal","a"
635311219626440553,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311219626440553,"Parsed as literal","b"
635311219626450554,"Parsed as literal","1"
635311219626450554,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311219626450554,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311219626460555,"Parsed as literal","sudan"
635311219626460555,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311219626460555,"Parsed as literal","0"
635311219626460555,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219626470555,"Parsed as literal","x"
635311219626470555,"Parsed as literal","y"
635311219626470555,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311219626480556,"Parsed as literal"," x "
635311219626480556,"Parsed as literal"," y"
635311219626480556,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311219626480556,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311219626490556,"Parsed as literal","sudan"
635311219626490556,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311219626490556,"Parsed as literal","0"
635311219626490556,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219626500557,"Parsed as literal","x"
635311219626500557,"Parsed as literal","y"
635311219626500557,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311219626510557,"Parsed as literal"," x "
635311219626510557,"Parsed as literal"," y"
635311219626510557,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311219626510557,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311219626520558,"Parsed as literal","sudan"
635311219626520558,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311219626520558,"Parsed as literal","n"
635311219626530559,"Parsed as literal","0"
635311219626530559,"Parsed as literal"," x"
635311219626530559,"Invalid operator","@sudan(n,0) -> x","0"
635311219626530559,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311219626540559,"Parsed as literal","sudan"
635311219626540559,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311219626540559,"Parsed as literal","n"
635311219626540559,"Parsed as literal","0"
635311219626550560,"Parsed as literal"," x"
635311219626550560,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311219626550560,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311219626560560,"Parsed as literal","sudan"
635311219626560560,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311219626560560,"Parsed as literal","n"
635311219626570561,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219626570561,"Parsed as literal","x"
635311219626570561,"Parsed as literal","y"
635311219626570561,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219626580561,"Parsed as literal","sudan"
635311219626590562,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219626590562,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219626590562,"Parsed as literal","n"
635311219626600563,"Parsed as literal","1"
635311219626600563,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311219626600563,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311219626610563,"Parsed as literal","sudan"
635311219626610563,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311219626610563,"Parsed as literal","n"
635311219626610563,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311219626620564,"Parsed as literal","x"
635311219626620564,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311219626620564,"Parsed as literal","y"
635311219626620564,"Parsed as literal","1"
635311219626630564,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311219626630564,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311219626630564,"Parsed as literal","sudan"
635311219626640565,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311219626640565,"Parsed as literal","n"
635311219626640565,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311219626640565,"Parsed as literal","x"
635311219626650565,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311219626650565,"Parsed as literal","y"
635311219626650565,"Parsed as literal","1"
635311219626660566,"Parsed as literal","y"
635311219626660566,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311219626660566,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311219626660566,"Parsed as literal","sudan"
635311219626670567,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311219626670567,"Parsed as literal","n"
635311219626670567,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311219626670567,"Parsed as literal","x"
635311219626680567,"Parsed as literal","y"
635311219626680567,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219626680567,"Parsed as literal","sudan"
635311219626690568,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311219626690568,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311219626690568,"Parsed as literal","n"
635311219626700568,"Parsed as literal","1"
635311219626700568,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311219626700568,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311219626700568,"Parsed as literal","sudan"
635311219626710569,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311219626710569,"Parsed as literal","n"
635311219626710569,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311219626710569,"Parsed as literal","x"
635311219626720569,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311219626720569,"Parsed as literal","y"
635311219626720569,"Parsed as literal","1"
635311219626730570,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311219626730570,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311219626730570,"Parsed as literal","sudan"
635311219626730570,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311219626740571,"Parsed as literal","n"
635311219626740571,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311219626740571,"Parsed as literal","x"
635311219626740571,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311219626750571,"Parsed as literal","y"
635311219626750571,"Parsed as literal","1"
635311219626750571,"Parsed as literal","y"
635311219626760572,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311219626760572,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311219626760572,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311219626770572,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311219626770572,"StepEvaluate","->","Changed","Declared @max"
635311219626770572,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311219626770572,"StepEvaluate","->","Changed","Declared @max"
635311219626780573,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311219626780573,"StepEvaluate","->","Changed","Declared @random"
635311219626780573,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311219626790573,"StepEvaluate","->","Changed","Declared @random"
635311219626790573,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311219626790573,"StepEvaluate","->","Changed","Declared @gcd"
635311219626790573,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311219626800574,"StepEvaluate","->","Changed","Declared @gcd"
635311219626800574,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311219626800574,"StepEvaluate","->","Changed","Declared @gcd"
635311219626800574,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311219626810575,"StepEvaluate","->","Changed","Declared @fib"
635311219626810575,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311219626810575,"StepEvaluate","->","Changed","Declared @fib"
635311219626810575,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311219626820575,"StepEvaluate","->","Changed","Declared @fib"
635311219626820575,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311219626820575,"StepEvaluate","->","Changed","Declared @fib2"
635311219626820575,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311219626830576,"StepEvaluate","->","Changed","Declared @fib2"
635311219626830576,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311219626830576,"StepEvaluate","->","Changed","Declared @fac"
635311219626830576,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311219626840576,"StepEvaluate","->","Changed","Declared @fac"
635311219626840576,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311219626840576,"StepEvaluate","->","Changed","Declared @pow"
635311219626840576,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311219626850577,"StepEvaluate","->","Changed","Declared @pow"
635311219626850577,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311219626850577,"StepEvaluate","->","Changed","Declared @pow"
635311219626850577,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311219626860577,"StepEvaluate","->","Changed","Declared @upArrow"
635311219626860577,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311219626860577,"StepEvaluate","->","Changed","Declared @upArrow"
635311219626860577,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311219626870578,"StepEvaluate","->","Changed","Declared @upArrow"
635311219626870578,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311219626870578,"StepEvaluate","->","Changed","Declared @graham"
635311219626880579,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311219626880579,"StepEvaluate","->","Changed","Declared @graham"
635311219626880579,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311219626880579,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311219626890579,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311219626890579,"StepEvaluate","->","Changed","Declared @ack"
635311219626890579,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311219626890579,"StepEvaluate","->","Changed","Declared @ack"
635311219626900580,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311219626900580,"StepEvaluate","->","Changed","Declared @ack"
635311219626900580,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311219626900580,"StepEvaluate","->","Changed","Declared @acker"
635311219626910580,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219626910580,"StepEvaluate","->","Changed","Declared @acker"
635311219626910580,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219626910580,"StepEvaluate","->","Changed","Declared @acker"
635311219626920581,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219626920581,"StepEvaluate","->","Changed","Declared @acker"
635311219626920581,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219626930581,"StepEvaluate","->","Changed","Declared @acker"
635311219626930581,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311219626930581,"StepEvaluate","->","Changed","Declared @hyper"
635311219626930581,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219626940582,"StepEvaluate","->","Changed","Declared @hyper"
635311219626940582,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219626940582,"StepEvaluate","->","Changed","Declared @hyper"
635311219626940582,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219626950583,"StepEvaluate","->","Changed","Declared @hyper"
635311219626950583,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219626950583,"StepEvaluate","->","Changed","Declared @hyper"
635311219626950583,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311219626960583,"StepEvaluate","->","Changed","Declared @sudan"
635311219626960583,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311219626960583,"StepEvaluate","->","Changed","Declared @sudan"
635311219626960583,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311219626970584,"StepEvaluate","->","Changed","Declared @sudan"
635311219626970584,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311219626970584,"StepEvaluate","[]","Changed","File imported"
635311219626980584,"StepEvaluate","File imported","Unchanged","File imported"
635311219626980584,"StepEvaluate","@","Changed","@"
635311219626980584,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219626980584,"StepEvaluate","PAT@","Unchanged","PAT@"
635311219626990585,"StepEvaluate",",","Unchanged",","
635311219626990585,"StepEvaluate","@Arg","Changed","@Arg-M"
635311219626990585,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311219626990585,"StepEvaluate","PAT@-M","Changed","[]"
635311219627000585,"StepEvaluate","SEL@import","Changed","[]"
635311219627000585,"StepEvaluate","@","Changed","[]"
635311219627000585,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311219627010586,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311219627010586,"Parsed as literal","quickSort"
635311219627010586,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219627010586,"Parsed as literal",""
635311219627020587,"Parsed as literal",""
635311219627020587,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219627020587,"Parsed as literal",""
635311219627030587,"Parsed as literal",""
635311219627030587,"Invalid operator","@quickSort([]) -> []","0"
635311219627030587,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311219627030587,"Parsed as literal","quickSort"
635311219627040588,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219627040588,"Parsed as literal",""
635311219627040588,"Parsed as literal",""
635311219627040588,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219627050588,"Parsed as literal",""
635311219627050588,"Parsed as literal",""
635311219627060589,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219627060589,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311219627060589,"Parsed as literal","quickSort"
635311219627060589,"Parsed as literal","list"
635311219627070589,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219627070589,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311219627070589,"Parsed as literal","quickSort"
635311219627080590,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311219627080590,"Parsed as literal","filter"
635311219627080590,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311219627090591,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311219627090591,"Parsed as literal",""
635311219627090591,"Parsed as literal","i"
635311219627090591,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311219627100591,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219627100591,"Parsed as literal"," i "
635311219627100591,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219627110592,"Parsed as literal"," "
635311219627110592,"Parsed as literal","list"
635311219627110592,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219627110592,"Parsed as literal",""
635311219627120592,"Parsed as literal","list"
635311219627120592,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311219627120592,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311219627120592,"Parsed as literal",""
635311219627130593,"Parsed as literal","i"
635311219627130593,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311219627130593,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219627140593,"Parsed as literal"," i "
635311219627140593,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219627140593,"Parsed as literal"," "
635311219627140593,"Parsed as literal","list"
635311219627150594,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219627150594,"Parsed as literal",""
635311219627150594,"Parsed as literal","list"
635311219627160595,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311219627160595,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311219627160595,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311219627160595,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311219627170595,"Parsed as literal",""
635311219627170595,"Parsed as literal","i"
635311219627170595,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219627170595,"Parsed as literal"," i "
635311219627180596,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219627180596,"Parsed as literal"," "
635311219627180596,"Parsed as literal","list"
635311219627190596,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219627190596,"Parsed as literal",""
635311219627190596,"Parsed as literal","list"
635311219627200597,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219627200597,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311219627200597,"Parsed as literal"," "
635311219627200597,"Parsed as literal","list "
635311219627210597,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311219627210597,"Parsed as literal","quickSort"
635311219627210597,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311219627220598,"Parsed as literal","filter"
635311219627220598,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311219627220598,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311219627220598,"Parsed as literal",""
635311219627230599,"Parsed as literal","i"
635311219627230599,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311219627230599,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219627240599,"Parsed as literal"," i "
635311219627240599,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219627240599,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219627240599,"Parsed as literal"," "
635311219627250600,"Parsed as literal","list"
635311219627250600,"Parsed as literal","1"
635311219627250600,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219627250600,"Parsed as literal",""
635311219627260600,"Parsed as literal","list"
635311219627260600,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311219627260600,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311219627270601,"Parsed as literal",""
635311219627270601,"Parsed as literal","i"
635311219627270601,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311219627270601,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219627280601,"Parsed as literal"," i "
635311219627280601,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219627280601,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219627280601,"Parsed as literal"," "
635311219627290602,"Parsed as literal","list"
635311219627290602,"Parsed as literal","1"
635311219627290602,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219627290602,"Parsed as literal",""
635311219627300603,"Parsed as literal","list"
635311219627300603,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311219627300603,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311219627310603,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311219627310603,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311219627310603,"Parsed as literal",""
635311219627320604,"Parsed as literal","i"
635311219627320604,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219627320604,"Parsed as literal"," i "
635311219627320604,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219627330604,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219627330604,"Parsed as literal"," "
635311219627330604,"Parsed as literal","list"
635311219627330604,"Parsed as literal","1"
635311219627340605,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219627340605,"Parsed as literal",""
635311219627340605,"Parsed as literal","list"
635311219627350605,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311219627350605,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311219627350605,"Parsed as literal","quickSort"
635311219627350605,"Parsed as literal","list"
635311219627360606,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219627360606,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311219627360606,"Parsed as literal","quickSort"
635311219627370607,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311219627370607,"Parsed as literal","filter"
635311219627370607,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311219627380607,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311219627380607,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311219627380607,"Parsed as literal",""
635311219627380607,"Parsed as literal","i"
635311219627390608,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311219627390608,"Parsed as literal"," i "
635311219627390608,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311219627390608,"Parsed as literal"," "
635311219627400608,"Parsed as literal","list"
635311219627400608,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311219627400608,"Parsed as literal",""
635311219627410609,"Parsed as literal","list"
635311219627410609,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311219627410609,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311219627410609,"Parsed as literal"," "
635311219627420609,"Parsed as literal","list "
635311219627420609,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311219627420609,"Parsed as literal","quickSort"
635311219627430610,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311219627430610,"Parsed as literal","filter"
635311219627430610,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311219627440611,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311219627440611,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311219627440611,"Parsed as literal",""
635311219627440611,"Parsed as literal","i"
635311219627450611,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311219627450611,"Parsed as literal"," i "
635311219627450611,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311219627450611,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311219627460612,"Parsed as literal"," "
635311219627460612,"Parsed as literal","list"
635311219627460612,"Parsed as literal","1"
635311219627470612,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311219627470612,"Parsed as literal",""
635311219627470612,"Parsed as literal","list"
635311219627480613,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311219627480613,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311219627480613,"Parsed as literal","mergeSort"
635311219627480613,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219627490613,"Parsed as literal",""
635311219627490613,"Parsed as literal",""
635311219627490613,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219627490613,"Parsed as literal",""
635311219627500614,"Parsed as literal",""
635311219627500614,"Invalid operator","@mergeSort([]) -> []","0"
635311219627500614,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311219627500614,"Parsed as literal","mergeSort"
635311219627510615,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311219627510615,"Parsed as literal",""
635311219627510615,"Parsed as literal",""
635311219627520615,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311219627520615,"Parsed as literal",""
635311219627520615,"Parsed as literal",""
635311219627520615,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311219627530616,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311219627530616,"Parsed as literal","mergeSort"
635311219627530616,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311219627530616,"Parsed as literal","list"
635311219627540616,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311219627540616,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311219627540616,"Parsed as literal",""
635311219627550617,"Parsed as literal","list"
635311219627550617,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311219627550617,"Parsed as literal",""
635311219627550617,"Parsed as literal",""
635311219627560617,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311219627560617,"Parsed as literal"," "
635311219627560617,"Parsed as literal","list"
635311219627560617,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311219627570618,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311219627570618,"Parsed as literal","mergeSort"
635311219627570618,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311219627580619,"Parsed as literal","list"
635311219627590619,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311219627590619,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311219627590619,"Parsed as literal",""
635311219627590619,"Parsed as literal","list"
635311219627600620,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311219627600620,"Parsed as literal",""
635311219627600620,"Parsed as literal",""
635311219627610620,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311219627610620,"Parsed as literal"," "
635311219627610620,"Parsed as literal","list"
635311219627620621,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311219627620621,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311219627620621,"Parsed as literal","mergeSort"
635311219627630621,"Parsed as literal","list"
635311219627630621,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311219627630621,"Parsed as literal","merge"
635311219627640622,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311219627640622,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311219627640622,"Parsed as literal","mergeSort"
635311219627650623,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311219627650623,"Parsed as literal","take"
635311219627650623,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311219627650623,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311219627660623,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311219627660623,"Parsed as literal","count"
635311219627660623,"Parsed as literal","list"
635311219627670624,"Parsed as literal","2"
635311219627670624,"Parsed as literal","list"
635311219627670624,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311219627670624,"Parsed as literal","mergeSort"
635311219627680624,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311219627680624,"Parsed as literal","skip"
635311219627680624,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311219627690625,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311219627690625,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311219627690625,"Parsed as literal","count"
635311219627690625,"Parsed as literal","list"
635311219627700625,"Parsed as literal","2"
635311219627700625,"Parsed as literal","list"
635311219627700625,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311219627710626,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311219627710626,"Parsed as literal","mergeSort"
635311219627710626,"Parsed as literal","list"
635311219627720627,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311219627720627,"Parsed as literal","merge"
635311219627720627,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311219627730627,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311219627730627,"Parsed as literal","mergeSort"
635311219627730627,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311219627730627,"Parsed as literal","take"
635311219627740628,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311219627740628,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311219627740628,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311219627750628,"Parsed as literal","count"
635311219627750628,"Parsed as literal","list"
635311219627750628,"Parsed as literal","2"
635311219627750628,"Parsed as literal","list"
635311219627760629,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311219627760629,"Parsed as literal","mergeSort"
635311219627760629,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311219627770629,"Parsed as literal","skip"
635311219627770629,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311219627770629,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311219627770629,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311219627780630,"Parsed as literal","count"
635311219627780630,"Parsed as literal","list"
635311219627780630,"Parsed as literal","2"
635311219627790631,"Parsed as literal","list"
635311219627790631,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311219627790631,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311219627790631,"Parsed as literal","merge"
635311219627800631,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311219627800631,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219627800631,"Parsed as literal",""
635311219627810632,"Parsed as literal",""
635311219627810632,"Parsed as literal","list"
635311219627810632,"Parsed as literal"," list"
635311219627810632,"Invalid operator","@merge([],list) -> list","0"
635311219627820632,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311219627820632,"Parsed as literal","merge"
635311219627820632,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311219627830633,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311219627830633,"Parsed as literal",""
635311219627830633,"Parsed as literal",""
635311219627830633,"Parsed as literal","list"
635311219627840633,"Parsed as literal"," list"
635311219627840633,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311219627840633,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311219627850634,"Parsed as literal","merge"
635311219627850634,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311219627850634,"Parsed as literal","list"
635311219627850634,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219627860635,"Parsed as literal",""
635311219627860635,"Parsed as literal",""
635311219627860635,"Parsed as literal"," list"
635311219627860635,"Invalid operator","@merge(list,[]) -> list","0"
635311219627870635,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311219627870635,"Parsed as literal","merge"
635311219627870635,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311219627880636,"Parsed as literal","list"
635311219627880636,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311219627880636,"Parsed as literal",""
635311219627880636,"Parsed as literal",""
635311219627890636,"Parsed as literal"," list"
635311219627890636,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311219627890636,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311219627900637,"Parsed as literal","merge"
635311219627900637,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311219627900637,"Parsed as literal","left"
635311219627900637,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311219627910637,"Parsed as literal","right "
635311219627910637,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311219627910637,"Parsed as literal"," "
635311219627920638,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311219627920638,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311219627920638,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311219627920638,"Parsed as literal",""
635311219627930639,"Parsed as literal","left "
635311219627930639,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311219627930639,"Parsed as literal"," "
635311219627930639,"Parsed as literal","right"
635311219627940639,"Parsed as literal",""
635311219627940639,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311219627940639,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311219627950640,"Parsed as literal"," "
635311219627950640,"Parsed as literal","left "
635311219627950640,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311219627960640,"Parsed as literal","merge"
635311219627960640,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311219627960640,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311219627960640,"Parsed as literal",""
635311219627970641,"Parsed as literal","left"
635311219627970641,"Parsed as literal","right"
635311219627970641,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311219627980641,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311219627980641,"Parsed as literal","merge"
635311219627980641,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311219627980641,"Parsed as literal","left"
635311219627990642,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311219627990642,"Parsed as literal","right "
635311219627990642,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311219627990642,"Parsed as literal"," "
635311219628000643,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311219628000643,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311219628000643,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311219628010643,"Parsed as literal",""
635311219628010643,"Parsed as literal","left "
635311219628010643,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311219628010643,"Parsed as literal"," "
635311219628020644,"Parsed as literal","right"
635311219628020644,"Parsed as literal",""
635311219628020644,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311219628030644,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311219628030644,"Parsed as literal"," "
635311219628030644,"Parsed as literal","left "
635311219628030644,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311219628040645,"Parsed as literal","merge"
635311219628040645,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311219628040645,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311219628040645,"Parsed as literal",""
635311219628050645,"Parsed as literal","left"
635311219628050645,"Parsed as literal","right"
635311219628050645,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311219628060646,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311219628060646,"Parsed as literal","merge"
635311219628060646,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311219628070647,"Parsed as literal","left"
635311219628070647,"Parsed as literal","right"
635311219628070647,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311219628070647,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311219628080647,"Parsed as literal"," "
635311219628080647,"Parsed as literal","right "
635311219628080647,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311219628090648,"Parsed as literal","merge"
635311219628090648,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311219628090648,"Parsed as literal","left"
635311219628090648,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311219628100648,"Parsed as literal",""
635311219628100648,"Parsed as literal","right"
635311219628100648,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311219628110649,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311219628110649,"Parsed as literal","merge"
635311219628110649,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311219628110649,"Parsed as literal","left"
635311219628120650,"Parsed as literal","right"
635311219628120650,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311219628120650,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311219628120650,"Parsed as literal"," "
635311219628130650,"Parsed as literal","right "
635311219628130650,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311219628130650,"Parsed as literal","merge"
635311219628140651,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311219628140651,"Parsed as literal","left"
635311219628140651,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311219628140651,"Parsed as literal",""
635311219628150651,"Parsed as literal","right"
635311219628150651,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311219628150651,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311219628160652,"Parsed as literal","bubbleSort"
635311219628160652,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311219628160652,"Parsed as literal","list"
635311219628170652,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311219628170652,"Parsed as literal","isSorted"
635311219628170652,"Parsed as literal","list"
635311219628170652,"Parsed as literal"," list"
635311219628180653,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311219628180653,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311219628180653,"Parsed as literal","bubbleSort"
635311219628190654,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311219628190654,"Parsed as literal","list"
635311219628190654,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311219628190654,"Parsed as literal","isSorted"
635311219628200654,"Parsed as literal","list"
635311219628200654,"Parsed as literal"," list"
635311219628200654,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311219628210655,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311219628210655,"Parsed as literal","bubbleSort"
635311219628210655,"Parsed as literal","list"
635311219628210655,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311219628220655,"Parsed as literal","bubbleSort"
635311219628220655,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311219628220655,"Parsed as literal","bubbleSortPass"
635311219628220655,"Parsed as literal","list"
635311219628230656,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311219628230656,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311219628230656,"Parsed as literal","bubbleSort"
635311219628240656,"Parsed as literal","list"
635311219628240656,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311219628240656,"Parsed as literal","bubbleSort"
635311219628250657,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311219628250657,"Parsed as literal","bubbleSortPass"
635311219628250657,"Parsed as literal","list"
635311219628250657,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311219628260658,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311219628260658,"Parsed as literal","bubbleSortPass"
635311219628260658,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219628260658,"Parsed as literal",""
635311219628270658,"Parsed as literal",""
635311219628270658,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219628270658,"Parsed as literal",""
635311219628280659,"Parsed as literal",""
635311219628280659,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311219628280659,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311219628280659,"Parsed as literal","bubbleSortPass"
635311219628290659,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311219628290659,"Parsed as literal",""
635311219628290659,"Parsed as literal",""
635311219628290659,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219628300660,"Parsed as literal",""
635311219628300660,"Parsed as literal",""
635311219628300660,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311219628310660,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311219628310660,"Parsed as literal","bubbleSortPass"
635311219628310660,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311219628310660,"Parsed as literal","list"
635311219628320661,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311219628320661,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311219628320661,"Parsed as literal",""
635311219628330662,"Parsed as literal","list "
635311219628340662,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311219628340662,"Parsed as literal",""
635311219628340662,"Parsed as literal",""
635311219628340662,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311219628350663,"Parsed as literal"," "
635311219628350663,"Parsed as literal","list"
635311219628350663,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311219628360663,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311219628360663,"Parsed as literal","bubbleSortPass"
635311219628360663,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311219628360663,"Parsed as literal","list"
635311219628370664,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311219628370664,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311219628370664,"Parsed as literal",""
635311219628380664,"Parsed as literal","list "
635311219628380664,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311219628380664,"Parsed as literal",""
635311219628380664,"Parsed as literal",""
635311219628390665,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311219628390665,"Parsed as literal"," "
635311219628390665,"Parsed as literal","list"
635311219628400666,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311219628400666,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311219628400666,"Parsed as literal","bubbleSortPass"
635311219628400666,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311219628410666,"Parsed as literal","list"
635311219628410666,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311219628410666,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311219628420667,"Parsed as literal",""
635311219628420667,"Parsed as literal","list "
635311219628420667,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311219628420667,"Parsed as literal"," "
635311219628430667,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311219628430667,"Parsed as literal",""
635311219628430667,"Parsed as literal","list"
635311219628440668,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311219628440668,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311219628440668,"Parsed as literal"," "
635311219628440668,"Parsed as literal","list "
635311219628450668,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311219628450668,"Parsed as literal","bubbleSortPass"
635311219628450668,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311219628450668,"Parsed as literal",""
635311219628460669,"Parsed as literal","list"
635311219628460669,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311219628460669,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311219628470670,"Parsed as literal","bubbleSortPass"
635311219628470670,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311219628470670,"Parsed as literal","list"
635311219628470670,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311219628480670,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311219628480670,"Parsed as literal",""
635311219628480670,"Parsed as literal","list "
635311219628490671,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311219628490671,"Parsed as literal"," "
635311219628490671,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311219628490671,"Parsed as literal",""
635311219628500671,"Parsed as literal","list"
635311219628500671,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311219628500671,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311219628500671,"Parsed as literal"," "
635311219628510672,"Parsed as literal","list "
635311219628510672,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311219628510672,"Parsed as literal","bubbleSortPass"
635311219628520672,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311219628520672,"Parsed as literal",""
635311219628520672,"Parsed as literal","list"
635311219628530673,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311219628530673,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311219628530673,"Parsed as literal","bubbleSortPass"
635311219628530673,"Parsed as literal","list"
635311219628540674,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311219628540674,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311219628540674,"Parsed as literal"," "
635311219628540674,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311219628550674,"Parsed as literal",""
635311219628550674,"Parsed as literal","list "
635311219628550674,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311219628560675,"Parsed as literal","bubbleSortPass"
635311219628560675,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311219628560675,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311219628560675,"Parsed as literal",""
635311219628570675,"Parsed as literal","list "
635311219628570675,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311219628570675,"Parsed as literal"," "
635311219628570675,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311219628580676,"Parsed as literal",""
635311219628580676,"Parsed as literal","list"
635311219628580676,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311219628590676,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311219628590676,"Parsed as literal","bubbleSortPass"
635311219628590676,"Parsed as literal","list"
635311219628590676,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311219628600677,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311219628600677,"Parsed as literal"," "
635311219628600677,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311219628610678,"Parsed as literal",""
635311219628610678,"Parsed as literal","list "
635311219628610678,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311219628610678,"Parsed as literal","bubbleSortPass"
635311219628620678,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311219628620678,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311219628620678,"Parsed as literal",""
635311219628630679,"Parsed as literal","list "
635311219628630679,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311219628630679,"Parsed as literal"," "
635311219628630679,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311219628640679,"Parsed as literal",""
635311219628640679,"Parsed as literal","list"
635311219628640679,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311219628650680,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311219628650680,"Parsed as literal","isSorted"
635311219628650680,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311219628650680,"Parsed as literal",""
635311219628660680,"Parsed as literal",""
635311219628660680,"Parsed as literal"," true"
635311219628660680,"Invalid operator","@isSorted([]) -> true","0"
635311219628660680,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311219628670681,"Parsed as literal","isSorted"
635311219628670681,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311219628670681,"Parsed as literal",""
635311219628680682,"Parsed as literal",""
635311219628680682,"Parsed as literal"," true"
635311219628680682,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311219628680682,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311219628690682,"Parsed as literal","isSorted"
635311219628690682,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311219628690682,"Parsed as literal","list"
635311219628700683,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311219628700683,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311219628700683,"Parsed as literal",""
635311219628700683,"Parsed as literal","list "
635311219628710683,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219628710683,"Parsed as literal",""
635311219628710683,"Parsed as literal",""
635311219628720684,"Parsed as literal"," true"
635311219628720684,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311219628720684,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311219628720684,"Parsed as literal","isSorted"
635311219628730684,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311219628730684,"Parsed as literal","list"
635311219628730684,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311219628740685,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311219628740685,"Parsed as literal",""
635311219628740685,"Parsed as literal","list "
635311219628740685,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311219628750686,"Parsed as literal",""
635311219628750686,"Parsed as literal",""
635311219628750686,"Parsed as literal"," true"
635311219628760686,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311219628760686,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311219628760686,"Parsed as literal","isSorted"
635311219628760686,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311219628770687,"Parsed as literal","list"
635311219628770687,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311219628770687,"Parsed as literal",""
635311219628780687,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311219628780687,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311219628780687,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311219628780687,"Parsed as literal",""
635311219628790688,"Parsed as literal","list "
635311219628790688,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311219628790688,"Parsed as literal"," "
635311219628790688,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311219628800688,"Parsed as literal",""
635311219628800688,"Parsed as literal","list"
635311219628800688,"Parsed as literal",""
635311219628810689,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311219628810689,"Parsed as literal","isSorted"
635311219628810689,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311219628810689,"Parsed as literal",""
635311219628820690,"Parsed as literal","list"
635311219628820690,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311219628820690,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311219628830690,"Parsed as literal","isSorted"
635311219628830690,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311219628830690,"Parsed as literal","list"
635311219628830690,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311219628840691,"Parsed as literal",""
635311219628840691,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311219628840691,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311219628850691,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311219628850691,"Parsed as literal",""
635311219628850691,"Parsed as literal","list "
635311219628850691,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311219628860692,"Parsed as literal"," "
635311219628860692,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311219628860692,"Parsed as literal",""
635311219628860692,"Parsed as literal","list"
635311219628870692,"Parsed as literal",""
635311219628870692,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311219628870692,"Parsed as literal","isSorted"
635311219628880693,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311219628880693,"Parsed as literal",""
635311219628880693,"Parsed as literal","list"
635311219628880693,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311219628890694,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311219628890694,"Parsed as literal","isSorted"
635311219628890694,"Parsed as literal","list"
635311219628900694,"Parsed as literal"," false"
635311219628900694,"Invalid operator","@isSorted(list) -> false","0"
635311219628900694,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311219628900694,"Parsed as literal","isSorted"
635311219628910695,"Parsed as literal","list"
635311219628910695,"Parsed as literal"," false"
635311219628910695,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311219628910695,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311219628920695,"Parsed as literal","insertionSort"
635311219628920695,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219628920695,"Parsed as literal",""
635311219628930696,"Parsed as literal",""
635311219628930696,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311219628930696,"Parsed as literal",""
635311219628930696,"Parsed as literal",""
635311219628940696,"Invalid operator","@insertionSort([]) -> []","0"
635311219628940696,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311219628940696,"Parsed as literal","insertionSort"
635311219628940696,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311219628950697,"Parsed as literal",""
635311219628950697,"Parsed as literal",""
635311219628950697,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311219628960698,"Parsed as literal",""
635311219628960698,"Parsed as literal",""
635311219628960698,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311219628960698,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311219628970698,"Parsed as literal","insertionSort"
635311219628970698,"Parsed as literal","list"
635311219628970698,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311219628980699,"Parsed as literal","insert"
635311219628980699,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311219628980699,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311219628980699,"Parsed as literal",""
635311219628990699,"Parsed as literal","list"
635311219628990699,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311219628990699,"Parsed as literal","insertionSort"
635311219629000700,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311219629000700,"Parsed as literal",""
635311219629000700,"Parsed as literal","list"
635311219629000700,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311219629010700,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311219629010700,"Parsed as literal","insertionSort"
635311219629010700,"Parsed as literal","list"
635311219629020701,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311219629020701,"Parsed as literal","insert"
635311219629020701,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311219629020701,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311219629030702,"Parsed as literal",""
635311219629030702,"Parsed as literal","list"
635311219629030702,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311219629030702,"Parsed as literal","insertionSort"
635311219629040702,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311219629040702,"Parsed as literal",""
635311219629040702,"Parsed as literal","list"
635311219629050703,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311219629050703,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311219629050703,"Parsed as literal","insert"
635311219629050703,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311219629060703,"Parsed as literal","item"
635311219629060703,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219629060703,"Parsed as literal",""
635311219629070704,"Parsed as literal",""
635311219629070704,"Parsed as literal"," item"
635311219629070704,"Invalid operator","@insert(item,[]) -> item","0"
635311219629070704,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311219629080704,"Parsed as literal","insert"
635311219629080704,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311219629080704,"Parsed as literal","item"
635311219629090705,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311219629090705,"Parsed as literal",""
635311219629090705,"Parsed as literal",""
635311219629090705,"Parsed as literal"," item"
635311219629100706,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311219629100706,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311219629100706,"Parsed as literal","insert"
635311219629110706,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311219629110706,"Parsed as literal","item"
635311219629110706,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311219629110706,"Parsed as literal","list "
635311219629120707,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311219629120707,"Parsed as literal"," item "
635311219629120707,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311219629120707,"Parsed as literal"," "
635311219629130707,"Parsed as literal","list"
635311219629130707,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311219629130707,"Parsed as literal"," item "
635311219629140708,"Parsed as literal"," list"
635311219629140708,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311219629140708,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311219629140708,"Parsed as literal","insert"
635311219629150708,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311219629150708,"Parsed as literal","item"
635311219629150708,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311219629160709,"Parsed as literal","list "
635311219629160709,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311219629160709,"Parsed as literal"," item "
635311219629160709,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311219629170710,"Parsed as literal"," "
635311219629170710,"Parsed as literal","list"
635311219629170710,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311219629170710,"Parsed as literal"," item "
635311219629180710,"Parsed as literal"," list"
635311219629180710,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311219629180710,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311219629190711,"Parsed as literal","insert"
635311219629190711,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311219629190711,"Parsed as literal","item"
635311219629190711,"Parsed as literal","list"
635311219629200711,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311219629200711,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311219629200711,"Parsed as literal"," "
635311219629210712,"Parsed as literal","list "
635311219629210712,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311219629210712,"Parsed as literal","insert"
635311219629210712,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311219629220712,"Parsed as literal","item"
635311219629220712,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311219629220712,"Parsed as literal",""
635311219629230713,"Parsed as literal","list"
635311219629230713,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311219629230713,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311219629230713,"Parsed as literal","insert"
635311219629240714,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311219629240714,"Parsed as literal","item"
635311219629240714,"Parsed as literal","list"
635311219629250714,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311219629250714,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311219629250714,"Parsed as literal"," "
635311219629260715,"Parsed as literal","list "
635311219629270715,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311219629270715,"Parsed as literal","insert"
635311219629270715,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311219629270715,"Parsed as literal","item"
635311219629280716,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311219629280716,"Parsed as literal",""
635311219629280716,"Parsed as literal","list"
635311219629290716,"StepEvaluate","->","Changed","Declared @quickSort"
635311219629290716,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311219629290716,"StepEvaluate","->","Changed","Declared @quickSort"
635311219629290716,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311219629300717,"StepEvaluate","->","Changed","Declared @mergeSort"
635311219629300717,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311219629300717,"StepEvaluate","->","Changed","Declared @mergeSort"
635311219629300717,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311219629310718,"StepEvaluate","->","Changed","Declared @mergeSort"
635311219629310718,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311219629310718,"StepEvaluate","->","Changed","Declared @merge"
635311219629310718,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219629320718,"StepEvaluate","->","Changed","Declared @merge"
635311219629320718,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219629320718,"StepEvaluate","->","Changed","Declared @merge"
635311219629330719,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219629330719,"StepEvaluate","->","Changed","Declared @merge"
635311219629330719,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311219629330719,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311219629340719,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311219629340719,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311219629340719,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311219629340719,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219629350720,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219629350720,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219629350720,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219629360720,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219629360720,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219629360720,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311219629360720,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311219629370721,"StepEvaluate","->","Changed","Declared @isSorted"
635311219629370721,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219629370721,"StepEvaluate","->","Changed","Declared @isSorted"
635311219629370721,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219629380722,"StepEvaluate","->","Changed","Declared @isSorted"
635311219629380722,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219629380722,"StepEvaluate","->","Changed","Declared @isSorted"
635311219629380722,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311219629390722,"StepEvaluate","->","Changed","Declared @insertionSort"
635311219629390722,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311219629390722,"StepEvaluate","->","Changed","Declared @insertionSort"
635311219629390722,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311219629400723,"StepEvaluate","->","Changed","Declared @insert"
635311219629400723,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311219629400723,"StepEvaluate","->","Changed","Declared @insert"
635311219629400723,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311219629410723,"StepEvaluate","->","Changed","Declared @insert"
635311219629410723,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311219629410723,"StepEvaluate","[]","Changed","File imported"
635311219629420724,"StepEvaluate","File imported","Unchanged","File imported"
635311219629420724,"StepEvaluate","[]","Changed","File imported"
635311219629420724,"StepEvaluate","File imported","Unchanged","File imported"
635311219629420724,"ParseInternal","@count((1,2,3))","0","FunctionCallOperator","1","6","count","(1,2,3)"
635311219629430724,"Parsed as literal","count"
635311219629430724,"ParseInternal","(1,2,3)","6","OpenParenOperator","6","6","1,2,3",""
635311219629430724,"ParseInternal","1,2,3","6","CommaOperator","6","8","1","2,3"
635311219629430724,"Parsed as literal","1"
635311219629440725,"ParseInternal","2,3","8","CommaOperator","8","10","2","3"
635311219629440725,"Parsed as literal","2"
635311219629440725,"Parsed as literal","3"
635311219629450726,"Parsed as literal",""
635311220942185810,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311220942195810,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311220942205811,"Parsed as literal","import"
635311220942215811,"Parsed as literal","file"
635311220942225812,"Parsed as literal"," 0"
635311220942235813,"Invalid operator","@import(file) -> 0","0"
635311220942245813,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311220942245813,"Parsed as literal","import"
635311220942255814,"Parsed as literal","file"
635311220942265814,"Parsed as literal"," 0"
635311220942275815,"StepEvaluate","->","Changed","Declared @import"
635311220942275815,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311220942285815,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311220942295816,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311220942305817,"Parsed as literal","operator"
635311220942305817,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311220942315817,"Parsed as literal","op"
635311220942325818,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311220942335818,"Parsed as literal","fn"
635311220942335818,"Parsed as literal",""
635311220942345819,"Invalid operator","@fn","12"
635311220942355819,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311220942355819,"Parsed as literal","fn"
635311220942365820,"Parsed as literal",""
635311220942375821,"Invalid operator","@fn","12"
635311220942385821,"Parsed as literal","@fn"
635311220942385821,"Parsed as literal"," 0"
635311220942395822,"Invalid operator","@operator(op,@fn) -> 0","0"
635311220942405822,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311220942405822,"Parsed as literal","operator"
635311220942415823,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311220942425823,"Parsed as literal","op"
635311220942425823,"Parsed as literal","@fn"
635311220942435824,"Parsed as literal"," 0"
635311220942445825,"StepEvaluate","->","Changed","Declared @operator"
635311220942455825,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311220942465826,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311220942465826,"Parsed as literal","import"
635311220942475826,"Parsed as literal","main.toast"
635311220942485827,"StepEvaluate","@","Changed","@"
635311220942495827,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220942495827,"StepEvaluate","PAT@","Unchanged","PAT@"
635311220942505828,"StepEvaluate",",","Unchanged",","
635311220942515829,"StepEvaluate","@Arg","Changed","@Arg-M"
635311220942515829,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220942525829,"StepEvaluate","PAT@-M","Changed","[]"
635311220942535830,"StepEvaluate","SEL@import","Changed","[]"
635311220942535830,"StepEvaluate","@","Changed","[]"
635311220942545830,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311220942555831,"Parsed as literal","import"
635311220942565831,"Parsed as literal","'core.toast'"
635311220942565831,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311220942575832,"Parsed as literal","import"
635311220942585833,"Parsed as literal","'list.toast'"
635311220942595833,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311220942595833,"Parsed as literal","import"
635311220942605834,"Parsed as literal","'math.toast'"
635311220942615834,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311220942615834,"Parsed as literal","import"
635311220942625835,"Parsed as literal","'sorting.toast'"
635311220942625835,"StepEvaluate","@","Changed","@"
635311220942625835,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220942635835,"StepEvaluate","PAT@","Unchanged","PAT@"
635311220942635835,"StepEvaluate",",","Unchanged",","
635311220942635835,"StepEvaluate","@Arg","Changed","@Arg-M"
635311220942645836,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220942645836,"StepEvaluate","PAT@-M","Changed","[]"
635311220942655837,"StepEvaluate","SEL@import","Changed","[]"
635311220942655837,"StepEvaluate","@","Changed","[]"
635311220942655837,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311220942665837,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311220942665837,"Parsed as literal","map"
635311220942675838,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311220942675838,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311220942675838,"Parsed as literal","func"
635311220942685838,"Parsed as literal",""
635311220942685838,"Invalid operator","@func","4"
635311220942685838,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311220942695839,"Parsed as literal","func"
635311220942695839,"Parsed as literal",""
635311220942695839,"Invalid operator","@func","4"
635311220942705839,"Parsed as literal","@func"
635311220942705839,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311220942715840,"Parsed as literal",""
635311220942715840,"Parsed as literal",""
635311220942715840,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311220942725841,"Parsed as literal",""
635311220942725841,"Parsed as literal",""
635311220942735841,"Invalid operator","@map(@func, []) -> []","0"
635311220942735841,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311220942735841,"Parsed as literal","map"
635311220942745842,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311220942745842,"Parsed as literal","@func"
635311220942745842,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311220942755842,"Parsed as literal",""
635311220942755842,"Parsed as literal",""
635311220942755842,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311220942765843,"Parsed as literal",""
635311220942765843,"Parsed as literal",""
635311220942775843,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311220942775843,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311220942775843,"Parsed as literal","map"
635311220942785844,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311220942785844,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311220942795845,"Parsed as literal","func"
635311220942795845,"Parsed as literal",""
635311220942795845,"Invalid operator","@func","4"
635311220942805845,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311220942805845,"Parsed as literal","func"
635311220942805845,"Parsed as literal",""
635311220942815846,"Invalid operator","@func","4"
635311220942815846,"Parsed as literal","@func"
635311220942825846,"Parsed as literal"," list"
635311220942825846,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311220942835847,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311220942835847,"Parsed as literal","func"
635311220942835847,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311220942845847,"Parsed as literal",""
635311220942845847,"Parsed as literal","list"
635311220942855848,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311220942855848,"Parsed as literal","map"
635311220942855848,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311220942865849,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311220942865849,"Parsed as literal","func"
635311220942865849,"Parsed as literal",""
635311220942875849,"Invalid operator","@func","41"
635311220942875849,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311220942875849,"Parsed as literal","func"
635311220942885850,"Parsed as literal",""
635311220942885850,"Invalid operator","@func","41"
635311220942885850,"Parsed as literal","@func"
635311220942895850,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311220942895850,"Parsed as literal",""
635311220942905851,"Parsed as literal","list"
635311220942905851,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311220942905851,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311220942915851,"Parsed as literal","map"
635311220942915851,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311220942915851,"Parsed as literal","@func"
635311220942915851,"Parsed as literal"," list"
635311220942925852,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311220942925852,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311220942925852,"Parsed as literal","func"
635311220942935853,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311220942935853,"Parsed as literal",""
635311220942935853,"Parsed as literal","list"
635311220942935853,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311220942945853,"Parsed as literal","map"
635311220942945853,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311220942945853,"Parsed as literal","@func"
635311220942945853,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311220942955854,"Parsed as literal",""
635311220942955854,"Parsed as literal","list"
635311220942955854,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311220942965854,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311220942965854,"Parsed as literal","filter"
635311220942965854,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311220942965854,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311220942975855,"Parsed as literal","pred"
635311220942975855,"Parsed as literal",""
635311220942975855,"Invalid operator","@pred","7"
635311220942975855,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311220942985855,"Parsed as literal","pred"
635311220942985855,"Parsed as literal",""
635311220942985855,"Invalid operator","@pred","7"
635311220942985855,"Parsed as literal","@pred"
635311220942995856,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311220942995856,"Parsed as literal",""
635311220942995856,"Parsed as literal",""
635311220942995856,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311220943005857,"Parsed as literal",""
635311220943005857,"Parsed as literal",""
635311220943005857,"Invalid operator","@filter(@pred,[]) -> []","0"
635311220943005857,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311220943015857,"Parsed as literal","filter"
635311220943015857,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311220943015857,"Parsed as literal","@pred"
635311220943025858,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311220943025858,"Parsed as literal",""
635311220943025858,"Parsed as literal",""
635311220943025858,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311220943035858,"Parsed as literal",""
635311220943035858,"Parsed as literal",""
635311220943035858,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311220943035858,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311220943045859,"Parsed as literal","filter"
635311220943045859,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311220943045859,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311220943055859,"Parsed as literal","pred"
635311220943055859,"Parsed as literal",""
635311220943055859,"Invalid operator","@pred","7"
635311220943055859,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311220943065860,"Parsed as literal","pred"
635311220943065860,"Parsed as literal",""
635311220943065860,"Invalid operator","@pred","7"
635311220943065860,"Parsed as literal","@pred"
635311220943075861,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311220943075861,"Parsed as literal"," list "
635311220943075861,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311220943105862,"Parsed as literal","pred"
635311220943115863,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311220943115863,"Parsed as literal",""
635311220943125863,"Parsed as literal","list"
635311220943125863,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311220943135864,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311220943135864,"Parsed as literal"," "
635311220943135864,"Parsed as literal","list "
635311220943135864,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311220943145865,"Parsed as literal","filter"
635311220943145865,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311220943145865,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311220943145865,"Parsed as literal","pred"
635311220943155865,"Parsed as literal",""
635311220943155865,"Invalid operator","@pred","56"
635311220943155865,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311220943155865,"Parsed as literal","pred"
635311220943165866,"Parsed as literal",""
635311220943165866,"Invalid operator","@pred","56"
635311220943165866,"Parsed as literal","@pred"
635311220943165866,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311220943175866,"Parsed as literal"," "
635311220943175866,"Parsed as literal","list"
635311220943175866,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311220943175866,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311220943185867,"Parsed as literal","filter"
635311220943185867,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311220943185867,"Parsed as literal","@pred"
635311220943185867,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311220943195868,"Parsed as literal"," list "
635311220943195868,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311220943195868,"Parsed as literal","pred"
635311220943195868,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311220943205868,"Parsed as literal",""
635311220943205868,"Parsed as literal","list"
635311220943205868,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311220943215869,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311220943215869,"Parsed as literal"," "
635311220943215869,"Parsed as literal","list "
635311220943215869,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311220943225869,"Parsed as literal","filter"
635311220943225869,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311220943225869,"Parsed as literal","@pred"
635311220943225869,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311220943235870,"Parsed as literal"," "
635311220943235870,"Parsed as literal","list"
635311220943235870,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311220943245870,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311220943245870,"Parsed as literal","filter"
635311220943245870,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311220943245870,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311220943255871,"Parsed as literal","pred"
635311220943255871,"Parsed as literal",""
635311220943255871,"Invalid operator","@pred","7"
635311220943255871,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311220943265872,"Parsed as literal","pred"
635311220943265872,"Parsed as literal",""
635311220943265872,"Invalid operator","@pred","7"
635311220943265872,"Parsed as literal","@pred"
635311220943275872,"Parsed as literal","list"
635311220943275872,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311220943275872,"Parsed as literal","filter"
635311220943275872,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311220943285873,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311220943285873,"Parsed as literal","pred"
635311220943285873,"Parsed as literal",""
635311220943285873,"Invalid operator","@pred","30"
635311220943295873,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311220943295873,"Parsed as literal","pred"
635311220943295873,"Parsed as literal",""
635311220943305874,"Invalid operator","@pred","30"
635311220943305874,"Parsed as literal","@pred"
635311220943305874,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311220943305874,"Parsed as literal",""
635311220943305874,"Parsed as literal","list"
635311220943315874,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311220943315874,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311220943315874,"Parsed as literal","filter"
635311220943325875,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311220943325875,"Parsed as literal","@pred"
635311220943325875,"Parsed as literal","list"
635311220943325875,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311220943335876,"Parsed as literal","filter"
635311220943335876,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311220943335876,"Parsed as literal","@pred"
635311220943335876,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311220943345876,"Parsed as literal",""
635311220943345876,"Parsed as literal","list"
635311220943345876,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311220943355877,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311220943355877,"Parsed as literal","call"
635311220943355877,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311220943355877,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311220943365877,"Parsed as literal","fun"
635311220943365877,"Parsed as literal",""
635311220943365877,"Invalid operator","@fun","5"
635311220943365877,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311220943375878,"Parsed as literal","fun"
635311220943375878,"Parsed as literal",""
635311220943375878,"Invalid operator","@fun","5"
635311220943375878,"Parsed as literal","@fun"
635311220943385878,"Parsed as literal","arg"
635311220943385878,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311220943385878,"Parsed as literal","fun"
635311220943385878,"Parsed as literal","arg"
635311220943395879,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311220943395879,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311220943395879,"Parsed as literal","call"
635311220943395879,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311220943405880,"Parsed as literal","@fun"
635311220943405880,"Parsed as literal","arg"
635311220943405880,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311220943405880,"Parsed as literal","fun"
635311220943415880,"Parsed as literal","arg"
635311220943415880,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311220943415880,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311220943425881,"Parsed as literal","curry"
635311220943425881,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311220943425881,"Parsed as literal","seed"
635311220943425881,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311220943435881,"Parsed as literal",""
635311220943435881,"Parsed as literal",""
635311220943435881,"Parsed as literal"," seed"
635311220943435881,"Invalid operator","@curry(seed,[]) -> seed","0"
635311220943445882,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311220943445882,"Parsed as literal","curry"
635311220943445882,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311220943445882,"Parsed as literal","seed"
635311220943455882,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311220943455882,"Parsed as literal",""
635311220943455882,"Parsed as literal",""
635311220943455882,"Parsed as literal"," seed"
635311220943465883,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311220943465883,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311220943465883,"Parsed as literal","curry"
635311220943475884,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311220943475884,"Parsed as literal","seed"
635311220943475884,"Parsed as literal"," funcList"
635311220943475884,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311220943485884,"Parsed as literal","curry"
635311220943485884,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311220943485884,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311220943485884,"Parsed as literal","call"
635311220943495885,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311220943495885,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311220943495885,"Parsed as literal",""
635311220943505885,"Parsed as literal","funcList"
635311220943505885,"Parsed as literal","seed"
635311220943505885,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311220943505885,"Parsed as literal",""
635311220943515886,"Parsed as literal","funcList"
635311220943515886,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311220943515886,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311220943515886,"Parsed as literal","curry"
635311220943525886,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311220943525886,"Parsed as literal","seed"
635311220943525886,"Parsed as literal"," funcList"
635311220943525886,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311220943535887,"Parsed as literal","curry"
635311220943535887,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311220943535887,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311220943545888,"Parsed as literal","call"
635311220943545888,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311220943545888,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311220943545888,"Parsed as literal",""
635311220943555888,"Parsed as literal","funcList"
635311220943555888,"Parsed as literal","seed"
635311220943555888,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311220943555888,"Parsed as literal",""
635311220943565889,"Parsed as literal","funcList"
635311220943565889,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311220943565889,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311220943565889,"Parsed as literal","fold"
635311220943575889,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311220943575889,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311220943575889,"Parsed as literal","func"
635311220943585890,"Parsed as literal",""
635311220943585890,"Invalid operator","@func","5"
635311220943585890,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311220943585890,"Parsed as literal","func"
635311220943595890,"Parsed as literal",""
635311220943595890,"Invalid operator","@func","5"
635311220943595890,"Parsed as literal","@func"
635311220943595890,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311220943605891,"Parsed as literal",""
635311220943605891,"Parsed as literal",""
635311220943605891,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311220943605891,"Parsed as literal",""
635311220943615892,"Parsed as literal",""
635311220943615892,"Invalid operator","@fold(@func,[]) -> []","0"
635311220943615892,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311220943615892,"Parsed as literal","fold"
635311220943625892,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311220943625892,"Parsed as literal","@func"
635311220943625892,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311220943625892,"Parsed as literal",""
635311220943635893,"Parsed as literal",""
635311220943635893,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311220943635893,"Parsed as literal",""
635311220943635893,"Parsed as literal",""
635311220943645893,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311220943645893,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311220943645893,"Parsed as literal","fold"
635311220943655894,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311220943655894,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311220943655894,"Parsed as literal","func"
635311220943655894,"Parsed as literal",""
635311220943665894,"Invalid operator","@func","5"
635311220943665894,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311220943665894,"Parsed as literal","func"
635311220943665894,"Parsed as literal",""
635311220943675895,"Invalid operator","@func","5"
635311220943675895,"Parsed as literal","@func"
635311220943675895,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311220943675895,"Parsed as literal","list"
635311220943685896,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311220943685896,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311220943685896,"Parsed as literal",""
635311220943685896,"Parsed as literal","list"
635311220943695896,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311220943695896,"Parsed as literal",""
635311220943695896,"Parsed as literal",""
635311220943695896,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311220943705897,"Parsed as literal"," "
635311220943705897,"Parsed as literal","list"
635311220943705897,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311220943715897,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311220943715897,"Parsed as literal","fold"
635311220943715897,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311220943715897,"Parsed as literal","@func"
635311220943725898,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311220943725898,"Parsed as literal","list"
635311220943725898,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311220943725898,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311220943735898,"Parsed as literal",""
635311220943735898,"Parsed as literal","list"
635311220943735898,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311220943735898,"Parsed as literal",""
635311220943745899,"Parsed as literal",""
635311220943745899,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311220943745899,"Parsed as literal"," "
635311220943745899,"Parsed as literal","list"
635311220943755900,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311220943755900,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311220943755900,"Parsed as literal","fold"
635311220943765900,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311220943765900,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311220943765900,"Parsed as literal","func"
635311220943765900,"Parsed as literal",""
635311220943775901,"Invalid operator","@func","5"
635311220943775901,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311220943775901,"Parsed as literal","func"
635311220943775901,"Parsed as literal",""
635311220943785901,"Invalid operator","@func","5"
635311220943785901,"Parsed as literal","@func"
635311220943785901,"Parsed as literal","list"
635311220943785901,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311220943795902,"Parsed as literal","fold"
635311220943795902,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311220943795902,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311220943795902,"Parsed as literal","func"
635311220943805902,"Parsed as literal",""
635311220943805902,"Invalid operator","@func","26"
635311220943805902,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311220943805902,"Parsed as literal","func"
635311220943815903,"Parsed as literal",""
635311220943815903,"Invalid operator","@func","26"
635311220943815903,"Parsed as literal","@func"
635311220943825904,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311220943825904,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311220943825904,"Parsed as literal","func"
635311220943825904,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311220943835904,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311220943835904,"Parsed as literal",""
635311220943835904,"Parsed as literal","list"
635311220943835904,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311220943845905,"Parsed as literal",""
635311220943845905,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311220943845905,"Parsed as literal",""
635311220943845905,"Parsed as literal","list"
635311220943855905,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311220943855905,"Parsed as literal"," "
635311220943855905,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311220943855905,"Parsed as literal",""
635311220943865906,"Parsed as literal","list"
635311220943865906,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311220943865906,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311220943865906,"Parsed as literal","fold"
635311220943875906,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311220943875906,"Parsed as literal","@func"
635311220943875906,"Parsed as literal","list"
635311220943885907,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311220943885907,"Parsed as literal","fold"
635311220943885907,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311220943885907,"Parsed as literal","@func"
635311220943895908,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311220943895908,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311220943895908,"Parsed as literal","func"
635311220943895908,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311220943905908,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311220943905908,"Parsed as literal",""
635311220943905908,"Parsed as literal","list"
635311220943905908,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311220943915909,"Parsed as literal",""
635311220943915909,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311220943915909,"Parsed as literal",""
635311220943915909,"Parsed as literal","list"
635311220943925909,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311220943925909,"Parsed as literal"," "
635311220943925909,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311220943935910,"Parsed as literal",""
635311220943935910,"Parsed as literal","list"
635311220943935910,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311220943935910,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311220943945910,"Parsed as literal","foldr"
635311220943945910,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311220943945910,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311220943945910,"Parsed as literal","func"
635311220943955911,"Parsed as literal",""
635311220943955911,"Invalid operator","@func","6"
635311220943955911,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311220943955911,"Parsed as literal","func"
635311220943965912,"Parsed as literal",""
635311220943965912,"Invalid operator","@func","6"
635311220943965912,"Parsed as literal","@func"
635311220943965912,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311220943975912,"Parsed as literal",""
635311220943975912,"Parsed as literal",""
635311220943975912,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311220943985913,"Parsed as literal",""
635311220943985913,"Parsed as literal",""
635311220943985913,"Invalid operator","@foldr(@func,[]) -> []","0"
635311220943985913,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311220943995913,"Parsed as literal","foldr"
635311220943995913,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311220943995913,"Parsed as literal","@func"
635311220943995913,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311220944005914,"Parsed as literal",""
635311220944005914,"Parsed as literal",""
635311220944005914,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311220944005914,"Parsed as literal",""
635311220944015914,"Parsed as literal",""
635311220944015914,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311220944015914,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311220944015914,"Parsed as literal","foldr"
635311220944025915,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311220944025915,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311220944025915,"Parsed as literal","func"
635311220944035916,"Parsed as literal",""
635311220944035916,"Invalid operator","@func","6"
635311220944035916,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311220944035916,"Parsed as literal","func"
635311220944035916,"Parsed as literal",""
635311220944045916,"Invalid operator","@func","6"
635311220944045916,"Parsed as literal","@func"
635311220944045916,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311220944045916,"Parsed as literal","list"
635311220944055917,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311220944055917,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311220944055917,"Parsed as literal",""
635311220944055917,"Parsed as literal","list"
635311220944065917,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311220944065917,"Parsed as literal",""
635311220944065917,"Parsed as literal",""
635311220944075918,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311220944075918,"Parsed as literal"," "
635311220944075918,"Parsed as literal","list"
635311220944075918,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311220944085918,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311220944085918,"Parsed as literal","foldr"
635311220944085918,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311220944085918,"Parsed as literal","@func"
635311220944095919,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311220944095919,"Parsed as literal","list"
635311220944095919,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311220944095919,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311220944105920,"Parsed as literal",""
635311220944105920,"Parsed as literal","list"
635311220944105920,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311220944105920,"Parsed as literal",""
635311220944115920,"Parsed as literal",""
635311220944115920,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311220944115920,"Parsed as literal"," "
635311220944125921,"Parsed as literal","list"
635311220944125921,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311220944125921,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311220944125921,"Parsed as literal","foldr"
635311220944135921,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311220944135921,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311220944135921,"Parsed as literal","func"
635311220944135921,"Parsed as literal",""
635311220944145922,"Invalid operator","@func","6"
635311220944145922,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311220944145922,"Parsed as literal","func"
635311220944145922,"Parsed as literal",""
635311220944155922,"Invalid operator","@func","6"
635311220944155922,"Parsed as literal","@func"
635311220944155922,"Parsed as literal","list"
635311220944165923,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311220944165923,"Parsed as literal","func"
635311220944165923,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311220944165923,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311220944175924,"Parsed as literal","foldr"
635311220944175924,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311220944175924,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311220944185924,"Parsed as literal","func"
635311220944185924,"Parsed as literal",""
635311220944185924,"Invalid operator","@func","33"
635311220944185924,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311220944195925,"Parsed as literal","func"
635311220944195925,"Parsed as literal",""
635311220944195925,"Invalid operator","@func","33"
635311220944195925,"Parsed as literal","@func"
635311220944195925,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311220944205925,"Parsed as literal","superHead"
635311220944205925,"Parsed as literal","list"
635311220944205925,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311220944215926,"Parsed as literal","last"
635311220944215926,"Parsed as literal","list"
635311220944215926,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311220944215926,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311220944225926,"Parsed as literal","foldr"
635311220944225926,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311220944225926,"Parsed as literal","@func"
635311220944225926,"Parsed as literal","list"
635311220944235927,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311220944235927,"Parsed as literal","func"
635311220944235927,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311220944245928,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311220944245928,"Parsed as literal","foldr"
635311220944245928,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311220944245928,"Parsed as literal","@func"
635311220944255928,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311220944255928,"Parsed as literal","superHead"
635311220944255928,"Parsed as literal","list"
635311220944265929,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311220944265929,"Parsed as literal","last"
635311220944265929,"Parsed as literal","list"
635311220944265929,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311220944275929,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311220944285930,"Parsed as literal","superHead"
635311220944285930,"Parsed as literal","list"
635311220944285930,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311220944285930,"Parsed as literal","reverse"
635311220944295930,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311220944295930,"Parsed as literal",""
635311220944295930,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311220944305931,"Parsed as literal","reverse"
635311220944305931,"Parsed as literal","list"
635311220944305931,"StepEvaluate","->","Changed","Declared @map"
635311220944305931,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311220944315932,"StepEvaluate","->","Changed","Declared @map"
635311220944315932,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311220944315932,"StepEvaluate","->","Changed","Declared @filter"
635311220944315932,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311220944325932,"StepEvaluate","->","Changed","Declared @filter"
635311220944325932,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311220944325932,"StepEvaluate","->","Changed","Declared @filter"
635311220944325932,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311220944335933,"StepEvaluate","->","Changed","Declared @call"
635311220944335933,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311220944335933,"StepEvaluate","->","Changed","Declared @curry"
635311220944335933,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311220944345933,"StepEvaluate","->","Changed","Declared @curry"
635311220944345933,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311220944345933,"StepEvaluate","->","Changed","Declared @fold"
635311220944345933,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311220944355934,"StepEvaluate","->","Changed","Declared @fold"
635311220944355934,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311220944355934,"StepEvaluate","->","Changed","Declared @fold"
635311220944355934,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311220944355934,"StepEvaluate","->","Changed","Declared @foldr"
635311220944365934,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311220944365934,"StepEvaluate","->","Changed","Declared @foldr"
635311220944365934,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311220944365934,"StepEvaluate","->","Changed","Declared @foldr"
635311220944375935,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311220944375935,"StepEvaluate","==","Unchanged","=="
635311220944375935,"StepEvaluate","@","Changed","@"
635311220944375935,"StepEvaluate","@","Changed","@"
635311220944385936,"StepEvaluate","==","Unchanged","=="
635311220944385936,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311220944385936,"StepEvaluate","superHead","Unchanged","superHead"
635311220944385936,"StepEvaluate",",","Unchanged",","
635311220944395936,"StepEvaluate","list","Unchanged","list"
635311220944395936,"StepEvaluate","@","Changed","@"
635311220944395936,"StepEvaluate","==","Unchanged","=="
635311220944395936,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311220944405937,"StepEvaluate","superHead","Unchanged","superHead"
635311220944405937,"StepEvaluate",",","Unchanged",","
635311220944405937,"StepEvaluate","list","Unchanged","list"
635311220944405937,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311220944415937,"StepEvaluate","reverse","Unchanged","reverse"
635311220944415937,"StepEvaluate",",","Unchanged",","
635311220944415937,"StepEvaluate","tail","Unchanged","tail"
635311220944415937,"StepEvaluate","@","Changed","@"
635311220944425938,"StepEvaluate","==","Unchanged","=="
635311220944425938,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311220944425938,"StepEvaluate","superHead","Unchanged","superHead"
635311220944425938,"StepEvaluate",",","Unchanged",","
635311220944435938,"StepEvaluate","list","Unchanged","list"
635311220944435938,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311220944435938,"StepEvaluate","reverse","Unchanged","reverse"
635311220944435938,"StepEvaluate",",","Unchanged",","
635311220944445939,"StepEvaluate","tail","Unchanged","tail"
635311220944445939,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311220944445939,"StepEvaluate","reverse","Unchanged","reverse"
635311220944445939,"StepEvaluate",",","Unchanged",","
635311220944445939,"StepEvaluate","list","Unchanged","list"
635311220944455940,"StepEvaluate","[]","Changed","File imported"
635311220944455940,"StepEvaluate","File imported","Unchanged","File imported"
635311220944455940,"StepEvaluate","@","Changed","@"
635311220944455940,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220944465940,"StepEvaluate","PAT@","Unchanged","PAT@"
635311220944465940,"StepEvaluate",",","Unchanged",","
635311220944465940,"StepEvaluate","@Arg","Changed","@Arg-M"
635311220944465940,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220944475941,"StepEvaluate","PAT@-M","Changed","[]"
635311220944475941,"StepEvaluate","SEL@import","Changed","[]"
635311220944475941,"StepEvaluate","@","Changed","[]"
635311220944485941,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311220944485941,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311220944485941,"Parsed as literal","zipWith"
635311220944495942,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311220944495942,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311220944495942,"Parsed as literal","func"
635311220944495942,"Parsed as literal",""
635311220944505942,"Invalid operator","@func","8"
635311220944505942,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311220944505942,"Parsed as literal","func"
635311220944505942,"Parsed as literal",""
635311220944515943,"Invalid operator","@func","8"
635311220944515943,"Parsed as literal","@func"
635311220944515943,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311220944515943,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311220944525944,"Parsed as literal",""
635311220944525944,"Parsed as literal",""
635311220944525944,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311220944525944,"Parsed as literal",""
635311220944535944,"Parsed as literal",""
635311220944535944,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311220944535944,"Parsed as literal",""
635311220944535944,"Parsed as literal",""
635311220944545945,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311220944545945,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311220944545945,"Parsed as literal","zipWith"
635311220944555945,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311220944555945,"Parsed as literal","@func"
635311220944555945,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311220944555945,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311220944565946,"Parsed as literal",""
635311220944565946,"Parsed as literal",""
635311220944565946,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311220944565946,"Parsed as literal",""
635311220944575946,"Parsed as literal",""
635311220944575946,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311220944575946,"Parsed as literal",""
635311220944575946,"Parsed as literal",""
635311220944585947,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311220944585947,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311220944585947,"Parsed as literal","zipWith"
635311220944585947,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311220944595948,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311220944595948,"Parsed as literal","func"
635311220944595948,"Parsed as literal",""
635311220944605948,"Invalid operator","@func","8"
635311220944605948,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311220944605948,"Parsed as literal","func"
635311220944605948,"Parsed as literal",""
635311220944615949,"Invalid operator","@func","8"
635311220944615949,"Parsed as literal","@func"
635311220944615949,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311220944615949,"Parsed as literal","list1"
635311220944625949,"Parsed as literal","list2"
635311220944625949,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311220944625949,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311220944625949,"Parsed as literal","func"
635311220944635950,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311220944635950,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311220944635950,"Parsed as literal",""
635311220944635950,"Parsed as literal","list1"
635311220944645950,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311220944645950,"Parsed as literal",""
635311220944645950,"Parsed as literal","list2"
635311220944655951,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311220944655951,"Parsed as literal","zipWith"
635311220944655951,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311220944655951,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311220944665952,"Parsed as literal","func"
635311220944665952,"Parsed as literal",""
635311220944665952,"Invalid operator","@func","64"
635311220944665952,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311220944675952,"Parsed as literal","func"
635311220944675952,"Parsed as literal",""
635311220944675952,"Invalid operator","@func","64"
635311220944675952,"Parsed as literal","@func"
635311220944685953,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311220944685953,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311220944685953,"Parsed as literal",""
635311220944685953,"Parsed as literal","list1"
635311220944695953,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311220944695953,"Parsed as literal",""
635311220944695953,"Parsed as literal","list2"
635311220944695953,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311220944705954,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311220944705954,"Parsed as literal","zipWith"
635311220944705954,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311220944715954,"Parsed as literal","@func"
635311220944715954,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311220944715954,"Parsed as literal","list1"
635311220944715954,"Parsed as literal","list2"
635311220944725955,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311220944725955,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311220944725955,"Parsed as literal","func"
635311220944735956,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311220944735956,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311220944735956,"Parsed as literal",""
635311220944735956,"Parsed as literal","list1"
635311220944745956,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311220944745956,"Parsed as literal",""
635311220944745956,"Parsed as literal","list2"
635311220944745956,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311220944755957,"Parsed as literal","zipWith"
635311220944755957,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311220944755957,"Parsed as literal","@func"
635311220944765957,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311220944765957,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311220944765957,"Parsed as literal",""
635311220944765957,"Parsed as literal","list1"
635311220944775958,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311220944775958,"Parsed as literal",""
635311220944775958,"Parsed as literal","list2"
635311220944775958,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311220944785958,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311220944785958,"Parsed as literal","count"
635311220944785958,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311220944785958,"Parsed as literal",""
635311220944795959,"Parsed as literal",""
635311220944795959,"Parsed as literal"," 0"
635311220944795959,"Invalid operator","@count([]) -> 0","0"
635311220944795959,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311220944805960,"Parsed as literal","count"
635311220944805960,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311220944805960,"Parsed as literal",""
635311220944815960,"Parsed as literal",""
635311220944815960,"Parsed as literal"," 0"
635311220944815960,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311220944815960,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311220944825961,"Parsed as literal","count"
635311220944825961,"Parsed as literal","list"
635311220944825961,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311220944825961,"Parsed as literal"," 1 "
635311220944835961,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311220944835961,"Parsed as literal","count"
635311220944835961,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311220944845962,"Parsed as literal",""
635311220944845962,"Parsed as literal","list"
635311220944845962,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311220944845962,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311220944855962,"Parsed as literal","count"
635311220944855962,"Parsed as literal","list"
635311220944855962,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311220944855962,"Parsed as literal"," 1 "
635311220944865963,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311220944865963,"Parsed as literal","count"
635311220944865963,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311220944865963,"Parsed as literal",""
635311220944875964,"Parsed as literal","list"
635311220944875964,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311220944875964,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311220944885964,"Parsed as literal","skip"
635311220944885964,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311220944885964,"Parsed as literal","0"
635311220944885964,"Parsed as literal","list"
635311220944895965,"Parsed as literal"," list"
635311220944895965,"Invalid operator","@skip(0,list) -> list","0"
635311220944895965,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311220944895965,"Parsed as literal","skip"
635311220944905965,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311220944905965,"Parsed as literal","0"
635311220944905965,"Parsed as literal","list"
635311220944905965,"Parsed as literal"," list"
635311220944915966,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311220944915966,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311220944915966,"Parsed as literal","skip"
635311220944915966,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311220944925966,"Parsed as literal","n"
635311220944925966,"Parsed as literal","list"
635311220944925966,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311220944925966,"Parsed as literal","skip"
635311220944935967,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311220944935967,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311220944935967,"Parsed as literal","n"
635311220944945968,"Parsed as literal","1"
635311220944945968,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311220944945968,"Parsed as literal",""
635311220944945968,"Parsed as literal","list"
635311220944955968,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311220944955968,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311220944955968,"Parsed as literal","skip"
635311220944955968,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311220944965969,"Parsed as literal","n"
635311220944965969,"Parsed as literal","list"
635311220944965969,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311220944965969,"Parsed as literal","skip"
635311220944975969,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311220944975969,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311220944975969,"Parsed as literal","n"
635311220944975969,"Parsed as literal","1"
635311220944985970,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311220944985970,"Parsed as literal",""
635311220944985970,"Parsed as literal","list"
635311220944985970,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311220944995970,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311220944995970,"Parsed as literal","take"
635311220944995970,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311220944995970,"Parsed as literal","1"
635311220945005971,"Parsed as literal","list"
635311220945005971,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311220945005971,"Parsed as literal"," "
635311220945005971,"Parsed as literal","list"
635311220945015972,"Invalid operator","@take(1,list) -> h:list","0"
635311220945015972,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311220945015972,"Parsed as literal","take"
635311220945025972,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311220945025972,"Parsed as literal","1"
635311220945025972,"Parsed as literal","list"
635311220945025972,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311220945035973,"Parsed as literal"," "
635311220945035973,"Parsed as literal","list"
635311220945035973,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311220945035973,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311220945045973,"Parsed as literal","take"
635311220945045973,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311220945045973,"Parsed as literal","n"
635311220945045973,"Parsed as literal","list"
635311220945055974,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311220945055974,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311220945055974,"Parsed as literal"," "
635311220945055974,"Parsed as literal","list "
635311220945065974,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311220945065974,"Parsed as literal","take"
635311220945065974,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311220945065974,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311220945075975,"Parsed as literal","n"
635311220945075975,"Parsed as literal","1"
635311220945075975,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311220945075975,"Parsed as literal",""
635311220945085976,"Parsed as literal","list"
635311220945085976,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311220945085976,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311220945095976,"Parsed as literal","take"
635311220945095976,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311220945095976,"Parsed as literal","n"
635311220945095976,"Parsed as literal","list"
635311220945105977,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311220945105977,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311220945105977,"Parsed as literal"," "
635311220945105977,"Parsed as literal","list "
635311220945115977,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311220945115977,"Parsed as literal","take"
635311220945115977,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311220945115977,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311220945125978,"Parsed as literal","n"
635311220945125978,"Parsed as literal","1"
635311220945125978,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311220945125978,"Parsed as literal",""
635311220945135978,"Parsed as literal","list"
635311220945135978,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311220945135978,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311220945145979,"Parsed as literal","nthItem"
635311220945145979,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311220945145979,"Parsed as literal","list"
635311220945145979,"Parsed as literal","0"
635311220945155980,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311220945155980,"Parsed as literal",""
635311220945155980,"Parsed as literal",""
635311220945155980,"Invalid operator","@nthItem(list,0) -> []","0"
635311220945165980,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311220945165980,"Parsed as literal","nthItem"
635311220945165980,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311220945165980,"Parsed as literal","list"
635311220945175981,"Parsed as literal","0"
635311220945175981,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311220945175981,"Parsed as literal",""
635311220945175981,"Parsed as literal",""
635311220945185981,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311220945185981,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311220945185981,"Parsed as literal","nthItem"
635311220945195982,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311220945195982,"Parsed as literal","list"
635311220945195982,"Parsed as literal","1"
635311220945195982,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311220945205982,"Parsed as literal"," "
635311220945205982,"Parsed as literal","list"
635311220945205982,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311220945205982,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311220945215983,"Parsed as literal","nthItem"
635311220945215983,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311220945215983,"Parsed as literal","list"
635311220945215983,"Parsed as literal","1"
635311220945225984,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311220945225984,"Parsed as literal"," "
635311220945225984,"Parsed as literal","list"
635311220945235984,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311220945235984,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311220945235984,"Parsed as literal","nthItem"
635311220945235984,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311220945245985,"Parsed as literal","list"
635311220945245985,"Parsed as literal","n"
635311220945245985,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311220945245985,"Parsed as literal","nthItem"
635311220945255985,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311220945255985,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311220945255985,"Parsed as literal",""
635311220945265986,"Parsed as literal","list"
635311220945265986,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311220945265986,"Parsed as literal","n"
635311220945265986,"Parsed as literal","1"
635311220945275986,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311220945275986,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311220945275986,"Parsed as literal","nthItem"
635311220945285987,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311220945285987,"Parsed as literal","list"
635311220945285987,"Parsed as literal","n"
635311220945285987,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311220945295988,"Parsed as literal","nthItem"
635311220945295988,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311220945295988,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311220945295988,"Parsed as literal",""
635311220945305988,"Parsed as literal","list"
635311220945305988,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311220945305988,"Parsed as literal","n"
635311220945305988,"Parsed as literal","1"
635311220945325989,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311220945325989,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311220945335990,"Parsed as literal","makeRange"
635311220945335990,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311220945335990,"Parsed as literal","a"
635311220945345990,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311220945345990,"Parsed as literal","b"
635311220945345990,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311220945355991,"Parsed as literal","a"
635311220945355991,"Parsed as literal","b"
635311220945355991,"Parsed as literal"," a"
635311220945355991,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311220945365992,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311220945365992,"Parsed as literal","makeRange"
635311220945365992,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311220945375992,"Parsed as literal","a"
635311220945375992,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311220945375992,"Parsed as literal","b"
635311220945375992,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311220945385993,"Parsed as literal","a"
635311220945385993,"Parsed as literal","b"
635311220945385993,"Parsed as literal"," a"
635311220945385993,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311220945395993,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311220945395993,"Parsed as literal","makeRange"
635311220945395993,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311220945405994,"Parsed as literal","a"
635311220945405994,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311220945405994,"Parsed as literal","b"
635311220945405994,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311220945415994,"Parsed as literal","a"
635311220945415994,"Parsed as literal","b"
635311220945415994,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311220945415994,"Parsed as literal"," a "
635311220945425995,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311220945425995,"Parsed as literal","makeRange"
635311220945425995,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311220945435996,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311220945435996,"Parsed as literal","a"
635311220945435996,"Parsed as literal","1"
635311220945445996,"Parsed as literal","b"
635311220945445996,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311220945445996,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311220945445996,"Parsed as literal","makeRange"
635311220945455997,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311220945455997,"Parsed as literal","a"
635311220945455997,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311220945455997,"Parsed as literal","b"
635311220945465997,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311220945465997,"Parsed as literal","a"
635311220945465997,"Parsed as literal","b"
635311220945475998,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311220945475998,"Parsed as literal"," a "
635311220945475998,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311220945475998,"Parsed as literal","makeRange"
635311220945485998,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311220945485998,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311220945485998,"Parsed as literal","a"
635311220945485998,"Parsed as literal","1"
635311220945495999,"Parsed as literal","b"
635311220945495999,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311220945495999,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311220945495999,"Parsed as literal","reverse"
635311220945506000,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311220945506000,"Parsed as literal",""
635311220945506000,"Parsed as literal",""
635311220945506000,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311220945516000,"Parsed as literal",""
635311220945516000,"Parsed as literal",""
635311220945516000,"Invalid operator","@reverse([]) -> []","0"
635311220945516000,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311220945526001,"Parsed as literal","reverse"
635311220945526001,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311220945526001,"Parsed as literal",""
635311220945526001,"Parsed as literal",""
635311220945536001,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311220945536001,"Parsed as literal",""
635311220945536001,"Parsed as literal",""
635311220945546002,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311220945546002,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311220945546002,"Parsed as literal","reverse"
635311220945546002,"Parsed as literal","list"
635311220945556002,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311220945556002,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311220945556002,"Parsed as literal","reverse"
635311220945556002,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311220945566003,"Parsed as literal",""
635311220945566003,"Parsed as literal","list"
635311220945566003,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311220945566003,"Parsed as literal"," "
635311220945576004,"Parsed as literal","list"
635311220945576004,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311220945576004,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311220945576004,"Parsed as literal","reverse"
635311220945586004,"Parsed as literal","list"
635311220945586004,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311220945586004,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311220945596005,"Parsed as literal","reverse"
635311220945596005,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311220945596005,"Parsed as literal",""
635311220945596005,"Parsed as literal","list"
635311220945606005,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311220945606005,"Parsed as literal"," "
635311220945606005,"Parsed as literal","list"
635311220945606005,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311220945616006,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311220945616006,"Parsed as literal","max"
635311220945616006,"Parsed as literal","list"
635311220945616006,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311220945626006,"Parsed as literal","fold"
635311220945626006,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311220945626006,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311220945636007,"Parsed as literal","max"
635311220945636007,"Parsed as literal",""
635311220945636007,"Invalid operator","@max","19"
635311220945636007,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311220945646008,"Parsed as literal","max"
635311220945646008,"Parsed as literal",""
635311220945646008,"Invalid operator","@max","19"
635311220945646008,"Parsed as literal","@max"
635311220945656008,"Parsed as literal","list"
635311220945656008,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311220945656008,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311220945656008,"Parsed as literal","max"
635311220945666009,"Parsed as literal","list"
635311220945666009,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311220945666009,"Parsed as literal","fold"
635311220945666009,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311220945676009,"Parsed as literal","@max"
635311220945676009,"Parsed as literal","list"
635311220945676009,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311220945686010,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311220945686010,"Parsed as literal","elementAt"
635311220945686010,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311220945686010,"Parsed as literal","0"
635311220945696011,"Parsed as literal","list"
635311220945696011,"Parsed as literal"," 'list"
635311220945696011,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311220945696011,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311220945706011,"Parsed as literal","elementAt"
635311220945706011,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311220945706011,"Parsed as literal","n"
635311220945706011,"Parsed as literal","list"
635311220945716012,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311220945716012,"Parsed as literal","elementAt"
635311220945716012,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311220945716012,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311220945726012,"Parsed as literal","n"
635311220945726012,"Parsed as literal","1"
635311220945726012,"Parsed as literal","list'"
635311220945736013,"StepEvaluate","->","Changed","Declared @zipWith"
635311220945736013,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311220945736013,"StepEvaluate","->","Changed","Declared @zipWith"
635311220945736013,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311220945746013,"StepEvaluate","->","Changed","Declared @count"
635311220945746013,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311220945746013,"StepEvaluate","->","Changed","Declared @count"
635311220945746013,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311220945756014,"StepEvaluate","->","Changed","Declared @skip"
635311220945756014,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311220945756014,"StepEvaluate","->","Changed","Declared @skip"
635311220945756014,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311220945756014,"StepEvaluate","->","Changed","Declared @take"
635311220945766015,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311220945766015,"StepEvaluate","->","Changed","Declared @take"
635311220945766015,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311220945776015,"StepEvaluate","->","Changed","Declared @nthItem"
635311220945776015,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311220945776015,"StepEvaluate","->","Changed","Declared @nthItem"
635311220945776015,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311220945786016,"StepEvaluate","->","Changed","Declared @nthItem"
635311220945786016,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311220945786016,"StepEvaluate","->","Changed","Declared @makeRange"
635311220945786016,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311220945786016,"StepEvaluate","->","Changed","Declared @makeRange"
635311220945796016,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311220945796016,"StepEvaluate","->","Changed","Declared @reverse"
635311220945796016,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311220945796016,"StepEvaluate","->","Changed","Declared @reverse"
635311220945806017,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311220945806017,"StepEvaluate","->","Changed","Declared @max"
635311220945806017,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311220945806017,"StepEvaluate","==","Unchanged","=="
635311220945816017,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311220945816017,"StepEvaluate","elementAt","Unchanged","elementAt"
635311220945816017,"StepEvaluate",",","Unchanged",","
635311220945816017,"StepEvaluate","0","Unchanged","0"
635311220945826018,"StepEvaluate",",","Unchanged",","
635311220945826018,"StepEvaluate","list","Unchanged","list"
635311220945826018,"StepEvaluate","'list","Unchanged","'list"
635311220945826018,"StepEvaluate","==","Unchanged","=="
635311220945836019,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311220945836019,"StepEvaluate","elementAt","Unchanged","elementAt"
635311220945836019,"StepEvaluate",",","Unchanged",","
635311220945836019,"StepEvaluate","n","Unchanged","n"
635311220945836019,"StepEvaluate",",","Unchanged",","
635311220945846019,"StepEvaluate","list","Unchanged","list"
635311220945846019,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311220945846019,"StepEvaluate","elementAt","Unchanged","elementAt"
635311220945846019,"StepEvaluate",",","Unchanged",","
635311220945856020,"StepEvaluate","-","Unchanged","-"
635311220945856020,"StepEvaluate","n","Unchanged","n"
635311220945856020,"StepEvaluate","1","Unchanged","1"
635311220945856020,"StepEvaluate",",","Unchanged",","
635311220945866020,"StepEvaluate","list'","Unchanged","list'"
635311220945866020,"StepEvaluate","[]","Changed","File imported"
635311220945866020,"StepEvaluate","File imported","Unchanged","File imported"
635311220945866020,"StepEvaluate","@","Changed","@"
635311220945876021,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220945876021,"StepEvaluate","PAT@","Unchanged","PAT@"
635311220945876021,"StepEvaluate",",","Unchanged",","
635311220945876021,"StepEvaluate","@Arg","Changed","@Arg-M"
635311220945886021,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220945886021,"StepEvaluate","PAT@-M","Changed","[]"
635311220945886021,"StepEvaluate","SEL@import","Changed","[]"
635311220945886021,"StepEvaluate","@","Changed","[]"
635311220945896022,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311220945896022,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311220945896022,"Parsed as literal","naturalNumbers"
635311220945896022,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311220945906023,"Parsed as literal",""
635311220945906023,"Parsed as literal",""
635311220945906023,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311220945916023,"Parsed as literal","naturalNumbers"
635311220945916023,"Parsed as literal","0"
635311220945916023,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311220945916023,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311220945926024,"Parsed as literal","naturalNumbers"
635311220945926024,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311220945926024,"Parsed as literal",""
635311220945926024,"Parsed as literal",""
635311220945936024,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311220945936024,"Parsed as literal","naturalNumbers"
635311220945936024,"Parsed as literal","0"
635311220945936024,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311220945946025,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311220945946025,"Parsed as literal","naturalNumbers"
635311220945946025,"Parsed as literal","n"
635311220945946025,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311220945956025,"Parsed as literal"," n "
635311220945956025,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311220945956025,"Parsed as literal","naturalNumbers"
635311220945956025,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311220945966026,"Parsed as literal","n"
635311220945966026,"Parsed as literal","1"
635311220945966026,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311220945976027,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311220945976027,"Parsed as literal","naturalNumbers"
635311220945976027,"Parsed as literal","n"
635311220945976027,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311220945986027,"Parsed as literal"," n "
635311220945986027,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311220945986027,"Parsed as literal","naturalNumbers"
635311220945986027,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311220945996028,"Parsed as literal","n"
635311220945996028,"Parsed as literal","1"
635311220945996028,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311220945996028,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311220946006028,"Parsed as literal","max"
635311220946006028,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311220946006028,"Parsed as literal","a"
635311220946016029,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311220946016029,"Parsed as literal","b"
635311220946016029,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311220946016029,"Parsed as literal","a"
635311220946016029,"Parsed as literal","b"
635311220946026029,"Parsed as literal","b"
635311220946026029,"Invalid operator","@max(a,b|a<b)->b","0"
635311220946026029,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311220946036030,"Parsed as literal","max"
635311220946036030,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311220946036030,"Parsed as literal","a"
635311220946036030,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311220946046031,"Parsed as literal","b"
635311220946046031,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311220946046031,"Parsed as literal","a"
635311220946046031,"Parsed as literal","b"
635311220946056031,"Parsed as literal","b"
635311220946056031,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311220946056031,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311220946056031,"Parsed as literal","max"
635311220946066032,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311220946066032,"Parsed as literal","a"
635311220946066032,"Parsed as literal","b"
635311220946066032,"Parsed as literal","a"
635311220946076032,"Invalid operator","@max(a,b)->a","0"
635311220946076032,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311220946076032,"Parsed as literal","max"
635311220946076032,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311220946086033,"Parsed as literal","a"
635311220946086033,"Parsed as literal","b"
635311220946086033,"Parsed as literal","a"
635311220946096033,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311220946096033,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311220946096033,"Parsed as literal","random"
635311220946096033,"Parsed as literal","0"
635311220946106034,"Parsed as literal"," 0"
635311220946106034,"Invalid operator","@random(0) -> 0","0"
635311220946106034,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311220946106034,"Parsed as literal","random"
635311220946116035,"Parsed as literal","0"
635311220946116035,"Parsed as literal"," 0"
635311220946116035,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311220946116035,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311220946126035,"Parsed as literal","random"
635311220946126035,"Parsed as literal","n"
635311220946126035,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311220946136036,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311220946136036,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311220946136036,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311220946136036,"Parsed as literal","1664525 "
635311220946146036,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311220946146036,"Parsed as literal","random"
635311220946146036,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311220946146036,"Parsed as literal","n"
635311220946156037,"Parsed as literal","1"
635311220946156037,"Parsed as literal"," 1013904223"
635311220946156037,"Parsed as literal",""
635311220946156037,"Parsed as literal"," 4294967296"
635311220946166037,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311220946166037,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311220946166037,"Parsed as literal","random"
635311220946166037,"Parsed as literal","n"
635311220946176038,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311220946176038,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311220946176038,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311220946186039,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311220946186039,"Parsed as literal","1664525 "
635311220946186039,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311220946186039,"Parsed as literal","random"
635311220946196039,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311220946196039,"Parsed as literal","n"
635311220946196039,"Parsed as literal","1"
635311220946196039,"Parsed as literal"," 1013904223"
635311220946206040,"Parsed as literal",""
635311220946206040,"Parsed as literal"," 4294967296"
635311220946206040,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311220946206040,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311220946216040,"Parsed as literal","gcd"
635311220946216040,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311220946216040,"Parsed as literal","a"
635311220946216040,"Parsed as literal","0"
635311220946226041,"Parsed as literal"," a"
635311220946226041,"Invalid operator","@gcd(a,0) -> a","0"
635311220946226041,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311220946226041,"Parsed as literal","gcd"
635311220946236041,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311220946236041,"Parsed as literal","a"
635311220946236041,"Parsed as literal","0"
635311220946236041,"Parsed as literal"," a"
635311220946246042,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311220946246042,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311220946246042,"Parsed as literal","gcd"
635311220946256043,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311220946256043,"Parsed as literal","a"
635311220946256043,"Parsed as literal","b"
635311220946256043,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311220946266043,"Parsed as literal","gcd"
635311220946266043,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311220946266043,"Parsed as literal","b"
635311220946266043,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311220946276044,"Parsed as literal","a "
635311220946276044,"Parsed as literal"," b"
635311220946276044,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311220946276044,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311220946286044,"Parsed as literal","gcd"
635311220946286044,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311220946286044,"Parsed as literal","a"
635311220946286044,"Parsed as literal","b"
635311220946296045,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311220946296045,"Parsed as literal","gcd"
635311220946296045,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311220946306045,"Parsed as literal","b"
635311220946306045,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311220946306045,"Parsed as literal","a "
635311220946306045,"Parsed as literal"," b"
635311220946316046,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311220946316046,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311220946316046,"Parsed as literal","gcd"
635311220946316046,"Parsed as literal","list"
635311220946326047,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311220946326047,"Parsed as literal","fold"
635311220946326047,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311220946326047,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311220946336047,"Parsed as literal","gcd"
635311220946336047,"Parsed as literal",""
635311220946336047,"Invalid operator","@gcd","19"
635311220946336047,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311220946346048,"Parsed as literal","gcd"
635311220946346048,"Parsed as literal",""
635311220946346048,"Invalid operator","@gcd","19"
635311220946346048,"Parsed as literal","@gcd"
635311220946356048,"Parsed as literal","list"
635311220946356048,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311220946356048,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311220946366049,"Parsed as literal","gcd"
635311220946366049,"Parsed as literal","list"
635311220946366049,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311220946376049,"Parsed as literal","fold"
635311220946376049,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311220946376049,"Parsed as literal","@gcd"
635311220946376049,"Parsed as literal","list"
635311220946386050,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311220946386050,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311220946386050,"Parsed as literal","fib"
635311220946396051,"Parsed as literal","0"
635311220946396051,"Parsed as literal"," 1"
635311220946396051,"Invalid operator","@fib(0) -> 1","0"
635311220946396051,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311220946406051,"Parsed as literal","fib"
635311220946406051,"Parsed as literal","0"
635311220946406051,"Parsed as literal"," 1"
635311220946406051,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311220946416052,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311220946416052,"Parsed as literal","fib"
635311220946416052,"Parsed as literal","1"
635311220946416052,"Parsed as literal"," 1"
635311220946426052,"Invalid operator","@fib(1) -> 1","0"
635311220946426052,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311220946426052,"Parsed as literal","fib"
635311220946426052,"Parsed as literal","1"
635311220946436053,"Parsed as literal"," 1"
635311220946436053,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311220946436053,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311220946446053,"Parsed as literal","fib"
635311220946446053,"Parsed as literal","n"
635311220946446053,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311220946446053,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311220946456054,"Parsed as literal","fib"
635311220946456054,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311220946456054,"Parsed as literal","n"
635311220946456054,"Parsed as literal","2"
635311220946466055,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311220946466055,"Parsed as literal","fib"
635311220946466055,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311220946466055,"Parsed as literal","n"
635311220946476055,"Parsed as literal","1"
635311220946476055,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311220946476055,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311220946476055,"Parsed as literal","fib"
635311220946486056,"Parsed as literal","n"
635311220946486056,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311220946486056,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311220946496056,"Parsed as literal","fib"
635311220946496056,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311220946496056,"Parsed as literal","n"
635311220946496056,"Parsed as literal","2"
635311220946506057,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311220946506057,"Parsed as literal","fib"
635311220946506057,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311220946506057,"Parsed as literal","n"
635311220946516057,"Parsed as literal","1"
635311220946516057,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311220946516057,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311220946526058,"Parsed as literal","fib2"
635311220946526058,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311220946526058,"Parsed as literal",""
635311220946526058,"Parsed as literal",""
635311220946536059,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311220946536059,"Parsed as literal"," 0 "
635311220946536059,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311220946536059,"Parsed as literal"," 1 "
635311220946546059,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311220946546059,"Parsed as literal","zipWith"
635311220946546059,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311220946556060,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311220946556060,"Parsed as literal",""
635311220946556060,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311220946556060,"Parsed as literal","a"
635311220946566060,"Parsed as literal","b"
635311220946566060,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311220946566060,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311220946566060,"Parsed as literal","a"
635311220946576061,"Parsed as literal","b"
635311220946576061,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311220946576061,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311220946576061,"Parsed as literal","fib2"
635311220946586061,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311220946586061,"Parsed as literal",""
635311220946586061,"Parsed as literal",""
635311220946586061,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311220946596062,"Parsed as literal"," "
635311220946596062,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311220946596062,"Parsed as literal","fib2"
635311220946596062,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311220946606063,"Parsed as literal",""
635311220946606063,"Parsed as literal",""
635311220946606063,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311220946616063,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311220946616063,"Parsed as literal",""
635311220946616063,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311220946616063,"Parsed as literal","a"
635311220946626064,"Parsed as literal","b"
635311220946626064,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311220946626064,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311220946626064,"Parsed as literal","a"
635311220946636064,"Parsed as literal","b"
635311220946636064,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311220946636064,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311220946636064,"Parsed as literal","fib2"
635311220946646065,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311220946646065,"Parsed as literal",""
635311220946646065,"Parsed as literal",""
635311220946656065,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311220946656065,"Parsed as literal"," "
635311220946656065,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311220946656065,"Parsed as literal","fib2"
635311220946666066,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311220946666066,"Parsed as literal",""
635311220946666066,"Parsed as literal",""
635311220946666066,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311220946676067,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311220946676067,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311220946676067,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311220946676067,"Parsed as literal",""
635311220946686067,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311220946686067,"Parsed as literal","a"
635311220946686067,"Parsed as literal","b"
635311220946696068,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311220946696068,"Parsed as literal","a"
635311220946696068,"Parsed as literal","b"
635311220946696068,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311220946706068,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311220946706068,"Parsed as literal","fib2"
635311220946706068,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311220946706068,"Parsed as literal",""
635311220946716069,"Parsed as literal",""
635311220946716069,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311220946716069,"Parsed as literal"," "
635311220946716069,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311220946726069,"Parsed as literal","fib2"
635311220946726069,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311220946726069,"Parsed as literal",""
635311220946726069,"Parsed as literal",""
635311220946736070,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311220946736070,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311220946736070,"Parsed as literal","fib2"
635311220946736070,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311220946746071,"Parsed as literal",""
635311220946746071,"Parsed as literal",""
635311220946746071,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311220946756071,"Parsed as literal"," 0 "
635311220946756071,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311220946756071,"Parsed as literal"," 1 "
635311220946756071,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311220946766072,"Parsed as literal","zipWith"
635311220946766072,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311220946766072,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311220946776072,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311220946776072,"Parsed as literal",""
635311220946776072,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311220946776072,"Parsed as literal","a"
635311220946786073,"Parsed as literal","b"
635311220946786073,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311220946786073,"Parsed as literal","a"
635311220946786073,"Parsed as literal","b"
635311220946796073,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311220946796073,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311220946796073,"Parsed as literal","fib2"
635311220946796073,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311220946806074,"Parsed as literal",""
635311220946806074,"Parsed as literal",""
635311220946806074,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311220946806074,"Parsed as literal"," "
635311220946816075,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311220946816075,"Parsed as literal","fib2"
635311220946816075,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311220946816075,"Parsed as literal",""
635311220946826075,"Parsed as literal",""
635311220946826075,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311220946826075,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311220946836076,"Parsed as literal","fib2"
635311220946836076,"Parsed as literal","n"
635311220946836076,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311220946836076,"Parsed as literal","take"
635311220946846076,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311220946846076,"Parsed as literal","n"
635311220946846076,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311220946846076,"Parsed as literal","fib2"
635311220946856077,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311220946856077,"Parsed as literal",""
635311220946856077,"Parsed as literal",""
635311220946866077,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311220946866077,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311220946876078,"Parsed as literal","fib2"
635311220946876078,"Parsed as literal","n"
635311220946876078,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311220946876078,"Parsed as literal","take"
635311220946886079,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311220946886079,"Parsed as literal","n"
635311220946886079,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311220946886079,"Parsed as literal","fib2"
635311220946896079,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311220946896079,"Parsed as literal",""
635311220946896079,"Parsed as literal",""
635311220946906080,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311220946906080,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311220946906080,"Parsed as literal","fac"
635311220946906080,"Parsed as literal","0"
635311220946916080,"Parsed as literal"," 1"
635311220946916080,"Invalid operator","@fac(0) -> 1","0"
635311220946916080,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311220946916080,"Parsed as literal","fac"
635311220946926081,"Parsed as literal","0"
635311220946926081,"Parsed as literal"," 1"
635311220946926081,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311220946926081,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311220946936081,"Parsed as literal","fac"
635311220946936081,"Parsed as literal","n"
635311220946936081,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311220946936081,"Parsed as literal"," n "
635311220946946082,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311220946946082,"Parsed as literal","fac"
635311220946946082,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311220946946082,"Parsed as literal","n"
635311220946956083,"Parsed as literal","1"
635311220946956083,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311220946956083,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311220946956083,"Parsed as literal","fac"
635311220946966083,"Parsed as literal","n"
635311220946966083,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311220946966083,"Parsed as literal"," n "
635311220946966083,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311220946976084,"Parsed as literal","fac"
635311220946976084,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311220946976084,"Parsed as literal","n"
635311220946976084,"Parsed as literal","1"
635311220946986084,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311220946986084,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311220946986084,"Parsed as literal","pow"
635311220946986084,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311220946996085,"Parsed as literal","num"
635311220946996085,"Parsed as literal","0"
635311220946996085,"Parsed as literal"," 1"
635311220946996085,"Invalid operator","@pow(num,0) -> 1","0"
635311220947006085,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311220947006085,"Parsed as literal","pow"
635311220947006085,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311220947006085,"Parsed as literal","num"
635311220947006085,"Parsed as literal","0"
635311220947016086,"Parsed as literal"," 1"
635311220947016086,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311220947016086,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311220947026087,"Parsed as literal","pow"
635311220947026087,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311220947026087,"Parsed as literal","num"
635311220947026087,"Parsed as literal","1"
635311220947026087,"Parsed as literal"," num"
635311220947036087,"Invalid operator","@pow(num,1) -> num","0"
635311220947036087,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311220947036087,"Parsed as literal","pow"
635311220947036087,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311220947046088,"Parsed as literal","num"
635311220947046088,"Parsed as literal","1"
635311220947046088,"Parsed as literal"," num"
635311220947056088,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311220947056088,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311220947056088,"Parsed as literal","pow"
635311220947056088,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311220947066089,"Parsed as literal","num"
635311220947066089,"Parsed as literal"," power"
635311220947066089,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311220947066089,"Parsed as literal"," num "
635311220947076089,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311220947076089,"Parsed as literal","pow"
635311220947076089,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311220947076089,"Parsed as literal","num"
635311220947086090,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311220947086090,"Parsed as literal","power"
635311220947086090,"Parsed as literal","1"
635311220947086090,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311220947096091,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311220947096091,"Parsed as literal","pow"
635311220947096091,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311220947096091,"Parsed as literal","num"
635311220947106091,"Parsed as literal"," power"
635311220947106091,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311220947106091,"Parsed as literal"," num "
635311220947116092,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311220947116092,"Parsed as literal","pow"
635311220947116092,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311220947116092,"Parsed as literal","num"
635311220947126092,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311220947126092,"Parsed as literal","power"
635311220947126092,"Parsed as literal","1"
635311220947126092,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311220947136093,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311220947136093,"Parsed as literal","upArrow"
635311220947136093,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311220947136093,"Parsed as literal","a"
635311220947146093,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311220947146093,"Parsed as literal","b"
635311220947146093,"Parsed as literal","1"
635311220947156094,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311220947156094,"Parsed as literal","pow"
635311220947156094,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311220947156094,"Parsed as literal","a"
635311220947166095,"Parsed as literal","b"
635311220947166095,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311220947166095,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311220947166095,"Parsed as literal","upArrow"
635311220947176095,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311220947176095,"Parsed as literal","a"
635311220947176095,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311220947186096,"Parsed as literal","b"
635311220947186096,"Parsed as literal","1"
635311220947186096,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311220947186096,"Parsed as literal","pow"
635311220947196096,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311220947196096,"Parsed as literal","a"
635311220947196096,"Parsed as literal","b"
635311220947206097,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311220947206097,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311220947206097,"Parsed as literal","upArrow"
635311220947206097,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311220947216097,"Parsed as literal","a"
635311220947216097,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311220947216097,"Parsed as literal","1"
635311220947216097,"Parsed as literal","n"
635311220947226098,"Parsed as literal"," a"
635311220947226098,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311220947226098,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311220947226098,"Parsed as literal","upArrow"
635311220947236099,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311220947236099,"Parsed as literal","a"
635311220947236099,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311220947236099,"Parsed as literal","1"
635311220947246099,"Parsed as literal","n"
635311220947246099,"Parsed as literal"," a"
635311220947246099,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311220947256100,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311220947256100,"Parsed as literal","upArrow"
635311220947256100,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311220947256100,"Parsed as literal","a"
635311220947266100,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311220947266100,"Parsed as literal","b"
635311220947266100,"Parsed as literal","n"
635311220947276101,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311220947276101,"Parsed as literal","upArrow"
635311220947276101,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311220947276101,"Parsed as literal","a"
635311220947286101,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311220947286101,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311220947286101,"Parsed as literal","upArrow"
635311220947286101,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311220947296102,"Parsed as literal","a"
635311220947296102,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311220947296102,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311220947296102,"Parsed as literal","b"
635311220947306103,"Parsed as literal","1"
635311220947306103,"Parsed as literal","n"
635311220947306103,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311220947306103,"Parsed as literal","n"
635311220947316103,"Parsed as literal","1"
635311220947316103,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311220947316103,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311220947326104,"Parsed as literal","upArrow"
635311220947326104,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311220947326104,"Parsed as literal","a"
635311220947326104,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311220947326104,"Parsed as literal","b"
635311220947336104,"Parsed as literal","n"
635311220947336104,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311220947336104,"Parsed as literal","upArrow"
635311220947346105,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311220947346105,"Parsed as literal","a"
635311220947346105,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311220947346105,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311220947356105,"Parsed as literal","upArrow"
635311220947356105,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311220947356105,"Parsed as literal","a"
635311220947356105,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311220947366106,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311220947366106,"Parsed as literal","b"
635311220947366106,"Parsed as literal","1"
635311220947366106,"Parsed as literal","n"
635311220947376107,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311220947376107,"Parsed as literal","n"
635311220947376107,"Parsed as literal","1"
635311220947386107,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311220947386107,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311220947386107,"Parsed as literal","graham"
635311220947386107,"Parsed as literal","0"
635311220947396108,"Parsed as literal"," 4"
635311220947396108,"Invalid operator","@graham(0) -> 4","0"
635311220947396108,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311220947396108,"Parsed as literal","graham"
635311220947406108,"Parsed as literal","0"
635311220947406108,"Parsed as literal"," 4"
635311220947406108,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311220947416109,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311220947416109,"Parsed as literal","graham"
635311220947416109,"Parsed as literal","n"
635311220947416109,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311220947426109,"Parsed as literal","upArrow"
635311220947426109,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311220947426109,"Parsed as literal","3"
635311220947426109,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311220947436110,"Parsed as literal","3"
635311220947436110,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311220947436110,"Parsed as literal","graham"
635311220947436110,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311220947446111,"Parsed as literal","n"
635311220947446111,"Parsed as literal","1"
635311220947446111,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311220947456111,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311220947456111,"Parsed as literal","graham"
635311220947456111,"Parsed as literal","n"
635311220947456111,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311220947466112,"Parsed as literal","upArrow"
635311220947466112,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311220947466112,"Parsed as literal","3"
635311220947466112,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311220947476112,"Parsed as literal","3"
635311220947476112,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311220947476112,"Parsed as literal","graham"
635311220947476112,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311220947486113,"Parsed as literal","n"
635311220947486113,"Parsed as literal","1"
635311220947486113,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311220947486113,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311220947496113,"Parsed as literal","grahamsNumber"
635311220947496113,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311220947496113,"Parsed as literal",""
635311220947506114,"Parsed as literal",""
635311220947506114,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311220947506114,"Parsed as literal","graham"
635311220947506114,"Parsed as literal","64"
635311220947516115,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311220947516115,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311220947516115,"Parsed as literal","grahamsNumber"
635311220947516115,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311220947526115,"Parsed as literal",""
635311220947526115,"Parsed as literal",""
635311220947526115,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311220947526115,"Parsed as literal","graham"
635311220947536116,"Parsed as literal","64"
635311220947536116,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311220947536116,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311220947536116,"Parsed as literal","ack"
635311220947546116,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311220947546116,"Parsed as literal","0"
635311220947546116,"Parsed as literal","n"
635311220947556117,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311220947556117,"Parsed as literal"," n "
635311220947556117,"Parsed as literal"," 1"
635311220947556117,"Invalid operator","@ack(0,n) -> n + 1","0"
635311220947566117,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311220947566117,"Parsed as literal","ack"
635311220947566117,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311220947566117,"Parsed as literal","0"
635311220947576118,"Parsed as literal","n"
635311220947576118,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311220947576118,"Parsed as literal"," n "
635311220947576118,"Parsed as literal"," 1"
635311220947586119,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311220947586119,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311220947586119,"Parsed as literal","ack"
635311220947596119,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311220947596119,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311220947596119,"Parsed as literal","m"
635311220947596119,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311220947606120,"Parsed as literal","m"
635311220947606120,"Parsed as literal","0"
635311220947606120,"Parsed as literal","0"
635311220947606120,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311220947616120,"Parsed as literal","ack"
635311220947616120,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311220947616120,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311220947616120,"Parsed as literal","m"
635311220947626121,"Parsed as literal","1"
635311220947626121,"Parsed as literal","1"
635311220947626121,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311220947626121,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311220947636121,"Parsed as literal","ack"
635311220947636121,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311220947636121,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311220947636121,"Parsed as literal","m"
635311220947646122,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311220947646122,"Parsed as literal","m"
635311220947646122,"Parsed as literal","0"
635311220947646122,"Parsed as literal","0"
635311220947656123,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311220947656123,"Parsed as literal","ack"
635311220947656123,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311220947666123,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311220947666123,"Parsed as literal","m"
635311220947666123,"Parsed as literal","1"
635311220947666123,"Parsed as literal","1"
635311220947676124,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311220947676124,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311220947676124,"Parsed as literal","ack"
635311220947686124,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311220947686124,"Parsed as literal","m"
635311220947686124,"Parsed as literal","n"
635311220947686124,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311220947696125,"Parsed as literal","ack"
635311220947696125,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311220947696125,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311220947696125,"Parsed as literal","m"
635311220947706125,"Parsed as literal","1"
635311220947706125,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311220947706125,"Parsed as literal","ack"
635311220947706125,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311220947716126,"Parsed as literal","m"
635311220947716126,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311220947716126,"Parsed as literal","n"
635311220947716126,"Parsed as literal","1"
635311220947726127,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311220947726127,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311220947726127,"Parsed as literal","ack"
635311220947726127,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311220947736127,"Parsed as literal","m"
635311220947736127,"Parsed as literal","n"
635311220947736127,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311220947736127,"Parsed as literal","ack"
635311220947746128,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311220947746128,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311220947746128,"Parsed as literal","m"
635311220947746128,"Parsed as literal","1"
635311220947756128,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311220947756128,"Parsed as literal","ack"
635311220947756128,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311220947766129,"Parsed as literal","m"
635311220947766129,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311220947766129,"Parsed as literal","n"
635311220947766129,"Parsed as literal","1"
635311220947776129,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311220947776129,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311220947776129,"Parsed as literal","acker"
635311220947776129,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311220947786130,"Parsed as literal","m"
635311220947786130,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311220947786130,"Parsed as literal","n"
635311220947786130,"Parsed as literal","0"
635311220947796131,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311220947796131,"Parsed as literal"," m"
635311220947796131,"Parsed as literal","n"
635311220947796131,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311220947806131,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311220947806131,"Parsed as literal","acker"
635311220947806131,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311220947816132,"Parsed as literal","m"
635311220947816132,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311220947816132,"Parsed as literal","n"
635311220947816132,"Parsed as literal","0"
635311220947826132,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311220947826132,"Parsed as literal"," m"
635311220947826132,"Parsed as literal","n"
635311220947826132,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311220947836133,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311220947836133,"Parsed as literal","acker"
635311220947836133,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311220947836133,"Parsed as literal","m"
635311220947846133,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311220947846133,"Parsed as literal","0"
635311220947846133,"Parsed as literal","1"
635311220947846133,"Parsed as literal"," 0"
635311220947856134,"Invalid operator","@acker(m,0,1) -> 0","0"
635311220947856134,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311220947856134,"Parsed as literal","acker"
635311220947856134,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311220947866135,"Parsed as literal","m"
635311220947866135,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311220947866135,"Parsed as literal","0"
635311220947866135,"Parsed as literal","1"
635311220947876135,"Parsed as literal"," 0"
635311220947876135,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311220947876135,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311220947886136,"Parsed as literal","acker"
635311220947886136,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311220947886136,"Parsed as literal","m"
635311220947886136,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311220947896136,"Parsed as literal","0"
635311220947896136,"Parsed as literal","2"
635311220947896136,"Parsed as literal"," 1"
635311220947896136,"Invalid operator","@acker(m,0,2) -> 1","0"
635311220947906137,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311220947906137,"Parsed as literal","acker"
635311220947906137,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311220947906137,"Parsed as literal","m"
635311220947916137,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311220947916137,"Parsed as literal","0"
635311220947916137,"Parsed as literal","2"
635311220947916137,"Parsed as literal"," 1"
635311220947926138,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311220947926138,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311220947926138,"Parsed as literal","acker"
635311220947926138,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311220947936139,"Parsed as literal","m"
635311220947936139,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311220947936139,"Parsed as literal","0"
635311220947946139,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311220947946139,"Parsed as literal","p"
635311220947946139,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311220947946139,"Parsed as literal","p"
635311220947946139,"Parsed as literal","2"
635311220947956140,"Parsed as literal"," m"
635311220947956140,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311220947956140,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311220947966140,"Parsed as literal","acker"
635311220947966140,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311220947966140,"Parsed as literal","m"
635311220947966140,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311220947976141,"Parsed as literal","0"
635311220947976141,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311220947976141,"Parsed as literal","p"
635311220947976141,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311220947986141,"Parsed as literal","p"
635311220947986141,"Parsed as literal","2"
635311220947986141,"Parsed as literal"," m"
635311220947986141,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311220947996142,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311220947996142,"Parsed as literal","acker"
635311220947996142,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311220948006143,"Parsed as literal","m"
635311220948006143,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311220948006143,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311220948006143,"Parsed as literal","n"
635311220948016143,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311220948016143,"Parsed as literal","n"
635311220948016143,"Parsed as literal","0"
635311220948016143,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311220948026144,"Parsed as literal","p"
635311220948026144,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311220948026144,"Parsed as literal","p"
635311220948026144,"Parsed as literal","0"
635311220948036144,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311220948036144,"Parsed as literal","acker"
635311220948036144,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311220948036144,"Parsed as literal","m"
635311220948046145,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311220948046145,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311220948046145,"Parsed as literal","acker"
635311220948046145,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311220948056145,"Parsed as literal","m"
635311220948056145,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311220948066146,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311220948066146,"Parsed as literal","n"
635311220948066146,"Parsed as literal","1"
635311220948066146,"Parsed as literal","p"
635311220948076147,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311220948076147,"Parsed as literal","p"
635311220948076147,"Parsed as literal","1"
635311220948076147,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311220948086147,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311220948086147,"Parsed as literal","acker"
635311220948086147,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311220948086147,"Parsed as literal","m"
635311220948096148,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311220948096148,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311220948096148,"Parsed as literal","n"
635311220948096148,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311220948106148,"Parsed as literal","n"
635311220948106148,"Parsed as literal","0"
635311220948106148,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311220948116149,"Parsed as literal","p"
635311220948116149,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311220948116149,"Parsed as literal","p"
635311220948116149,"Parsed as literal","0"
635311220948126149,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311220948126149,"Parsed as literal","acker"
635311220948126149,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311220948126149,"Parsed as literal","m"
635311220948136150,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311220948136150,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311220948136150,"Parsed as literal","acker"
635311220948136150,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311220948146151,"Parsed as literal","m"
635311220948146151,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311220948146151,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311220948146151,"Parsed as literal","n"
635311220948156151,"Parsed as literal","1"
635311220948156151,"Parsed as literal","p"
635311220948156151,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311220948166152,"Parsed as literal","p"
635311220948166152,"Parsed as literal","1"
635311220948166152,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311220948166152,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311220948176152,"Parsed as literal","hyper"
635311220948176152,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311220948176152,"Parsed as literal","0"
635311220948176152,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311220948186153,"Parsed as literal","a"
635311220948186153,"Parsed as literal","b"
635311220948186153,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311220948186153,"Parsed as literal"," b"
635311220948196154,"Parsed as literal","1"
635311220948196154,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311220948196154,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311220948196154,"Parsed as literal","hyper"
635311220948206154,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311220948206154,"Parsed as literal","0"
635311220948206154,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311220948216155,"Parsed as literal","a"
635311220948216155,"Parsed as literal","b"
635311220948216155,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311220948216155,"Parsed as literal"," b"
635311220948226155,"Parsed as literal","1"
635311220948226155,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311220948226155,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311220948226155,"Parsed as literal","hyper"
635311220948236156,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311220948236156,"Parsed as literal","1"
635311220948236156,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311220948236156,"Parsed as literal","a"
635311220948246156,"Parsed as literal","0"
635311220948246156,"Parsed as literal"," a"
635311220948246156,"Invalid operator","@hyper(1,a,0) -> a","0"
635311220948246156,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311220948256157,"Parsed as literal","hyper"
635311220948256157,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311220948256157,"Parsed as literal","1"
635311220948256157,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311220948266158,"Parsed as literal","a"
635311220948266158,"Parsed as literal","0"
635311220948266158,"Parsed as literal"," a"
635311220948276158,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311220948276158,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311220948276158,"Parsed as literal","hyper"
635311220948276158,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311220948286159,"Parsed as literal","2"
635311220948286159,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311220948286159,"Parsed as literal","a"
635311220948286159,"Parsed as literal","0"
635311220948296159,"Parsed as literal"," 0"
635311220948296159,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311220948296159,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311220948296159,"Parsed as literal","hyper"
635311220948306160,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311220948306160,"Parsed as literal","2"
635311220948306160,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311220948306160,"Parsed as literal","a"
635311220948316160,"Parsed as literal","0"
635311220948316160,"Parsed as literal"," 0"
635311220948316160,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311220948316160,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311220948326161,"Parsed as literal","hyper"
635311220948326161,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311220948326161,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311220948326161,"Parsed as literal","n"
635311220948336162,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311220948336162,"Parsed as literal","n"
635311220948336162,"Parsed as literal","2"
635311220948336162,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311220948346162,"Parsed as literal","a"
635311220948346162,"Parsed as literal","0"
635311220948346162,"Parsed as literal"," 1"
635311220948346162,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311220948356163,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311220948356163,"Parsed as literal","hyper"
635311220948356163,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311220948366163,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311220948366163,"Parsed as literal","n"
635311220948366163,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311220948366163,"Parsed as literal","n"
635311220948376164,"Parsed as literal","2"
635311220948376164,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311220948376164,"Parsed as literal","a"
635311220948376164,"Parsed as literal","0"
635311220948386164,"Parsed as literal"," 1"
635311220948386164,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311220948386164,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311220948386164,"Parsed as literal","hyper"
635311220948396165,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311220948396165,"Parsed as literal","n"
635311220948396165,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311220948396165,"Parsed as literal","a"
635311220948406166,"Parsed as literal","b"
635311220948406166,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311220948406166,"Parsed as literal","hyper"
635311220948416166,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311220948416166,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311220948416166,"Parsed as literal","n"
635311220948416166,"Parsed as literal","1"
635311220948426167,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311220948426167,"Parsed as literal","a"
635311220948426167,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311220948426167,"Parsed as literal","hyper"
635311220948436167,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311220948436167,"Parsed as literal","n"
635311220948436167,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311220948436167,"Parsed as literal","a"
635311220948446168,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311220948446168,"Parsed as literal","b"
635311220948446168,"Parsed as literal","1"
635311220948456168,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311220948456168,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311220948456168,"Parsed as literal","hyper"
635311220948456168,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311220948466169,"Parsed as literal","n"
635311220948466169,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311220948466169,"Parsed as literal","a"
635311220948466169,"Parsed as literal","b"
635311220948476170,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311220948476170,"Parsed as literal","hyper"
635311220948476170,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311220948476170,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311220948486170,"Parsed as literal","n"
635311220948486170,"Parsed as literal","1"
635311220948486170,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311220948486170,"Parsed as literal","a"
635311220948496171,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311220948496171,"Parsed as literal","hyper"
635311220948496171,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311220948496171,"Parsed as literal","n"
635311220948506171,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311220948506171,"Parsed as literal","a"
635311220948506171,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311220948506171,"Parsed as literal","b"
635311220948516172,"Parsed as literal","1"
635311220948516172,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311220948516172,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311220948526172,"Parsed as literal","sudan"
635311220948526172,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311220948526172,"Parsed as literal","0"
635311220948526172,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311220948536173,"Parsed as literal","x"
635311220948536173,"Parsed as literal","y"
635311220948536173,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311220948536173,"Parsed as literal"," x "
635311220948546174,"Parsed as literal"," y"
635311220948546174,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311220948546174,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311220948546174,"Parsed as literal","sudan"
635311220948556174,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311220948556174,"Parsed as literal","0"
635311220948556174,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311220948556174,"Parsed as literal","x"
635311220948566175,"Parsed as literal","y"
635311220948566175,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311220948566175,"Parsed as literal"," x "
635311220948566175,"Parsed as literal"," y"
635311220948576175,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311220948576175,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311220948576175,"Parsed as literal","sudan"
635311220948586176,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311220948586176,"Parsed as literal","n"
635311220948586176,"Parsed as literal","0"
635311220948586176,"Parsed as literal"," x"
635311220948596176,"Invalid operator","@sudan(n,0) -> x","0"
635311220948596176,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311220948596176,"Parsed as literal","sudan"
635311220948596176,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311220948606177,"Parsed as literal","n"
635311220948606177,"Parsed as literal","0"
635311220948606177,"Parsed as literal"," x"
635311220948616178,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311220948616178,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311220948616178,"Parsed as literal","sudan"
635311220948616178,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311220948626178,"Parsed as literal","n"
635311220948626178,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311220948626178,"Parsed as literal","x"
635311220948626178,"Parsed as literal","y"
635311220948636179,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311220948636179,"Parsed as literal","sudan"
635311220948636179,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311220948646179,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311220948646179,"Parsed as literal","n"
635311220948646179,"Parsed as literal","1"
635311220948646179,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311220948656180,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311220948656180,"Parsed as literal","sudan"
635311220948656180,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311220948656180,"Parsed as literal","n"
635311220948666180,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311220948666180,"Parsed as literal","x"
635311220948666180,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311220948666180,"Parsed as literal","y"
635311220948676181,"Parsed as literal","1"
635311220948676181,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311220948676181,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311220948686182,"Parsed as literal","sudan"
635311220948686182,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311220948686182,"Parsed as literal","n"
635311220948686182,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311220948696182,"Parsed as literal","x"
635311220948696182,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311220948696182,"Parsed as literal","y"
635311220948696182,"Parsed as literal","1"
635311220948706183,"Parsed as literal","y"
635311220948706183,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311220948706183,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311220948706183,"Parsed as literal","sudan"
635311220948716183,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311220948716183,"Parsed as literal","n"
635311220948716183,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311220948716183,"Parsed as literal","x"
635311220948726184,"Parsed as literal","y"
635311220948726184,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311220948726184,"Parsed as literal","sudan"
635311220948736184,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311220948736184,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311220948736184,"Parsed as literal","n"
635311220948736184,"Parsed as literal","1"
635311220948746185,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311220948746185,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311220948746185,"Parsed as literal","sudan"
635311220948746185,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311220948756186,"Parsed as literal","n"
635311220948756186,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311220948756186,"Parsed as literal","x"
635311220948756186,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311220948766186,"Parsed as literal","y"
635311220948766186,"Parsed as literal","1"
635311220948766186,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311220948776187,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311220948776187,"Parsed as literal","sudan"
635311220948776187,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311220948776187,"Parsed as literal","n"
635311220948786187,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311220948786187,"Parsed as literal","x"
635311220948786187,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311220948786187,"Parsed as literal","y"
635311220948796188,"Parsed as literal","1"
635311220948796188,"Parsed as literal","y"
635311220948796188,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311220948796188,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311220948806188,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311220948806188,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311220948806188,"StepEvaluate","->","Changed","Declared @max"
635311220948806188,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311220948816189,"StepEvaluate","->","Changed","Declared @max"
635311220948816189,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311220948816189,"StepEvaluate","->","Changed","Declared @random"
635311220948816189,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311220948826190,"StepEvaluate","->","Changed","Declared @random"
635311220948826190,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311220948826190,"StepEvaluate","->","Changed","Declared @gcd"
635311220948826190,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311220948826190,"StepEvaluate","->","Changed","Declared @gcd"
635311220948836190,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311220948836190,"StepEvaluate","->","Changed","Declared @gcd"
635311220948836190,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311220948846191,"StepEvaluate","->","Changed","Declared @fib"
635311220948846191,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311220948846191,"StepEvaluate","->","Changed","Declared @fib"
635311220948846191,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311220948846191,"StepEvaluate","->","Changed","Declared @fib"
635311220948856191,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311220948856191,"StepEvaluate","->","Changed","Declared @fib2"
635311220948856191,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311220948856191,"StepEvaluate","->","Changed","Declared @fib2"
635311220948866192,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311220948866192,"StepEvaluate","->","Changed","Declared @fac"
635311220948866192,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311220948866192,"StepEvaluate","->","Changed","Declared @fac"
635311220948876192,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311220948876192,"StepEvaluate","->","Changed","Declared @pow"
635311220948876192,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311220948876192,"StepEvaluate","->","Changed","Declared @pow"
635311220948886193,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311220948886193,"StepEvaluate","->","Changed","Declared @pow"
635311220948886193,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311220948886193,"StepEvaluate","->","Changed","Declared @upArrow"
635311220948896194,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311220948896194,"StepEvaluate","->","Changed","Declared @upArrow"
635311220948896194,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311220948896194,"StepEvaluate","->","Changed","Declared @upArrow"
635311220948906194,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311220948906194,"StepEvaluate","->","Changed","Declared @graham"
635311220948906194,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311220948906194,"StepEvaluate","->","Changed","Declared @graham"
635311220948916195,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311220948916195,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311220948916195,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311220948916195,"StepEvaluate","->","Changed","Declared @ack"
635311220948926195,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311220948926195,"StepEvaluate","->","Changed","Declared @ack"
635311220948926195,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311220948926195,"StepEvaluate","->","Changed","Declared @ack"
635311220948936196,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311220948936196,"StepEvaluate","->","Changed","Declared @acker"
635311220948936196,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311220948936196,"StepEvaluate","->","Changed","Declared @acker"
635311220948946196,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311220948946196,"StepEvaluate","->","Changed","Declared @acker"
635311220948946196,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311220948946196,"StepEvaluate","->","Changed","Declared @acker"
635311220948956197,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311220948956197,"StepEvaluate","->","Changed","Declared @acker"
635311220948956197,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311220948956197,"StepEvaluate","->","Changed","Declared @hyper"
635311220948966198,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311220948966198,"StepEvaluate","->","Changed","Declared @hyper"
635311220948966198,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311220948966198,"StepEvaluate","->","Changed","Declared @hyper"
635311220948976198,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311220948976198,"StepEvaluate","->","Changed","Declared @hyper"
635311220948976198,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311220948976198,"StepEvaluate","->","Changed","Declared @hyper"
635311220948986199,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311220948986199,"StepEvaluate","->","Changed","Declared @sudan"
635311220948986199,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311220948986199,"StepEvaluate","->","Changed","Declared @sudan"
635311220948996199,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311220948996199,"StepEvaluate","->","Changed","Declared @sudan"
635311220948996199,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311220948996199,"StepEvaluate","[]","Changed","File imported"
635311220948996199,"StepEvaluate","File imported","Unchanged","File imported"
635311220949006200,"StepEvaluate","@","Changed","@"
635311220949006200,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220949006200,"StepEvaluate","PAT@","Unchanged","PAT@"
635311220949016200,"StepEvaluate",",","Unchanged",","
635311220949016200,"StepEvaluate","@Arg","Changed","@Arg-M"
635311220949016200,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311220949016200,"StepEvaluate","PAT@-M","Changed","[]"
635311220949016200,"StepEvaluate","SEL@import","Changed","[]"
635311220949026201,"StepEvaluate","@","Changed","[]"
635311220949026201,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311220949026201,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311220949036202,"Parsed as literal","quickSort"
635311220949036202,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311220949036202,"Parsed as literal",""
635311220949036202,"Parsed as literal",""
635311220949046202,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311220949046202,"Parsed as literal",""
635311220949046202,"Parsed as literal",""
635311220949046202,"Invalid operator","@quickSort([]) -> []","0"
635311220949056203,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311220949056203,"Parsed as literal","quickSort"
635311220949056203,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311220949056203,"Parsed as literal",""
635311220949066203,"Parsed as literal",""
635311220949066203,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311220949066203,"Parsed as literal",""
635311220949066203,"Parsed as literal",""
635311220949076204,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311220949086204,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311220949086204,"Parsed as literal","quickSort"
635311220949086204,"Parsed as literal","list"
635311220949096205,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311220949096205,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311220949096205,"Parsed as literal","quickSort"
635311220949096205,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311220949106206,"Parsed as literal","filter"
635311220949106206,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311220949106206,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311220949106206,"Parsed as literal",""
635311220949116206,"Parsed as literal","i"
635311220949116206,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311220949116206,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311220949126207,"Parsed as literal"," i "
635311220949126207,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311220949126207,"Parsed as literal"," "
635311220949126207,"Parsed as literal","list"
635311220949136207,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311220949136207,"Parsed as literal",""
635311220949136207,"Parsed as literal","list"
635311220949136207,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311220949146208,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311220949146208,"Parsed as literal",""
635311220949146208,"Parsed as literal","i"
635311220949146208,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311220949156208,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311220949156208,"Parsed as literal"," i "
635311220949156208,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311220949156208,"Parsed as literal"," "
635311220949166209,"Parsed as literal","list"
635311220949166209,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311220949166209,"Parsed as literal",""
635311220949166209,"Parsed as literal","list"
635311220949176210,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311220949176210,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311220949176210,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311220949176210,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311220949186210,"Parsed as literal",""
635311220949186210,"Parsed as literal","i"
635311220949186210,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311220949196211,"Parsed as literal"," i "
635311220949196211,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311220949196211,"Parsed as literal"," "
635311220949196211,"Parsed as literal","list"
635311220949206211,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311220949206211,"Parsed as literal",""
635311220949206211,"Parsed as literal","list"
635311220949206211,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311220949216212,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311220949216212,"Parsed as literal"," "
635311220949216212,"Parsed as literal","list "
635311220949216212,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311220949226212,"Parsed as literal","quickSort"
635311220949226212,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311220949226212,"Parsed as literal","filter"
635311220949236213,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311220949236213,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311220949236213,"Parsed as literal",""
635311220949236213,"Parsed as literal","i"
635311220949246214,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311220949246214,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311220949246214,"Parsed as literal"," i "
635311220949246214,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311220949256214,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311220949256214,"Parsed as literal"," "
635311220949256214,"Parsed as literal","list"
635311220949256214,"Parsed as literal","1"
635311220949266215,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311220949266215,"Parsed as literal",""
635311220949266215,"Parsed as literal","list"
635311220949276215,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311220949276215,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311220949276215,"Parsed as literal",""
635311220949276215,"Parsed as literal","i"
635311220949286216,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311220949286216,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311220949286216,"Parsed as literal"," i "
635311220949286216,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311220949296216,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311220949296216,"Parsed as literal"," "
635311220949296216,"Parsed as literal","list"
635311220949296216,"Parsed as literal","1"
635311220949306217,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311220949306217,"Parsed as literal",""
635311220949306217,"Parsed as literal","list"
635311220949306217,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311220949316218,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311220949316218,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311220949316218,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311220949326218,"Parsed as literal",""
635311220949326218,"Parsed as literal","i"
635311220949326218,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311220949326218,"Parsed as literal"," i "
635311220949336219,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311220949336219,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311220949336219,"Parsed as literal"," "
635311220949336219,"Parsed as literal","list"
635311220949346219,"Parsed as literal","1"
635311220949346219,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311220949346219,"Parsed as literal",""
635311220949346219,"Parsed as literal","list"
635311220949356220,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311220949356220,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311220949356220,"Parsed as literal","quickSort"
635311220949356220,"Parsed as literal","list"
635311220949366220,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311220949366220,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311220949366220,"Parsed as literal","quickSort"
635311220949376221,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311220949376221,"Parsed as literal","filter"
635311220949376221,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311220949386222,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311220949386222,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311220949386222,"Parsed as literal",""
635311220949386222,"Parsed as literal","i"
635311220949396222,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311220949396222,"Parsed as literal"," i "
635311220949396222,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311220949396222,"Parsed as literal"," "
635311220949406223,"Parsed as literal","list"
635311220949406223,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311220949406223,"Parsed as literal",""
635311220949406223,"Parsed as literal","list"
635311220949416223,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311220949416223,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311220949416223,"Parsed as literal"," "
635311220949416223,"Parsed as literal","list "
635311220949426224,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311220949426224,"Parsed as literal","quickSort"
635311220949426224,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311220949436224,"Parsed as literal","filter"
635311220949436224,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311220949436224,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311220949436224,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311220949446225,"Parsed as literal",""
635311220949446225,"Parsed as literal","i"
635311220949446225,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311220949446225,"Parsed as literal"," i "
635311220949456226,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311220949456226,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311220949456226,"Parsed as literal"," "
635311220949456226,"Parsed as literal","list"
635311220949466226,"Parsed as literal","1"
635311220949466226,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311220949466226,"Parsed as literal",""
635311220949476227,"Parsed as literal","list"
635311220949476227,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311220949476227,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311220949476227,"Parsed as literal","mergeSort"
635311220949486227,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311220949486227,"Parsed as literal",""
635311220949486227,"Parsed as literal",""
635311220949486227,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311220949496228,"Parsed as literal",""
635311220949496228,"Parsed as literal",""
635311220949496228,"Invalid operator","@mergeSort([]) -> []","0"
635311220949496228,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311220949506228,"Parsed as literal","mergeSort"
635311220949506228,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311220949506228,"Parsed as literal",""
635311220949506228,"Parsed as literal",""
635311220949516229,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311220949516229,"Parsed as literal",""
635311220949516229,"Parsed as literal",""
635311220949516229,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311220949526230,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311220949526230,"Parsed as literal","mergeSort"
635311220949526230,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311220949536230,"Parsed as literal","list"
635311220949536230,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311220949536230,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311220949536230,"Parsed as literal",""
635311220949546231,"Parsed as literal","list"
635311220949546231,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311220949546231,"Parsed as literal",""
635311220949546231,"Parsed as literal",""
635311220949556231,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311220949556231,"Parsed as literal"," "
635311220949556231,"Parsed as literal","list"
635311220949556231,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311220949566232,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311220949566232,"Parsed as literal","mergeSort"
635311220949566232,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311220949566232,"Parsed as literal","list"
635311220949576232,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311220949576232,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311220949576232,"Parsed as literal",""
635311220949576232,"Parsed as literal","list"
635311220949586233,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311220949586233,"Parsed as literal",""
635311220949586233,"Parsed as literal",""
635311220949586233,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311220949596234,"Parsed as literal"," "
635311220949596234,"Parsed as literal","list"
635311220949596234,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311220949606234,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311220949606234,"Parsed as literal","mergeSort"
635311220949606234,"Parsed as literal","list"
635311220949616235,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311220949616235,"Parsed as literal","merge"
635311220949616235,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311220949626235,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311220949626235,"Parsed as literal","mergeSort"
635311220949626235,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311220949626235,"Parsed as literal","take"
635311220949636236,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311220949636236,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311220949636236,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311220949646236,"Parsed as literal","count"
635311220949646236,"Parsed as literal","list"
635311220949646236,"Parsed as literal","2"
635311220949646236,"Parsed as literal","list"
635311220949656237,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311220949656237,"Parsed as literal","mergeSort"
635311220949656237,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311220949656237,"Parsed as literal","skip"
635311220949666238,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311220949666238,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311220949666238,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311220949666238,"Parsed as literal","count"
635311220949676238,"Parsed as literal","list"
635311220949676238,"Parsed as literal","2"
635311220949676238,"Parsed as literal","list"
635311220949686239,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311220949686239,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311220949686239,"Parsed as literal","mergeSort"
635311220949686239,"Parsed as literal","list"
635311220949696239,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311220949696239,"Parsed as literal","merge"
635311220949696239,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311220949706240,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311220949706240,"Parsed as literal","mergeSort"
635311220949706240,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311220949706240,"Parsed as literal","take"
635311220949716240,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311220949716240,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311220949716240,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311220949726241,"Parsed as literal","count"
635311220949726241,"Parsed as literal","list"
635311220949726241,"Parsed as literal","2"
635311220949726241,"Parsed as literal","list"
635311220949736242,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311220949736242,"Parsed as literal","mergeSort"
635311220949746242,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311220949746242,"Parsed as literal","skip"
635311220949746242,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311220949746242,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311220949756243,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311220949756243,"Parsed as literal","count"
635311220949756243,"Parsed as literal","list"
635311220949756243,"Parsed as literal","2"
635311220949766243,"Parsed as literal","list"
635311220949766243,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311220949766243,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311220949776244,"Parsed as literal","merge"
635311220949776244,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311220949776244,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311220949776244,"Parsed as literal",""
635311220949786244,"Parsed as literal",""
635311220949786244,"Parsed as literal","list"
635311220949786244,"Parsed as literal"," list"
635311220949786244,"Invalid operator","@merge([],list) -> list","0"
635311220949796245,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311220949796245,"Parsed as literal","merge"
635311220949796245,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311220949796245,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311220949806246,"Parsed as literal",""
635311220949806246,"Parsed as literal",""
635311220949806246,"Parsed as literal","list"
635311220949806246,"Parsed as literal"," list"
635311220949816246,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311220949816246,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311220949816246,"Parsed as literal","merge"
635311220949826247,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311220949826247,"Parsed as literal","list"
635311220949826247,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311220949826247,"Parsed as literal",""
635311220949836247,"Parsed as literal",""
635311220949836247,"Parsed as literal"," list"
635311220949836247,"Invalid operator","@merge(list,[]) -> list","0"
635311220949836247,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311220949846248,"Parsed as literal","merge"
635311220949846248,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311220949846248,"Parsed as literal","list"
635311220949846248,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311220949856248,"Parsed as literal",""
635311220949856248,"Parsed as literal",""
635311220949856248,"Parsed as literal"," list"
635311220949866249,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311220949866249,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311220949866249,"Parsed as literal","merge"
635311220949866249,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311220949876250,"Parsed as literal","left"
635311220949876250,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311220949876250,"Parsed as literal","right "
635311220949876250,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311220949886250,"Parsed as literal"," "
635311220949886250,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311220949886250,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311220949886250,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311220949896251,"Parsed as literal",""
635311220949896251,"Parsed as literal","left "
635311220949896251,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311220949896251,"Parsed as literal"," "
635311220949906251,"Parsed as literal","right"
635311220949906251,"Parsed as literal",""
635311220949906251,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311220949916252,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311220949916252,"Parsed as literal"," "
635311220949916252,"Parsed as literal","left "
635311220949916252,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311220949926252,"Parsed as literal","merge"
635311220949926252,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311220949926252,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311220949926252,"Parsed as literal",""
635311220949936253,"Parsed as literal","left"
635311220949936253,"Parsed as literal","right"
635311220949936253,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311220949946254,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311220949946254,"Parsed as literal","merge"
635311220949946254,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311220949946254,"Parsed as literal","left"
635311220949956254,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311220949956254,"Parsed as literal","right "
635311220949956254,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311220949956254,"Parsed as literal"," "
635311220949966255,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311220949966255,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311220949966255,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311220949966255,"Parsed as literal",""
635311220949976255,"Parsed as literal","left "
635311220949976255,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311220949976255,"Parsed as literal"," "
635311220949976255,"Parsed as literal","right"
635311220949986256,"Parsed as literal",""
635311220949986256,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311220949986256,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311220949986256,"Parsed as literal"," "
635311220949996256,"Parsed as literal","left "
635311220949996256,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311220949996256,"Parsed as literal","merge"
635311220950006257,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311220950006257,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311220950006257,"Parsed as literal",""
635311220950006257,"Parsed as literal","left"
635311220950016258,"Parsed as literal","right"
635311220950016258,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311220950016258,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311220950016258,"Parsed as literal","merge"
635311220950026258,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311220950026258,"Parsed as literal","left"
635311220950026258,"Parsed as literal","right"
635311220950026258,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311220950036259,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311220950036259,"Parsed as literal"," "
635311220950036259,"Parsed as literal","right "
635311220950036259,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311220950046259,"Parsed as literal","merge"
635311220950046259,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311220950046259,"Parsed as literal","left"
635311220950046259,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311220950056260,"Parsed as literal",""
635311220950056260,"Parsed as literal","right"
635311220950056260,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311220950066260,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311220950066260,"Parsed as literal","merge"
635311220950066260,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311220950066260,"Parsed as literal","left"
635311220950076261,"Parsed as literal","right"
635311220950076261,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311220950076261,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311220950076261,"Parsed as literal"," "
635311220950086262,"Parsed as literal","right "
635311220950086262,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311220950086262,"Parsed as literal","merge"
635311220950086262,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311220950096262,"Parsed as literal","left"
635311220950096262,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311220950096262,"Parsed as literal",""
635311220950096262,"Parsed as literal","right"
635311220950106263,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311220950106263,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311220950106263,"Parsed as literal","bubbleSort"
635311220950116263,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311220950116263,"Parsed as literal","list"
635311220950116263,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311220950116263,"Parsed as literal","isSorted"
635311220950126264,"Parsed as literal","list"
635311220950126264,"Parsed as literal"," list"
635311220950126264,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311220950126264,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311220950136264,"Parsed as literal","bubbleSort"
635311220950136264,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311220950136264,"Parsed as literal","list"
635311220950136264,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311220950146265,"Parsed as literal","isSorted"
635311220950146265,"Parsed as literal","list"
635311220950146265,"Parsed as literal"," list"
635311220950156266,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311220950156266,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311220950156266,"Parsed as literal","bubbleSort"
635311220950156266,"Parsed as literal","list"
635311220950166266,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311220950166266,"Parsed as literal","bubbleSort"
635311220950166266,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311220950176267,"Parsed as literal","bubbleSortPass"
635311220950176267,"Parsed as literal","list"
635311220950176267,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311220950176267,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311220950186267,"Parsed as literal","bubbleSort"
635311220950186267,"Parsed as literal","list"
635311220950186267,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311220950186267,"Parsed as literal","bubbleSort"
635311220950196268,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311220950196268,"Parsed as literal","bubbleSortPass"
635311220950196268,"Parsed as literal","list"
635311220950196268,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311220950206268,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311220950206268,"Parsed as literal","bubbleSortPass"
635311220950206268,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311220950216269,"Parsed as literal",""
635311220950216269,"Parsed as literal",""
635311220950216269,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311220950216269,"Parsed as literal",""
635311220950226270,"Parsed as literal",""
635311220950226270,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311220950226270,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311220950236270,"Parsed as literal","bubbleSortPass"
635311220950236270,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311220950236270,"Parsed as literal",""
635311220950236270,"Parsed as literal",""
635311220950246271,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311220950246271,"Parsed as literal",""
635311220950246271,"Parsed as literal",""
635311220950256271,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311220950256271,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311220950256271,"Parsed as literal","bubbleSortPass"
635311220950256271,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311220950266272,"Parsed as literal","list"
635311220950266272,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311220950266272,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311220950266272,"Parsed as literal",""
635311220950276272,"Parsed as literal","list "
635311220950276272,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311220950276272,"Parsed as literal",""
635311220950286273,"Parsed as literal",""
635311220950286273,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311220950286273,"Parsed as literal"," "
635311220950286273,"Parsed as literal","list"
635311220950296274,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311220950296274,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311220950296274,"Parsed as literal","bubbleSortPass"
635311220950296274,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311220950306274,"Parsed as literal","list"
635311220950306274,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311220950306274,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311220950306274,"Parsed as literal",""
635311220950316275,"Parsed as literal","list "
635311220950316275,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311220950316275,"Parsed as literal",""
635311220950316275,"Parsed as literal",""
635311220950326275,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311220950326275,"Parsed as literal"," "
635311220950326275,"Parsed as literal","list"
635311220950336276,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311220950336276,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311220950336276,"Parsed as literal","bubbleSortPass"
635311220950336276,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311220950346276,"Parsed as literal","list"
635311220950346276,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311220950346276,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311220950346276,"Parsed as literal",""
635311220950356277,"Parsed as literal","list "
635311220950356277,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311220950356277,"Parsed as literal"," "
635311220950356277,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311220950366278,"Parsed as literal",""
635311220950366278,"Parsed as literal","list"
635311220950366278,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311220950366278,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311220950376278,"Parsed as literal"," "
635311220950376278,"Parsed as literal","list "
635311220950376278,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311220950376278,"Parsed as literal","bubbleSortPass"
635311220950386279,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311220950386279,"Parsed as literal",""
635311220950386279,"Parsed as literal","list"
635311220950386279,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311220950396279,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311220950396279,"Parsed as literal","bubbleSortPass"
635311220950396279,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311220950406280,"Parsed as literal","list"
635311220950406280,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311220950406280,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311220950406280,"Parsed as literal",""
635311220950416280,"Parsed as literal","list "
635311220950416280,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311220950416280,"Parsed as literal"," "
635311220950416280,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311220950426281,"Parsed as literal",""
635311220950426281,"Parsed as literal","list"
635311220950426281,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311220950426281,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311220950436282,"Parsed as literal"," "
635311220950436282,"Parsed as literal","list "
635311220950436282,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311220950436282,"Parsed as literal","bubbleSortPass"
635311220950446282,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311220950446282,"Parsed as literal",""
635311220950446282,"Parsed as literal","list"
635311220950456283,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311220950456283,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311220950456283,"Parsed as literal","bubbleSortPass"
635311220950456283,"Parsed as literal","list"
635311220950466283,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311220950466283,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311220950466283,"Parsed as literal"," "
635311220950466283,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311220950476284,"Parsed as literal",""
635311220950476284,"Parsed as literal","list "
635311220950476284,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311220950486284,"Parsed as literal","bubbleSortPass"
635311220950486284,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311220950486284,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311220950486284,"Parsed as literal",""
635311220950496285,"Parsed as literal","list "
635311220950496285,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311220950496285,"Parsed as literal"," "
635311220950496285,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311220950506286,"Parsed as literal",""
635311220950506286,"Parsed as literal","list"
635311220950506286,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311220950506286,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311220950516286,"Parsed as literal","bubbleSortPass"
635311220950516286,"Parsed as literal","list"
635311220950516286,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311220950516286,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311220950526287,"Parsed as literal"," "
635311220950526287,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311220950526287,"Parsed as literal",""
635311220950526287,"Parsed as literal","list "
635311220950536287,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311220950536287,"Parsed as literal","bubbleSortPass"
635311220950536287,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311220950536287,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311220950546288,"Parsed as literal",""
635311220950546288,"Parsed as literal","list "
635311220950546288,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311220950546288,"Parsed as literal"," "
635311220950556288,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311220950556288,"Parsed as literal",""
635311220950556288,"Parsed as literal","list"
635311220950556288,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311220950566289,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311220950566289,"Parsed as literal","isSorted"
635311220950576290,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311220950576290,"Parsed as literal",""
635311220950576290,"Parsed as literal",""
635311220950576290,"Parsed as literal"," true"
635311220950586290,"Invalid operator","@isSorted([]) -> true","0"
635311220950586290,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311220950586290,"Parsed as literal","isSorted"
635311220950586290,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311220950596291,"Parsed as literal",""
635311220950596291,"Parsed as literal",""
635311220950596291,"Parsed as literal"," true"
635311220950596291,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311220950606291,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311220950606291,"Parsed as literal","isSorted"
635311220950606291,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311220950616292,"Parsed as literal","list"
635311220950616292,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311220950616292,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311220950616292,"Parsed as literal",""
635311220950626292,"Parsed as literal","list "
635311220950626292,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311220950626292,"Parsed as literal",""
635311220950626292,"Parsed as literal",""
635311220950636293,"Parsed as literal"," true"
635311220950636293,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311220950636293,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311220950636293,"Parsed as literal","isSorted"
635311220950646294,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311220950646294,"Parsed as literal","list"
635311220950646294,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311220950646294,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311220950656294,"Parsed as literal",""
635311220950656294,"Parsed as literal","list "
635311220950656294,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311220950656294,"Parsed as literal",""
635311220950666295,"Parsed as literal",""
635311220950666295,"Parsed as literal"," true"
635311220950666295,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311220950676295,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311220950676295,"Parsed as literal","isSorted"
635311220950676295,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311220950676295,"Parsed as literal","list"
635311220950686296,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311220950686296,"Parsed as literal",""
635311220950686296,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311220950686296,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311220950696297,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311220950696297,"Parsed as literal",""
635311220950696297,"Parsed as literal","list "
635311220950696297,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311220950706297,"Parsed as literal"," "
635311220950706297,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311220950706297,"Parsed as literal",""
635311220950706297,"Parsed as literal","list"
635311220950716298,"Parsed as literal",""
635311220950716298,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311220950716298,"Parsed as literal","isSorted"
635311220950726298,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311220950726298,"Parsed as literal",""
635311220950726298,"Parsed as literal","list"
635311220950726298,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311220950736299,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311220950736299,"Parsed as literal","isSorted"
635311220950736299,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311220950736299,"Parsed as literal","list"
635311220950746299,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311220950746299,"Parsed as literal",""
635311220950746299,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311220950746299,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311220950756300,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311220950756300,"Parsed as literal",""
635311220950756300,"Parsed as literal","list "
635311220950756300,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311220950766301,"Parsed as literal"," "
635311220950766301,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311220950766301,"Parsed as literal",""
635311220950766301,"Parsed as literal","list"
635311220950776301,"Parsed as literal",""
635311220950776301,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311220950776301,"Parsed as literal","isSorted"
635311220950786302,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311220950786302,"Parsed as literal",""
635311220950786302,"Parsed as literal","list"
635311220950786302,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311220950796302,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311220950796302,"Parsed as literal","isSorted"
635311220950796302,"Parsed as literal","list"
635311220950796302,"Parsed as literal"," false"
635311220950806303,"Invalid operator","@isSorted(list) -> false","0"
635311220950806303,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311220950806303,"Parsed as literal","isSorted"
635311220950806303,"Parsed as literal","list"
635311220950816303,"Parsed as literal"," false"
635311220950816303,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311220950816303,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311220950826304,"Parsed as literal","insertionSort"
635311220950826304,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311220950826304,"Parsed as literal",""
635311220950826304,"Parsed as literal",""
635311220950836305,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311220950836305,"Parsed as literal",""
635311220950836305,"Parsed as literal",""
635311220950836305,"Invalid operator","@insertionSort([]) -> []","0"
635311220950846305,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311220950846305,"Parsed as literal","insertionSort"
635311220950846305,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311220950846305,"Parsed as literal",""
635311220950856306,"Parsed as literal",""
635311220950856306,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311220950856306,"Parsed as literal",""
635311220950856306,"Parsed as literal",""
635311220950866306,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311220950866306,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311220950866306,"Parsed as literal","insertionSort"
635311220950876307,"Parsed as literal","list"
635311220950876307,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311220950876307,"Parsed as literal","insert"
635311220950876307,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311220950886307,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311220950886307,"Parsed as literal",""
635311220950886307,"Parsed as literal","list"
635311220950886307,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311220950896308,"Parsed as literal","insertionSort"
635311220950896308,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311220950896308,"Parsed as literal",""
635311220950896308,"Parsed as literal","list"
635311220950906309,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311220950906309,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311220950906309,"Parsed as literal","insertionSort"
635311220950906309,"Parsed as literal","list"
635311220950916309,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311220950916309,"Parsed as literal","insert"
635311220950916309,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311220950926310,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311220950926310,"Parsed as literal",""
635311220950926310,"Parsed as literal","list"
635311220950926310,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311220950936310,"Parsed as literal","insertionSort"
635311220950936310,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311220950936310,"Parsed as literal",""
635311220950936310,"Parsed as literal","list"
635311220950946311,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311220950946311,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311220950946311,"Parsed as literal","insert"
635311220950946311,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311220950956311,"Parsed as literal","item"
635311220950956311,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311220950956311,"Parsed as literal",""
635311220950956311,"Parsed as literal",""
635311220950966312,"Parsed as literal"," item"
635311220950966312,"Invalid operator","@insert(item,[]) -> item","0"
635311220950966312,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311220950976313,"Parsed as literal","insert"
635311220950976313,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311220950976313,"Parsed as literal","item"
635311220950976313,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311220950986313,"Parsed as literal",""
635311220950986313,"Parsed as literal",""
635311220950986313,"Parsed as literal"," item"
635311220950986313,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311220950996314,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311220950996314,"Parsed as literal","insert"
635311220950996314,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311220950996314,"Parsed as literal","item"
635311220951006314,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311220951006314,"Parsed as literal","list "
635311220951006314,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311220951016315,"Parsed as literal"," item "
635311220951016315,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311220951016315,"Parsed as literal"," "
635311220951016315,"Parsed as literal","list"
635311220951026315,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311220951026315,"Parsed as literal"," item "
635311220951026315,"Parsed as literal"," list"
635311220951026315,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311220951036316,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311220951036316,"Parsed as literal","insert"
635311220951036316,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311220951036316,"Parsed as literal","item"
635311220951046317,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311220951046317,"Parsed as literal","list "
635311220951046317,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311220951046317,"Parsed as literal"," item "
635311220951056317,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311220951056317,"Parsed as literal"," "
635311220951056317,"Parsed as literal","list"
635311220951056317,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311220951066318,"Parsed as literal"," item "
635311220951066318,"Parsed as literal"," list"
635311220951066318,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311220951076318,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311220951076318,"Parsed as literal","insert"
635311220951076318,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311220951076318,"Parsed as literal","item"
635311220951086319,"Parsed as literal","list"
635311220951086319,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311220951086319,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311220951086319,"Parsed as literal"," "
635311220951096319,"Parsed as literal","list "
635311220951096319,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311220951096319,"Parsed as literal","insert"
635311220951096319,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311220951106320,"Parsed as literal","item"
635311220951106320,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311220951106320,"Parsed as literal",""
635311220951106320,"Parsed as literal","list"
635311220951116321,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311220951116321,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311220951116321,"Parsed as literal","insert"
635311220951116321,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311220951126321,"Parsed as literal","item"
635311220951126321,"Parsed as literal","list"
635311220951126321,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311220951136322,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311220951136322,"Parsed as literal"," "
635311220951136322,"Parsed as literal","list "
635311220951136322,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311220951146322,"Parsed as literal","insert"
635311220951146322,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311220951146322,"Parsed as literal","item"
635311220951146322,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311220951156323,"Parsed as literal",""
635311220951156323,"Parsed as literal","list"
635311220951156323,"StepEvaluate","->","Changed","Declared @quickSort"
635311220951156323,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311220951166323,"StepEvaluate","->","Changed","Declared @quickSort"
635311220951166323,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311220951166323,"StepEvaluate","->","Changed","Declared @mergeSort"
635311220951166323,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311220951176324,"StepEvaluate","->","Changed","Declared @mergeSort"
635311220951176324,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311220951176324,"StepEvaluate","->","Changed","Declared @mergeSort"
635311220951176324,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311220951186325,"StepEvaluate","->","Changed","Declared @merge"
635311220951186325,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311220951186325,"StepEvaluate","->","Changed","Declared @merge"
635311220951186325,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311220951186325,"StepEvaluate","->","Changed","Declared @merge"
635311220951196325,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311220951196325,"StepEvaluate","->","Changed","Declared @merge"
635311220951196325,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311220951196325,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311220951206326,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311220951206326,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311220951206326,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311220951206326,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311220951216326,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311220951216326,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311220951216326,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311220951216326,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311220951226327,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311220951226327,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311220951226327,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311220951226327,"StepEvaluate","->","Changed","Declared @isSorted"
635311220951236327,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311220951236327,"StepEvaluate","->","Changed","Declared @isSorted"
635311220951236327,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311220951236327,"StepEvaluate","->","Changed","Declared @isSorted"
635311220951246328,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311220951246328,"StepEvaluate","->","Changed","Declared @isSorted"
635311220951246328,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311220951246328,"StepEvaluate","->","Changed","Declared @insertionSort"
635311220951246328,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311220951256329,"StepEvaluate","->","Changed","Declared @insertionSort"
635311220951256329,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311220951256329,"StepEvaluate","->","Changed","Declared @insert"
635311220951256329,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311220951266329,"StepEvaluate","->","Changed","Declared @insert"
635311220951266329,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311220951266329,"StepEvaluate","->","Changed","Declared @insert"
635311220951276330,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311220951276330,"StepEvaluate","[]","Changed","File imported"
635311220951276330,"StepEvaluate","File imported","Unchanged","File imported"
635311220951276330,"StepEvaluate","[]","Changed","File imported"
635311220951276330,"StepEvaluate","File imported","Unchanged","File imported"
635311220951286330,"ParseInternal","3 % 7","0","ModOperator","0","3","3 "," 7"
635311220951286330,"Parsed as literal","3 "
635311220951286330,"Parsed as literal"," 7"
635311220961696926,"StepEvaluate","%","Changed","3"
635311220961706926,"StepEvaluate","3","Unchanged","3"
635311221048061865,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311221048081867,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311221048091867,"Parsed as literal","import"
635311221048101868,"Parsed as literal","file"
635311221048111868,"Parsed as literal"," 0"
635311221048121869,"Invalid operator","@import(file) -> 0","0"
635311221048131869,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311221048141870,"Parsed as literal","import"
635311221048151871,"Parsed as literal","file"
635311221048151871,"Parsed as literal"," 0"
635311221048161871,"StepEvaluate","->","Changed","Declared @import"
635311221048171872,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311221048181872,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311221048181872,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311221048191873,"Parsed as literal","operator"
635311221048201874,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311221048211874,"Parsed as literal","op"
635311221048211874,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311221048221875,"Parsed as literal","fn"
635311221048221875,"Parsed as literal",""
635311221048231875,"Invalid operator","@fn","12"
635311221048231875,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311221048241876,"Parsed as literal","fn"
635311221048241876,"Parsed as literal",""
635311221048241876,"Invalid operator","@fn","12"
635311221048251876,"Parsed as literal","@fn"
635311221048251876,"Parsed as literal"," 0"
635311221048261877,"Invalid operator","@operator(op,@fn) -> 0","0"
635311221048261877,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311221048271878,"Parsed as literal","operator"
635311221048271878,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311221048281878,"Parsed as literal","op"
635311221048281878,"Parsed as literal","@fn"
635311221048281878,"Parsed as literal"," 0"
635311221048291879,"StepEvaluate","->","Changed","Declared @operator"
635311221048291879,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311221048301879,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311221048301879,"Parsed as literal","import"
635311221048311880,"Parsed as literal","main.toast"
635311221048311880,"StepEvaluate","@","Changed","@"
635311221048321880,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221048321880,"StepEvaluate","PAT@","Unchanged","PAT@"
635311221048321880,"StepEvaluate",",","Unchanged",","
635311221048331881,"StepEvaluate","@Arg","Changed","@Arg-M"
635311221048331881,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221048341882,"StepEvaluate","PAT@-M","Changed","[]"
635311221048341882,"StepEvaluate","SEL@import","Changed","[]"
635311221048341882,"StepEvaluate","@","Changed","[]"
635311221048351882,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311221048351882,"Parsed as literal","import"
635311221048361883,"Parsed as literal","'core.toast'"
635311221048361883,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311221048371883,"Parsed as literal","import"
635311221048371883,"Parsed as literal","'list.toast'"
635311221048371883,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311221048381884,"Parsed as literal","import"
635311221048381884,"Parsed as literal","'math.toast'"
635311221048391884,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311221048391884,"Parsed as literal","import"
635311221048391884,"Parsed as literal","'sorting.toast'"
635311221048401885,"StepEvaluate","@","Changed","@"
635311221048401885,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221048411886,"StepEvaluate","PAT@","Unchanged","PAT@"
635311221048411886,"StepEvaluate",",","Unchanged",","
635311221048411886,"StepEvaluate","@Arg","Changed","@Arg-M"
635311221048421886,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221048421886,"StepEvaluate","PAT@-M","Changed","[]"
635311221048431887,"StepEvaluate","SEL@import","Changed","[]"
635311221048431887,"StepEvaluate","@","Changed","[]"
635311221048431887,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311221048441887,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311221048441887,"Parsed as literal","map"
635311221048451888,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311221048451888,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311221048461888,"Parsed as literal","func"
635311221048461888,"Parsed as literal",""
635311221048461888,"Invalid operator","@func","4"
635311221048471889,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311221048471889,"Parsed as literal","func"
635311221048481890,"Parsed as literal",""
635311221048481890,"Invalid operator","@func","4"
635311221048481890,"Parsed as literal","@func"
635311221048491890,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311221048491890,"Parsed as literal",""
635311221048501891,"Parsed as literal",""
635311221048501891,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311221048511891,"Parsed as literal",""
635311221048511891,"Parsed as literal",""
635311221048511891,"Invalid operator","@map(@func, []) -> []","0"
635311221048521892,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311221048521892,"Parsed as literal","map"
635311221048531892,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311221048531892,"Parsed as literal","@func"
635311221048541893,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311221048541893,"Parsed as literal",""
635311221048541893,"Parsed as literal",""
635311221048551894,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311221048551894,"Parsed as literal",""
635311221048561894,"Parsed as literal",""
635311221048561894,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311221048571895,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311221048571895,"Parsed as literal","map"
635311221048581895,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311221048581895,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311221048581895,"Parsed as literal","func"
635311221048591896,"Parsed as literal",""
635311221048591896,"Invalid operator","@func","4"
635311221048601896,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311221048601896,"Parsed as literal","func"
635311221048601896,"Parsed as literal",""
635311221048611897,"Invalid operator","@func","4"
635311221048611897,"Parsed as literal","@func"
635311221048621898,"Parsed as literal"," list"
635311221048621898,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311221048631898,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311221048631898,"Parsed as literal","func"
635311221048631898,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311221048641899,"Parsed as literal",""
635311221048641899,"Parsed as literal","list"
635311221048651899,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311221048651899,"Parsed as literal","map"
635311221048661900,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311221048661900,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311221048661900,"Parsed as literal","func"
635311221048671900,"Parsed as literal",""
635311221048671900,"Invalid operator","@func","41"
635311221048681901,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311221048681901,"Parsed as literal","func"
635311221048691902,"Parsed as literal",""
635311221048691902,"Invalid operator","@func","41"
635311221048691902,"Parsed as literal","@func"
635311221048701902,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311221048701902,"Parsed as literal",""
635311221048711903,"Parsed as literal","list"
635311221048711903,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311221048711903,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311221048721903,"Parsed as literal","map"
635311221048721903,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311221048731904,"Parsed as literal","@func"
635311221048731904,"Parsed as literal"," list"
635311221048741904,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311221048741904,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311221048751905,"Parsed as literal","func"
635311221048751905,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311221048751905,"Parsed as literal",""
635311221048761906,"Parsed as literal","list"
635311221048761906,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311221048771906,"Parsed as literal","map"
635311221048771906,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311221048781907,"Parsed as literal","@func"
635311221048781907,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311221048781907,"Parsed as literal",""
635311221048791907,"Parsed as literal","list"
635311221048791907,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311221048801908,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311221048801908,"Parsed as literal","filter"
635311221048811908,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311221048811908,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311221048811908,"Parsed as literal","pred"
635311221048821909,"Parsed as literal",""
635311221048821909,"Invalid operator","@pred","7"
635311221048831910,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311221048831910,"Parsed as literal","pred"
635311221048841910,"Parsed as literal",""
635311221048841910,"Invalid operator","@pred","7"
635311221048841910,"Parsed as literal","@pred"
635311221048851911,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311221048851911,"Parsed as literal",""
635311221048861911,"Parsed as literal",""
635311221048861911,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311221048871912,"Parsed as literal",""
635311221048871912,"Parsed as literal",""
635311221048871912,"Invalid operator","@filter(@pred,[]) -> []","0"
635311221048881912,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311221048881912,"Parsed as literal","filter"
635311221048891913,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311221048891913,"Parsed as literal","@pred"
635311221048891913,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311221048901914,"Parsed as literal",""
635311221048901914,"Parsed as literal",""
635311221048911914,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311221048911914,"Parsed as literal",""
635311221048911914,"Parsed as literal",""
635311221048921915,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311221048921915,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311221048931915,"Parsed as literal","filter"
635311221048931915,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311221048941916,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311221048941916,"Parsed as literal","pred"
635311221048951916,"Parsed as literal",""
635311221048951916,"Invalid operator","@pred","7"
635311221048951916,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311221048961917,"Parsed as literal","pred"
635311221048961917,"Parsed as literal",""
635311221048961917,"Invalid operator","@pred","7"
635311221048971918,"Parsed as literal","@pred"
635311221048971918,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311221048981918,"Parsed as literal"," list "
635311221048981918,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311221048981918,"Parsed as literal","pred"
635311221048991919,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311221048991919,"Parsed as literal",""
635311221049001919,"Parsed as literal","list"
635311221049001919,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311221049011920,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311221049011920,"Parsed as literal"," "
635311221049011920,"Parsed as literal","list "
635311221049021920,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311221049021920,"Parsed as literal","filter"
635311221049031921,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311221049031921,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311221049031921,"Parsed as literal","pred"
635311221049041922,"Parsed as literal",""
635311221049041922,"Invalid operator","@pred","56"
635311221049051922,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311221049051922,"Parsed as literal","pred"
635311221049051922,"Parsed as literal",""
635311221049061923,"Invalid operator","@pred","56"
635311221049061923,"Parsed as literal","@pred"
635311221049061923,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311221049071923,"Parsed as literal"," "
635311221049071923,"Parsed as literal","list"
635311221049081924,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311221049081924,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311221049081924,"Parsed as literal","filter"
635311221049091924,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311221049091924,"Parsed as literal","@pred"
635311221049101925,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311221049101925,"Parsed as literal"," list "
635311221049111926,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311221049111926,"Parsed as literal","pred"
635311221049111926,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311221049121926,"Parsed as literal",""
635311221049121926,"Parsed as literal","list"
635311221049131927,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311221049131927,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311221049131927,"Parsed as literal"," "
635311221049141927,"Parsed as literal","list "
635311221049141927,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311221049151928,"Parsed as literal","filter"
635311221049151928,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311221049151928,"Parsed as literal","@pred"
635311221049161928,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311221049161928,"Parsed as literal"," "
635311221049171929,"Parsed as literal","list"
635311221049171929,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311221049181930,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311221049181930,"Parsed as literal","filter"
635311221049181930,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311221049191930,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311221049191930,"Parsed as literal","pred"
635311221049201931,"Parsed as literal",""
635311221049201931,"Invalid operator","@pred","7"
635311221049201931,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311221049211931,"Parsed as literal","pred"
635311221049211931,"Parsed as literal",""
635311221049211931,"Invalid operator","@pred","7"
635311221049221932,"Parsed as literal","@pred"
635311221049221932,"Parsed as literal","list"
635311221049231932,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311221049231932,"Parsed as literal","filter"
635311221049231932,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311221049241933,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311221049241933,"Parsed as literal","pred"
635311221049251934,"Parsed as literal",""
635311221049251934,"Invalid operator","@pred","30"
635311221049251934,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311221049261934,"Parsed as literal","pred"
635311221049261934,"Parsed as literal",""
635311221049271935,"Invalid operator","@pred","30"
635311221049271935,"Parsed as literal","@pred"
635311221049271935,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311221049281935,"Parsed as literal",""
635311221049281935,"Parsed as literal","list"
635311221049291936,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311221049291936,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311221049291936,"Parsed as literal","filter"
635311221049301936,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311221049301936,"Parsed as literal","@pred"
635311221049311937,"Parsed as literal","list"
635311221049311937,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311221049311937,"Parsed as literal","filter"
635311221049321938,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311221049321938,"Parsed as literal","@pred"
635311221049331938,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311221049331938,"Parsed as literal",""
635311221049331938,"Parsed as literal","list"
635311221049341939,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311221049341939,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311221049351939,"Parsed as literal","call"
635311221049351939,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311221049361940,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311221049361940,"Parsed as literal","fun"
635311221049361940,"Parsed as literal",""
635311221049371940,"Invalid operator","@fun","5"
635311221049371940,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311221049371940,"Parsed as literal","fun"
635311221049381941,"Parsed as literal",""
635311221049381941,"Invalid operator","@fun","5"
635311221049391942,"Parsed as literal","@fun"
635311221049391942,"Parsed as literal","arg"
635311221049391942,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311221049401942,"Parsed as literal","fun"
635311221049401942,"Parsed as literal","arg"
635311221049411943,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311221049411943,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311221049411943,"Parsed as literal","call"
635311221049421943,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311221049421943,"Parsed as literal","@fun"
635311221049431944,"Parsed as literal","arg"
635311221049431944,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311221049441944,"Parsed as literal","fun"
635311221049441944,"Parsed as literal","arg"
635311221049441944,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311221049451945,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311221049451945,"Parsed as literal","curry"
635311221049461946,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311221049461946,"Parsed as literal","seed"
635311221049491947,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311221049501948,"Parsed as literal",""
635311221049501948,"Parsed as literal",""
635311221049511948,"Parsed as literal"," seed"
635311221049511948,"Invalid operator","@curry(seed,[]) -> seed","0"
635311221049521949,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311221049521949,"Parsed as literal","curry"
635311221049521949,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311221049531950,"Parsed as literal","seed"
635311221049531950,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311221049541950,"Parsed as literal",""
635311221049541950,"Parsed as literal",""
635311221049541950,"Parsed as literal"," seed"
635311221049551951,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311221049551951,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311221049561951,"Parsed as literal","curry"
635311221049561951,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311221049571952,"Parsed as literal","seed"
635311221049571952,"Parsed as literal"," funcList"
635311221049581952,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311221049581952,"Parsed as literal","curry"
635311221049581952,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311221049591953,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311221049591953,"Parsed as literal","call"
635311221049601954,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311221049601954,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311221049611954,"Parsed as literal",""
635311221049611954,"Parsed as literal","funcList"
635311221049611954,"Parsed as literal","seed"
635311221049621955,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311221049621955,"Parsed as literal",""
635311221049621955,"Parsed as literal","funcList"
635311221049631955,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311221049631955,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311221049641956,"Parsed as literal","curry"
635311221049641956,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311221049641956,"Parsed as literal","seed"
635311221049651956,"Parsed as literal"," funcList"
635311221049651956,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311221049661957,"Parsed as literal","curry"
635311221049661957,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311221049671958,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311221049671958,"Parsed as literal","call"
635311221049671958,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311221049681958,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311221049681958,"Parsed as literal",""
635311221049691959,"Parsed as literal","funcList"
635311221049691959,"Parsed as literal","seed"
635311221049701959,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311221049701959,"Parsed as literal",""
635311221049701959,"Parsed as literal","funcList"
635311221049711960,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311221049711960,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311221049721960,"Parsed as literal","fold"
635311221049721960,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311221049721960,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311221049731961,"Parsed as literal","func"
635311221049731961,"Parsed as literal",""
635311221049741962,"Invalid operator","@func","5"
635311221049741962,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311221049741962,"Parsed as literal","func"
635311221049751962,"Parsed as literal",""
635311221049751962,"Invalid operator","@func","5"
635311221049761963,"Parsed as literal","@func"
635311221049761963,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311221049771963,"Parsed as literal",""
635311221049771963,"Parsed as literal",""
635311221049771963,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311221049781964,"Parsed as literal",""
635311221049781964,"Parsed as literal",""
635311221049791964,"Invalid operator","@fold(@func,[]) -> []","0"
635311221049791964,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311221049791964,"Parsed as literal","fold"
635311221049801965,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311221049801965,"Parsed as literal","@func"
635311221049811966,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311221049811966,"Parsed as literal",""
635311221049821966,"Parsed as literal",""
635311221049821966,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311221049821966,"Parsed as literal",""
635311221049831967,"Parsed as literal",""
635311221049831967,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311221049841967,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311221049841967,"Parsed as literal","fold"
635311221049851968,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311221049851968,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311221049851968,"Parsed as literal","func"
635311221049861968,"Parsed as literal",""
635311221049861968,"Invalid operator","@func","5"
635311221049871969,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311221049871969,"Parsed as literal","func"
635311221049871969,"Parsed as literal",""
635311221049881970,"Invalid operator","@func","5"
635311221049881970,"Parsed as literal","@func"
635311221049891970,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311221049891970,"Parsed as literal","list"
635311221049901971,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311221049901971,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311221049901971,"Parsed as literal",""
635311221049911971,"Parsed as literal","list"
635311221049911971,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311221049921972,"Parsed as literal",""
635311221049921972,"Parsed as literal",""
635311221049931972,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311221049931972,"Parsed as literal"," "
635311221049931972,"Parsed as literal","list"
635311221049941973,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311221049941973,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311221049951974,"Parsed as literal","fold"
635311221049951974,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311221049961974,"Parsed as literal","@func"
635311221049961974,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311221049961974,"Parsed as literal","list"
635311221049971975,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311221049971975,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311221049981975,"Parsed as literal",""
635311221049981975,"Parsed as literal","list"
635311221049981975,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311221049991976,"Parsed as literal",""
635311221049991976,"Parsed as literal",""
635311221050001976,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311221050001976,"Parsed as literal"," "
635311221050011977,"Parsed as literal","list"
635311221050011977,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311221050021978,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311221050021978,"Parsed as literal","fold"
635311221050021978,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311221050031978,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311221050031978,"Parsed as literal","func"
635311221050041979,"Parsed as literal",""
635311221050041979,"Invalid operator","@func","5"
635311221050041979,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311221050051979,"Parsed as literal","func"
635311221050051979,"Parsed as literal",""
635311221050061980,"Invalid operator","@func","5"
635311221050061980,"Parsed as literal","@func"
635311221050071980,"Parsed as literal","list"
635311221050071980,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311221050081981,"Parsed as literal","fold"
635311221050081981,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311221050091982,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311221050091982,"Parsed as literal","func"
635311221050091982,"Parsed as literal",""
635311221050101982,"Invalid operator","@func","26"
635311221050101982,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311221050111983,"Parsed as literal","func"
635311221050111983,"Parsed as literal",""
635311221050121983,"Invalid operator","@func","26"
635311221050121983,"Parsed as literal","@func"
635311221050121983,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311221050131984,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311221050131984,"Parsed as literal","func"
635311221050141984,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311221050141984,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311221050151985,"Parsed as literal",""
635311221050151985,"Parsed as literal","list"
635311221050151985,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311221050161986,"Parsed as literal",""
635311221050161986,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311221050171986,"Parsed as literal",""
635311221050171986,"Parsed as literal","list"
635311221050171986,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311221050181987,"Parsed as literal"," "
635311221050181987,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311221050191987,"Parsed as literal",""
635311221050191987,"Parsed as literal","list"
635311221050201988,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311221050201988,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311221050201988,"Parsed as literal","fold"
635311221050211988,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311221050211988,"Parsed as literal","@func"
635311221050221989,"Parsed as literal","list"
635311221050221989,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311221050231990,"Parsed as literal","fold"
635311221050231990,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311221050241990,"Parsed as literal","@func"
635311221050241990,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311221050241990,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311221050251991,"Parsed as literal","func"
635311221050251991,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311221050261991,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311221050261991,"Parsed as literal",""
635311221050271992,"Parsed as literal","list"
635311221050271992,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311221050271992,"Parsed as literal",""
635311221050281992,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311221050281992,"Parsed as literal",""
635311221050291993,"Parsed as literal","list"
635311221050291993,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311221050301994,"Parsed as literal"," "
635311221050301994,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311221050301994,"Parsed as literal",""
635311221050311994,"Parsed as literal","list"
635311221050311994,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311221050321995,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311221050321995,"Parsed as literal","foldr"
635311221050331995,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311221050331995,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311221050331995,"Parsed as literal","func"
635311221050341996,"Parsed as literal",""
635311221050341996,"Invalid operator","@func","6"
635311221050351996,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311221050351996,"Parsed as literal","func"
635311221050351996,"Parsed as literal",""
635311221050361997,"Invalid operator","@func","6"
635311221050361997,"Parsed as literal","@func"
635311221050371998,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311221050371998,"Parsed as literal",""
635311221050371998,"Parsed as literal",""
635311221050381998,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311221050381998,"Parsed as literal",""
635311221050391999,"Parsed as literal",""
635311221050391999,"Invalid operator","@foldr(@func,[]) -> []","0"
635311221050401999,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311221050401999,"Parsed as literal","foldr"
635311221050401999,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311221050412000,"Parsed as literal","@func"
635311221050412000,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311221050422000,"Parsed as literal",""
635311221050422000,"Parsed as literal",""
635311221050422000,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311221050432001,"Parsed as literal",""
635311221050432001,"Parsed as literal",""
635311221050442002,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311221050442002,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311221050452002,"Parsed as literal","foldr"
635311221050452002,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311221050452002,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311221050462003,"Parsed as literal","func"
635311221050462003,"Parsed as literal",""
635311221050472003,"Invalid operator","@func","6"
635311221050472003,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311221050472003,"Parsed as literal","func"
635311221050482004,"Parsed as literal",""
635311221050482004,"Invalid operator","@func","6"
635311221050482004,"Parsed as literal","@func"
635311221050492004,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311221050492004,"Parsed as literal","list"
635311221050502005,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311221050502005,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311221050502005,"Parsed as literal",""
635311221050512006,"Parsed as literal","list"
635311221050512006,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311221050522006,"Parsed as literal",""
635311221050522006,"Parsed as literal",""
635311221050522006,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311221050532007,"Parsed as literal"," "
635311221050532007,"Parsed as literal","list"
635311221050542007,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311221050542007,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311221050542007,"Parsed as literal","foldr"
635311221050552008,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311221050552008,"Parsed as literal","@func"
635311221050562008,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311221050562008,"Parsed as literal","list"
635311221050572009,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311221050572009,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311221050572009,"Parsed as literal",""
635311221050582010,"Parsed as literal","list"
635311221050582010,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311221050592010,"Parsed as literal",""
635311221050592010,"Parsed as literal",""
635311221050592010,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311221050602011,"Parsed as literal"," "
635311221050602011,"Parsed as literal","list"
635311221050612011,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311221050622012,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311221050622012,"Parsed as literal","foldr"
635311221050622012,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311221050632012,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311221050632012,"Parsed as literal","func"
635311221050642013,"Parsed as literal",""
635311221050642013,"Invalid operator","@func","6"
635311221050642013,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311221050652014,"Parsed as literal","func"
635311221050652014,"Parsed as literal",""
635311221050662014,"Invalid operator","@func","6"
635311221050662014,"Parsed as literal","@func"
635311221050662014,"Parsed as literal","list"
635311221050672015,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311221050672015,"Parsed as literal","func"
635311221050682015,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311221050682015,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311221050692016,"Parsed as literal","foldr"
635311221050692016,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311221050702017,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311221050702017,"Parsed as literal","func"
635311221050712017,"Parsed as literal",""
635311221050712017,"Invalid operator","@func","33"
635311221050712017,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311221050722018,"Parsed as literal","func"
635311221050722018,"Parsed as literal",""
635311221050732018,"Invalid operator","@func","33"
635311221050732018,"Parsed as literal","@func"
635311221050732018,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311221050742019,"Parsed as literal","superHead"
635311221050742019,"Parsed as literal","list"
635311221050752019,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311221050752019,"Parsed as literal","last"
635311221050762020,"Parsed as literal","list"
635311221050762020,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311221050762020,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311221050772021,"Parsed as literal","foldr"
635311221050772021,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311221050782021,"Parsed as literal","@func"
635311221050782021,"Parsed as literal","list"
635311221050792022,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311221050792022,"Parsed as literal","func"
635311221050802022,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311221050802022,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311221050802022,"Parsed as literal","foldr"
635311221050812023,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311221050812023,"Parsed as literal","@func"
635311221050822023,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311221050832024,"Parsed as literal","superHead"
635311221050832024,"Parsed as literal","list"
635311221050842025,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311221050842025,"Parsed as literal","last"
635311221050842025,"Parsed as literal","list"
635311221050852025,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311221050852025,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311221050862026,"Parsed as literal","superHead"
635311221050862026,"Parsed as literal","list"
635311221050872026,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311221050872026,"Parsed as literal","reverse"
635311221050882027,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311221050882027,"Parsed as literal",""
635311221050882027,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311221050892027,"Parsed as literal","reverse"
635311221050892027,"Parsed as literal","list"
635311221050902028,"StepEvaluate","->","Changed","Declared @map"
635311221050902028,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311221050902028,"StepEvaluate","->","Changed","Declared @map"
635311221050912029,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311221050912029,"StepEvaluate","->","Changed","Declared @filter"
635311221050922029,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311221050922029,"StepEvaluate","->","Changed","Declared @filter"
635311221050922029,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311221050932030,"StepEvaluate","->","Changed","Declared @filter"
635311221050932030,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311221050942030,"StepEvaluate","->","Changed","Declared @call"
635311221050942030,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311221050942030,"StepEvaluate","->","Changed","Declared @curry"
635311221050952031,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311221050952031,"StepEvaluate","->","Changed","Declared @curry"
635311221050962031,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311221050962031,"StepEvaluate","->","Changed","Declared @fold"
635311221050962031,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311221050972032,"StepEvaluate","->","Changed","Declared @fold"
635311221050972032,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311221050972032,"StepEvaluate","->","Changed","Declared @fold"
635311221050982033,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311221050982033,"StepEvaluate","->","Changed","Declared @foldr"
635311221050992033,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311221050992033,"StepEvaluate","->","Changed","Declared @foldr"
635311221050992033,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311221051002034,"StepEvaluate","->","Changed","Declared @foldr"
635311221051002034,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311221051002034,"StepEvaluate","==","Unchanged","=="
635311221051012034,"StepEvaluate","@","Changed","@"
635311221051012034,"StepEvaluate","@","Changed","@"
635311221051022035,"StepEvaluate","==","Unchanged","=="
635311221051022035,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311221051022035,"StepEvaluate","superHead","Unchanged","superHead"
635311221051032035,"StepEvaluate",",","Unchanged",","
635311221051032035,"StepEvaluate","list","Unchanged","list"
635311221051042036,"StepEvaluate","@","Changed","@"
635311221051042036,"StepEvaluate","==","Unchanged","=="
635311221051052037,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311221051052037,"StepEvaluate","superHead","Unchanged","superHead"
635311221051052037,"StepEvaluate",",","Unchanged",","
635311221051062037,"StepEvaluate","list","Unchanged","list"
635311221051062037,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311221051062037,"StepEvaluate","reverse","Unchanged","reverse"
635311221051072038,"StepEvaluate",",","Unchanged",","
635311221051072038,"StepEvaluate","tail","Unchanged","tail"
635311221051082038,"StepEvaluate","@","Changed","@"
635311221051082038,"StepEvaluate","==","Unchanged","=="
635311221051082038,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311221051092039,"StepEvaluate","superHead","Unchanged","superHead"
635311221051092039,"StepEvaluate",",","Unchanged",","
635311221051102039,"StepEvaluate","list","Unchanged","list"
635311221051102039,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311221051102039,"StepEvaluate","reverse","Unchanged","reverse"
635311221051112040,"StepEvaluate",",","Unchanged",","
635311221051112040,"StepEvaluate","tail","Unchanged","tail"
635311221051122041,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311221051122041,"StepEvaluate","reverse","Unchanged","reverse"
635311221051122041,"StepEvaluate",",","Unchanged",","
635311221051132041,"StepEvaluate","list","Unchanged","list"
635311221051132041,"StepEvaluate","[]","Changed","File imported"
635311221051132041,"StepEvaluate","File imported","Unchanged","File imported"
635311221051142042,"StepEvaluate","@","Changed","@"
635311221051142042,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221051152042,"StepEvaluate","PAT@","Unchanged","PAT@"
635311221051152042,"StepEvaluate",",","Unchanged",","
635311221051152042,"StepEvaluate","@Arg","Changed","@Arg-M"
635311221051162043,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221051162043,"StepEvaluate","PAT@-M","Changed","[]"
635311221051172043,"StepEvaluate","SEL@import","Changed","[]"
635311221051172043,"StepEvaluate","@","Changed","[]"
635311221051182044,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311221051182044,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311221051182044,"Parsed as literal","zipWith"
635311221051192045,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311221051192045,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311221051202045,"Parsed as literal","func"
635311221051202045,"Parsed as literal",""
635311221051212046,"Invalid operator","@func","8"
635311221051212046,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311221051212046,"Parsed as literal","func"
635311221051222046,"Parsed as literal",""
635311221051222046,"Invalid operator","@func","8"
635311221051232047,"Parsed as literal","@func"
635311221051232047,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311221051242047,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311221051242047,"Parsed as literal",""
635311221051242047,"Parsed as literal",""
635311221051252048,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311221051252048,"Parsed as literal",""
635311221051262049,"Parsed as literal",""
635311221051262049,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311221051272049,"Parsed as literal",""
635311221051272049,"Parsed as literal",""
635311221051272049,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311221051282050,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311221051282050,"Parsed as literal","zipWith"
635311221051292050,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311221051292050,"Parsed as literal","@func"
635311221051302051,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311221051302051,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311221051302051,"Parsed as literal",""
635311221051312051,"Parsed as literal",""
635311221051312051,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311221051322052,"Parsed as literal",""
635311221051322052,"Parsed as literal",""
635311221051322052,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311221051332053,"Parsed as literal",""
635311221051332053,"Parsed as literal",""
635311221051342053,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311221051342053,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311221051352054,"Parsed as literal","zipWith"
635311221051352054,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311221051352054,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311221051362054,"Parsed as literal","func"
635311221051362054,"Parsed as literal",""
635311221051372055,"Invalid operator","@func","8"
635311221051372055,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311221051372055,"Parsed as literal","func"
635311221051382055,"Parsed as literal",""
635311221051382055,"Invalid operator","@func","8"
635311221051382055,"Parsed as literal","@func"
635311221051392056,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311221051392056,"Parsed as literal","list1"
635311221051402057,"Parsed as literal","list2"
635311221051402057,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311221051412057,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311221051422058,"Parsed as literal","func"
635311221051432058,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311221051432058,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311221051432058,"Parsed as literal",""
635311221051442059,"Parsed as literal","list1"
635311221051442059,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311221051452059,"Parsed as literal",""
635311221051452059,"Parsed as literal","list2"
635311221051462060,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311221051462060,"Parsed as literal","zipWith"
635311221051462060,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311221051472061,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311221051472061,"Parsed as literal","func"
635311221051482061,"Parsed as literal",""
635311221051482061,"Invalid operator","@func","64"
635311221051492062,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311221051492062,"Parsed as literal","func"
635311221051492062,"Parsed as literal",""
635311221051502062,"Invalid operator","@func","64"
635311221051502062,"Parsed as literal","@func"
635311221051512063,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311221051512063,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311221051512063,"Parsed as literal",""
635311221051522063,"Parsed as literal","list1"
635311221051522063,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311221051532064,"Parsed as literal",""
635311221051532064,"Parsed as literal","list2"
635311221051542065,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311221051542065,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311221051542065,"Parsed as literal","zipWith"
635311221051552065,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311221051552065,"Parsed as literal","@func"
635311221051562066,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311221051562066,"Parsed as literal","list1"
635311221051562066,"Parsed as literal","list2"
635311221051572066,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311221051582067,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311221051582067,"Parsed as literal","func"
635311221051582067,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311221051592067,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311221051592067,"Parsed as literal",""
635311221051602068,"Parsed as literal","list1"
635311221051602068,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311221051602068,"Parsed as literal",""
635311221051612069,"Parsed as literal","list2"
635311221051612069,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311221051622069,"Parsed as literal","zipWith"
635311221051622069,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311221051632070,"Parsed as literal","@func"
635311221051632070,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311221051632070,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311221051642070,"Parsed as literal",""
635311221051642070,"Parsed as literal","list1"
635311221051652071,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311221051652071,"Parsed as literal",""
635311221051652071,"Parsed as literal","list2"
635311221051662071,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311221051662071,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311221051672072,"Parsed as literal","count"
635311221051672072,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311221051682073,"Parsed as literal",""
635311221051682073,"Parsed as literal",""
635311221051692073,"Parsed as literal"," 0"
635311221051692073,"Invalid operator","@count([]) -> 0","0"
635311221051692073,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311221051702074,"Parsed as literal","count"
635311221051702074,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311221051712074,"Parsed as literal",""
635311221051712074,"Parsed as literal",""
635311221051712074,"Parsed as literal"," 0"
635311221051722075,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311221051722075,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311221051732075,"Parsed as literal","count"
635311221051732075,"Parsed as literal","list"
635311221051742076,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311221051742076,"Parsed as literal"," 1 "
635311221051752077,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311221051752077,"Parsed as literal","count"
635311221051752077,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311221051762077,"Parsed as literal",""
635311221051762077,"Parsed as literal","list"
635311221051772078,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311221051772078,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311221051782078,"Parsed as literal","count"
635311221051782078,"Parsed as literal","list"
635311221051782078,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311221051792079,"Parsed as literal"," 1 "
635311221051792079,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311221051802079,"Parsed as literal","count"
635311221051802079,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311221051802079,"Parsed as literal",""
635311221051812080,"Parsed as literal","list"
635311221051812080,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311221051822081,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311221051822081,"Parsed as literal","skip"
635311221051822081,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311221051832081,"Parsed as literal","0"
635311221051832081,"Parsed as literal","list"
635311221051842082,"Parsed as literal"," list"
635311221051842082,"Invalid operator","@skip(0,list) -> list","0"
635311221051842082,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311221051852082,"Parsed as literal","skip"
635311221051852082,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311221051862083,"Parsed as literal","0"
635311221051862083,"Parsed as literal","list"
635311221051862083,"Parsed as literal"," list"
635311221051872083,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311221051872083,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311221051882084,"Parsed as literal","skip"
635311221051882084,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311221051892085,"Parsed as literal","n"
635311221051892085,"Parsed as literal","list"
635311221051892085,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311221051902085,"Parsed as literal","skip"
635311221051902085,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311221051912086,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311221051912086,"Parsed as literal","n"
635311221051912086,"Parsed as literal","1"
635311221051922086,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311221051922086,"Parsed as literal",""
635311221051922086,"Parsed as literal","list"
635311221051932087,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311221051932087,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311221051942087,"Parsed as literal","skip"
635311221051942087,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311221051952088,"Parsed as literal","n"
635311221051952088,"Parsed as literal","list"
635311221051962089,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311221051962089,"Parsed as literal","skip"
635311221051962089,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311221051972089,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311221051972089,"Parsed as literal","n"
635311221051982090,"Parsed as literal","1"
635311221051982090,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311221051982090,"Parsed as literal",""
635311221051992090,"Parsed as literal","list"
635311221051992090,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311221052002091,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311221052002091,"Parsed as literal","take"
635311221052012091,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311221052012091,"Parsed as literal","1"
635311221052012091,"Parsed as literal","list"
635311221052022092,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311221052022092,"Parsed as literal"," "
635311221052032093,"Parsed as literal","list"
635311221052032093,"Invalid operator","@take(1,list) -> h:list","0"
635311221052032093,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311221052042093,"Parsed as literal","take"
635311221052042093,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311221052052094,"Parsed as literal","1"
635311221052052094,"Parsed as literal","list"
635311221052062094,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311221052062094,"Parsed as literal"," "
635311221052062094,"Parsed as literal","list"
635311221052072095,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311221052072095,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311221052082095,"Parsed as literal","take"
635311221052082095,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311221052092096,"Parsed as literal","n"
635311221052092096,"Parsed as literal","list"
635311221052092096,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311221052102097,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311221052102097,"Parsed as literal"," "
635311221052112097,"Parsed as literal","list "
635311221052112097,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311221052122098,"Parsed as literal","take"
635311221052122098,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311221052122098,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311221052132098,"Parsed as literal","n"
635311221052132098,"Parsed as literal","1"
635311221052142099,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311221052142099,"Parsed as literal",""
635311221052142099,"Parsed as literal","list"
635311221052152099,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311221052152099,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311221052162100,"Parsed as literal","take"
635311221052162100,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311221052162100,"Parsed as literal","n"
635311221052172101,"Parsed as literal","list"
635311221052172101,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311221052182101,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311221052182101,"Parsed as literal"," "
635311221052182101,"Parsed as literal","list "
635311221052192102,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311221052192102,"Parsed as literal","take"
635311221052202102,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311221052202102,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311221052202102,"Parsed as literal","n"
635311221052212103,"Parsed as literal","1"
635311221052212103,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311221052222103,"Parsed as literal",""
635311221052222103,"Parsed as literal","list"
635311221052232104,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311221052232104,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311221052232104,"Parsed as literal","nthItem"
635311221052242105,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311221052242105,"Parsed as literal","list"
635311221052242105,"Parsed as literal","0"
635311221052252105,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311221052252105,"Parsed as literal",""
635311221052262106,"Parsed as literal",""
635311221052262106,"Invalid operator","@nthItem(list,0) -> []","0"
635311221052272106,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311221052272106,"Parsed as literal","nthItem"
635311221052272106,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311221052282107,"Parsed as literal","list"
635311221052282107,"Parsed as literal","0"
635311221052292107,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311221052292107,"Parsed as literal",""
635311221052292107,"Parsed as literal",""
635311221052302108,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311221052302108,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311221052312109,"Parsed as literal","nthItem"
635311221052312109,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311221052312109,"Parsed as literal","list"
635311221052322109,"Parsed as literal","1"
635311221052322109,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311221052332110,"Parsed as literal"," "
635311221052332110,"Parsed as literal","list"
635311221052332110,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311221052342110,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311221052342110,"Parsed as literal","nthItem"
635311221052352111,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311221052352111,"Parsed as literal","list"
635311221052352111,"Parsed as literal","1"
635311221052362111,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311221052362111,"Parsed as literal"," "
635311221052372112,"Parsed as literal","list"
635311221052372112,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311221052372112,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311221052382113,"Parsed as literal","nthItem"
635311221052382113,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311221052392113,"Parsed as literal","list"
635311221052392113,"Parsed as literal","n"
635311221052392113,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311221052402114,"Parsed as literal","nthItem"
635311221052402114,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311221052412114,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311221052412114,"Parsed as literal",""
635311221052412114,"Parsed as literal","list"
635311221052422115,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311221052422115,"Parsed as literal","n"
635311221052432115,"Parsed as literal","1"
635311221052432115,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311221052442116,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311221052442116,"Parsed as literal","nthItem"
635311221052442116,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311221052462117,"Parsed as literal","list"
635311221052462117,"Parsed as literal","n"
635311221052462117,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311221052472118,"Parsed as literal","nthItem"
635311221052472118,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311221052482118,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311221052482118,"Parsed as literal",""
635311221052482118,"Parsed as literal","list"
635311221052492119,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311221052492119,"Parsed as literal","n"
635311221052502119,"Parsed as literal","1"
635311221052502119,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311221052512120,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311221052512120,"Parsed as literal","makeRange"
635311221052512120,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311221052522121,"Parsed as literal","a"
635311221052522121,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311221052532121,"Parsed as literal","b"
635311221052532121,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311221052532121,"Parsed as literal","a"
635311221052542122,"Parsed as literal","b"
635311221052542122,"Parsed as literal"," a"
635311221052552122,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311221052552122,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311221052552122,"Parsed as literal","makeRange"
635311221052562123,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311221052562123,"Parsed as literal","a"
635311221052572123,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311221052572123,"Parsed as literal","b"
635311221052572123,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311221052582124,"Parsed as literal","a"
635311221052582124,"Parsed as literal","b"
635311221052592125,"Parsed as literal"," a"
635311221052592125,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311221052592125,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311221052602125,"Parsed as literal","makeRange"
635311221052602125,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311221052612126,"Parsed as literal","a"
635311221052612126,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311221052612126,"Parsed as literal","b"
635311221052622126,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311221052622126,"Parsed as literal","a"
635311221052632127,"Parsed as literal","b"
635311221052632127,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311221052632127,"Parsed as literal"," a "
635311221052642127,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311221052642127,"Parsed as literal","makeRange"
635311221052652128,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311221052652128,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311221052652128,"Parsed as literal","a"
635311221052662129,"Parsed as literal","1"
635311221052662129,"Parsed as literal","b"
635311221052672129,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311221052672129,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311221052672129,"Parsed as literal","makeRange"
635311221052682130,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311221052682130,"Parsed as literal","a"
635311221052692130,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311221052692130,"Parsed as literal","b"
635311221052692130,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311221052702131,"Parsed as literal","a"
635311221052702131,"Parsed as literal","b"
635311221052712131,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311221052712131,"Parsed as literal"," a "
635311221052722132,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311221052722132,"Parsed as literal","makeRange"
635311221052722132,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311221052732133,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311221052732133,"Parsed as literal","a"
635311221052742133,"Parsed as literal","1"
635311221052742133,"Parsed as literal","b"
635311221052752134,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311221052752134,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311221052752134,"Parsed as literal","reverse"
635311221052762134,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311221052762134,"Parsed as literal",""
635311221052772135,"Parsed as literal",""
635311221052772135,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311221052782135,"Parsed as literal",""
635311221052782135,"Parsed as literal",""
635311221052782135,"Invalid operator","@reverse([]) -> []","0"
635311221052792136,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311221052792136,"Parsed as literal","reverse"
635311221052802137,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311221052802137,"Parsed as literal",""
635311221052802137,"Parsed as literal",""
635311221052812137,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311221052812137,"Parsed as literal",""
635311221052822138,"Parsed as literal",""
635311221052822138,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311221052832138,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311221052832138,"Parsed as literal","reverse"
635311221052832138,"Parsed as literal","list"
635311221052842139,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311221052842139,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311221052852139,"Parsed as literal","reverse"
635311221052852139,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311221052862140,"Parsed as literal",""
635311221052862140,"Parsed as literal","list"
635311221052862140,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311221052872141,"Parsed as literal"," "
635311221052872141,"Parsed as literal","list"
635311221052882141,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311221052882141,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311221052892142,"Parsed as literal","reverse"
635311221052892142,"Parsed as literal","list"
635311221052892142,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311221052902142,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311221052902142,"Parsed as literal","reverse"
635311221052912143,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311221052912143,"Parsed as literal",""
635311221052922143,"Parsed as literal","list"
635311221052922143,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311221052922143,"Parsed as literal"," "
635311221052932144,"Parsed as literal","list"
635311221052932144,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311221052942145,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311221052942145,"Parsed as literal","max"
635311221052952145,"Parsed as literal","list"
635311221052952145,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311221052962146,"Parsed as literal","fold"
635311221052962146,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311221052962146,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311221052972146,"Parsed as literal","max"
635311221052972146,"Parsed as literal",""
635311221052982147,"Invalid operator","@max","19"
635311221052982147,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311221052982147,"Parsed as literal","max"
635311221052992147,"Parsed as literal",""
635311221052992147,"Invalid operator","@max","19"
635311221053002148,"Parsed as literal","@max"
635311221053002148,"Parsed as literal","list"
635311221053012149,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311221053012149,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311221053012149,"Parsed as literal","max"
635311221053022149,"Parsed as literal","list"
635311221053022149,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311221053032150,"Parsed as literal","fold"
635311221053032150,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311221053032150,"Parsed as literal","@max"
635311221053042150,"Parsed as literal","list"
635311221053042150,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311221053052151,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311221053052151,"Parsed as literal","elementAt"
635311221053062151,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311221053062151,"Parsed as literal","0"
635311221053062151,"Parsed as literal","list"
635311221053072152,"Parsed as literal"," 'list"
635311221053072152,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311221053082153,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311221053082153,"Parsed as literal","elementAt"
635311221053092153,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311221053092153,"Parsed as literal","n"
635311221053102154,"Parsed as literal","list"
635311221053102154,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311221053102154,"Parsed as literal","elementAt"
635311221053112154,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311221053112154,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311221053122155,"Parsed as literal","n"
635311221053122155,"Parsed as literal","1"
635311221053132155,"Parsed as literal","list'"
635311221053132155,"StepEvaluate","->","Changed","Declared @zipWith"
635311221053132155,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311221053142156,"StepEvaluate","->","Changed","Declared @zipWith"
635311221053142156,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311221053152157,"StepEvaluate","->","Changed","Declared @count"
635311221053152157,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311221053152157,"StepEvaluate","->","Changed","Declared @count"
635311221053162157,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311221053162157,"StepEvaluate","->","Changed","Declared @skip"
635311221053172158,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311221053172158,"StepEvaluate","->","Changed","Declared @skip"
635311221053172158,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311221053182158,"StepEvaluate","->","Changed","Declared @take"
635311221053182158,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311221053192159,"StepEvaluate","->","Changed","Declared @take"
635311221053192159,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311221053192159,"StepEvaluate","->","Changed","Declared @nthItem"
635311221053202160,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311221053202160,"StepEvaluate","->","Changed","Declared @nthItem"
635311221053212160,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311221053212160,"StepEvaluate","->","Changed","Declared @nthItem"
635311221053212160,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311221053222161,"StepEvaluate","->","Changed","Declared @makeRange"
635311221053222161,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311221053222161,"StepEvaluate","->","Changed","Declared @makeRange"
635311221053232161,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311221053232161,"StepEvaluate","->","Changed","Declared @reverse"
635311221053242162,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311221053242162,"StepEvaluate","->","Changed","Declared @reverse"
635311221053242162,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311221053252162,"StepEvaluate","->","Changed","Declared @max"
635311221053252162,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311221053262163,"StepEvaluate","==","Unchanged","=="
635311221053262163,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311221053262163,"StepEvaluate","elementAt","Unchanged","elementAt"
635311221053272164,"StepEvaluate",",","Unchanged",","
635311221053272164,"StepEvaluate","0","Unchanged","0"
635311221053282164,"StepEvaluate",",","Unchanged",","
635311221053282164,"StepEvaluate","list","Unchanged","list"
635311221053282164,"StepEvaluate","'list","Unchanged","'list"
635311221053292165,"StepEvaluate","==","Unchanged","=="
635311221053292165,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311221053292165,"StepEvaluate","elementAt","Unchanged","elementAt"
635311221053302165,"StepEvaluate",",","Unchanged",","
635311221053302165,"StepEvaluate","n","Unchanged","n"
635311221053312166,"StepEvaluate",",","Unchanged",","
635311221053312166,"StepEvaluate","list","Unchanged","list"
635311221053312166,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311221053322166,"StepEvaluate","elementAt","Unchanged","elementAt"
635311221053322166,"StepEvaluate",",","Unchanged",","
635311221053322166,"StepEvaluate","-","Unchanged","-"
635311221053332167,"StepEvaluate","n","Unchanged","n"
635311221053332167,"StepEvaluate","1","Unchanged","1"
635311221053342168,"StepEvaluate",",","Unchanged",","
635311221053342168,"StepEvaluate","list'","Unchanged","list'"
635311221053342168,"StepEvaluate","[]","Changed","File imported"
635311221053352168,"StepEvaluate","File imported","Unchanged","File imported"
635311221053352168,"StepEvaluate","@","Changed","@"
635311221053352168,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221053362169,"StepEvaluate","PAT@","Unchanged","PAT@"
635311221053362169,"StepEvaluate",",","Unchanged",","
635311221053372169,"StepEvaluate","@Arg","Changed","@Arg-M"
635311221053372169,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221053372169,"StepEvaluate","PAT@-M","Changed","[]"
635311221053382170,"StepEvaluate","SEL@import","Changed","[]"
635311221053382170,"StepEvaluate","@","Changed","[]"
635311221053392170,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311221053392170,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311221053392170,"Parsed as literal","naturalNumbers"
635311221053402171,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311221053402171,"Parsed as literal",""
635311221053412172,"Parsed as literal",""
635311221053412172,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311221053412172,"Parsed as literal","naturalNumbers"
635311221053422172,"Parsed as literal","0"
635311221053422172,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311221053432173,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311221053432173,"Parsed as literal","naturalNumbers"
635311221053432173,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311221053442173,"Parsed as literal",""
635311221053442173,"Parsed as literal",""
635311221053452174,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311221053452174,"Parsed as literal","naturalNumbers"
635311221053462174,"Parsed as literal","0"
635311221053462174,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311221053462174,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311221053472175,"Parsed as literal","naturalNumbers"
635311221053472175,"Parsed as literal","n"
635311221053482176,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311221053482176,"Parsed as literal"," n "
635311221053482176,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311221053492176,"Parsed as literal","naturalNumbers"
635311221053492176,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311221053502177,"Parsed as literal","n"
635311221053502177,"Parsed as literal","1"
635311221053502177,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311221053512177,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311221053512177,"Parsed as literal","naturalNumbers"
635311221053522178,"Parsed as literal","n"
635311221053522178,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311221053522178,"Parsed as literal"," n "
635311221053532178,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311221053532178,"Parsed as literal","naturalNumbers"
635311221053542179,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311221053542179,"Parsed as literal","n"
635311221053542179,"Parsed as literal","1"
635311221053552180,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311221053552180,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311221053562180,"Parsed as literal","max"
635311221053562180,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311221053562180,"Parsed as literal","a"
635311221053572181,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311221053572181,"Parsed as literal","b"
635311221053582181,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311221053582181,"Parsed as literal","a"
635311221053582181,"Parsed as literal","b"
635311221053592182,"Parsed as literal","b"
635311221053592182,"Invalid operator","@max(a,b|a<b)->b","0"
635311221053602182,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311221053602182,"Parsed as literal","max"
635311221053612183,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311221053612183,"Parsed as literal","a"
635311221053612183,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311221053622184,"Parsed as literal","b"
635311221053622184,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311221053622184,"Parsed as literal","a"
635311221053632184,"Parsed as literal","b"
635311221053632184,"Parsed as literal","b"
635311221053642185,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311221053642185,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311221053652185,"Parsed as literal","max"
635311221053652185,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311221053652185,"Parsed as literal","a"
635311221053662186,"Parsed as literal","b"
635311221053662186,"Parsed as literal","a"
635311221053672186,"Invalid operator","@max(a,b)->a","0"
635311221053672186,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311221053672186,"Parsed as literal","max"
635311221053682187,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311221053682187,"Parsed as literal","a"
635311221053692188,"Parsed as literal","b"
635311221053692188,"Parsed as literal","a"
635311221053702188,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311221053702188,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311221053712189,"Parsed as literal","random"
635311221053712189,"Parsed as literal","0"
635311221053712189,"Parsed as literal"," 0"
635311221053722189,"Invalid operator","@random(0) -> 0","0"
635311221053722189,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311221053732190,"Parsed as literal","random"
635311221053732190,"Parsed as literal","0"
635311221053742190,"Parsed as literal"," 0"
635311221053742190,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311221053752191,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311221053752191,"Parsed as literal","random"
635311221053752191,"Parsed as literal","n"
635311221053762192,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311221053762192,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311221053772192,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311221053772192,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311221053782193,"Parsed as literal","1664525 "
635311221053782193,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311221053792193,"Parsed as literal","random"
635311221053792193,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311221053792193,"Parsed as literal","n"
635311221053802194,"Parsed as literal","1"
635311221053802194,"Parsed as literal"," 1013904223"
635311221053812194,"Parsed as literal",""
635311221053812194,"Parsed as literal"," 4294967296"
635311221053822195,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311221053822195,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311221053822195,"Parsed as literal","random"
635311221053832196,"Parsed as literal","n"
635311221053832196,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311221053842196,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311221053842196,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311221053852197,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311221053852197,"Parsed as literal","1664525 "
635311221053852197,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311221053862197,"Parsed as literal","random"
635311221053862197,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311221053872198,"Parsed as literal","n"
635311221053872198,"Parsed as literal","1"
635311221053872198,"Parsed as literal"," 1013904223"
635311221053882198,"Parsed as literal",""
635311221053882198,"Parsed as literal"," 4294967296"
635311221053892199,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311221053892199,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311221053892199,"Parsed as literal","gcd"
635311221053902200,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311221053902200,"Parsed as literal","a"
635311221053912200,"Parsed as literal","0"
635311221053912200,"Parsed as literal"," a"
635311221053912200,"Invalid operator","@gcd(a,0) -> a","0"
635311221053922201,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311221053922201,"Parsed as literal","gcd"
635311221053932201,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311221053932201,"Parsed as literal","a"
635311221053932201,"Parsed as literal","0"
635311221053942202,"Parsed as literal"," a"
635311221053942202,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311221053952202,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311221053952202,"Parsed as literal","gcd"
635311221053962203,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311221053962203,"Parsed as literal","a"
635311221053962203,"Parsed as literal","b"
635311221053972204,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311221053972204,"Parsed as literal","gcd"
635311221053982204,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311221053982204,"Parsed as literal","b"
635311221053982204,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311221053992205,"Parsed as literal","a "
635311221053992205,"Parsed as literal"," b"
635311221054002205,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311221054002205,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311221054012206,"Parsed as literal","gcd"
635311221054012206,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311221054012206,"Parsed as literal","a"
635311221054022206,"Parsed as literal","b"
635311221054022206,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311221054032207,"Parsed as literal","gcd"
635311221054032207,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311221054042208,"Parsed as literal","b"
635311221054042208,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311221054042208,"Parsed as literal","a "
635311221054052208,"Parsed as literal"," b"
635311221054052208,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311221054062209,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311221054062209,"Parsed as literal","gcd"
635311221054072209,"Parsed as literal","list"
635311221054082210,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311221054082210,"Parsed as literal","fold"
635311221054082210,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311221054092210,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311221054092210,"Parsed as literal","gcd"
635311221054102211,"Parsed as literal",""
635311221054102211,"Invalid operator","@gcd","19"
635311221054102211,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311221054112212,"Parsed as literal","gcd"
635311221054112212,"Parsed as literal",""
635311221054122212,"Invalid operator","@gcd","19"
635311221054122212,"Parsed as literal","@gcd"
635311221054132213,"Parsed as literal","list"
635311221054132213,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311221054132213,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311221054142213,"Parsed as literal","gcd"
635311221054142213,"Parsed as literal","list"
635311221054152214,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311221054152214,"Parsed as literal","fold"
635311221054162214,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311221054162214,"Parsed as literal","@gcd"
635311221054162214,"Parsed as literal","list"
635311221054172215,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311221054172215,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311221054182216,"Parsed as literal","fib"
635311221054182216,"Parsed as literal","0"
635311221054182216,"Parsed as literal"," 1"
635311221054192216,"Invalid operator","@fib(0) -> 1","0"
635311221054192216,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311221054202217,"Parsed as literal","fib"
635311221054202217,"Parsed as literal","0"
635311221054202217,"Parsed as literal"," 1"
635311221054212217,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311221054212217,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311221054222218,"Parsed as literal","fib"
635311221054222218,"Parsed as literal","1"
635311221054222218,"Parsed as literal"," 1"
635311221054232218,"Invalid operator","@fib(1) -> 1","0"
635311221054232218,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311221054242219,"Parsed as literal","fib"
635311221054242219,"Parsed as literal","1"
635311221054242219,"Parsed as literal"," 1"
635311221054252220,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311221054252220,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311221054262220,"Parsed as literal","fib"
635311221054262220,"Parsed as literal","n"
635311221054272221,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311221054272221,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311221054272221,"Parsed as literal","fib"
635311221054282221,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311221054282221,"Parsed as literal","n"
635311221054292222,"Parsed as literal","2"
635311221054292222,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311221054292222,"Parsed as literal","fib"
635311221054302222,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311221054302222,"Parsed as literal","n"
635311221054312223,"Parsed as literal","1"
635311221054312223,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311221054312223,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311221054322224,"Parsed as literal","fib"
635311221054322224,"Parsed as literal","n"
635311221054332224,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311221054332224,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311221054332224,"Parsed as literal","fib"
635311221054342225,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311221054342225,"Parsed as literal","n"
635311221054352225,"Parsed as literal","2"
635311221054352225,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311221054352225,"Parsed as literal","fib"
635311221054362226,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311221054362226,"Parsed as literal","n"
635311221054372226,"Parsed as literal","1"
635311221054372226,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311221054382227,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311221054382227,"Parsed as literal","fib2"
635311221054382227,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311221054392228,"Parsed as literal",""
635311221054392228,"Parsed as literal",""
635311221054402228,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311221054402228,"Parsed as literal"," 0 "
635311221054402228,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311221054412229,"Parsed as literal"," 1 "
635311221054412229,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311221054422229,"Parsed as literal","zipWith"
635311221054422229,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311221054432230,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311221054432230,"Parsed as literal",""
635311221054432230,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311221054442230,"Parsed as literal","a"
635311221054442230,"Parsed as literal","b"
635311221054452231,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311221054452231,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311221054452231,"Parsed as literal","a"
635311221054462232,"Parsed as literal","b"
635311221054462232,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311221054472232,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311221054472232,"Parsed as literal","fib2"
635311221054472232,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311221054482233,"Parsed as literal",""
635311221054482233,"Parsed as literal",""
635311221054492233,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311221054492233,"Parsed as literal"," "
635311221054492233,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311221054502234,"Parsed as literal","fib2"
635311221054502234,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311221054512234,"Parsed as literal",""
635311221054512234,"Parsed as literal",""
635311221054512234,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311221054522235,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311221054522235,"Parsed as literal",""
635311221054532236,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311221054532236,"Parsed as literal","a"
635311221054532236,"Parsed as literal","b"
635311221054542236,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311221054542236,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311221054552237,"Parsed as literal","a"
635311221054552237,"Parsed as literal","b"
635311221054562237,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311221054562237,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311221054562237,"Parsed as literal","fib2"
635311221054572238,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311221054572238,"Parsed as literal",""
635311221054582238,"Parsed as literal",""
635311221054582238,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311221054582238,"Parsed as literal"," "
635311221054592239,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311221054592239,"Parsed as literal","fib2"
635311221054602240,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311221054602240,"Parsed as literal",""
635311221054602240,"Parsed as literal",""
635311221054612240,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311221054612240,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311221054622241,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311221054622241,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311221054622241,"Parsed as literal",""
635311221054632241,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311221054632241,"Parsed as literal","a"
635311221054642242,"Parsed as literal","b"
635311221054642242,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311221054642242,"Parsed as literal","a"
635311221054652242,"Parsed as literal","b"
635311221054652242,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311221054662243,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311221054662243,"Parsed as literal","fib2"
635311221054662243,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311221054672244,"Parsed as literal",""
635311221054672244,"Parsed as literal",""
635311221054682244,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311221054682244,"Parsed as literal"," "
635311221054682244,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311221054692245,"Parsed as literal","fib2"
635311221054692245,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311221054702245,"Parsed as literal",""
635311221054702245,"Parsed as literal",""
635311221054702245,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311221054712246,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311221054712246,"Parsed as literal","fib2"
635311221054722246,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311221054722246,"Parsed as literal",""
635311221054722246,"Parsed as literal",""
635311221054732247,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311221054732247,"Parsed as literal"," 0 "
635311221054742248,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311221054742248,"Parsed as literal"," 1 "
635311221054752248,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311221054752248,"Parsed as literal","zipWith"
635311221054752248,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311221054762249,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311221054762249,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311221054772249,"Parsed as literal",""
635311221054772249,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311221054782250,"Parsed as literal","a"
635311221054782250,"Parsed as literal","b"
635311221054782250,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311221054792250,"Parsed as literal","a"
635311221054792250,"Parsed as literal","b"
635311221054802251,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311221054802251,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311221054802251,"Parsed as literal","fib2"
635311221054812252,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311221054812252,"Parsed as literal",""
635311221054822252,"Parsed as literal",""
635311221054822252,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311221054822252,"Parsed as literal"," "
635311221054832253,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311221054832253,"Parsed as literal","fib2"
635311221054842253,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311221054842253,"Parsed as literal",""
635311221054852254,"Parsed as literal",""
635311221054852254,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311221054862254,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311221054862254,"Parsed as literal","fib2"
635311221054862254,"Parsed as literal","n"
635311221054872255,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311221054872255,"Parsed as literal","take"
635311221054882256,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311221054882256,"Parsed as literal","n"
635311221054892256,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311221054892256,"Parsed as literal","fib2"
635311221054892256,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311221054902257,"Parsed as literal",""
635311221054902257,"Parsed as literal",""
635311221054912257,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311221054912257,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311221054912257,"Parsed as literal","fib2"
635311221054922258,"Parsed as literal","n"
635311221054922258,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311221054932258,"Parsed as literal","take"
635311221054932258,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311221054942259,"Parsed as literal","n"
635311221054942259,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311221054942259,"Parsed as literal","fib2"
635311221054952260,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311221054952260,"Parsed as literal",""
635311221054952260,"Parsed as literal",""
635311221054962260,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311221054962260,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311221054972261,"Parsed as literal","fac"
635311221054972261,"Parsed as literal","0"
635311221054982261,"Parsed as literal"," 1"
635311221054982261,"Invalid operator","@fac(0) -> 1","0"
635311221054982261,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311221054992262,"Parsed as literal","fac"
635311221054992262,"Parsed as literal","0"
635311221055002262,"Parsed as literal"," 1"
635311221055002262,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311221055002262,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311221055012263,"Parsed as literal","fac"
635311221055012263,"Parsed as literal","n"
635311221055022264,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311221055022264,"Parsed as literal"," n "
635311221055022264,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311221055032264,"Parsed as literal","fac"
635311221055032264,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311221055042265,"Parsed as literal","n"
635311221055042265,"Parsed as literal","1"
635311221055042265,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311221055052265,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311221055052265,"Parsed as literal","fac"
635311221055062266,"Parsed as literal","n"
635311221055062266,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311221055062266,"Parsed as literal"," n "
635311221055072266,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311221055072266,"Parsed as literal","fac"
635311221055082267,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311221055082267,"Parsed as literal","n"
635311221055082267,"Parsed as literal","1"
635311221055092268,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311221055092268,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311221055102268,"Parsed as literal","pow"
635311221055102268,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311221055102268,"Parsed as literal","num"
635311221055112269,"Parsed as literal","0"
635311221055112269,"Parsed as literal"," 1"
635311221055122269,"Invalid operator","@pow(num,0) -> 1","0"
635311221055122269,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311221055122269,"Parsed as literal","pow"
635311221055132270,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311221055132270,"Parsed as literal","num"
635311221055142270,"Parsed as literal","0"
635311221055142270,"Parsed as literal"," 1"
635311221055142270,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311221055152271,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311221055152271,"Parsed as literal","pow"
635311221055162272,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311221055162272,"Parsed as literal","num"
635311221055162272,"Parsed as literal","1"
635311221055172272,"Parsed as literal"," num"
635311221055172272,"Invalid operator","@pow(num,1) -> num","0"
635311221055182273,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311221055182273,"Parsed as literal","pow"
635311221055192273,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311221055192273,"Parsed as literal","num"
635311221055192273,"Parsed as literal","1"
635311221055202274,"Parsed as literal"," num"
635311221055202274,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311221055212274,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311221055212274,"Parsed as literal","pow"
635311221055212274,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311221055222275,"Parsed as literal","num"
635311221055222275,"Parsed as literal"," power"
635311221055232276,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311221055232276,"Parsed as literal"," num "
635311221055232276,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311221055242276,"Parsed as literal","pow"
635311221055242276,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311221055252277,"Parsed as literal","num"
635311221055252277,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311221055252277,"Parsed as literal","power"
635311221055262277,"Parsed as literal","1"
635311221055262277,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311221055272278,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311221055272278,"Parsed as literal","pow"
635311221055272278,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311221055282278,"Parsed as literal","num"
635311221055282278,"Parsed as literal"," power"
635311221055292279,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311221055292279,"Parsed as literal"," num "
635311221055302280,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311221055302280,"Parsed as literal","pow"
635311221055302280,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311221055312280,"Parsed as literal","num"
635311221055312280,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311221055322281,"Parsed as literal","power"
635311221055322281,"Parsed as literal","1"
635311221055332281,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311221055332281,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311221055332281,"Parsed as literal","upArrow"
635311221055342282,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311221055352282,"Parsed as literal","a"
635311221055352282,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311221055362283,"Parsed as literal","b"
635311221055362283,"Parsed as literal","1"
635311221055372284,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311221055372284,"Parsed as literal","pow"
635311221055372284,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311221055382284,"Parsed as literal","a"
635311221055382284,"Parsed as literal","b"
635311221055392285,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311221055392285,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311221055392285,"Parsed as literal","upArrow"
635311221055402285,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311221055402285,"Parsed as literal","a"
635311221055412286,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311221055412286,"Parsed as literal","b"
635311221055412286,"Parsed as literal","1"
635311221055422286,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311221055422286,"Parsed as literal","pow"
635311221055432287,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311221055432287,"Parsed as literal","a"
635311221055442288,"Parsed as literal","b"
635311221055442288,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311221055452288,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311221055452288,"Parsed as literal","upArrow"
635311221055452288,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311221055462289,"Parsed as literal","a"
635311221055462289,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311221055472289,"Parsed as literal","1"
635311221055472289,"Parsed as literal","n"
635311221055472289,"Parsed as literal"," a"
635311221055482290,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311221055482290,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311221055492290,"Parsed as literal","upArrow"
635311221055492290,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311221055502291,"Parsed as literal","a"
635311221055502291,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311221055502291,"Parsed as literal","1"
635311221055512292,"Parsed as literal","n"
635311221055512292,"Parsed as literal"," a"
635311221055522292,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311221055522292,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311221055532293,"Parsed as literal","upArrow"
635311221055532293,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311221055542293,"Parsed as literal","a"
635311221055542293,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311221055542293,"Parsed as literal","b"
635311221055552294,"Parsed as literal","n"
635311221055552294,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311221055562294,"Parsed as literal","upArrow"
635311221055562294,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311221055572295,"Parsed as literal","a"
635311221055572295,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311221055572295,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311221055582296,"Parsed as literal","upArrow"
635311221055582296,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311221055592296,"Parsed as literal","a"
635311221055592296,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311221055592296,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311221055602297,"Parsed as literal","b"
635311221055602297,"Parsed as literal","1"
635311221055612297,"Parsed as literal","n"
635311221055612297,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311221055622298,"Parsed as literal","n"
635311221055622298,"Parsed as literal","1"
635311221055632298,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311221055632298,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311221055632298,"Parsed as literal","upArrow"
635311221055642299,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311221055642299,"Parsed as literal","a"
635311221055652300,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311221055652300,"Parsed as literal","b"
635311221055652300,"Parsed as literal","n"
635311221055662300,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311221055662300,"Parsed as literal","upArrow"
635311221055672301,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311221055672301,"Parsed as literal","a"
635311221055682301,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311221055682301,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311221055682301,"Parsed as literal","upArrow"
635311221055692302,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311221055692302,"Parsed as literal","a"
635311221055702303,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311221055702303,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311221055712303,"Parsed as literal","b"
635311221055712303,"Parsed as literal","1"
635311221055712303,"Parsed as literal","n"
635311221055722304,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311221055722304,"Parsed as literal","n"
635311221055732304,"Parsed as literal","1"
635311221055732304,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311221055742305,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311221055742305,"Parsed as literal","graham"
635311221055742305,"Parsed as literal","0"
635311221055752305,"Parsed as literal"," 4"
635311221055752305,"Invalid operator","@graham(0) -> 4","0"
635311221055762306,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311221055762306,"Parsed as literal","graham"
635311221055772307,"Parsed as literal","0"
635311221055772307,"Parsed as literal"," 4"
635311221055782307,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311221055782307,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311221055782307,"Parsed as literal","graham"
635311221055792308,"Parsed as literal","n"
635311221055792308,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311221055802308,"Parsed as literal","upArrow"
635311221055802308,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311221055812309,"Parsed as literal","3"
635311221055812309,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311221055812309,"Parsed as literal","3"
635311221055822309,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311221055822309,"Parsed as literal","graham"
635311221055832310,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311221055832310,"Parsed as literal","n"
635311221055842311,"Parsed as literal","1"
635311221055842311,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311221055842311,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311221055852311,"Parsed as literal","graham"
635311221055852311,"Parsed as literal","n"
635311221055862312,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311221055862312,"Parsed as literal","upArrow"
635311221055872312,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311221055872312,"Parsed as literal","3"
635311221055872312,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311221055882313,"Parsed as literal","3"
635311221055882313,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311221055892313,"Parsed as literal","graham"
635311221055892313,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311221055902314,"Parsed as literal","n"
635311221055902314,"Parsed as literal","1"
635311221055902314,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311221055912315,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311221055912315,"Parsed as literal","grahamsNumber"
635311221055922315,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311221055922315,"Parsed as literal",""
635311221055932316,"Parsed as literal",""
635311221055932316,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311221055932316,"Parsed as literal","graham"
635311221055942316,"Parsed as literal","64"
635311221055942316,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311221055952317,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311221055952317,"Parsed as literal","grahamsNumber"
635311221055962317,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311221055962317,"Parsed as literal",""
635311221055962317,"Parsed as literal",""
635311221055972318,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311221055972318,"Parsed as literal","graham"
635311221055982319,"Parsed as literal","64"
635311221055982319,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311221055992319,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311221055992319,"Parsed as literal","ack"
635311221055992319,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311221056002320,"Parsed as literal","0"
635311221056002320,"Parsed as literal","n"
635311221056012320,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311221056012320,"Parsed as literal"," n "
635311221056022321,"Parsed as literal"," 1"
635311221056022321,"Invalid operator","@ack(0,n) -> n + 1","0"
635311221056022321,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311221056032321,"Parsed as literal","ack"
635311221056032321,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311221056042322,"Parsed as literal","0"
635311221056042322,"Parsed as literal","n"
635311221056052323,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311221056052323,"Parsed as literal"," n "
635311221056052323,"Parsed as literal"," 1"
635311221056062323,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311221056062323,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311221056072324,"Parsed as literal","ack"
635311221056072324,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311221056082324,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311221056082324,"Parsed as literal","m"
635311221056082324,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311221056092325,"Parsed as literal","m"
635311221056092325,"Parsed as literal","0"
635311221056102325,"Parsed as literal","0"
635311221056102325,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311221056112326,"Parsed as literal","ack"
635311221056112326,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311221056112326,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311221056122327,"Parsed as literal","m"
635311221056122327,"Parsed as literal","1"
635311221056132327,"Parsed as literal","1"
635311221056132327,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311221056142328,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311221056142328,"Parsed as literal","ack"
635311221056142328,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311221056152328,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311221056152328,"Parsed as literal","m"
635311221056152328,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311221056162329,"Parsed as literal","m"
635311221056162329,"Parsed as literal","0"
635311221056172329,"Parsed as literal","0"
635311221056172329,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311221056172329,"Parsed as literal","ack"
635311221056182330,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311221056182330,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311221056192331,"Parsed as literal","m"
635311221056192331,"Parsed as literal","1"
635311221056192331,"Parsed as literal","1"
635311221056202331,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311221056202331,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311221056212332,"Parsed as literal","ack"
635311221056212332,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311221056222332,"Parsed as literal","m"
635311221056222332,"Parsed as literal","n"
635311221056232333,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311221056232333,"Parsed as literal","ack"
635311221056232333,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311221056242333,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311221056242333,"Parsed as literal","m"
635311221056242333,"Parsed as literal","1"
635311221056252334,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311221056252334,"Parsed as literal","ack"
635311221056252334,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311221056262335,"Parsed as literal","m"
635311221056262335,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311221056272335,"Parsed as literal","n"
635311221056272335,"Parsed as literal","1"
635311221056272335,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311221056282336,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311221056282336,"Parsed as literal","ack"
635311221056292336,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311221056292336,"Parsed as literal","m"
635311221056302337,"Parsed as literal","n"
635311221056302337,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311221056312337,"Parsed as literal","ack"
635311221056312337,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311221056312337,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311221056322338,"Parsed as literal","m"
635311221056322338,"Parsed as literal","1"
635311221056322338,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311221056322338,"Parsed as literal","ack"
635311221056332339,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311221056332339,"Parsed as literal","m"
635311221056332339,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311221056342339,"Parsed as literal","n"
635311221056342339,"Parsed as literal","1"
635311221056342339,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311221056352340,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311221056352340,"Parsed as literal","acker"
635311221056352340,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311221056352340,"Parsed as literal","m"
635311221056362340,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311221056362340,"Parsed as literal","n"
635311221056362340,"Parsed as literal","0"
635311221056372341,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311221056372341,"Parsed as literal"," m"
635311221056372341,"Parsed as literal","n"
635311221056372341,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311221056382341,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311221056382341,"Parsed as literal","acker"
635311221056382341,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311221056392342,"Parsed as literal","m"
635311221056392342,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311221056392342,"Parsed as literal","n"
635311221056392342,"Parsed as literal","0"
635311221056402343,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311221056402343,"Parsed as literal"," m"
635311221056402343,"Parsed as literal","n"
635311221056412343,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311221056412343,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311221056412343,"Parsed as literal","acker"
635311221056422344,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311221056422344,"Parsed as literal","m"
635311221056422344,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311221056422344,"Parsed as literal","0"
635311221056432344,"Parsed as literal","1"
635311221056432344,"Parsed as literal"," 0"
635311221056432344,"Invalid operator","@acker(m,0,1) -> 0","0"
635311221056442345,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311221056442345,"Parsed as literal","acker"
635311221056442345,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311221056452345,"Parsed as literal","m"
635311221056452345,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311221056452345,"Parsed as literal","0"
635311221056452345,"Parsed as literal","1"
635311221056462346,"Parsed as literal"," 0"
635311221056462346,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311221056462346,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311221056472347,"Parsed as literal","acker"
635311221056472347,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311221056472347,"Parsed as literal","m"
635311221056482347,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311221056482347,"Parsed as literal","0"
635311221056482347,"Parsed as literal","2"
635311221056482347,"Parsed as literal"," 1"
635311221056492348,"Invalid operator","@acker(m,0,2) -> 1","0"
635311221056492348,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311221056492348,"Parsed as literal","acker"
635311221056502348,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311221056502348,"Parsed as literal","m"
635311221056502348,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311221056502348,"Parsed as literal","0"
635311221056512349,"Parsed as literal","2"
635311221056512349,"Parsed as literal"," 1"
635311221056512349,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311221056522349,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311221056522349,"Parsed as literal","acker"
635311221056522349,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311221056532350,"Parsed as literal","m"
635311221056532350,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311221056532350,"Parsed as literal","0"
635311221056532350,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311221056542351,"Parsed as literal","p"
635311221056542351,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311221056542351,"Parsed as literal","p"
635311221056552351,"Parsed as literal","2"
635311221056552351,"Parsed as literal"," m"
635311221056552351,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311221056552351,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311221056562352,"Parsed as literal","acker"
635311221056562352,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311221056562352,"Parsed as literal","m"
635311221056572352,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311221056572352,"Parsed as literal","0"
635311221056572352,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311221056572352,"Parsed as literal","p"
635311221056582353,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311221056582353,"Parsed as literal","p"
635311221056582353,"Parsed as literal","2"
635311221056592353,"Parsed as literal"," m"
635311221056592353,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311221056592353,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311221056602354,"Parsed as literal","acker"
635311221056602354,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311221056602354,"Parsed as literal","m"
635311221056612355,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311221056612355,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311221056612355,"Parsed as literal","n"
635311221056612355,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311221056622355,"Parsed as literal","n"
635311221056622355,"Parsed as literal","0"
635311221056622355,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311221056632356,"Parsed as literal","p"
635311221056632356,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311221056632356,"Parsed as literal","p"
635311221056632356,"Parsed as literal","0"
635311221056642356,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311221056652357,"Parsed as literal","acker"
635311221056652357,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311221056652357,"Parsed as literal","m"
635311221056652357,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311221056662357,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311221056662357,"Parsed as literal","acker"
635311221056662357,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311221056672358,"Parsed as literal","m"
635311221056672358,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311221056672358,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311221056672358,"Parsed as literal","n"
635311221056682359,"Parsed as literal","1"
635311221056682359,"Parsed as literal","p"
635311221056682359,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311221056692359,"Parsed as literal","p"
635311221056692359,"Parsed as literal","1"
635311221056692359,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311221056702360,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311221056702360,"Parsed as literal","acker"
635311221056702360,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311221056702360,"Parsed as literal","m"
635311221056712360,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311221056712360,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311221056712360,"Parsed as literal","n"
635311221056722361,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311221056722361,"Parsed as literal","n"
635311221056722361,"Parsed as literal","0"
635311221056722361,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311221056732361,"Parsed as literal","p"
635311221056732361,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311221056732361,"Parsed as literal","p"
635311221056742362,"Parsed as literal","0"
635311221056742362,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311221056742362,"Parsed as literal","acker"
635311221056752363,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311221056752363,"Parsed as literal","m"
635311221056752363,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311221056752363,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311221056762363,"Parsed as literal","acker"
635311221056762363,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311221056762363,"Parsed as literal","m"
635311221056772364,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311221056772364,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311221056772364,"Parsed as literal","n"
635311221056782364,"Parsed as literal","1"
635311221056782364,"Parsed as literal","p"
635311221056782364,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311221056782364,"Parsed as literal","p"
635311221056792365,"Parsed as literal","1"
635311221056792365,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311221056792365,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311221056802365,"Parsed as literal","hyper"
635311221056802365,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311221056802365,"Parsed as literal","0"
635311221056812366,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311221056812366,"Parsed as literal","a"
635311221056812366,"Parsed as literal","b"
635311221056812366,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311221056822367,"Parsed as literal"," b"
635311221056822367,"Parsed as literal","1"
635311221056822367,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311221056832367,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311221056832367,"Parsed as literal","hyper"
635311221056832367,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311221056832367,"Parsed as literal","0"
635311221056842368,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311221056842368,"Parsed as literal","a"
635311221056842368,"Parsed as literal","b"
635311221056852368,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311221056852368,"Parsed as literal"," b"
635311221056852368,"Parsed as literal","1"
635311221056862369,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311221056862369,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311221056862369,"Parsed as literal","hyper"
635311221056862369,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311221056872369,"Parsed as literal","1"
635311221056872369,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311221056872369,"Parsed as literal","a"
635311221056882370,"Parsed as literal","0"
635311221056882370,"Parsed as literal"," a"
635311221056882370,"Invalid operator","@hyper(1,a,0) -> a","0"
635311221056882370,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311221056892371,"Parsed as literal","hyper"
635311221056892371,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311221056892371,"Parsed as literal","1"
635311221056902371,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311221056902371,"Parsed as literal","a"
635311221056902371,"Parsed as literal","0"
635311221056902371,"Parsed as literal"," a"
635311221056912372,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311221056912372,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311221056912372,"Parsed as literal","hyper"
635311221056912372,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311221056922372,"Parsed as literal","2"
635311221056922372,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311221056922372,"Parsed as literal","a"
635311221056932373,"Parsed as literal","0"
635311221056932373,"Parsed as literal"," 0"
635311221056932373,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311221056932373,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311221056942373,"Parsed as literal","hyper"
635311221056942373,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311221056942373,"Parsed as literal","2"
635311221056952374,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311221056952374,"Parsed as literal","a"
635311221056952374,"Parsed as literal","0"
635311221056952374,"Parsed as literal"," 0"
635311221056962375,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311221056962375,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311221056962375,"Parsed as literal","hyper"
635311221056962375,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311221056972375,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311221056972375,"Parsed as literal","n"
635311221056972375,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311221056982376,"Parsed as literal","n"
635311221056982376,"Parsed as literal","2"
635311221056982376,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311221056982376,"Parsed as literal","a"
635311221056992376,"Parsed as literal","0"
635311221056992376,"Parsed as literal"," 1"
635311221056992376,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311221057002377,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311221057002377,"Parsed as literal","hyper"
635311221057002377,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311221057002377,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311221057012377,"Parsed as literal","n"
635311221057012377,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311221057012377,"Parsed as literal","n"
635311221057012377,"Parsed as literal","2"
635311221057022378,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311221057022378,"Parsed as literal","a"
635311221057022378,"Parsed as literal","0"
635311221057032379,"Parsed as literal"," 1"
635311221057032379,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311221057032379,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311221057032379,"Parsed as literal","hyper"
635311221057042379,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311221057042379,"Parsed as literal","n"
635311221057042379,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311221057052380,"Parsed as literal","a"
635311221057052380,"Parsed as literal","b"
635311221057052380,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311221057052380,"Parsed as literal","hyper"
635311221057062380,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311221057062380,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311221057062380,"Parsed as literal","n"
635311221057072381,"Parsed as literal","1"
635311221057072381,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311221057072381,"Parsed as literal","a"
635311221057072381,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311221057082381,"Parsed as literal","hyper"
635311221057082381,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311221057082381,"Parsed as literal","n"
635311221057082381,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311221057092382,"Parsed as literal","a"
635311221057092382,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311221057092382,"Parsed as literal","b"
635311221057102383,"Parsed as literal","1"
635311221057102383,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311221057102383,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311221057112383,"Parsed as literal","hyper"
635311221057112383,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311221057112383,"Parsed as literal","n"
635311221057112383,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311221057122384,"Parsed as literal","a"
635311221057122384,"Parsed as literal","b"
635311221057122384,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311221057132384,"Parsed as literal","hyper"
635311221057132384,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311221057132384,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311221057132384,"Parsed as literal","n"
635311221057142385,"Parsed as literal","1"
635311221057142385,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311221057142385,"Parsed as literal","a"
635311221057142385,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311221057152385,"Parsed as literal","hyper"
635311221057152385,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311221057152385,"Parsed as literal","n"
635311221057152385,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311221057162386,"Parsed as literal","a"
635311221057162386,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311221057162386,"Parsed as literal","b"
635311221057172387,"Parsed as literal","1"
635311221057172387,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311221057172387,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311221057182387,"Parsed as literal","sudan"
635311221057182387,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311221057182387,"Parsed as literal","0"
635311221057182387,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311221057192388,"Parsed as literal","x"
635311221057192388,"Parsed as literal","y"
635311221057192388,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311221057192388,"Parsed as literal"," x "
635311221057202388,"Parsed as literal"," y"
635311221057202388,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311221057202388,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311221057212389,"Parsed as literal","sudan"
635311221057212389,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311221057212389,"Parsed as literal","0"
635311221057212389,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311221057222389,"Parsed as literal","x"
635311221057222389,"Parsed as literal","y"
635311221057222389,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311221057222389,"Parsed as literal"," x "
635311221057232390,"Parsed as literal"," y"
635311221057232390,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311221057232390,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311221057242391,"Parsed as literal","sudan"
635311221057242391,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311221057242391,"Parsed as literal","n"
635311221057242391,"Parsed as literal","0"
635311221057252391,"Parsed as literal"," x"
635311221057252391,"Invalid operator","@sudan(n,0) -> x","0"
635311221057252391,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311221057262392,"Parsed as literal","sudan"
635311221057262392,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311221057262392,"Parsed as literal","n"
635311221057262392,"Parsed as literal","0"
635311221057272392,"Parsed as literal"," x"
635311221057272392,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311221057272392,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311221057282393,"Parsed as literal","sudan"
635311221057282393,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311221057282393,"Parsed as literal","n"
635311221057282393,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311221057292393,"Parsed as literal","x"
635311221057292393,"Parsed as literal","y"
635311221057292393,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311221057302394,"Parsed as literal","sudan"
635311221057302394,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311221057302394,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311221057312395,"Parsed as literal","n"
635311221057312395,"Parsed as literal","1"
635311221057312395,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311221057322395,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311221057322395,"Parsed as literal","sudan"
635311221057322395,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311221057322395,"Parsed as literal","n"
635311221057332396,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311221057332396,"Parsed as literal","x"
635311221057332396,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311221057342396,"Parsed as literal","y"
635311221057342396,"Parsed as literal","1"
635311221057342396,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311221057352397,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311221057352397,"Parsed as literal","sudan"
635311221057352397,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311221057352397,"Parsed as literal","n"
635311221057362397,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311221057362397,"Parsed as literal","x"
635311221057362397,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311221057372398,"Parsed as literal","y"
635311221057372398,"Parsed as literal","1"
635311221057372398,"Parsed as literal","y"
635311221057372398,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311221057382399,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311221057382399,"Parsed as literal","sudan"
635311221057382399,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311221057392399,"Parsed as literal","n"
635311221057392399,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311221057392399,"Parsed as literal","x"
635311221057392399,"Parsed as literal","y"
635311221057402400,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311221057402400,"Parsed as literal","sudan"
635311221057412400,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311221057412400,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311221057412400,"Parsed as literal","n"
635311221057412400,"Parsed as literal","1"
635311221057422401,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311221057422401,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311221057422401,"Parsed as literal","sudan"
635311221057432401,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311221057432401,"Parsed as literal","n"
635311221057432401,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311221057442402,"Parsed as literal","x"
635311221057442402,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311221057442402,"Parsed as literal","y"
635311221057442402,"Parsed as literal","1"
635311221057452403,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311221057452403,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311221057452403,"Parsed as literal","sudan"
635311221057462403,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311221057462403,"Parsed as literal","n"
635311221057462403,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311221057462403,"Parsed as literal","x"
635311221057472404,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311221057472404,"Parsed as literal","y"
635311221057472404,"Parsed as literal","1"
635311221057482404,"Parsed as literal","y"
635311221057482404,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311221057482404,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311221057492405,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311221057492405,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311221057492405,"StepEvaluate","->","Changed","Declared @max"
635311221057492405,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311221057502405,"StepEvaluate","->","Changed","Declared @max"
635311221057502405,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311221057502405,"StepEvaluate","->","Changed","Declared @random"
635311221057502405,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311221057512406,"StepEvaluate","->","Changed","Declared @random"
635311221057512406,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311221057512406,"StepEvaluate","->","Changed","Declared @gcd"
635311221057522407,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311221057522407,"StepEvaluate","->","Changed","Declared @gcd"
635311221057522407,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311221057522407,"StepEvaluate","->","Changed","Declared @gcd"
635311221057532407,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311221057532407,"StepEvaluate","->","Changed","Declared @fib"
635311221057532407,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311221057532407,"StepEvaluate","->","Changed","Declared @fib"
635311221057542408,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311221057542408,"StepEvaluate","->","Changed","Declared @fib"
635311221057542408,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311221057552408,"StepEvaluate","->","Changed","Declared @fib2"
635311221057552408,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311221057552408,"StepEvaluate","->","Changed","Declared @fib2"
635311221057552408,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311221057562409,"StepEvaluate","->","Changed","Declared @fac"
635311221057562409,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311221057562409,"StepEvaluate","->","Changed","Declared @fac"
635311221057562409,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311221057572409,"StepEvaluate","->","Changed","Declared @pow"
635311221057572409,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311221057572409,"StepEvaluate","->","Changed","Declared @pow"
635311221057582410,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311221057582410,"StepEvaluate","->","Changed","Declared @pow"
635311221057582410,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311221057582410,"StepEvaluate","->","Changed","Declared @upArrow"
635311221057592411,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311221057592411,"StepEvaluate","->","Changed","Declared @upArrow"
635311221057592411,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311221057592411,"StepEvaluate","->","Changed","Declared @upArrow"
635311221057602411,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311221057602411,"StepEvaluate","->","Changed","Declared @graham"
635311221057602411,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311221057612412,"StepEvaluate","->","Changed","Declared @graham"
635311221057612412,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311221057612412,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311221057612412,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311221057622412,"StepEvaluate","->","Changed","Declared @ack"
635311221057622412,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311221057622412,"StepEvaluate","->","Changed","Declared @ack"
635311221057622412,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311221057632413,"StepEvaluate","->","Changed","Declared @ack"
635311221057632413,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311221057632413,"StepEvaluate","->","Changed","Declared @acker"
635311221057642413,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311221057642413,"StepEvaluate","->","Changed","Declared @acker"
635311221057642413,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311221057642413,"StepEvaluate","->","Changed","Declared @acker"
635311221057652414,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311221057652414,"StepEvaluate","->","Changed","Declared @acker"
635311221057652414,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311221057652414,"StepEvaluate","->","Changed","Declared @acker"
635311221057662415,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311221057662415,"StepEvaluate","->","Changed","Declared @hyper"
635311221057662415,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311221057662415,"StepEvaluate","->","Changed","Declared @hyper"
635311221057672415,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311221057672415,"StepEvaluate","->","Changed","Declared @hyper"
635311221057672415,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311221057672415,"StepEvaluate","->","Changed","Declared @hyper"
635311221057682416,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311221057682416,"StepEvaluate","->","Changed","Declared @hyper"
635311221057682416,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311221057692416,"StepEvaluate","->","Changed","Declared @sudan"
635311221057692416,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311221057692416,"StepEvaluate","->","Changed","Declared @sudan"
635311221057692416,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311221057702417,"StepEvaluate","->","Changed","Declared @sudan"
635311221057702417,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311221057702417,"StepEvaluate","[]","Changed","File imported"
635311221057702417,"StepEvaluate","File imported","Unchanged","File imported"
635311221057712417,"StepEvaluate","@","Changed","@"
635311221057712417,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221057712417,"StepEvaluate","PAT@","Unchanged","PAT@"
635311221057722418,"StepEvaluate",",","Unchanged",","
635311221057722418,"StepEvaluate","@Arg","Changed","@Arg-M"
635311221057722418,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311221057722418,"StepEvaluate","PAT@-M","Changed","[]"
635311221057732419,"StepEvaluate","SEL@import","Changed","[]"
635311221057732419,"StepEvaluate","@","Changed","[]"
635311221057732419,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311221057742419,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311221057742419,"Parsed as literal","quickSort"
635311221057742419,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311221057752420,"Parsed as literal",""
635311221057752420,"Parsed as literal",""
635311221057752420,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311221057762420,"Parsed as literal",""
635311221057762420,"Parsed as literal",""
635311221057762420,"Invalid operator","@quickSort([]) -> []","0"
635311221057772421,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311221057772421,"Parsed as literal","quickSort"
635311221057772421,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311221057772421,"Parsed as literal",""
635311221057782421,"Parsed as literal",""
635311221057782421,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311221057782421,"Parsed as literal",""
635311221057792422,"Parsed as literal",""
635311221057802423,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311221057802423,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311221057802423,"Parsed as literal","quickSort"
635311221057812423,"Parsed as literal","list"
635311221057812423,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311221057822424,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311221057822424,"Parsed as literal","quickSort"
635311221057822424,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311221057822424,"Parsed as literal","filter"
635311221057832424,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311221057832424,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311221057832424,"Parsed as literal",""
635311221057842425,"Parsed as literal","i"
635311221057842425,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311221057842425,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311221057852425,"Parsed as literal"," i "
635311221057852425,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311221057852425,"Parsed as literal"," "
635311221057852425,"Parsed as literal","list"
635311221057862426,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311221057862426,"Parsed as literal",""
635311221057862426,"Parsed as literal","list"
635311221057872427,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311221057872427,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311221057872427,"Parsed as literal",""
635311221057882427,"Parsed as literal","i"
635311221057882427,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311221057882427,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311221057882427,"Parsed as literal"," i "
635311221057892428,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311221057892428,"Parsed as literal"," "
635311221057892428,"Parsed as literal","list"
635311221057902428,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311221057902428,"Parsed as literal",""
635311221057902428,"Parsed as literal","list"
635311221057902428,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311221057912429,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311221057912429,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311221057912429,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311221057922429,"Parsed as literal",""
635311221057922429,"Parsed as literal","i"
635311221057922429,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311221057932430,"Parsed as literal"," i "
635311221057932430,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311221057932430,"Parsed as literal"," "
635311221057942431,"Parsed as literal","list"
635311221057942431,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311221057942431,"Parsed as literal",""
635311221057942431,"Parsed as literal","list"
635311221057952431,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311221057952431,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311221057952431,"Parsed as literal"," "
635311221057962432,"Parsed as literal","list "
635311221057962432,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311221057962432,"Parsed as literal","quickSort"
635311221057972432,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311221057972432,"Parsed as literal","filter"
635311221057972432,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311221057982433,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311221057982433,"Parsed as literal",""
635311221057982433,"Parsed as literal","i"
635311221057992433,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311221057992433,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311221057992433,"Parsed as literal"," i "
635311221057992433,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311221058002434,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311221058002434,"Parsed as literal"," "
635311221058002434,"Parsed as literal","list"
635311221058012435,"Parsed as literal","1"
635311221058012435,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311221058012435,"Parsed as literal",""
635311221058012435,"Parsed as literal","list"
635311221058022435,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311221058022435,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311221058022435,"Parsed as literal",""
635311221058032436,"Parsed as literal","i"
635311221058032436,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311221058032436,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311221058042436,"Parsed as literal"," i "
635311221058042436,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311221058042436,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311221058052437,"Parsed as literal"," "
635311221058052437,"Parsed as literal","list"
635311221058052437,"Parsed as literal","1"
635311221058052437,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311221058062437,"Parsed as literal",""
635311221058062437,"Parsed as literal","list"
635311221058062437,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311221058072438,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311221058072438,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311221058072438,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311221058072438,"Parsed as literal",""
635311221058082439,"Parsed as literal","i"
635311221058082439,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311221058082439,"Parsed as literal"," i "
635311221058092439,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311221058092439,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311221058092439,"Parsed as literal"," "
635311221058092439,"Parsed as literal","list"
635311221058102440,"Parsed as literal","1"
635311221058102440,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311221058102440,"Parsed as literal",""
635311221058112440,"Parsed as literal","list"
635311221058112440,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311221058112440,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311221058122441,"Parsed as literal","quickSort"
635311221058122441,"Parsed as literal","list"
635311221058122441,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311221058132441,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311221058132441,"Parsed as literal","quickSort"
635311221058132441,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311221058142442,"Parsed as literal","filter"
635311221058142442,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311221058142442,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311221058142442,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311221058152443,"Parsed as literal",""
635311221058152443,"Parsed as literal","i"
635311221058152443,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311221058162443,"Parsed as literal"," i "
635311221058162443,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311221058162443,"Parsed as literal"," "
635311221058162443,"Parsed as literal","list"
635311221058172444,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311221058172444,"Parsed as literal",""
635311221058172444,"Parsed as literal","list"
635311221058182444,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311221058182444,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311221058192445,"Parsed as literal"," "
635311221058192445,"Parsed as literal","list "
635311221058192445,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311221058192445,"Parsed as literal","quickSort"
635311221058202446,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311221058202446,"Parsed as literal","filter"
635311221058202446,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311221058212446,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311221058212446,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311221058212446,"Parsed as literal",""
635311221058222447,"Parsed as literal","i"
635311221058222447,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311221058222447,"Parsed as literal"," i "
635311221058222447,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311221058232447,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311221058232447,"Parsed as literal"," "
635311221058232447,"Parsed as literal","list"
635311221058242448,"Parsed as literal","1"
635311221058242448,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311221058242448,"Parsed as literal",""
635311221058242448,"Parsed as literal","list"
635311221058252448,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311221058252448,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311221058252448,"Parsed as literal","mergeSort"
635311221058262449,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311221058262449,"Parsed as literal",""
635311221058262449,"Parsed as literal",""
635311221058272450,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311221058272450,"Parsed as literal",""
635311221058272450,"Parsed as literal",""
635311221058272450,"Invalid operator","@mergeSort([]) -> []","0"
635311221058282450,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311221058282450,"Parsed as literal","mergeSort"
635311221058282450,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311221058292451,"Parsed as literal",""
635311221058292451,"Parsed as literal",""
635311221058292451,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311221058292451,"Parsed as literal",""
635311221058302451,"Parsed as literal",""
635311221058302451,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311221058302451,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311221058312452,"Parsed as literal","mergeSort"
635311221058312452,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311221058312452,"Parsed as literal","list"
635311221058312452,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311221058322452,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311221058322452,"Parsed as literal",""
635311221058322452,"Parsed as literal","list"
635311221058322452,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311221058332453,"Parsed as literal",""
635311221058332453,"Parsed as literal",""
635311221058332453,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311221058342454,"Parsed as literal"," "
635311221058342454,"Parsed as literal","list"
635311221058342454,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311221058342454,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311221058352454,"Parsed as literal","mergeSort"
635311221058352454,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311221058352454,"Parsed as literal","list"
635311221058362455,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311221058362455,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311221058362455,"Parsed as literal",""
635311221058362455,"Parsed as literal","list"
635311221058372455,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311221058372455,"Parsed as literal",""
635311221058372455,"Parsed as literal",""
635311221058382456,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311221058382456,"Parsed as literal"," "
635311221058382456,"Parsed as literal","list"
635311221058392456,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311221058392456,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311221058392456,"Parsed as literal","mergeSort"
635311221058402457,"Parsed as literal","list"
635311221058402457,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311221058402457,"Parsed as literal","merge"
635311221058412458,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311221058412458,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311221058412458,"Parsed as literal","mergeSort"
635311221058422458,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311221058422458,"Parsed as literal","take"
635311221058422458,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311221058422458,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311221058432459,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311221058432459,"Parsed as literal","count"
635311221058432459,"Parsed as literal","list"
635311221058442459,"Parsed as literal","2"
635311221058442459,"Parsed as literal","list"
635311221058442459,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311221058452460,"Parsed as literal","mergeSort"
635311221058452460,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311221058452460,"Parsed as literal","skip"
635311221058452460,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311221058462460,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311221058462460,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311221058462460,"Parsed as literal","count"
635311221058472461,"Parsed as literal","list"
635311221058472461,"Parsed as literal","2"
635311221058472461,"Parsed as literal","list"
635311221058472461,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311221058482462,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311221058482462,"Parsed as literal","mergeSort"
635311221058482462,"Parsed as literal","list"
635311221058492462,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311221058492462,"Parsed as literal","merge"
635311221058492462,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311221058502463,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311221058502463,"Parsed as literal","mergeSort"
635311221058512463,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311221058512463,"Parsed as literal","take"
635311221058512463,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311221058522464,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311221058522464,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311221058522464,"Parsed as literal","count"
635311221058522464,"Parsed as literal","list"
635311221058532464,"Parsed as literal","2"
635311221058532464,"Parsed as literal","list"
635311221058532464,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311221058542465,"Parsed as literal","mergeSort"
635311221058542465,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311221058542465,"Parsed as literal","skip"
635311221058542465,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311221058552466,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311221058552466,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311221058552466,"Parsed as literal","count"
635311221058562466,"Parsed as literal","list"
635311221058562466,"Parsed as literal","2"
635311221058562466,"Parsed as literal","list"
635311221058562466,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311221058572467,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311221058572467,"Parsed as literal","merge"
635311221058572467,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311221058582467,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311221058582467,"Parsed as literal",""
635311221058582467,"Parsed as literal",""
635311221058582467,"Parsed as literal","list"
635311221058592468,"Parsed as literal"," list"
635311221058592468,"Invalid operator","@merge([],list) -> list","0"
635311221058592468,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311221058602468,"Parsed as literal","merge"
635311221058602468,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311221058602468,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311221058602468,"Parsed as literal",""
635311221058612469,"Parsed as literal",""
635311221058612469,"Parsed as literal","list"
635311221058612469,"Parsed as literal"," list"
635311221058622470,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311221058622470,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311221058622470,"Parsed as literal","merge"
635311221058622470,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311221058632470,"Parsed as literal","list"
635311221058632470,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311221058632470,"Parsed as literal",""
635311221058632470,"Parsed as literal",""
635311221058642471,"Parsed as literal"," list"
635311221058642471,"Invalid operator","@merge(list,[]) -> list","0"
635311221058642471,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311221058652471,"Parsed as literal","merge"
635311221058652471,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311221058652471,"Parsed as literal","list"
635311221058652471,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311221058662472,"Parsed as literal",""
635311221058662472,"Parsed as literal",""
635311221058662472,"Parsed as literal"," list"
635311221058672472,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311221058672472,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311221058672472,"Parsed as literal","merge"
635311221058672472,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311221058682473,"Parsed as literal","left"
635311221058682473,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311221058682473,"Parsed as literal","right "
635311221058692474,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311221058692474,"Parsed as literal"," "
635311221058692474,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311221058692474,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311221058702474,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311221058702474,"Parsed as literal",""
635311221058702474,"Parsed as literal","left "
635311221058702474,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311221058712475,"Parsed as literal"," "
635311221058712475,"Parsed as literal","right"
635311221058712475,"Parsed as literal",""
635311221058722475,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311221058722475,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311221058722475,"Parsed as literal"," "
635311221058732476,"Parsed as literal","left "
635311221058732476,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311221058732476,"Parsed as literal","merge"
635311221058732476,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311221058742476,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311221058742476,"Parsed as literal",""
635311221058742476,"Parsed as literal","left"
635311221058742476,"Parsed as literal","right"
635311221058752477,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311221058752477,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311221058752477,"Parsed as literal","merge"
635311221058762478,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311221058762478,"Parsed as literal","left"
635311221058762478,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311221058762478,"Parsed as literal","right "
635311221058772478,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311221058772478,"Parsed as literal"," "
635311221058772478,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311221058772478,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311221058782479,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311221058782479,"Parsed as literal",""
635311221058782479,"Parsed as literal","left "
635311221058792479,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311221058792479,"Parsed as literal"," "
635311221058792479,"Parsed as literal","right"
635311221058792479,"Parsed as literal",""
635311221058802480,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311221058802480,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311221058802480,"Parsed as literal"," "
635311221058812480,"Parsed as literal","left "
635311221058812480,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311221058812480,"Parsed as literal","merge"
635311221058822481,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311221058822481,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311221058822481,"Parsed as literal",""
635311221058822481,"Parsed as literal","left"
635311221058832482,"Parsed as literal","right"
635311221058832482,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311221058832482,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311221058842482,"Parsed as literal","merge"
635311221058842482,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311221058842482,"Parsed as literal","left"
635311221058842482,"Parsed as literal","right"
635311221058852483,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311221058852483,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311221058852483,"Parsed as literal"," "
635311221058852483,"Parsed as literal","right "
635311221058862483,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311221058862483,"Parsed as literal","merge"
635311221058862483,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311221058872484,"Parsed as literal","left"
635311221058872484,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311221058872484,"Parsed as literal",""
635311221058872484,"Parsed as literal","right"
635311221058882484,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311221058882484,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311221058882484,"Parsed as literal","merge"
635311221058892485,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311221058892485,"Parsed as literal","left"
635311221058892485,"Parsed as literal","right"
635311221058892485,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311221058902486,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311221058902486,"Parsed as literal"," "
635311221058902486,"Parsed as literal","right "
635311221058912486,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311221058912486,"Parsed as literal","merge"
635311221058912486,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311221058912486,"Parsed as literal","left"
635311221058922487,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311221058922487,"Parsed as literal",""
635311221058922487,"Parsed as literal","right"
635311221058932487,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311221058932487,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311221058932487,"Parsed as literal","bubbleSort"
635311221058932487,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311221058942488,"Parsed as literal","list"
635311221058942488,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311221058942488,"Parsed as literal","isSorted"
635311221058952488,"Parsed as literal","list"
635311221058952488,"Parsed as literal"," list"
635311221058952488,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311221058962489,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311221058962489,"Parsed as literal","bubbleSort"
635311221058962489,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311221058962489,"Parsed as literal","list"
635311221058972490,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311221058972490,"Parsed as literal","isSorted"
635311221058972490,"Parsed as literal","list"
635311221058982490,"Parsed as literal"," list"
635311221058982490,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311221058982490,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311221058992491,"Parsed as literal","bubbleSort"
635311221058992491,"Parsed as literal","list"
635311221058992491,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311221058992491,"Parsed as literal","bubbleSort"
635311221059002491,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311221059002491,"Parsed as literal","bubbleSortPass"
635311221059002491,"Parsed as literal","list"
635311221059012492,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311221059012492,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311221059012492,"Parsed as literal","bubbleSort"
635311221059012492,"Parsed as literal","list"
635311221059022492,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311221059022492,"Parsed as literal","bubbleSort"
635311221059022492,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311221059032493,"Parsed as literal","bubbleSortPass"
635311221059032493,"Parsed as literal","list"
635311221059032493,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311221059042494,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311221059042494,"Parsed as literal","bubbleSortPass"
635311221059042494,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311221059052494,"Parsed as literal",""
635311221059052494,"Parsed as literal",""
635311221059052494,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311221059052494,"Parsed as literal",""
635311221059062495,"Parsed as literal",""
635311221059062495,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311221059062495,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311221059072495,"Parsed as literal","bubbleSortPass"
635311221059072495,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311221059072495,"Parsed as literal",""
635311221059072495,"Parsed as literal",""
635311221059082496,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311221059082496,"Parsed as literal",""
635311221059082496,"Parsed as literal",""
635311221059092496,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311221059092496,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311221059092496,"Parsed as literal","bubbleSortPass"
635311221059102497,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311221059102497,"Parsed as literal","list"
635311221059102497,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311221059102497,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311221059112498,"Parsed as literal",""
635311221059112498,"Parsed as literal","list "
635311221059112498,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311221059122498,"Parsed as literal",""
635311221059122498,"Parsed as literal",""
635311221059122498,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311221059122498,"Parsed as literal"," "
635311221059132499,"Parsed as literal","list"
635311221059132499,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311221059132499,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311221059142499,"Parsed as literal","bubbleSortPass"
635311221059142499,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311221059142499,"Parsed as literal","list"
635311221059152500,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311221059152500,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311221059152500,"Parsed as literal",""
635311221059152500,"Parsed as literal","list "
635311221059162500,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311221059162500,"Parsed as literal",""
635311221059162500,"Parsed as literal",""
635311221059172501,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311221059172501,"Parsed as literal"," "
635311221059172501,"Parsed as literal","list"
635311221059172501,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311221059182502,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311221059182502,"Parsed as literal","bubbleSortPass"
635311221059182502,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311221059192502,"Parsed as literal","list"
635311221059192502,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311221059192502,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311221059192502,"Parsed as literal",""
635311221059202503,"Parsed as literal","list "
635311221059202503,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311221059202503,"Parsed as literal"," "
635311221059212503,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311221059212503,"Parsed as literal",""
635311221059212503,"Parsed as literal","list"
635311221059222504,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311221059222504,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311221059222504,"Parsed as literal"," "
635311221059222504,"Parsed as literal","list "
635311221059232504,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311221059232504,"Parsed as literal","bubbleSortPass"
635311221059232504,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311221059242505,"Parsed as literal",""
635311221059242505,"Parsed as literal","list"
635311221059242505,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311221059242505,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311221059252506,"Parsed as literal","bubbleSortPass"
635311221059252506,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311221059252506,"Parsed as literal","list"
635311221059262506,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311221059262506,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311221059262506,"Parsed as literal",""
635311221059272507,"Parsed as literal","list "
635311221059272507,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311221059272507,"Parsed as literal"," "
635311221059272507,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311221059282507,"Parsed as literal",""
635311221059282507,"Parsed as literal","list"
635311221059282507,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311221059292508,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311221059292508,"Parsed as literal"," "
635311221059292508,"Parsed as literal","list "
635311221059292508,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311221059302508,"Parsed as literal","bubbleSortPass"
635311221059302508,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311221059302508,"Parsed as literal",""
635311221059302508,"Parsed as literal","list"
635311221059312509,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311221059312509,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311221059312509,"Parsed as literal","bubbleSortPass"
635311221059322510,"Parsed as literal","list"
635311221059322510,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311221059322510,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311221059332510,"Parsed as literal"," "
635311221059332510,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311221059332510,"Parsed as literal",""
635311221059332510,"Parsed as literal","list "
635311221059342511,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311221059342511,"Parsed as literal","bubbleSortPass"
635311221059342511,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311221059342511,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311221059352511,"Parsed as literal",""
635311221059352511,"Parsed as literal","list "
635311221059352511,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311221059362512,"Parsed as literal"," "
635311221059362512,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311221059362512,"Parsed as literal",""
635311221059362512,"Parsed as literal","list"
635311221059372512,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311221059372512,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311221059372512,"Parsed as literal","bubbleSortPass"
635311221059372512,"Parsed as literal","list"
635311221059382513,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311221059382513,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311221059382513,"Parsed as literal"," "
635311221059392514,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311221059392514,"Parsed as literal",""
635311221059392514,"Parsed as literal","list "
635311221059402514,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311221059402514,"Parsed as literal","bubbleSortPass"
635311221059412515,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311221059412515,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311221059412515,"Parsed as literal",""
635311221059412515,"Parsed as literal","list "
635311221059422515,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311221059422515,"Parsed as literal"," "
635311221059422515,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311221059422515,"Parsed as literal",""
635311221059432516,"Parsed as literal","list"
635311221059432516,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311221059432516,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311221059442516,"Parsed as literal","isSorted"
635311221059442516,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311221059442516,"Parsed as literal",""
635311221059442516,"Parsed as literal",""
635311221059452517,"Parsed as literal"," true"
635311221059452517,"Invalid operator","@isSorted([]) -> true","0"
635311221059452517,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311221059462518,"Parsed as literal","isSorted"
635311221059462518,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311221059462518,"Parsed as literal",""
635311221059462518,"Parsed as literal",""
635311221059472518,"Parsed as literal"," true"
635311221059472518,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311221059472518,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311221059482519,"Parsed as literal","isSorted"
635311221059482519,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311221059482519,"Parsed as literal","list"
635311221059482519,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311221059492519,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311221059492519,"Parsed as literal",""
635311221059492519,"Parsed as literal","list "
635311221059502520,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311221059502520,"Parsed as literal",""
635311221059502520,"Parsed as literal",""
635311221059502520,"Parsed as literal"," true"
635311221059512520,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311221059512520,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311221059512520,"Parsed as literal","isSorted"
635311221059522521,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311221059522521,"Parsed as literal","list"
635311221059522521,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311221059522521,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311221059532522,"Parsed as literal",""
635311221059532522,"Parsed as literal","list "
635311221059532522,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311221059542522,"Parsed as literal",""
635311221059542522,"Parsed as literal",""
635311221059542522,"Parsed as literal"," true"
635311221059552523,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311221059552523,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311221059552523,"Parsed as literal","isSorted"
635311221059552523,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311221059562523,"Parsed as literal","list"
635311221059562523,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311221059562523,"Parsed as literal",""
635311221059572524,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311221059572524,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311221059572524,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311221059582524,"Parsed as literal",""
635311221059582524,"Parsed as literal","list "
635311221059582524,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311221059582524,"Parsed as literal"," "
635311221059592525,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311221059592525,"Parsed as literal",""
635311221059592525,"Parsed as literal","list"
635311221059602526,"Parsed as literal",""
635311221059602526,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311221059602526,"Parsed as literal","isSorted"
635311221059602526,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311221059612526,"Parsed as literal",""
635311221059612526,"Parsed as literal","list"
635311221059612526,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311221059622527,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311221059622527,"Parsed as literal","isSorted"
635311221059622527,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311221059622527,"Parsed as literal","list"
635311221059632527,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311221059632527,"Parsed as literal",""
635311221059632527,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311221059642528,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311221059642528,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311221059642528,"Parsed as literal",""
635311221059642528,"Parsed as literal","list "
635311221059652528,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311221059652528,"Parsed as literal"," "
635311221059652528,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311221059662529,"Parsed as literal",""
635311221059662529,"Parsed as literal","list"
635311221059662529,"Parsed as literal",""
635311221059672530,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311221059672530,"Parsed as literal","isSorted"
635311221059672530,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311221059672530,"Parsed as literal",""
635311221059682530,"Parsed as literal","list"
635311221059682530,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311221059682530,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311221059692531,"Parsed as literal","isSorted"
635311221059692531,"Parsed as literal","list"
635311221059692531,"Parsed as literal"," false"
635311221059692531,"Invalid operator","@isSorted(list) -> false","0"
635311221059702531,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311221059702531,"Parsed as literal","isSorted"
635311221059702531,"Parsed as literal","list"
635311221059712532,"Parsed as literal"," false"
635311221059712532,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311221059712532,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311221059712532,"Parsed as literal","insertionSort"
635311221059722532,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311221059722532,"Parsed as literal",""
635311221059722532,"Parsed as literal",""
635311221059722532,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311221059732533,"Parsed as literal",""
635311221059732533,"Parsed as literal",""
635311221059732533,"Invalid operator","@insertionSort([]) -> []","0"
635311221059742534,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311221059742534,"Parsed as literal","insertionSort"
635311221059742534,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311221059742534,"Parsed as literal",""
635311221059752534,"Parsed as literal",""
635311221059752534,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311221059752534,"Parsed as literal",""
635311221059752534,"Parsed as literal",""
635311221059762535,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311221059762535,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311221059762535,"Parsed as literal","insertionSort"
635311221059772535,"Parsed as literal","list"
635311221059772535,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311221059772535,"Parsed as literal","insert"
635311221059782536,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311221059782536,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311221059782536,"Parsed as literal",""
635311221059782536,"Parsed as literal","list"
635311221059792536,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311221059792536,"Parsed as literal","insertionSort"
635311221059792536,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311221059802537,"Parsed as literal",""
635311221059802537,"Parsed as literal","list"
635311221059802537,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311221059802537,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311221059812538,"Parsed as literal","insertionSort"
635311221059812538,"Parsed as literal","list"
635311221059812538,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311221059812538,"Parsed as literal","insert"
635311221059822538,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311221059822538,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311221059822538,"Parsed as literal",""
635311221059832539,"Parsed as literal","list"
635311221059832539,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311221059832539,"Parsed as literal","insertionSort"
635311221059832539,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311221059842539,"Parsed as literal",""
635311221059842539,"Parsed as literal","list"
635311221059842539,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311221059852540,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311221059852540,"Parsed as literal","insert"
635311221059852540,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311221059852540,"Parsed as literal","item"
635311221059862540,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311221059862540,"Parsed as literal",""
635311221059862540,"Parsed as literal",""
635311221059862540,"Parsed as literal"," item"
635311221059872541,"Invalid operator","@insert(item,[]) -> item","0"
635311221059872541,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311221059872541,"Parsed as literal","insert"
635311221059882542,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311221059882542,"Parsed as literal","item"
635311221059882542,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311221059882542,"Parsed as literal",""
635311221059892542,"Parsed as literal",""
635311221059892542,"Parsed as literal"," item"
635311221059892542,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311221059902543,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311221059902543,"Parsed as literal","insert"
635311221059902543,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311221059902543,"Parsed as literal","item"
635311221059912543,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311221059912543,"Parsed as literal","list "
635311221059912543,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311221059922544,"Parsed as literal"," item "
635311221059922544,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311221059922544,"Parsed as literal"," "
635311221059922544,"Parsed as literal","list"
635311221059932544,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311221059932544,"Parsed as literal"," item "
635311221059932544,"Parsed as literal"," list"
635311221059932544,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311221059942545,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311221059942545,"Parsed as literal","insert"
635311221059942545,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311221059952546,"Parsed as literal","item"
635311221059952546,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311221059952546,"Parsed as literal","list "
635311221059952546,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311221059962546,"Parsed as literal"," item "
635311221059962546,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311221059962546,"Parsed as literal"," "
635311221059962546,"Parsed as literal","list"
635311221059972547,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311221059972547,"Parsed as literal"," item "
635311221059972547,"Parsed as literal"," list"
635311221059982547,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311221059982547,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311221059982547,"Parsed as literal","insert"
635311221059982547,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311221059992548,"Parsed as literal","item"
635311221059992548,"Parsed as literal","list"
635311221059992548,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311221060002548,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311221060002548,"Parsed as literal"," "
635311221060002548,"Parsed as literal","list "
635311221060002548,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311221060012549,"Parsed as literal","insert"
635311221060012549,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311221060012549,"Parsed as literal","item"
635311221060012549,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311221060022550,"Parsed as literal",""
635311221060022550,"Parsed as literal","list"
635311221060022550,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311221060032550,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311221060032550,"Parsed as literal","insert"
635311221060032550,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311221060032550,"Parsed as literal","item"
635311221060042551,"Parsed as literal","list"
635311221060042551,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311221060042551,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311221060052551,"Parsed as literal"," "
635311221060052551,"Parsed as literal","list "
635311221060052551,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311221060062552,"Parsed as literal","insert"
635311221060062552,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311221060062552,"Parsed as literal","item"
635311221060062552,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311221060072552,"Parsed as literal",""
635311221060072552,"Parsed as literal","list"
635311221060072552,"StepEvaluate","->","Changed","Declared @quickSort"
635311221060082553,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311221060082553,"StepEvaluate","->","Changed","Declared @quickSort"
635311221060082553,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311221060082553,"StepEvaluate","->","Changed","Declared @mergeSort"
635311221060092554,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311221060092554,"StepEvaluate","->","Changed","Declared @mergeSort"
635311221060092554,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311221060102554,"StepEvaluate","->","Changed","Declared @mergeSort"
635311221060102554,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311221060102554,"StepEvaluate","->","Changed","Declared @merge"
635311221060102554,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311221060112555,"StepEvaluate","->","Changed","Declared @merge"
635311221060112555,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311221060112555,"StepEvaluate","->","Changed","Declared @merge"
635311221060112555,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311221060122555,"StepEvaluate","->","Changed","Declared @merge"
635311221060122555,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311221060122555,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311221060132556,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311221060132556,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311221060132556,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311221060132556,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311221060142556,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311221060142556,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311221060142556,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311221060152557,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311221060152557,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311221060152557,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311221060152557,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311221060162558,"StepEvaluate","->","Changed","Declared @isSorted"
635311221060162558,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311221060162558,"StepEvaluate","->","Changed","Declared @isSorted"
635311221060162558,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311221060172558,"StepEvaluate","->","Changed","Declared @isSorted"
635311221060172558,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311221060172558,"StepEvaluate","->","Changed","Declared @isSorted"
635311221060182559,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311221060182559,"StepEvaluate","->","Changed","Declared @insertionSort"
635311221060182559,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311221060182559,"StepEvaluate","->","Changed","Declared @insertionSort"
635311221060192559,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311221060192559,"StepEvaluate","->","Changed","Declared @insert"
635311221060192559,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311221060202560,"StepEvaluate","->","Changed","Declared @insert"
635311221060202560,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311221060202560,"StepEvaluate","->","Changed","Declared @insert"
635311221060202560,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311221060212560,"StepEvaluate","[]","Changed","File imported"
635311221060212560,"StepEvaluate","File imported","Unchanged","File imported"
635311221060212560,"StepEvaluate","[]","Changed","File imported"
635311221060212560,"StepEvaluate","File imported","Unchanged","File imported"
635311221060222561,"ParseInternal","7 % 3","0","ModOperator","0","3","7 "," 3"
635311221060222561,"Parsed as literal","7 "
635311221060222561,"Parsed as literal"," 3"
635311221068453032,"StepEvaluate","%","Changed","1"
635311221068463032,"StepEvaluate","1","Unchanged","1"
635311223582536829,"ParseInternal","@import(file) -> 0","0","AssignmentOperator","0","16","@import(file) "," 0"
635311223582556830,"ParseInternal","@import(file) ","0","FunctionCallOperator","1","7","import","file"
635311223582566831,"Parsed as literal","import"
635311223582566831,"Parsed as literal","file"
635311223582576831,"Parsed as literal"," 0"
635311223582586832,"Invalid operator","@import(file) -> 0","0"
635311223582596833,"ParseInternal","@import(file) ","0","FunctionDeclarationOperator","1","7","import","file"
635311223582596833,"Parsed as literal","import"
635311223582606833,"Parsed as literal","file"
635311223582616834,"Parsed as literal"," 0"
635311223582616834,"StepEvaluate","->","Changed","Declared @import"
635311223582626834,"StepEvaluate","Declared @import","Unchanged","Declared @import"
635311223582626834,"ParseInternal","@operator(op,@fn) -> 0","0","AssignmentOperator","0","20","@operator(op,@fn) "," 0"
635311223582636835,"ParseInternal","@operator(op,@fn) ","0","FunctionCallOperator","1","9","operator","op,@fn"
635311223582636835,"Parsed as literal","operator"
635311223582636835,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311223582646835,"Parsed as literal","op"
635311223582646835,"ParseInternal","@fn","12","FunctionCallOperator","13","15","fn",""
635311223582656836,"Parsed as literal","fn"
635311223582656836,"Parsed as literal",""
635311223582666837,"Invalid operator","@fn","12"
635311223582666837,"ParseInternal","@fn","12","FunctionDeclarationOperator","13","15","fn",""
635311223582666837,"Parsed as literal","fn"
635311223582676837,"Parsed as literal",""
635311223582676837,"Invalid operator","@fn","12"
635311223582686838,"Parsed as literal","@fn"
635311223582686838,"Parsed as literal"," 0"
635311223582696838,"Invalid operator","@operator(op,@fn) -> 0","0"
635311223582696838,"ParseInternal","@operator(op,@fn) ","0","FunctionDeclarationOperator","1","9","operator","op,@fn"
635311223582706839,"Parsed as literal","operator"
635311223582706839,"ParseInternal","op,@fn","9","CommaOperator","9","12","op","@fn"
635311223582716839,"Parsed as literal","op"
635311223582716839,"Parsed as literal","@fn"
635311223582716839,"Parsed as literal"," 0"
635311223582726840,"StepEvaluate","->","Changed","Declared @operator"
635311223582726840,"StepEvaluate","Declared @operator","Unchanged","Declared @operator"
635311223582736841,"ParseInternal","'C:\Users\Miko\Documents\GitHub\CToast\CToast Winforms\bin\Debug\CToastWinforms.vshost.exe' @import(main.toast)","0","FunctionCallOperator","93","99","import","main.toast"
635311223582736841,"Parsed as literal","import"
635311223582746841,"Parsed as literal","main.toast"
635311223582746841,"StepEvaluate","@","Changed","@"
635311223582756842,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223582756842,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223582766842,"StepEvaluate",",","Unchanged",","
635311223582766842,"StepEvaluate","@Arg","Changed","@Arg-M"
635311223582766842,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223582776843,"StepEvaluate","PAT@-M","Changed","[]"
635311223582776843,"StepEvaluate","SEL@import","Changed","[]"
635311223582776843,"StepEvaluate","@","Changed","[]"
635311223582786843,"ParseInternal","@import('core.toast')","0","FunctionCallOperator","1","7","import","'core.toast'"
635311223582786843,"Parsed as literal","import"
635311223582796844,"Parsed as literal","'core.toast'"
635311223582796844,"ParseInternal","@import('list.toast')","0","FunctionCallOperator","1","7","import","'list.toast'"
635311223582806845,"Parsed as literal","import"
635311223582806845,"Parsed as literal","'list.toast'"
635311223582816845,"ParseInternal","@import('math.toast')","0","FunctionCallOperator","1","7","import","'math.toast'"
635311223582816845,"Parsed as literal","import"
635311223582826846,"Parsed as literal","'math.toast'"
635311223582826846,"ParseInternal","@import('sorting.toast')","0","FunctionCallOperator","1","7","import","'sorting.toast'"
635311223582836846,"Parsed as literal","import"
635311223582836846,"Parsed as literal","'sorting.toast'"
635311223582836846,"StepEvaluate","@","Changed","@"
635311223582846847,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223582846847,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223582856847,"StepEvaluate",",","Unchanged",","
635311223582856847,"StepEvaluate","@Arg","Changed","@Arg-M"
635311223582866848,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223582866848,"StepEvaluate","PAT@-M","Changed","[]"
635311223582866848,"StepEvaluate","SEL@import","Changed","[]"
635311223582876849,"StepEvaluate","@","Changed","[]"
635311223582876849,"ParseInternal","@map(@func, []) -> []","0","AssignmentOperator","0","18","@map(@func, []) "," []"
635311223582886849,"ParseInternal","@map(@func, []) ","0","FunctionCallOperator","1","4","map","@func, []"
635311223582886849,"Parsed as literal","map"
635311223582896850,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311223582896850,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311223582906850,"Parsed as literal","func"
635311223582906850,"Parsed as literal",""
635311223582906850,"Invalid operator","@func","4"
635311223582916851,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311223582916851,"Parsed as literal","func"
635311223582916851,"Parsed as literal",""
635311223582926851,"Invalid operator","@func","4"
635311223582926851,"Parsed as literal","@func"
635311223582926851,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311223582936852,"Parsed as literal",""
635311223582936852,"Parsed as literal",""
635311223582936852,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311223582936852,"Parsed as literal",""
635311223582946853,"Parsed as literal",""
635311223582946853,"Invalid operator","@map(@func, []) -> []","0"
635311223582946853,"ParseInternal","@map(@func, []) ","0","FunctionDeclarationOperator","1","4","map","@func, []"
635311223582956853,"Parsed as literal","map"
635311223582956853,"ParseInternal","@func, []","4","CommaOperator","4","10","@func"," []"
635311223582956853,"Parsed as literal","@func"
635311223582966854,"ParseInternal"," []","10","OpenBracketOperator","11","10","",""
635311223582966854,"Parsed as literal",""
635311223582966854,"Parsed as literal",""
635311223582966854,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311223582976854,"Parsed as literal",""
635311223582976854,"Parsed as literal",""
635311223582976854,"ParseInternal","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0","AssignmentOperator","0","20","@map(@func, list) "," @func(h:list) & @map(@func,t:list)"
635311223582986855,"ParseInternal","@map(@func, list) ","0","FunctionCallOperator","1","4","map","@func, list"
635311223582986855,"Parsed as literal","map"
635311223582986855,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311223582996855,"ParseInternal","@func","4","FunctionCallOperator","5","9","func",""
635311223582996855,"Parsed as literal","func"
635311223582996855,"Parsed as literal",""
635311223583006856,"Invalid operator","@func","4"
635311223583006856,"ParseInternal","@func","4","FunctionDeclarationOperator","5","9","func",""
635311223583006856,"Parsed as literal","func"
635311223583006856,"Parsed as literal",""
635311223583016857,"Invalid operator","@func","4"
635311223583016857,"Parsed as literal","@func"
635311223583016857,"Parsed as literal"," list"
635311223583026857,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311223583026857,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311223583026857,"Parsed as literal","func"
635311223583036858,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311223583036858,"Parsed as literal",""
635311223583036858,"Parsed as literal","list"
635311223583046858,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311223583046858,"Parsed as literal","map"
635311223583046858,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311223583056859,"ParseInternal","@func","41","FunctionCallOperator","42","46","func",""
635311223583056859,"Parsed as literal","func"
635311223583056859,"Parsed as literal",""
635311223583056859,"Invalid operator","@func","41"
635311223583066859,"ParseInternal","@func","41","FunctionDeclarationOperator","42","46","func",""
635311223583066859,"Parsed as literal","func"
635311223583066859,"Parsed as literal",""
635311223583076860,"Invalid operator","@func","41"
635311223583076860,"Parsed as literal","@func"
635311223583076860,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311223583076860,"Parsed as literal",""
635311223583086861,"Parsed as literal","list"
635311223583086861,"Invalid operator","@map(@func, list) -> @func(h:list) & @map(@func,t:list)","0"
635311223583086861,"ParseInternal","@map(@func, list) ","0","FunctionDeclarationOperator","1","4","map","@func, list"
635311223583096861,"Parsed as literal","map"
635311223583096861,"ParseInternal","@func, list","4","CommaOperator","4","10","@func"," list"
635311223583096861,"Parsed as literal","@func"
635311223583096861,"Parsed as literal"," list"
635311223583106862,"ParseInternal"," @func(h:list) & @map(@func,t:list)","20","ConcatOperator","20","36"," @func(h:list) "," @map(@func,t:list)"
635311223583106862,"ParseInternal"," @func(h:list) ","20","FunctionCallOperator","22","26","func","h:list"
635311223583106862,"Parsed as literal","func"
635311223583116862,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311223583116862,"Parsed as literal",""
635311223583116862,"Parsed as literal","list"
635311223583116862,"ParseInternal"," @map(@func,t:list)","36","FunctionCallOperator","38","41","map","@func,t:list"
635311223583126863,"Parsed as literal","map"
635311223583126863,"ParseInternal","@func,t:list","41","CommaOperator","41","47","@func","t:list"
635311223583126863,"Parsed as literal","@func"
635311223583136863,"ParseInternal","t:list","47","TailOperator","47","49","","list"
635311223583136863,"Parsed as literal",""
635311223583136863,"Parsed as literal","list"
635311223583136863,"ParseInternal","@filter(@pred,[]) -> []","0","AssignmentOperator","0","20","@filter(@pred,[]) "," []"
635311223583146864,"ParseInternal","@filter(@pred,[]) ","0","FunctionCallOperator","1","7","filter","@pred,[]"
635311223583146864,"Parsed as literal","filter"
635311223583146864,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311223583156865,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311223583156865,"Parsed as literal","pred"
635311223583156865,"Parsed as literal",""
635311223583176866,"Invalid operator","@pred","7"
635311223583176866,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311223583186866,"Parsed as literal","pred"
635311223583186866,"Parsed as literal",""
635311223583186866,"Invalid operator","@pred","7"
635311223583186866,"Parsed as literal","@pred"
635311223583196867,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311223583196867,"Parsed as literal",""
635311223583196867,"Parsed as literal",""
635311223583196867,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311223583206867,"Parsed as literal",""
635311223583206867,"Parsed as literal",""
635311223583206867,"Invalid operator","@filter(@pred,[]) -> []","0"
635311223583216868,"ParseInternal","@filter(@pred,[]) ","0","FunctionDeclarationOperator","1","7","filter","@pred,[]"
635311223583216868,"Parsed as literal","filter"
635311223583216868,"ParseInternal","@pred,[]","7","CommaOperator","7","13","@pred","[]"
635311223583216868,"Parsed as literal","@pred"
635311223583226869,"ParseInternal","[]","13","OpenBracketOperator","13","13","",""
635311223583226869,"Parsed as literal",""
635311223583226869,"Parsed as literal",""
635311223583236869,"ParseInternal"," []","20","OpenBracketOperator","21","20","",""
635311223583236869,"Parsed as literal",""
635311223583236869,"Parsed as literal",""
635311223583236869,"ParseInternal","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0","AssignmentOperator","0","39","@filter(@pred, list | @pred(h:list)) "," h:list & @filter(@pred, t:list)"
635311223583246870,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionCallOperator","1","7","filter","@pred, list | @pred(h:list)"
635311223583246870,"Parsed as literal","filter"
635311223583246870,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311223583256870,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311223583256870,"Parsed as literal","pred"
635311223583256870,"Parsed as literal",""
635311223583256870,"Invalid operator","@pred","7"
635311223583266871,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311223583266871,"Parsed as literal","pred"
635311223583266871,"Parsed as literal",""
635311223583266871,"Invalid operator","@pred","7"
635311223583276871,"Parsed as literal","@pred"
635311223583276871,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311223583276871,"Parsed as literal"," list "
635311223583286872,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311223583286872,"Parsed as literal","pred"
635311223583286872,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311223583286872,"Parsed as literal",""
635311223583296873,"Parsed as literal","list"
635311223583296873,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311223583296873,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311223583306873,"Parsed as literal"," "
635311223583306873,"Parsed as literal","list "
635311223583306873,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311223583306873,"Parsed as literal","filter"
635311223583316874,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311223583316874,"ParseInternal","@pred","56","FunctionCallOperator","57","61","pred",""
635311223583316874,"Parsed as literal","pred"
635311223583316874,"Parsed as literal",""
635311223583326874,"Invalid operator","@pred","56"
635311223583326874,"ParseInternal","@pred","56","FunctionDeclarationOperator","57","61","pred",""
635311223583326874,"Parsed as literal","pred"
635311223583336875,"Parsed as literal",""
635311223583336875,"Invalid operator","@pred","56"
635311223583336875,"Parsed as literal","@pred"
635311223583336875,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311223583346876,"Parsed as literal"," "
635311223583346876,"Parsed as literal","list"
635311223583346876,"Invalid operator","@filter(@pred, list | @pred(h:list)) -> h:list & @filter(@pred, t:list)","0"
635311223583346876,"ParseInternal","@filter(@pred, list | @pred(h:list)) ","0","FunctionDeclarationOperator","1","7","filter","@pred, list | @pred(h:list)"
635311223583356876,"Parsed as literal","filter"
635311223583356876,"ParseInternal","@pred, list | @pred(h:list)","7","CommaOperator","7","13","@pred"," list | @pred(h:list)"
635311223583356876,"Parsed as literal","@pred"
635311223583366877,"ParseInternal"," list | @pred(h:list)","13","PatternOperator","13","20"," list "," @pred(h:list)"
635311223583366877,"Parsed as literal"," list "
635311223583366877,"ParseInternal"," @pred(h:list)","20","FunctionCallOperator","22","26","pred","h:list"
635311223583366877,"Parsed as literal","pred"
635311223583376877,"ParseInternal","h:list","26","HeadOperator","26","28","","list"
635311223583376877,"Parsed as literal",""
635311223583376877,"Parsed as literal","list"
635311223583386878,"ParseInternal"," h:list & @filter(@pred, t:list)","39","ConcatOperator","39","48"," h:list "," @filter(@pred, t:list)"
635311223583386878,"ParseInternal"," h:list ","39","HeadOperator","39","42"," ","list "
635311223583386878,"Parsed as literal"," "
635311223583386878,"Parsed as literal","list "
635311223583396878,"ParseInternal"," @filter(@pred, t:list)","48","FunctionCallOperator","50","56","filter","@pred, t:list"
635311223583396878,"Parsed as literal","filter"
635311223583396878,"ParseInternal","@pred, t:list","56","CommaOperator","56","62","@pred"," t:list"
635311223583406879,"Parsed as literal","@pred"
635311223583406879,"ParseInternal"," t:list","62","TailOperator","62","65"," ","list"
635311223583406879,"Parsed as literal"," "
635311223583406879,"Parsed as literal","list"
635311223583416880,"ParseInternal","@filter(@pred,list) -> @filter(@pred,t:list)","0","AssignmentOperator","0","22","@filter(@pred,list) "," @filter(@pred,t:list)"
635311223583416880,"ParseInternal","@filter(@pred,list) ","0","FunctionCallOperator","1","7","filter","@pred,list"
635311223583416880,"Parsed as literal","filter"
635311223583426880,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311223583426880,"ParseInternal","@pred","7","FunctionCallOperator","8","12","pred",""
635311223583426880,"Parsed as literal","pred"
635311223583426880,"Parsed as literal",""
635311223583436881,"Invalid operator","@pred","7"
635311223583436881,"ParseInternal","@pred","7","FunctionDeclarationOperator","8","12","pred",""
635311223583436881,"Parsed as literal","pred"
635311223583436881,"Parsed as literal",""
635311223583446881,"Invalid operator","@pred","7"
635311223583446881,"Parsed as literal","@pred"
635311223583446881,"Parsed as literal","list"
635311223583456882,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311223583456882,"Parsed as literal","filter"
635311223583456882,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311223583456882,"ParseInternal","@pred","30","FunctionCallOperator","31","35","pred",""
635311223583466882,"Parsed as literal","pred"
635311223583466882,"Parsed as literal",""
635311223583466882,"Invalid operator","@pred","30"
635311223583476883,"ParseInternal","@pred","30","FunctionDeclarationOperator","31","35","pred",""
635311223583476883,"Parsed as literal","pred"
635311223583476883,"Parsed as literal",""
635311223583476883,"Invalid operator","@pred","30"
635311223583486884,"Parsed as literal","@pred"
635311223583486884,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311223583486884,"Parsed as literal",""
635311223583486884,"Parsed as literal","list"
635311223583496884,"Invalid operator","@filter(@pred,list) -> @filter(@pred,t:list)","0"
635311223583496884,"ParseInternal","@filter(@pred,list) ","0","FunctionDeclarationOperator","1","7","filter","@pred,list"
635311223583496884,"Parsed as literal","filter"
635311223583496884,"ParseInternal","@pred,list","7","CommaOperator","7","13","@pred","list"
635311223583506885,"Parsed as literal","@pred"
635311223583506885,"Parsed as literal","list"
635311223583506885,"ParseInternal"," @filter(@pred,t:list)","22","FunctionCallOperator","24","30","filter","@pred,t:list"
635311223583516885,"Parsed as literal","filter"
635311223583516885,"ParseInternal","@pred,t:list","30","CommaOperator","30","36","@pred","t:list"
635311223583516885,"Parsed as literal","@pred"
635311223583516885,"ParseInternal","t:list","36","TailOperator","36","38","","list"
635311223583526886,"Parsed as literal",""
635311223583526886,"Parsed as literal","list"
635311223583526886,"ParseInternal","@call(@fun,arg) -> @fun(arg)","0","AssignmentOperator","0","18","@call(@fun,arg) "," @fun(arg)"
635311223583536886,"ParseInternal","@call(@fun,arg) ","0","FunctionCallOperator","1","5","call","@fun,arg"
635311223583536886,"Parsed as literal","call"
635311223583536886,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311223583536886,"ParseInternal","@fun","5","FunctionCallOperator","6","9","fun",""
635311223583546887,"Parsed as literal","fun"
635311223583546887,"Parsed as literal",""
635311223583546887,"Invalid operator","@fun","5"
635311223583556888,"ParseInternal","@fun","5","FunctionDeclarationOperator","6","9","fun",""
635311223583556888,"Parsed as literal","fun"
635311223583556888,"Parsed as literal",""
635311223583556888,"Invalid operator","@fun","5"
635311223583566888,"Parsed as literal","@fun"
635311223583566888,"Parsed as literal","arg"
635311223583566888,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311223583566888,"Parsed as literal","fun"
635311223583576889,"Parsed as literal","arg"
635311223583576889,"Invalid operator","@call(@fun,arg) -> @fun(arg)","0"
635311223583576889,"ParseInternal","@call(@fun,arg) ","0","FunctionDeclarationOperator","1","5","call","@fun,arg"
635311223583586889,"Parsed as literal","call"
635311223583586889,"ParseInternal","@fun,arg","5","CommaOperator","5","10","@fun","arg"
635311223583586889,"Parsed as literal","@fun"
635311223583586889,"Parsed as literal","arg"
635311223583596890,"ParseInternal"," @fun(arg)","18","FunctionCallOperator","20","23","fun","arg"
635311223583596890,"Parsed as literal","fun"
635311223583596890,"Parsed as literal","arg"
635311223583596890,"ParseInternal","@curry(seed,[]) -> seed","0","AssignmentOperator","0","18","@curry(seed,[]) "," seed"
635311223583606890,"ParseInternal","@curry(seed,[]) ","0","FunctionCallOperator","1","6","curry","seed,[]"
635311223583606890,"Parsed as literal","curry"
635311223583606890,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311223583616891,"Parsed as literal","seed"
635311223583616891,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311223583616891,"Parsed as literal",""
635311223583616891,"Parsed as literal",""
635311223583626892,"Parsed as literal"," seed"
635311223583626892,"Invalid operator","@curry(seed,[]) -> seed","0"
635311223583626892,"ParseInternal","@curry(seed,[]) ","0","FunctionDeclarationOperator","1","6","curry","seed,[]"
635311223583636892,"Parsed as literal","curry"
635311223583636892,"ParseInternal","seed,[]","6","CommaOperator","6","11","seed","[]"
635311223583636892,"Parsed as literal","seed"
635311223583636892,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311223583646893,"Parsed as literal",""
635311223583646893,"Parsed as literal",""
635311223583646893,"Parsed as literal"," seed"
635311223583656893,"ParseInternal","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0","AssignmentOperator","0","25","@curry(seed, funcList) "," @curry(@call(h:funcList,seed),t:funcList)"
635311223583656893,"ParseInternal","@curry(seed, funcList) ","0","FunctionCallOperator","1","6","curry","seed, funcList"
635311223583656893,"Parsed as literal","curry"
635311223583656893,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311223583666894,"Parsed as literal","seed"
635311223583666894,"Parsed as literal"," funcList"
635311223583666894,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311223583676894,"Parsed as literal","curry"
635311223583676894,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311223583676894,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311223583676894,"Parsed as literal","call"
635311223583686895,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311223583686895,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311223583686895,"Parsed as literal",""
635311223583696896,"Parsed as literal","funcList"
635311223583696896,"Parsed as literal","seed"
635311223583696896,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311223583696896,"Parsed as literal",""
635311223583706896,"Parsed as literal","funcList"
635311223583706896,"Invalid operator","@curry(seed, funcList) -> @curry(@call(h:funcList,seed),t:funcList)","0"
635311223583706896,"ParseInternal","@curry(seed, funcList) ","0","FunctionDeclarationOperator","1","6","curry","seed, funcList"
635311223583716897,"Parsed as literal","curry"
635311223583716897,"ParseInternal","seed, funcList","6","CommaOperator","6","11","seed"," funcList"
635311223583716897,"Parsed as literal","seed"
635311223583716897,"Parsed as literal"," funcList"
635311223583726897,"ParseInternal"," @curry(@call(h:funcList,seed),t:funcList)","25","FunctionCallOperator","27","32","curry","@call(h:funcList,seed),t:funcList"
635311223583726897,"Parsed as literal","curry"
635311223583726897,"ParseInternal","@call(h:funcList,seed),t:funcList","32","CommaOperator","32","55","@call(h:funcList,seed)","t:funcList"
635311223583736898,"ParseInternal","@call(h:funcList,seed)","32","FunctionCallOperator","33","37","call","h:funcList,seed"
635311223583736898,"Parsed as literal","call"
635311223583736898,"ParseInternal","h:funcList,seed","37","CommaOperator","37","48","h:funcList","seed"
635311223583736898,"ParseInternal","h:funcList","37","HeadOperator","37","39","","funcList"
635311223583746898,"Parsed as literal",""
635311223583746898,"Parsed as literal","funcList"
635311223583746898,"Parsed as literal","seed"
635311223583746898,"ParseInternal","t:funcList","55","TailOperator","55","57","","funcList"
635311223583756899,"Parsed as literal",""
635311223583756899,"Parsed as literal","funcList"
635311223583756899,"ParseInternal","@fold(@func,[]) -> []","0","AssignmentOperator","0","18","@fold(@func,[]) "," []"
635311223583766900,"ParseInternal","@fold(@func,[]) ","0","FunctionCallOperator","1","5","fold","@func,[]"
635311223583766900,"Parsed as literal","fold"
635311223583766900,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311223583766900,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311223583776900,"Parsed as literal","func"
635311223583776900,"Parsed as literal",""
635311223583776900,"Invalid operator","@func","5"
635311223583786901,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311223583786901,"Parsed as literal","func"
635311223583786901,"Parsed as literal",""
635311223583786901,"Invalid operator","@func","5"
635311223583796901,"Parsed as literal","@func"
635311223583796901,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311223583796901,"Parsed as literal",""
635311223583796901,"Parsed as literal",""
635311223583806902,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311223583806902,"Parsed as literal",""
635311223583806902,"Parsed as literal",""
635311223583806902,"Invalid operator","@fold(@func,[]) -> []","0"
635311223583816902,"ParseInternal","@fold(@func,[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,[]"
635311223583816902,"Parsed as literal","fold"
635311223583816902,"ParseInternal","@func,[]","5","CommaOperator","5","11","@func","[]"
635311223583826903,"Parsed as literal","@func"
635311223583826903,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311223583826903,"Parsed as literal",""
635311223583826903,"Parsed as literal",""
635311223583836904,"ParseInternal"," []","18","OpenBracketOperator","19","18","",""
635311223583836904,"Parsed as literal",""
635311223583836904,"Parsed as literal",""
635311223583846904,"ParseInternal","@fold(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","30","@fold(@func,list|t:list=[]) "," h:list"
635311223583846904,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionCallOperator","1","5","fold","@func,list|t:list=[]"
635311223583846904,"Parsed as literal","fold"
635311223583846904,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311223583856905,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311223583856905,"Parsed as literal","func"
635311223583856905,"Parsed as literal",""
635311223583856905,"Invalid operator","@func","5"
635311223583866905,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311223583866905,"Parsed as literal","func"
635311223583866905,"Parsed as literal",""
635311223583876906,"Invalid operator","@func","5"
635311223583876906,"Parsed as literal","@func"
635311223583876906,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311223583876906,"Parsed as literal","list"
635311223583886906,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311223583886906,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311223583886906,"Parsed as literal",""
635311223583886906,"Parsed as literal","list"
635311223583896907,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311223583896907,"Parsed as literal",""
635311223583896907,"Parsed as literal",""
635311223583906908,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311223583906908,"Parsed as literal"," "
635311223583906908,"Parsed as literal","list"
635311223583906908,"Invalid operator","@fold(@func,list|t:list=[]) -> h:list","0"
635311223583916908,"ParseInternal","@fold(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","5","fold","@func,list|t:list=[]"
635311223583916908,"Parsed as literal","fold"
635311223583916908,"ParseInternal","@func,list|t:list=[]","5","CommaOperator","5","11","@func","list|t:list=[]"
635311223583916908,"Parsed as literal","@func"
635311223583926909,"ParseInternal","list|t:list=[]","11","PatternOperator","11","16","list","t:list=[]"
635311223583926909,"Parsed as literal","list"
635311223583926909,"ParseInternal","t:list=[]","16","EqualityOperator","16","23","t:list","[]"
635311223583936909,"ParseInternal","t:list","16","TailOperator","16","18","","list"
635311223583936909,"Parsed as literal",""
635311223583936909,"Parsed as literal","list"
635311223583936909,"ParseInternal","[]","23","OpenBracketOperator","23","23","",""
635311223583946910,"Parsed as literal",""
635311223583946910,"Parsed as literal",""
635311223583946910,"ParseInternal"," h:list","30","HeadOperator","30","33"," ","list"
635311223583946910,"Parsed as literal"," "
635311223583956910,"Parsed as literal","list"
635311223583956910,"ParseInternal","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0","AssignmentOperator","0","20","@fold(@func,list) "," @fold(@func,@func(h:list,h:t:list) & t:t:list)"
635311223583956910,"ParseInternal","@fold(@func,list) ","0","FunctionCallOperator","1","5","fold","@func,list"
635311223583966911,"Parsed as literal","fold"
635311223583966911,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311223583966911,"ParseInternal","@func","5","FunctionCallOperator","6","10","func",""
635311223583976912,"Parsed as literal","func"
635311223583976912,"Parsed as literal",""
635311223583976912,"Invalid operator","@func","5"
635311223583976912,"ParseInternal","@func","5","FunctionDeclarationOperator","6","10","func",""
635311223583986912,"Parsed as literal","func"
635311223583986912,"Parsed as literal",""
635311223583986912,"Invalid operator","@func","5"
635311223583986912,"Parsed as literal","@func"
635311223583996913,"Parsed as literal","list"
635311223583996913,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311223583996913,"Parsed as literal","fold"
635311223584006913,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311223584006913,"ParseInternal","@func","26","FunctionCallOperator","27","31","func",""
635311223584006913,"Parsed as literal","func"
635311223584006913,"Parsed as literal",""
635311223584016914,"Invalid operator","@func","26"
635311223584016914,"ParseInternal","@func","26","FunctionDeclarationOperator","27","31","func",""
635311223584016914,"Parsed as literal","func"
635311223584016914,"Parsed as literal",""
635311223584026914,"Invalid operator","@func","26"
635311223584026914,"Parsed as literal","@func"
635311223584026914,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311223584036915,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311223584036915,"Parsed as literal","func"
635311223584036915,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311223584036915,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311223584046916,"Parsed as literal",""
635311223584046916,"Parsed as literal","list"
635311223584046916,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311223584046916,"Parsed as literal",""
635311223584056916,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311223584056916,"Parsed as literal",""
635311223584056916,"Parsed as literal","list"
635311223584066917,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311223584066917,"Parsed as literal"," "
635311223584066917,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311223584066917,"Parsed as literal",""
635311223584076917,"Parsed as literal","list"
635311223584076917,"Invalid operator","@fold(@func,list) -> @fold(@func,@func(h:list,h:t:list) & t:t:list)","0"
635311223584076917,"ParseInternal","@fold(@func,list) ","0","FunctionDeclarationOperator","1","5","fold","@func,list"
635311223584076917,"Parsed as literal","fold"
635311223584086918,"ParseInternal","@func,list","5","CommaOperator","5","11","@func","list"
635311223584086918,"Parsed as literal","@func"
635311223584086918,"Parsed as literal","list"
635311223584096918,"ParseInternal"," @fold(@func,@func(h:list,h:t:list) & t:t:list)","20","FunctionCallOperator","22","26","fold","@func,@func(h:list,h:t:list) & t:t:list"
635311223584096918,"Parsed as literal","fold"
635311223584106919,"ParseInternal","@func,@func(h:list,h:t:list) & t:t:list","26","CommaOperator","26","32","@func","@func(h:list,h:t:list) & t:t:list"
635311223584106919,"Parsed as literal","@func"
635311223584106919,"ParseInternal","@func(h:list,h:t:list) & t:t:list","32","ConcatOperator","32","56","@func(h:list,h:t:list) "," t:t:list"
635311223584106919,"ParseInternal","@func(h:list,h:t:list) ","32","FunctionCallOperator","33","37","func","h:list,h:t:list"
635311223584116920,"Parsed as literal","func"
635311223584116920,"ParseInternal","h:list,h:t:list","37","CommaOperator","37","44","h:list","h:t:list"
635311223584116920,"ParseInternal","h:list","37","HeadOperator","37","39","","list"
635311223584126920,"Parsed as literal",""
635311223584126920,"Parsed as literal","list"
635311223584126920,"ParseInternal","h:t:list","44","HeadOperator","44","46","","t:list"
635311223584126920,"Parsed as literal",""
635311223584136921,"ParseInternal","t:list","46","TailOperator","46","48","","list"
635311223584136921,"Parsed as literal",""
635311223584136921,"Parsed as literal","list"
635311223584146921,"ParseInternal"," t:t:list","56","TailOperator","56","59"," ","t:list"
635311223584146921,"Parsed as literal"," "
635311223584146921,"ParseInternal","t:list","59","TailOperator","59","61","","list"
635311223584146921,"Parsed as literal",""
635311223584156922,"Parsed as literal","list"
635311223584156922,"ParseInternal","@foldr(@func,[]) -> []","0","AssignmentOperator","0","19","@foldr(@func,[]) "," []"
635311223584156922,"ParseInternal","@foldr(@func,[]) ","0","FunctionCallOperator","1","6","foldr","@func,[]"
635311223584166922,"Parsed as literal","foldr"
635311223584166922,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311223584166922,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311223584166922,"Parsed as literal","func"
635311223584176923,"Parsed as literal",""
635311223584176923,"Invalid operator","@func","6"
635311223584176923,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311223584176923,"Parsed as literal","func"
635311223584186924,"Parsed as literal",""
635311223584186924,"Invalid operator","@func","6"
635311223584186924,"Parsed as literal","@func"
635311223584186924,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311223584196924,"Parsed as literal",""
635311223584196924,"Parsed as literal",""
635311223584196924,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311223584206925,"Parsed as literal",""
635311223584206925,"Parsed as literal",""
635311223584206925,"Invalid operator","@foldr(@func,[]) -> []","0"
635311223584206925,"ParseInternal","@foldr(@func,[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,[]"
635311223584216925,"Parsed as literal","foldr"
635311223584216925,"ParseInternal","@func,[]","6","CommaOperator","6","12","@func","[]"
635311223584216925,"Parsed as literal","@func"
635311223584216925,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311223584226926,"Parsed as literal",""
635311223584226926,"Parsed as literal",""
635311223584226926,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311223584236926,"Parsed as literal",""
635311223584236926,"Parsed as literal",""
635311223584236926,"ParseInternal","@foldr(@func,list|t:list=[]) -> h:list","0","AssignmentOperator","0","31","@foldr(@func,list|t:list=[]) "," h:list"
635311223584236926,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionCallOperator","1","6","foldr","@func,list|t:list=[]"
635311223584246927,"Parsed as literal","foldr"
635311223584246927,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311223584246927,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311223584256928,"Parsed as literal","func"
635311223584256928,"Parsed as literal",""
635311223584256928,"Invalid operator","@func","6"
635311223584256928,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311223584266928,"Parsed as literal","func"
635311223584266928,"Parsed as literal",""
635311223584266928,"Invalid operator","@func","6"
635311223584266928,"Parsed as literal","@func"
635311223584276929,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311223584276929,"Parsed as literal","list"
635311223584276929,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311223584276929,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311223584286929,"Parsed as literal",""
635311223584286929,"Parsed as literal","list"
635311223584286929,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311223584296930,"Parsed as literal",""
635311223584296930,"Parsed as literal",""
635311223584296930,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311223584296930,"Parsed as literal"," "
635311223584306930,"Parsed as literal","list"
635311223584306930,"Invalid operator","@foldr(@func,list|t:list=[]) -> h:list","0"
635311223584306930,"ParseInternal","@foldr(@func,list|t:list=[]) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list|t:list=[]"
635311223584306930,"Parsed as literal","foldr"
635311223584316931,"ParseInternal","@func,list|t:list=[]","6","CommaOperator","6","12","@func","list|t:list=[]"
635311223584316931,"Parsed as literal","@func"
635311223584316931,"ParseInternal","list|t:list=[]","12","PatternOperator","12","17","list","t:list=[]"
635311223584326932,"Parsed as literal","list"
635311223584326932,"ParseInternal","t:list=[]","17","EqualityOperator","17","24","t:list","[]"
635311223584326932,"ParseInternal","t:list","17","TailOperator","17","19","","list"
635311223584326932,"Parsed as literal",""
635311223584336932,"Parsed as literal","list"
635311223584336932,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311223584336932,"Parsed as literal",""
635311223584336932,"Parsed as literal",""
635311223584346933,"ParseInternal"," h:list","31","HeadOperator","31","34"," ","list"
635311223584346933,"Parsed as literal"," "
635311223584346933,"Parsed as literal","list"
635311223584356933,"ParseInternal","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0","AssignmentOperator","0","21","@foldr(@func,list) "," @func(@foldr(@func,@superHead(list)),@last(list))"
635311223584356933,"ParseInternal","@foldr(@func,list) ","0","FunctionCallOperator","1","6","foldr","@func,list"
635311223584356933,"Parsed as literal","foldr"
635311223584366934,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311223584366934,"ParseInternal","@func","6","FunctionCallOperator","7","11","func",""
635311223584366934,"Parsed as literal","func"
635311223584366934,"Parsed as literal",""
635311223584376934,"Invalid operator","@func","6"
635311223584376934,"ParseInternal","@func","6","FunctionDeclarationOperator","7","11","func",""
635311223584376934,"Parsed as literal","func"
635311223584376934,"Parsed as literal",""
635311223584386935,"Invalid operator","@func","6"
635311223584386935,"Parsed as literal","@func"
635311223584386935,"Parsed as literal","list"
635311223584396936,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311223584396936,"Parsed as literal","func"
635311223584396936,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311223584406936,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311223584406936,"Parsed as literal","foldr"
635311223584406936,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311223584406936,"ParseInternal","@func","33","FunctionCallOperator","34","38","func",""
635311223584416937,"Parsed as literal","func"
635311223584416937,"Parsed as literal",""
635311223584416937,"Invalid operator","@func","33"
635311223584416937,"ParseInternal","@func","33","FunctionDeclarationOperator","34","38","func",""
635311223584426937,"Parsed as literal","func"
635311223584426937,"Parsed as literal",""
635311223584426937,"Invalid operator","@func","33"
635311223584426937,"Parsed as literal","@func"
635311223584436938,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311223584436938,"Parsed as literal","superHead"
635311223584436938,"Parsed as literal","list"
635311223584446938,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311223584446938,"Parsed as literal","last"
635311223584446938,"Parsed as literal","list"
635311223584446938,"Invalid operator","@foldr(@func,list) -> @func(@foldr(@func,@superHead(list)),@last(list))","0"
635311223584456939,"ParseInternal","@foldr(@func,list) ","0","FunctionDeclarationOperator","1","6","foldr","@func,list"
635311223584456939,"Parsed as literal","foldr"
635311223584456939,"ParseInternal","@func,list","6","CommaOperator","6","12","@func","list"
635311223584466940,"Parsed as literal","@func"
635311223584466940,"Parsed as literal","list"
635311223584466940,"ParseInternal"," @func(@foldr(@func,@superHead(list)),@last(list))","21","FunctionCallOperator","23","27","func","@foldr(@func,@superHead(list)),@last(list)"
635311223584466940,"Parsed as literal","func"
635311223584476940,"ParseInternal","@foldr(@func,@superHead(list)),@last(list)","27","CommaOperator","27","58","@foldr(@func,@superHead(list))","@last(list)"
635311223584476940,"ParseInternal","@foldr(@func,@superHead(list))","27","FunctionCallOperator","28","33","foldr","@func,@superHead(list)"
635311223584476940,"Parsed as literal","foldr"
635311223584486941,"ParseInternal","@func,@superHead(list)","33","CommaOperator","33","39","@func","@superHead(list)"
635311223584486941,"Parsed as literal","@func"
635311223584486941,"ParseInternal","@superHead(list)","39","FunctionCallOperator","40","49","superHead","list"
635311223584496941,"Parsed as literal","superHead"
635311223584496941,"Parsed as literal","list"
635311223584496941,"ParseInternal","@last(list)","58","FunctionCallOperator","59","63","last","list"
635311223584496941,"Parsed as literal","last"
635311223584506942,"Parsed as literal","list"
635311223584506942,"ParseInternal","@superHead(list) = @reverse(t:@reverse(list))","0","EqualityOperator","0","18","@superHead(list) "," @reverse(t:@reverse(list))"
635311223584506942,"ParseInternal","@superHead(list) ","0","FunctionCallOperator","1","10","superHead","list"
635311223584516942,"Parsed as literal","superHead"
635311223584516942,"Parsed as literal","list"
635311223584516942,"ParseInternal"," @reverse(t:@reverse(list))","18","FunctionCallOperator","20","27","reverse","t:@reverse(list)"
635311223584516942,"Parsed as literal","reverse"
635311223584526943,"ParseInternal","t:@reverse(list)","27","TailOperator","27","29","","@reverse(list)"
635311223584526943,"Parsed as literal",""
635311223584526943,"ParseInternal","@reverse(list)","29","FunctionCallOperator","30","37","reverse","list"
635311223584526943,"Parsed as literal","reverse"
635311223584536944,"Parsed as literal","list"
635311223584536944,"StepEvaluate","->","Changed","Declared @map"
635311223584536944,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311223584546944,"StepEvaluate","->","Changed","Declared @map"
635311223584546944,"StepEvaluate","Declared @map","Unchanged","Declared @map"
635311223584546944,"StepEvaluate","->","Changed","Declared @filter"
635311223584546944,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311223584556945,"StepEvaluate","->","Changed","Declared @filter"
635311223584556945,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311223584556945,"StepEvaluate","->","Changed","Declared @filter"
635311223584556945,"StepEvaluate","Declared @filter","Unchanged","Declared @filter"
635311223584566945,"StepEvaluate","->","Changed","Declared @call"
635311223584566945,"StepEvaluate","Declared @call","Unchanged","Declared @call"
635311223584566945,"StepEvaluate","->","Changed","Declared @curry"
635311223584566945,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311223584576946,"StepEvaluate","->","Changed","Declared @curry"
635311223584576946,"StepEvaluate","Declared @curry","Unchanged","Declared @curry"
635311223584576946,"StepEvaluate","->","Changed","Declared @fold"
635311223584576946,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311223584586946,"StepEvaluate","->","Changed","Declared @fold"
635311223584586946,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311223584586946,"StepEvaluate","->","Changed","Declared @fold"
635311223584586946,"StepEvaluate","Declared @fold","Unchanged","Declared @fold"
635311223584596947,"StepEvaluate","->","Changed","Declared @foldr"
635311223584596947,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311223584596947,"StepEvaluate","->","Changed","Declared @foldr"
635311223584596947,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311223584606948,"StepEvaluate","->","Changed","Declared @foldr"
635311223584606948,"StepEvaluate","Declared @foldr","Unchanged","Declared @foldr"
635311223584606948,"StepEvaluate","==","Unchanged","=="
635311223584606948,"StepEvaluate","@","Changed","@"
635311223584616948,"StepEvaluate","@","Changed","@"
635311223584616948,"StepEvaluate","==","Unchanged","=="
635311223584616948,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311223584626949,"StepEvaluate","superHead","Unchanged","superHead"
635311223584626949,"StepEvaluate",",","Unchanged",","
635311223584626949,"StepEvaluate","list","Unchanged","list"
635311223584626949,"StepEvaluate","@","Changed","@"
635311223584636949,"StepEvaluate","==","Unchanged","=="
635311223584636949,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311223584636949,"StepEvaluate","superHead","Unchanged","superHead"
635311223584636949,"StepEvaluate",",","Unchanged",","
635311223584646950,"StepEvaluate","list","Unchanged","list"
635311223584646950,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311223584646950,"StepEvaluate","reverse","Unchanged","reverse"
635311223584646950,"StepEvaluate",",","Unchanged",","
635311223584656950,"StepEvaluate","tail","Unchanged","tail"
635311223584656950,"StepEvaluate","@","Changed","@"
635311223584656950,"StepEvaluate","==","Unchanged","=="
635311223584656950,"StepEvaluate","@","Unchanged","Unable to resolve function: superHead"
635311223584666951,"StepEvaluate","superHead","Unchanged","superHead"
635311223584666951,"StepEvaluate",",","Unchanged",","
635311223584666951,"StepEvaluate","list","Unchanged","list"
635311223584666951,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311223584676952,"StepEvaluate","reverse","Unchanged","reverse"
635311223584676952,"StepEvaluate",",","Unchanged",","
635311223584676952,"StepEvaluate","tail","Unchanged","tail"
635311223584676952,"StepEvaluate","@","Unchanged","Unable to resolve function: reverse"
635311223584686952,"StepEvaluate","reverse","Unchanged","reverse"
635311223584686952,"StepEvaluate",",","Unchanged",","
635311223584686952,"StepEvaluate","list","Unchanged","list"
635311223584686952,"StepEvaluate","[]","Changed","File imported"
635311223584696953,"StepEvaluate","File imported","Unchanged","File imported"
635311223584696953,"StepEvaluate","@","Changed","@"
635311223584696953,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223584696953,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223584706953,"StepEvaluate",",","Unchanged",","
635311223584706953,"StepEvaluate","@Arg","Changed","@Arg-M"
635311223584706953,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223584706953,"StepEvaluate","PAT@-M","Changed","[]"
635311223584716954,"StepEvaluate","SEL@import","Changed","[]"
635311223584716954,"StepEvaluate","@","Changed","[]"
635311223584716954,"ParseInternal","@zipWith(@func,[],[]) -> []","0","AssignmentOperator","0","24","@zipWith(@func,[],[]) "," []"
635311223584726954,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionCallOperator","1","8","zipWith","@func,[],[]"
635311223584726954,"Parsed as literal","zipWith"
635311223584726954,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311223584736955,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311223584736955,"Parsed as literal","func"
635311223584736955,"Parsed as literal",""
635311223584736955,"Invalid operator","@func","8"
635311223584746956,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311223584746956,"Parsed as literal","func"
635311223584746956,"Parsed as literal",""
635311223584746956,"Invalid operator","@func","8"
635311223584756956,"Parsed as literal","@func"
635311223584756956,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311223584756956,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311223584766957,"Parsed as literal",""
635311223584766957,"Parsed as literal",""
635311223584766957,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311223584766957,"Parsed as literal",""
635311223584776957,"Parsed as literal",""
635311223584776957,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311223584776957,"Parsed as literal",""
635311223584776957,"Parsed as literal",""
635311223584786958,"Invalid operator","@zipWith(@func,[],[]) -> []","0"
635311223584786958,"ParseInternal","@zipWith(@func,[],[]) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,[],[]"
635311223584786958,"Parsed as literal","zipWith"
635311223584796958,"ParseInternal","@func,[],[]","8","CommaOperator","8","14","@func","[],[]"
635311223584796958,"Parsed as literal","@func"
635311223584796958,"ParseInternal","[],[]","14","CommaOperator","14","17","[]","[]"
635311223584796958,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311223584806959,"Parsed as literal",""
635311223584806959,"Parsed as literal",""
635311223584806959,"ParseInternal","[]","17","OpenBracketOperator","17","17","",""
635311223584806959,"Parsed as literal",""
635311223584816960,"Parsed as literal",""
635311223584816960,"ParseInternal"," []","24","OpenBracketOperator","25","24","",""
635311223584816960,"Parsed as literal",""
635311223584816960,"Parsed as literal",""
635311223584826960,"ParseInternal","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0","AssignmentOperator","0","30","@zipWith(@func,list1,list2) "," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)"
635311223584826960,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionCallOperator","1","8","zipWith","@func,list1,list2"
635311223584826960,"Parsed as literal","zipWith"
635311223584836961,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311223584836961,"ParseInternal","@func","8","FunctionCallOperator","9","13","func",""
635311223584836961,"Parsed as literal","func"
635311223584836961,"Parsed as literal",""
635311223584846961,"Invalid operator","@func","8"
635311223584846961,"ParseInternal","@func","8","FunctionDeclarationOperator","9","13","func",""
635311223584846961,"Parsed as literal","func"
635311223584856962,"Parsed as literal",""
635311223584856962,"Invalid operator","@func","8"
635311223584856962,"Parsed as literal","@func"
635311223584856962,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311223584866962,"Parsed as literal","list1"
635311223584866962,"Parsed as literal","list2"
635311223584866962,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311223584876963,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311223584876963,"Parsed as literal","func"
635311223584876963,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311223584876963,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311223584886964,"Parsed as literal",""
635311223584886964,"Parsed as literal","list1"
635311223584886964,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311223584886964,"Parsed as literal",""
635311223584896964,"Parsed as literal","list2"
635311223584896964,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311223584896964,"Parsed as literal","zipWith"
635311223584906965,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311223584906965,"ParseInternal","@func","64","FunctionCallOperator","65","69","func",""
635311223584906965,"Parsed as literal","func"
635311223584906965,"Parsed as literal",""
635311223584916965,"Invalid operator","@func","64"
635311223584916965,"ParseInternal","@func","64","FunctionDeclarationOperator","65","69","func",""
635311223584916965,"Parsed as literal","func"
635311223584926966,"Parsed as literal",""
635311223584926966,"Invalid operator","@func","64"
635311223584926966,"Parsed as literal","@func"
635311223584926966,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311223584936966,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311223584936966,"Parsed as literal",""
635311223584936966,"Parsed as literal","list1"
635311223584936966,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311223584946967,"Parsed as literal",""
635311223584946967,"Parsed as literal","list2"
635311223584946967,"Invalid operator","@zipWith(@func,list1,list2) -> @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","0"
635311223584956968,"ParseInternal","@zipWith(@func,list1,list2) ","0","FunctionDeclarationOperator","1","8","zipWith","@func,list1,list2"
635311223584956968,"Parsed as literal","zipWith"
635311223584956968,"ParseInternal","@func,list1,list2","8","CommaOperator","8","14","@func","list1,list2"
635311223584956968,"Parsed as literal","@func"
635311223584966968,"ParseInternal","list1,list2","14","CommaOperator","14","20","list1","list2"
635311223584966968,"Parsed as literal","list1"
635311223584966968,"Parsed as literal","list2"
635311223584976969,"ParseInternal"," @func(h:list1,h:list2) & @zipWith(@func,t:list1,t:list2)","30","ConcatOperator","30","55"," @func(h:list1,h:list2) "," @zipWith(@func,t:list1,t:list2)"
635311223584976969,"ParseInternal"," @func(h:list1,h:list2) ","30","FunctionCallOperator","32","36","func","h:list1,h:list2"
635311223584976969,"Parsed as literal","func"
635311223584976969,"ParseInternal","h:list1,h:list2","36","CommaOperator","36","44","h:list1","h:list2"
635311223584986969,"ParseInternal","h:list1","36","HeadOperator","36","38","","list1"
635311223584986969,"Parsed as literal",""
635311223584986969,"Parsed as literal","list1"
635311223584986969,"ParseInternal","h:list2","44","HeadOperator","44","46","","list2"
635311223584996970,"Parsed as literal",""
635311223584996970,"Parsed as literal","list2"
635311223584996970,"ParseInternal"," @zipWith(@func,t:list1,t:list2)","55","FunctionCallOperator","57","64","zipWith","@func,t:list1,t:list2"
635311223584996970,"Parsed as literal","zipWith"
635311223585006970,"ParseInternal","@func,t:list1,t:list2","64","CommaOperator","64","70","@func","t:list1,t:list2"
635311223585006970,"Parsed as literal","@func"
635311223585016971,"ParseInternal","t:list1,t:list2","70","CommaOperator","70","78","t:list1","t:list2"
635311223585016971,"ParseInternal","t:list1","70","TailOperator","70","72","","list1"
635311223585016971,"Parsed as literal",""
635311223585016971,"Parsed as literal","list1"
635311223585026972,"ParseInternal","t:list2","78","TailOperator","78","80","","list2"
635311223585026972,"Parsed as literal",""
635311223585026972,"Parsed as literal","list2"
635311223585036972,"ParseInternal","@count([]) -> 0","0","AssignmentOperator","0","13","@count([]) "," 0"
635311223585036972,"ParseInternal","@count([]) ","0","FunctionCallOperator","1","6","count","[]"
635311223585036972,"Parsed as literal","count"
635311223585036972,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311223585046973,"Parsed as literal",""
635311223585046973,"Parsed as literal",""
635311223585046973,"Parsed as literal"," 0"
635311223585046973,"Invalid operator","@count([]) -> 0","0"
635311223585056973,"ParseInternal","@count([]) ","0","FunctionDeclarationOperator","1","6","count","[]"
635311223585056973,"Parsed as literal","count"
635311223585056973,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311223585066974,"Parsed as literal",""
635311223585066974,"Parsed as literal",""
635311223585066974,"Parsed as literal"," 0"
635311223585066974,"ParseInternal","@count(list) -> 1 + @count(t:list)","0","AssignmentOperator","0","15","@count(list) "," 1 + @count(t:list)"
635311223585076974,"ParseInternal","@count(list) ","0","FunctionCallOperator","1","6","count","list"
635311223585076974,"Parsed as literal","count"
635311223585076974,"Parsed as literal","list"
635311223585086975,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311223585086975,"Parsed as literal"," 1 "
635311223585086975,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311223585096976,"Parsed as literal","count"
635311223585096976,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311223585096976,"Parsed as literal",""
635311223585096976,"Parsed as literal","list"
635311223585106976,"Invalid operator","@count(list) -> 1 + @count(t:list)","0"
635311223585106976,"ParseInternal","@count(list) ","0","FunctionDeclarationOperator","1","6","count","list"
635311223585106976,"Parsed as literal","count"
635311223585106976,"Parsed as literal","list"
635311223585116977,"ParseInternal"," 1 + @count(t:list)","15","PlusOperator","15","19"," 1 "," @count(t:list)"
635311223585116977,"Parsed as literal"," 1 "
635311223585126977,"ParseInternal"," @count(t:list)","19","FunctionCallOperator","21","26","count","t:list"
635311223585126977,"Parsed as literal","count"
635311223585126977,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311223585136978,"Parsed as literal",""
635311223585136978,"Parsed as literal","list"
635311223585136978,"ParseInternal","@skip(0,list) -> list","0","AssignmentOperator","0","16","@skip(0,list) "," list"
635311223585136978,"ParseInternal","@skip(0,list) ","0","FunctionCallOperator","1","5","skip","0,list"
635311223585146978,"Parsed as literal","skip"
635311223585146978,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311223585146978,"Parsed as literal","0"
635311223585146978,"Parsed as literal","list"
635311223585156979,"Parsed as literal"," list"
635311223585156979,"Invalid operator","@skip(0,list) -> list","0"
635311223585156979,"ParseInternal","@skip(0,list) ","0","FunctionDeclarationOperator","1","5","skip","0,list"
635311223585156979,"Parsed as literal","skip"
635311223585166980,"ParseInternal","0,list","5","CommaOperator","5","7","0","list"
635311223585166980,"Parsed as literal","0"
635311223585166980,"Parsed as literal","list"
635311223585176980,"Parsed as literal"," list"
635311223585176980,"ParseInternal","@skip(n,list) -> @skip(n-1,t:list)","0","AssignmentOperator","0","16","@skip(n,list) "," @skip(n-1,t:list)"
635311223585176980,"ParseInternal","@skip(n,list) ","0","FunctionCallOperator","1","5","skip","n,list"
635311223585176980,"Parsed as literal","skip"
635311223585186981,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311223585186981,"Parsed as literal","n"
635311223585186981,"Parsed as literal","list"
635311223585186981,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311223585196981,"Parsed as literal","skip"
635311223585196981,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311223585196981,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311223585196981,"Parsed as literal","n"
635311223585206982,"Parsed as literal","1"
635311223585206982,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311223585206982,"Parsed as literal",""
635311223585216982,"Parsed as literal","list"
635311223585216982,"Invalid operator","@skip(n,list) -> @skip(n-1,t:list)","0"
635311223585216982,"ParseInternal","@skip(n,list) ","0","FunctionDeclarationOperator","1","5","skip","n,list"
635311223585216982,"Parsed as literal","skip"
635311223585226983,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311223585226983,"Parsed as literal","n"
635311223585226983,"Parsed as literal","list"
635311223585226983,"ParseInternal"," @skip(n-1,t:list)","16","FunctionCallOperator","18","22","skip","n-1,t:list"
635311223585236984,"Parsed as literal","skip"
635311223585236984,"ParseInternal","n-1,t:list","22","CommaOperator","22","26","n-1","t:list"
635311223585236984,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311223585236984,"Parsed as literal","n"
635311223585246984,"Parsed as literal","1"
635311223585246984,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311223585246984,"Parsed as literal",""
635311223585246984,"Parsed as literal","list"
635311223585256985,"ParseInternal","@take(1,list) -> h:list","0","AssignmentOperator","0","16","@take(1,list) "," h:list"
635311223585256985,"ParseInternal","@take(1,list) ","0","FunctionCallOperator","1","5","take","1,list"
635311223585256985,"Parsed as literal","take"
635311223585256985,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311223585266985,"Parsed as literal","1"
635311223585266985,"Parsed as literal","list"
635311223585266985,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311223585276986,"Parsed as literal"," "
635311223585276986,"Parsed as literal","list"
635311223585276986,"Invalid operator","@take(1,list) -> h:list","0"
635311223585276986,"ParseInternal","@take(1,list) ","0","FunctionDeclarationOperator","1","5","take","1,list"
635311223585286986,"Parsed as literal","take"
635311223585286986,"ParseInternal","1,list","5","CommaOperator","5","7","1","list"
635311223585286986,"Parsed as literal","1"
635311223585286986,"Parsed as literal","list"
635311223585296987,"ParseInternal"," h:list","16","HeadOperator","16","19"," ","list"
635311223585296987,"Parsed as literal"," "
635311223585296987,"Parsed as literal","list"
635311223585296987,"ParseInternal","@take(n,list) -> h:list & @take(n-1,t:list)","0","AssignmentOperator","0","16","@take(n,list) "," h:list & @take(n-1,t:list)"
635311223585306988,"ParseInternal","@take(n,list) ","0","FunctionCallOperator","1","5","take","n,list"
635311223585306988,"Parsed as literal","take"
635311223585306988,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311223585306988,"Parsed as literal","n"
635311223585316988,"Parsed as literal","list"
635311223585316988,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311223585316988,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311223585326989,"Parsed as literal"," "
635311223585326989,"Parsed as literal","list "
635311223585326989,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311223585326989,"Parsed as literal","take"
635311223585336989,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311223585336989,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311223585336989,"Parsed as literal","n"
635311223585336989,"Parsed as literal","1"
635311223585346990,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311223585346990,"Parsed as literal",""
635311223585346990,"Parsed as literal","list"
635311223585346990,"Invalid operator","@take(n,list) -> h:list & @take(n-1,t:list)","0"
635311223585356990,"ParseInternal","@take(n,list) ","0","FunctionDeclarationOperator","1","5","take","n,list"
635311223585356990,"Parsed as literal","take"
635311223585356990,"ParseInternal","n,list","5","CommaOperator","5","7","n","list"
635311223585356990,"Parsed as literal","n"
635311223585366991,"Parsed as literal","list"
635311223585366991,"ParseInternal"," h:list & @take(n-1,t:list)","16","ConcatOperator","16","25"," h:list "," @take(n-1,t:list)"
635311223585366991,"ParseInternal"," h:list ","16","HeadOperator","16","19"," ","list "
635311223585366991,"Parsed as literal"," "
635311223585376992,"Parsed as literal","list "
635311223585376992,"ParseInternal"," @take(n-1,t:list)","25","FunctionCallOperator","27","31","take","n-1,t:list"
635311223585376992,"Parsed as literal","take"
635311223585386992,"ParseInternal","n-1,t:list","31","CommaOperator","31","35","n-1","t:list"
635311223585386992,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311223585386992,"Parsed as literal","n"
635311223585386992,"Parsed as literal","1"
635311223585396993,"ParseInternal","t:list","35","TailOperator","35","37","","list"
635311223585396993,"Parsed as literal",""
635311223585396993,"Parsed as literal","list"
635311223585396993,"ParseInternal","@nthItem(list,0) -> []","0","AssignmentOperator","0","19","@nthItem(list,0) "," []"
635311223585406993,"ParseInternal","@nthItem(list,0) ","0","FunctionCallOperator","1","8","nthItem","list,0"
635311223585406993,"Parsed as literal","nthItem"
635311223585406993,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311223585406993,"Parsed as literal","list"
635311223585416994,"Parsed as literal","0"
635311223585416994,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311223585416994,"Parsed as literal",""
635311223585416994,"Parsed as literal",""
635311223585426994,"Invalid operator","@nthItem(list,0) -> []","0"
635311223585426994,"ParseInternal","@nthItem(list,0) ","0","FunctionDeclarationOperator","1","8","nthItem","list,0"
635311223585426994,"Parsed as literal","nthItem"
635311223585426994,"ParseInternal","list,0","8","CommaOperator","8","13","list","0"
635311223585436995,"Parsed as literal","list"
635311223585436995,"Parsed as literal","0"
635311223585436995,"ParseInternal"," []","19","OpenBracketOperator","20","19","",""
635311223585446996,"Parsed as literal",""
635311223585446996,"Parsed as literal",""
635311223585446996,"ParseInternal","@nthItem(list,1) -> h:list","0","AssignmentOperator","0","19","@nthItem(list,1) "," h:list"
635311223585446996,"ParseInternal","@nthItem(list,1) ","0","FunctionCallOperator","1","8","nthItem","list,1"
635311223585456996,"Parsed as literal","nthItem"
635311223585456996,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311223585456996,"Parsed as literal","list"
635311223585456996,"Parsed as literal","1"
635311223585466997,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311223585466997,"Parsed as literal"," "
635311223585466997,"Parsed as literal","list"
635311223585466997,"Invalid operator","@nthItem(list,1) -> h:list","0"
635311223585476997,"ParseInternal","@nthItem(list,1) ","0","FunctionDeclarationOperator","1","8","nthItem","list,1"
635311223585476997,"Parsed as literal","nthItem"
635311223585476997,"ParseInternal","list,1","8","CommaOperator","8","13","list","1"
635311223585476997,"Parsed as literal","list"
635311223585486998,"Parsed as literal","1"
635311223585486998,"ParseInternal"," h:list","19","HeadOperator","19","22"," ","list"
635311223585486998,"Parsed as literal"," "
635311223585486998,"Parsed as literal","list"
635311223585496998,"ParseInternal","@nthItem(list,n) -> @nthItem(t:list,n-1)","0","AssignmentOperator","0","19","@nthItem(list,n) "," @nthItem(t:list,n-1)"
635311223585496998,"ParseInternal","@nthItem(list,n) ","0","FunctionCallOperator","1","8","nthItem","list,n"
635311223585496998,"Parsed as literal","nthItem"
635311223585506999,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311223585506999,"Parsed as literal","list"
635311223585506999,"Parsed as literal","n"
635311223585506999,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311223585517000,"Parsed as literal","nthItem"
635311223585517000,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311223585517000,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311223585517000,"Parsed as literal",""
635311223585527000,"Parsed as literal","list"
635311223585527000,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311223585527000,"Parsed as literal","n"
635311223585527000,"Parsed as literal","1"
635311223585537001,"Invalid operator","@nthItem(list,n) -> @nthItem(t:list,n-1)","0"
635311223585537001,"ParseInternal","@nthItem(list,n) ","0","FunctionDeclarationOperator","1","8","nthItem","list,n"
635311223585537001,"Parsed as literal","nthItem"
635311223585547001,"ParseInternal","list,n","8","CommaOperator","8","13","list","n"
635311223585547001,"Parsed as literal","list"
635311223585547001,"Parsed as literal","n"
635311223585557002,"ParseInternal"," @nthItem(t:list,n-1)","19","FunctionCallOperator","21","28","nthItem","t:list,n-1"
635311223585557002,"Parsed as literal","nthItem"
635311223585557002,"ParseInternal","t:list,n-1","28","CommaOperator","28","35","t:list","n-1"
635311223585557002,"ParseInternal","t:list","28","TailOperator","28","30","","list"
635311223585567002,"Parsed as literal",""
635311223585567002,"Parsed as literal","list"
635311223585567002,"ParseInternal","n-1","35","MinusOperator","35","37","n","1"
635311223585577003,"Parsed as literal","n"
635311223585577003,"Parsed as literal","1"
635311223585577003,"ParseInternal","@makeRange(a,b|a=b) -> a","0","AssignmentOperator","0","22","@makeRange(a,b|a=b) "," a"
635311223585577003,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a=b"
635311223585587004,"Parsed as literal","makeRange"
635311223585587004,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311223585587004,"Parsed as literal","a"
635311223585587004,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311223585597004,"Parsed as literal","b"
635311223585597004,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311223585597004,"Parsed as literal","a"
635311223585597004,"Parsed as literal","b"
635311223585607005,"Parsed as literal"," a"
635311223585607005,"Invalid operator","@makeRange(a,b|a=b) -> a","0"
635311223585607005,"ParseInternal","@makeRange(a,b|a=b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a=b"
635311223585617005,"Parsed as literal","makeRange"
635311223585617005,"ParseInternal","a,b|a=b","10","CommaOperator","10","12","a","b|a=b"
635311223585617005,"Parsed as literal","a"
635311223585617005,"ParseInternal","b|a=b","12","PatternOperator","12","14","b","a=b"
635311223585627006,"Parsed as literal","b"
635311223585627006,"ParseInternal","a=b","14","EqualityOperator","14","16","a","b"
635311223585627006,"Parsed as literal","a"
635311223585627006,"Parsed as literal","b"
635311223585637006,"Parsed as literal"," a"
635311223585637006,"ParseInternal","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0","AssignmentOperator","0","22","@makeRange(a,b|a<b) "," a & @makeRange(a+1,b)"
635311223585637006,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionCallOperator","1","10","makeRange","a,b|a<b"
635311223585637006,"Parsed as literal","makeRange"
635311223585647007,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311223585647007,"Parsed as literal","a"
635311223585647007,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311223585647007,"Parsed as literal","b"
635311223585657008,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311223585657008,"Parsed as literal","a"
635311223585657008,"Parsed as literal","b"
635311223585667008,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311223585667008,"Parsed as literal"," a "
635311223585667008,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311223585667008,"Parsed as literal","makeRange"
635311223585677009,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311223585677009,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311223585677009,"Parsed as literal","a"
635311223585677009,"Parsed as literal","1"
635311223585687009,"Parsed as literal","b"
635311223585687009,"Invalid operator","@makeRange(a,b|a<b) -> a & @makeRange(a+1,b)","0"
635311223585687009,"ParseInternal","@makeRange(a,b|a<b) ","0","FunctionDeclarationOperator","1","10","makeRange","a,b|a<b"
635311223585687009,"Parsed as literal","makeRange"
635311223585697010,"ParseInternal","a,b|a<b","10","CommaOperator","10","12","a","b|a<b"
635311223585697010,"Parsed as literal","a"
635311223585697010,"ParseInternal","b|a<b","12","PatternOperator","12","14","b","a<b"
635311223585707010,"Parsed as literal","b"
635311223585707010,"ParseInternal","a<b","14","LessThanOperator","14","16","a","b"
635311223585707010,"Parsed as literal","a"
635311223585707010,"Parsed as literal","b"
635311223585717011,"ParseInternal"," a & @makeRange(a+1,b)","22","ConcatOperator","22","26"," a "," @makeRange(a+1,b)"
635311223585717011,"Parsed as literal"," a "
635311223585717011,"ParseInternal"," @makeRange(a+1,b)","26","FunctionCallOperator","28","37","makeRange","a+1,b"
635311223585717011,"Parsed as literal","makeRange"
635311223585727012,"ParseInternal","a+1,b","37","CommaOperator","37","41","a+1","b"
635311223585727012,"ParseInternal","a+1","37","PlusOperator","37","39","a","1"
635311223585727012,"Parsed as literal","a"
635311223585727012,"Parsed as literal","1"
635311223585737012,"Parsed as literal","b"
635311223585737012,"ParseInternal","@reverse([]) -> []","0","AssignmentOperator","0","15","@reverse([]) "," []"
635311223585737012,"ParseInternal","@reverse([]) ","0","FunctionCallOperator","1","8","reverse","[]"
635311223585747013,"Parsed as literal","reverse"
635311223585747013,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311223585747013,"Parsed as literal",""
635311223585747013,"Parsed as literal",""
635311223585757013,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311223585757013,"Parsed as literal",""
635311223585757013,"Parsed as literal",""
635311223585757013,"Invalid operator","@reverse([]) -> []","0"
635311223585767014,"ParseInternal","@reverse([]) ","0","FunctionDeclarationOperator","1","8","reverse","[]"
635311223585767014,"Parsed as literal","reverse"
635311223585767014,"ParseInternal","[]","8","OpenBracketOperator","8","8","",""
635311223585767014,"Parsed as literal",""
635311223585777014,"Parsed as literal",""
635311223585777014,"ParseInternal"," []","15","OpenBracketOperator","16","15","",""
635311223585777014,"Parsed as literal",""
635311223585777014,"Parsed as literal",""
635311223585787015,"ParseInternal","@reverse(list) -> @reverse(t:list) , t:list","0","AssignmentOperator","0","17","@reverse(list) "," @reverse(t:list) , t:list"
635311223585787015,"ParseInternal","@reverse(list) ","0","FunctionCallOperator","1","8","reverse","list"
635311223585787015,"Parsed as literal","reverse"
635311223585787015,"Parsed as literal","list"
635311223585797016,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311223585797016,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311223585797016,"Parsed as literal","reverse"
635311223585797016,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311223585807016,"Parsed as literal",""
635311223585807016,"Parsed as literal","list"
635311223585807016,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311223585807016,"Parsed as literal"," "
635311223585817017,"Parsed as literal","list"
635311223585817017,"Invalid operator","@reverse(list) -> @reverse(t:list) , t:list","0"
635311223585817017,"ParseInternal","@reverse(list) ","0","FunctionDeclarationOperator","1","8","reverse","list"
635311223585817017,"Parsed as literal","reverse"
635311223585827017,"Parsed as literal","list"
635311223585827017,"ParseInternal"," @reverse(t:list) , t:list","17","CommaOperator","17","36"," @reverse(t:list) "," t:list"
635311223585827017,"ParseInternal"," @reverse(t:list) ","17","FunctionCallOperator","19","26","reverse","t:list"
635311223585837018,"Parsed as literal","reverse"
635311223585837018,"ParseInternal","t:list","26","TailOperator","26","28","","list"
635311223585837018,"Parsed as literal",""
635311223585837018,"Parsed as literal","list"
635311223585847019,"ParseInternal"," t:list","36","TailOperator","36","39"," ","list"
635311223585847019,"Parsed as literal"," "
635311223585847019,"Parsed as literal","list"
635311223585847019,"ParseInternal","@max(list) -> @fold(@max,list)","0","AssignmentOperator","0","13","@max(list) "," @fold(@max,list)"
635311223585857019,"ParseInternal","@max(list) ","0","FunctionCallOperator","1","4","max","list"
635311223585857019,"Parsed as literal","max"
635311223585857019,"Parsed as literal","list"
635311223585857019,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311223585867020,"Parsed as literal","fold"
635311223585867020,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311223585867020,"ParseInternal","@max","19","FunctionCallOperator","20","23","max",""
635311223585867020,"Parsed as literal","max"
635311223585877020,"Parsed as literal",""
635311223585877020,"Invalid operator","@max","19"
635311223585877020,"ParseInternal","@max","19","FunctionDeclarationOperator","20","23","max",""
635311223585877020,"Parsed as literal","max"
635311223585887021,"Parsed as literal",""
635311223585887021,"Invalid operator","@max","19"
635311223585887021,"Parsed as literal","@max"
635311223585887021,"Parsed as literal","list"
635311223585897021,"Invalid operator","@max(list) -> @fold(@max,list)","0"
635311223585897021,"ParseInternal","@max(list) ","0","FunctionDeclarationOperator","1","4","max","list"
635311223585897021,"Parsed as literal","max"
635311223585907022,"Parsed as literal","list"
635311223585907022,"ParseInternal"," @fold(@max,list)","13","FunctionCallOperator","15","19","fold","@max,list"
635311223585907022,"Parsed as literal","fold"
635311223585907022,"ParseInternal","@max,list","19","CommaOperator","19","24","@max","list"
635311223585917023,"Parsed as literal","@max"
635311223585917023,"Parsed as literal","list"
635311223585917023,"ParseInternal","@elementAt(0,list) = 'list","0","EqualityOperator","0","20","@elementAt(0,list) "," 'list"
635311223585917023,"ParseInternal","@elementAt(0,list) ","0","FunctionCallOperator","1","10","elementAt","0,list"
635311223585927023,"Parsed as literal","elementAt"
635311223585927023,"ParseInternal","0,list","10","CommaOperator","10","12","0","list"
635311223585927023,"Parsed as literal","0"
635311223585927023,"Parsed as literal","list"
635311223585937024,"Parsed as literal"," 'list"
635311223585937024,"ParseInternal","@elementAt(n,list) = @elementAt(n-1,list')","0","EqualityOperator","0","20","@elementAt(n,list) "," @elementAt(n-1,list')"
635311223585937024,"ParseInternal","@elementAt(n,list) ","0","FunctionCallOperator","1","10","elementAt","n,list"
635311223585947024,"Parsed as literal","elementAt"
635311223585947024,"ParseInternal","n,list","10","CommaOperator","10","12","n","list"
635311223585947024,"Parsed as literal","n"
635311223585947024,"Parsed as literal","list"
635311223585957025,"ParseInternal"," @elementAt(n-1,list')","20","FunctionCallOperator","22","31","elementAt","n-1,list'"
635311223585957025,"Parsed as literal","elementAt"
635311223585957025,"ParseInternal","n-1,list'","31","CommaOperator","31","35","n-1","list'"
635311223585957025,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311223585967025,"Parsed as literal","n"
635311223585967025,"Parsed as literal","1"
635311223585967025,"Parsed as literal","list'"
635311223585967025,"StepEvaluate","->","Changed","Declared @zipWith"
635311223585977026,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311223585977026,"StepEvaluate","->","Changed","Declared @zipWith"
635311223585977026,"StepEvaluate","Declared @zipWith","Unchanged","Declared @zipWith"
635311223585977026,"StepEvaluate","->","Changed","Declared @count"
635311223585987027,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311223585987027,"StepEvaluate","->","Changed","Declared @count"
635311223585987027,"StepEvaluate","Declared @count","Unchanged","Declared @count"
635311223585987027,"StepEvaluate","->","Changed","Declared @skip"
635311223585997027,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311223585997027,"StepEvaluate","->","Changed","Declared @skip"
635311223585997027,"StepEvaluate","Declared @skip","Unchanged","Declared @skip"
635311223585997027,"StepEvaluate","->","Changed","Declared @take"
635311223585997027,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311223586007028,"StepEvaluate","->","Changed","Declared @take"
635311223586007028,"StepEvaluate","Declared @take","Unchanged","Declared @take"
635311223586007028,"StepEvaluate","->","Changed","Declared @nthItem"
635311223586007028,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311223586017028,"StepEvaluate","->","Changed","Declared @nthItem"
635311223586017028,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311223586017028,"StepEvaluate","->","Changed","Declared @nthItem"
635311223586017028,"StepEvaluate","Declared @nthItem","Unchanged","Declared @nthItem"
635311223586027029,"StepEvaluate","->","Changed","Declared @makeRange"
635311223586027029,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311223586027029,"StepEvaluate","->","Changed","Declared @makeRange"
635311223586027029,"StepEvaluate","Declared @makeRange","Unchanged","Declared @makeRange"
635311223586037029,"StepEvaluate","->","Changed","Declared @reverse"
635311223586037029,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311223586037029,"StepEvaluate","->","Changed","Declared @reverse"
635311223586037029,"StepEvaluate","Declared @reverse","Unchanged","Declared @reverse"
635311223586047030,"StepEvaluate","->","Changed","Declared @max"
635311223586047030,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311223586047030,"StepEvaluate","==","Unchanged","=="
635311223586047030,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311223586057031,"StepEvaluate","elementAt","Unchanged","elementAt"
635311223586057031,"StepEvaluate",",","Unchanged",","
635311223586057031,"StepEvaluate","0","Unchanged","0"
635311223586057031,"StepEvaluate",",","Unchanged",","
635311223586067031,"StepEvaluate","list","Unchanged","list"
635311223586067031,"StepEvaluate","'list","Unchanged","'list"
635311223586067031,"StepEvaluate","==","Unchanged","=="
635311223586067031,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311223586067031,"StepEvaluate","elementAt","Unchanged","elementAt"
635311223586077032,"StepEvaluate",",","Unchanged",","
635311223586077032,"StepEvaluate","n","Unchanged","n"
635311223586077032,"StepEvaluate",",","Unchanged",","
635311223586077032,"StepEvaluate","list","Unchanged","list"
635311223586087032,"StepEvaluate","@","Unchanged","Unable to resolve function: elementAt"
635311223586087032,"StepEvaluate","elementAt","Unchanged","elementAt"
635311223586087032,"StepEvaluate",",","Unchanged",","
635311223586087032,"StepEvaluate","-","Unchanged","-"
635311223586097033,"StepEvaluate","n","Unchanged","n"
635311223586097033,"StepEvaluate","1","Unchanged","1"
635311223586097033,"StepEvaluate",",","Unchanged",","
635311223586097033,"StepEvaluate","list'","Unchanged","list'"
635311223586107033,"StepEvaluate","[]","Changed","File imported"
635311223586107033,"StepEvaluate","File imported","Unchanged","File imported"
635311223586107033,"StepEvaluate","@","Changed","@"
635311223586107033,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223586117034,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223586117034,"StepEvaluate",",","Unchanged",","
635311223586117034,"StepEvaluate","@Arg","Changed","@Arg-M"
635311223586117034,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223586127035,"StepEvaluate","PAT@-M","Changed","[]"
635311223586127035,"StepEvaluate","SEL@import","Changed","[]"
635311223586127035,"StepEvaluate","@","Changed","[]"
635311223586127035,"ParseInternal","@naturalNumbers() -> @naturalNumbers(0)","0","AssignmentOperator","0","20","@naturalNumbers() "," @naturalNumbers(0)"
635311223586137035,"ParseInternal","@naturalNumbers() ","0","FunctionCallOperator","1","15","naturalNumbers","[]"
635311223586137035,"Parsed as literal","naturalNumbers"
635311223586137035,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311223586137035,"Parsed as literal",""
635311223586147036,"Parsed as literal",""
635311223586147036,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311223586147036,"Parsed as literal","naturalNumbers"
635311223586147036,"Parsed as literal","0"
635311223586157036,"Invalid operator","@naturalNumbers() -> @naturalNumbers(0)","0"
635311223586157036,"ParseInternal","@naturalNumbers() ","0","FunctionDeclarationOperator","1","15","naturalNumbers","[]"
635311223586157036,"Parsed as literal","naturalNumbers"
635311223586167037,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311223586167037,"Parsed as literal",""
635311223586177037,"Parsed as literal",""
635311223586177037,"ParseInternal"," @naturalNumbers(0)","20","FunctionCallOperator","22","36","naturalNumbers","0"
635311223586177037,"Parsed as literal","naturalNumbers"
635311223586177037,"Parsed as literal","0"
635311223586187038,"ParseInternal","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0","AssignmentOperator","0","21","@naturalNumbers(n) "," n & @naturalNumbers(n+1)"
635311223586187038,"ParseInternal","@naturalNumbers(n) ","0","FunctionCallOperator","1","15","naturalNumbers","n"
635311223586187038,"Parsed as literal","naturalNumbers"
635311223586197039,"Parsed as literal","n"
635311223586197039,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311223586197039,"Parsed as literal"," n "
635311223586197039,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311223586207039,"Parsed as literal","naturalNumbers"
635311223586207039,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311223586207039,"Parsed as literal","n"
635311223586217040,"Parsed as literal","1"
635311223586217040,"Invalid operator","@naturalNumbers(n) -> n & @naturalNumbers(n+1)","0"
635311223586217040,"ParseInternal","@naturalNumbers(n) ","0","FunctionDeclarationOperator","1","15","naturalNumbers","n"
635311223586217040,"Parsed as literal","naturalNumbers"
635311223586227040,"Parsed as literal","n"
635311223586227040,"ParseInternal"," n & @naturalNumbers(n+1)","21","ConcatOperator","21","25"," n "," @naturalNumbers(n+1)"
635311223586227040,"Parsed as literal"," n "
635311223586227040,"ParseInternal"," @naturalNumbers(n+1)","25","FunctionCallOperator","27","41","naturalNumbers","n+1"
635311223586237041,"Parsed as literal","naturalNumbers"
635311223586237041,"ParseInternal","n+1","41","PlusOperator","41","43","n","1"
635311223586237041,"Parsed as literal","n"
635311223586237041,"Parsed as literal","1"
635311223586247041,"ParseInternal","@max(a,b|a<b)->b","0","AssignmentOperator","0","15","@max(a,b|a<b)","b"
635311223586247041,"ParseInternal","@max(a,b|a<b)","0","FunctionCallOperator","1","4","max","a,b|a<b"
635311223586247041,"Parsed as literal","max"
635311223586247041,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311223586257042,"Parsed as literal","a"
635311223586257042,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311223586257042,"Parsed as literal","b"
635311223586257042,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311223586267043,"Parsed as literal","a"
635311223586267043,"Parsed as literal","b"
635311223586267043,"Parsed as literal","b"
635311223586277043,"Invalid operator","@max(a,b|a<b)->b","0"
635311223586277043,"ParseInternal","@max(a,b|a<b)","0","FunctionDeclarationOperator","1","4","max","a,b|a<b"
635311223586277043,"Parsed as literal","max"
635311223586277043,"ParseInternal","a,b|a<b","4","CommaOperator","4","6","a","b|a<b"
635311223586287044,"Parsed as literal","a"
635311223586287044,"ParseInternal","b|a<b","6","PatternOperator","6","8","b","a<b"
635311223586287044,"Parsed as literal","b"
635311223586287044,"ParseInternal","a<b","8","LessThanOperator","8","10","a","b"
635311223586297044,"Parsed as literal","a"
635311223586297044,"Parsed as literal","b"
635311223586297044,"Parsed as literal","b"
635311223586297044,"ParseInternal","@max(a,b)->a","0","AssignmentOperator","0","11","@max(a,b)","a"
635311223586307045,"ParseInternal","@max(a,b)","0","FunctionCallOperator","1","4","max","a,b"
635311223586307045,"Parsed as literal","max"
635311223586307045,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311223586307045,"Parsed as literal","a"
635311223586317045,"Parsed as literal","b"
635311223586317045,"Parsed as literal","a"
635311223586317045,"Invalid operator","@max(a,b)->a","0"
635311223586327046,"ParseInternal","@max(a,b)","0","FunctionDeclarationOperator","1","4","max","a,b"
635311223586327046,"Parsed as literal","max"
635311223586327046,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311223586327046,"Parsed as literal","a"
635311223586337047,"Parsed as literal","b"
635311223586337047,"Parsed as literal","a"
635311223586337047,"ParseInternal","@random(0) -> 0","0","AssignmentOperator","0","13","@random(0) "," 0"
635311223586337047,"ParseInternal","@random(0) ","0","FunctionCallOperator","1","7","random","0"
635311223586347047,"Parsed as literal","random"
635311223586347047,"Parsed as literal","0"
635311223586347047,"Parsed as literal"," 0"
635311223586347047,"Invalid operator","@random(0) -> 0","0"
635311223586357048,"ParseInternal","@random(0) ","0","FunctionDeclarationOperator","1","7","random","0"
635311223586357048,"Parsed as literal","random"
635311223586357048,"Parsed as literal","0"
635311223586357048,"Parsed as literal"," 0"
635311223586367048,"ParseInternal","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0","AssignmentOperator","0","13","@random(n) "," (1664525 * @random(n-1) + 1013904223) % 4294967296"
635311223586367048,"ParseInternal","@random(n) ","0","FunctionCallOperator","1","7","random","n"
635311223586367048,"Parsed as literal","random"
635311223586377049,"Parsed as literal","n"
635311223586377049,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311223586377049,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311223586377049,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311223586387049,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311223586387049,"Parsed as literal","1664525 "
635311223586387049,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311223586397050,"Parsed as literal","random"
635311223586397050,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311223586397050,"Parsed as literal","n"
635311223586397050,"Parsed as literal","1"
635311223586407051,"Parsed as literal"," 1013904223"
635311223586407051,"Parsed as literal",""
635311223586407051,"Parsed as literal"," 4294967296"
635311223586407051,"Invalid operator","@random(n) -> (1664525 * @random(n-1) + 1013904223) % 4294967296","0"
635311223586417051,"ParseInternal","@random(n) ","0","FunctionDeclarationOperator","1","7","random","n"
635311223586417051,"Parsed as literal","random"
635311223586417051,"Parsed as literal","n"
635311223586417051,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) % 4294967296","13","ModOperator","13","53"," (1664525 * @random(n-1) + 1013904223) "," 4294967296"
635311223586427052,"ParseInternal"," (1664525 * @random(n-1) + 1013904223) ","13","OpenParenOperator","14","13","1664525 * @random(n-1) + 1013904223",""
635311223586427052,"ParseInternal","1664525 * @random(n-1) + 1013904223","14","PlusOperator","14","38","1664525 * @random(n-1) "," 1013904223"
635311223586427052,"ParseInternal","1664525 * @random(n-1) ","14","TimesOperator","14","23","1664525 "," @random(n-1) "
635311223586437052,"Parsed as literal","1664525 "
635311223586437052,"ParseInternal"," @random(n-1) ","23","FunctionCallOperator","25","31","random","n-1"
635311223586437052,"Parsed as literal","random"
635311223586437052,"ParseInternal","n-1","31","MinusOperator","31","33","n","1"
635311223586447053,"Parsed as literal","n"
635311223586447053,"Parsed as literal","1"
635311223586447053,"Parsed as literal"," 1013904223"
635311223586447053,"Parsed as literal",""
635311223586457053,"Parsed as literal"," 4294967296"
635311223586457053,"ParseInternal","@gcd(a,0) -> a","0","AssignmentOperator","0","12","@gcd(a,0) "," a"
635311223586457053,"ParseInternal","@gcd(a,0) ","0","FunctionCallOperator","1","4","gcd","a,0"
635311223586457053,"Parsed as literal","gcd"
635311223586467054,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311223586467054,"Parsed as literal","a"
635311223586467054,"Parsed as literal","0"
635311223586467054,"Parsed as literal"," a"
635311223586477055,"Invalid operator","@gcd(a,0) -> a","0"
635311223586477055,"ParseInternal","@gcd(a,0) ","0","FunctionDeclarationOperator","1","4","gcd","a,0"
635311223586477055,"Parsed as literal","gcd"
635311223586477055,"ParseInternal","a,0","4","CommaOperator","4","6","a","0"
635311223586487055,"Parsed as literal","a"
635311223586487055,"Parsed as literal","0"
635311223586487055,"Parsed as literal"," a"
635311223586497056,"ParseInternal","@gcd(a,b) -> @gcd(b,a % b)","0","AssignmentOperator","0","12","@gcd(a,b) "," @gcd(b,a % b)"
635311223586497056,"ParseInternal","@gcd(a,b) ","0","FunctionCallOperator","1","4","gcd","a,b"
635311223586497056,"Parsed as literal","gcd"
635311223586497056,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311223586507056,"Parsed as literal","a"
635311223586507056,"Parsed as literal","b"
635311223586507056,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311223586507056,"Parsed as literal","gcd"
635311223586517057,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311223586517057,"Parsed as literal","b"
635311223586517057,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311223586517057,"Parsed as literal","a "
635311223586527057,"Parsed as literal"," b"
635311223586527057,"Invalid operator","@gcd(a,b) -> @gcd(b,a % b)","0"
635311223586527057,"ParseInternal","@gcd(a,b) ","0","FunctionDeclarationOperator","1","4","gcd","a,b"
635311223586527057,"Parsed as literal","gcd"
635311223586537058,"ParseInternal","a,b","4","CommaOperator","4","6","a","b"
635311223586537058,"Parsed as literal","a"
635311223586537058,"Parsed as literal","b"
635311223586537058,"ParseInternal"," @gcd(b,a % b)","12","FunctionCallOperator","14","17","gcd","b,a % b"
635311223586547059,"Parsed as literal","gcd"
635311223586547059,"ParseInternal","b,a % b","17","CommaOperator","17","19","b","a % b"
635311223586547059,"Parsed as literal","b"
635311223586547059,"ParseInternal","a % b","19","ModOperator","19","22","a "," b"
635311223586557059,"Parsed as literal","a "
635311223586557059,"Parsed as literal"," b"
635311223586557059,"ParseInternal","@gcd(list) -> @fold(@gcd,list)","0","AssignmentOperator","0","13","@gcd(list) "," @fold(@gcd,list)"
635311223586567060,"ParseInternal","@gcd(list) ","0","FunctionCallOperator","1","4","gcd","list"
635311223586567060,"Parsed as literal","gcd"
635311223586567060,"Parsed as literal","list"
635311223586567060,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311223586577060,"Parsed as literal","fold"
635311223586577060,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311223586577060,"ParseInternal","@gcd","19","FunctionCallOperator","20","23","gcd",""
635311223586577060,"Parsed as literal","gcd"
635311223586587061,"Parsed as literal",""
635311223586587061,"Invalid operator","@gcd","19"
635311223586587061,"ParseInternal","@gcd","19","FunctionDeclarationOperator","20","23","gcd",""
635311223586587061,"Parsed as literal","gcd"
635311223586597061,"Parsed as literal",""
635311223586597061,"Invalid operator","@gcd","19"
635311223586597061,"Parsed as literal","@gcd"
635311223586597061,"Parsed as literal","list"
635311223586607062,"Invalid operator","@gcd(list) -> @fold(@gcd,list)","0"
635311223586607062,"ParseInternal","@gcd(list) ","0","FunctionDeclarationOperator","1","4","gcd","list"
635311223586607062,"Parsed as literal","gcd"
635311223586607062,"Parsed as literal","list"
635311223586617063,"ParseInternal"," @fold(@gcd,list)","13","FunctionCallOperator","15","19","fold","@gcd,list"
635311223586617063,"Parsed as literal","fold"
635311223586617063,"ParseInternal","@gcd,list","19","CommaOperator","19","24","@gcd","list"
635311223586617063,"Parsed as literal","@gcd"
635311223586627063,"Parsed as literal","list"
635311223586627063,"ParseInternal","@fib(0) -> 1","0","AssignmentOperator","0","10","@fib(0) "," 1"
635311223586627063,"ParseInternal","@fib(0) ","0","FunctionCallOperator","1","4","fib","0"
635311223586637064,"Parsed as literal","fib"
635311223586637064,"Parsed as literal","0"
635311223586637064,"Parsed as literal"," 1"
635311223586637064,"Invalid operator","@fib(0) -> 1","0"
635311223586647064,"ParseInternal","@fib(0) ","0","FunctionDeclarationOperator","1","4","fib","0"
635311223586647064,"Parsed as literal","fib"
635311223586647064,"Parsed as literal","0"
635311223586647064,"Parsed as literal"," 1"
635311223586657065,"ParseInternal","@fib(1) -> 1","0","AssignmentOperator","0","10","@fib(1) "," 1"
635311223586657065,"ParseInternal","@fib(1) ","0","FunctionCallOperator","1","4","fib","1"
635311223586657065,"Parsed as literal","fib"
635311223586657065,"Parsed as literal","1"
635311223586667065,"Parsed as literal"," 1"
635311223586667065,"Invalid operator","@fib(1) -> 1","0"
635311223586667065,"ParseInternal","@fib(1) ","0","FunctionDeclarationOperator","1","4","fib","1"
635311223586667065,"Parsed as literal","fib"
635311223586677066,"Parsed as literal","1"
635311223586677066,"Parsed as literal"," 1"
635311223586677066,"ParseInternal","@fib(n) -> @fib(n-2) + @fib(n-1)","0","AssignmentOperator","0","10","@fib(n) "," @fib(n-2) + @fib(n-1)"
635311223586687067,"ParseInternal","@fib(n) ","0","FunctionCallOperator","1","4","fib","n"
635311223586687067,"Parsed as literal","fib"
635311223586687067,"Parsed as literal","n"
635311223586687067,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311223586697067,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311223586697067,"Parsed as literal","fib"
635311223586697067,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311223586697067,"Parsed as literal","n"
635311223586707068,"Parsed as literal","2"
635311223586707068,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311223586707068,"Parsed as literal","fib"
635311223586707068,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311223586717068,"Parsed as literal","n"
635311223586717068,"Parsed as literal","1"
635311223586717068,"Invalid operator","@fib(n) -> @fib(n-2) + @fib(n-1)","0"
635311223586727069,"ParseInternal","@fib(n) ","0","FunctionDeclarationOperator","1","4","fib","n"
635311223586727069,"Parsed as literal","fib"
635311223586727069,"Parsed as literal","n"
635311223586727069,"ParseInternal"," @fib(n-2) + @fib(n-1)","10","PlusOperator","10","22"," @fib(n-2) "," @fib(n-1)"
635311223586737069,"ParseInternal"," @fib(n-2) ","10","FunctionCallOperator","12","15","fib","n-2"
635311223586737069,"Parsed as literal","fib"
635311223586737069,"ParseInternal","n-2","15","MinusOperator","15","17","n","2"
635311223586737069,"Parsed as literal","n"
635311223586747070,"Parsed as literal","2"
635311223586747070,"ParseInternal"," @fib(n-1)","22","FunctionCallOperator","24","27","fib","n-1"
635311223586747070,"Parsed as literal","fib"
635311223586747070,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311223586757071,"Parsed as literal","n"
635311223586757071,"Parsed as literal","1"
635311223586757071,"ParseInternal","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0","AssignmentOperator","0","10","@fib2() "," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311223586767071,"ParseInternal","@fib2() ","0","FunctionCallOperator","1","5","fib2","[]"
635311223586767071,"Parsed as literal","fib2"
635311223586767071,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311223586767071,"Parsed as literal",""
635311223586777072,"Parsed as literal",""
635311223586777072,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311223586777072,"Parsed as literal"," 0 "
635311223586787072,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311223586787072,"Parsed as literal"," 1 "
635311223586787072,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311223586787072,"Parsed as literal","zipWith"
635311223586797073,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","AssignmentOperator","27","35","@(a,b)","a+b,@fib2(), t:@fib2()"
635311223586797073,"ParseInternal","@(a,b)","27","FunctionCallOperator","28","28","","a,b"
635311223586797073,"Parsed as literal",""
635311223586797073,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311223586807073,"Parsed as literal","a"
635311223586807073,"Parsed as literal","b"
635311223586807073,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311223586807073,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311223586817074,"Parsed as literal","a"
635311223586817074,"Parsed as literal","b"
635311223586817074,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311223586827075,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311223586827075,"Parsed as literal","fib2"
635311223586827075,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311223586827075,"Parsed as literal",""
635311223586837075,"Parsed as literal",""
635311223586837075,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311223586837075,"Parsed as literal"," "
635311223586837075,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311223586847076,"Parsed as literal","fib2"
635311223586847076,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311223586847076,"Parsed as literal",""
635311223586847076,"Parsed as literal",""
635311223586857076,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311223586857076,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311223586857076,"Parsed as literal",""
635311223586857076,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311223586867077,"Parsed as literal","a"
635311223586867077,"Parsed as literal","b"
635311223586867077,"ParseInternal","a+b,@fib2(), t:@fib2()","35","CommaOperator","35","39","a+b","@fib2(), t:@fib2()"
635311223586867077,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311223586877077,"Parsed as literal","a"
635311223586877077,"Parsed as literal","b"
635311223586877077,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311223586887078,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311223586887078,"Parsed as literal","fib2"
635311223586887078,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311223586887078,"Parsed as literal",""
635311223586897079,"Parsed as literal",""
635311223586897079,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311223586897079,"Parsed as literal"," "
635311223586897079,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311223586907079,"Parsed as literal","fib2"
635311223586907079,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311223586907079,"Parsed as literal",""
635311223586907079,"Parsed as literal",""
635311223586917080,"Invalid operator","@(a,b)->a+b,@fib2(), t:@fib2()","27"
635311223586917080,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311223586917080,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311223586927080,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311223586927080,"Parsed as literal",""
635311223586927080,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311223586927080,"Parsed as literal","a"
635311223586937081,"Parsed as literal","b"
635311223586937081,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311223586937081,"Parsed as literal","a"
635311223586937081,"Parsed as literal","b"
635311223586947081,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311223586947081,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311223586947081,"Parsed as literal","fib2"
635311223586957082,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311223586957082,"Parsed as literal",""
635311223586957082,"Parsed as literal",""
635311223586957082,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311223586967083,"Parsed as literal"," "
635311223586967083,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311223586967083,"Parsed as literal","fib2"
635311223586967083,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311223586977083,"Parsed as literal",""
635311223586977083,"Parsed as literal",""
635311223586977083,"Invalid operator","@fib2() -> 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","0"
635311223586977083,"ParseInternal","@fib2() ","0","FunctionDeclarationOperator","1","5","fib2","[]"
635311223586987084,"Parsed as literal","fib2"
635311223586987084,"ParseInternal","[]","5","OpenBracketOperator","5","5","",""
635311223586987084,"Parsed as literal",""
635311223586987084,"Parsed as literal",""
635311223586997084,"ParseInternal"," 0 & 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","10","ConcatOperator","10","14"," 0 "," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311223586997084,"Parsed as literal"," 0 "
635311223587007085,"ParseInternal"," 1 & @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","14","ConcatOperator","14","18"," 1 "," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())"
635311223587007085,"Parsed as literal"," 1 "
635311223587017085,"ParseInternal"," @zipWith(@(a,b)->a+b,@fib2(), t:@fib2())","18","FunctionCallOperator","20","27","zipWith","@(a,b)->a+b,@fib2(), t:@fib2()"
635311223587017085,"Parsed as literal","zipWith"
635311223587017085,"ParseInternal","@(a,b)->a+b,@fib2(), t:@fib2()","27","CommaOperator","27","39","@(a,b)->a+b","@fib2(), t:@fib2()"
635311223587017085,"ParseInternal","@(a,b)->a+b","27","AnonAssignmentOperator","27","35","@(a,b)","a+b"
635311223587027086,"ParseInternal","@(a,b)","27","FunctionDeclarationOperator","28","28","","a,b"
635311223587027086,"Parsed as literal",""
635311223587027086,"ParseInternal","a,b","28","CommaOperator","28","30","a","b"
635311223587027086,"Parsed as literal","a"
635311223587037087,"Parsed as literal","b"
635311223587037087,"ParseInternal","a+b","35","PlusOperator","35","37","a","b"
635311223587037087,"Parsed as literal","a"
635311223587037087,"Parsed as literal","b"
635311223587047087,"ParseInternal","@fib2(), t:@fib2()","39","CommaOperator","39","47","@fib2()"," t:@fib2()"
635311223587047087,"ParseInternal","@fib2()","39","FunctionCallOperator","40","44","fib2","[]"
635311223587047087,"Parsed as literal","fib2"
635311223587057088,"ParseInternal","[]","44","OpenBracketOperator","44","44","",""
635311223587057088,"Parsed as literal",""
635311223587057088,"Parsed as literal",""
635311223587067088,"ParseInternal"," t:@fib2()","47","TailOperator","47","50"," ","@fib2()"
635311223587067088,"Parsed as literal"," "
635311223587067088,"ParseInternal","@fib2()","50","FunctionCallOperator","51","55","fib2","[]"
635311223587077089,"Parsed as literal","fib2"
635311223587077089,"ParseInternal","[]","55","OpenBracketOperator","55","55","",""
635311223587077089,"Parsed as literal",""
635311223587077089,"Parsed as literal",""
635311223587087089,"ParseInternal","@fib2(n) -> @take(n,@fib2())","0","AssignmentOperator","0","11","@fib2(n) "," @take(n,@fib2())"
635311223587087089,"ParseInternal","@fib2(n) ","0","FunctionCallOperator","1","5","fib2","n"
635311223587087089,"Parsed as literal","fib2"
635311223587097090,"Parsed as literal","n"
635311223587097090,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311223587097090,"Parsed as literal","take"
635311223587097090,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311223587107091,"Parsed as literal","n"
635311223587107091,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311223587107091,"Parsed as literal","fib2"
635311223587107091,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311223587117091,"Parsed as literal",""
635311223587117091,"Parsed as literal",""
635311223587117091,"Invalid operator","@fib2(n) -> @take(n,@fib2())","0"
635311223587117091,"ParseInternal","@fib2(n) ","0","FunctionDeclarationOperator","1","5","fib2","n"
635311223587127092,"Parsed as literal","fib2"
635311223587127092,"Parsed as literal","n"
635311223587127092,"ParseInternal"," @take(n,@fib2())","11","FunctionCallOperator","13","17","take","n,@fib2()"
635311223587137092,"Parsed as literal","take"
635311223587137092,"ParseInternal","n,@fib2()","17","CommaOperator","17","19","n","@fib2()"
635311223587137092,"Parsed as literal","n"
635311223587137092,"ParseInternal","@fib2()","19","FunctionCallOperator","20","24","fib2","[]"
635311223587147093,"Parsed as literal","fib2"
635311223587147093,"ParseInternal","[]","24","OpenBracketOperator","24","24","",""
635311223587147093,"Parsed as literal",""
635311223587147093,"Parsed as literal",""
635311223587157093,"ParseInternal","@fac(0) -> 1","0","AssignmentOperator","0","10","@fac(0) "," 1"
635311223587157093,"ParseInternal","@fac(0) ","0","FunctionCallOperator","1","4","fac","0"
635311223587157093,"Parsed as literal","fac"
635311223587157093,"Parsed as literal","0"
635311223587167094,"Parsed as literal"," 1"
635311223587167094,"Invalid operator","@fac(0) -> 1","0"
635311223587167094,"ParseInternal","@fac(0) ","0","FunctionDeclarationOperator","1","4","fac","0"
635311223587167094,"Parsed as literal","fac"
635311223587177095,"Parsed as literal","0"
635311223587177095,"Parsed as literal"," 1"
635311223587177095,"ParseInternal","@fac(n) -> n * @fac(n-1)","0","AssignmentOperator","0","10","@fac(n) "," n * @fac(n-1)"
635311223587187095,"ParseInternal","@fac(n) ","0","FunctionCallOperator","1","4","fac","n"
635311223587187095,"Parsed as literal","fac"
635311223587187095,"Parsed as literal","n"
635311223587187095,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311223587197096,"Parsed as literal"," n "
635311223587197096,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311223587197096,"Parsed as literal","fac"
635311223587197096,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311223587207096,"Parsed as literal","n"
635311223587207096,"Parsed as literal","1"
635311223587207096,"Invalid operator","@fac(n) -> n * @fac(n-1)","0"
635311223587207096,"ParseInternal","@fac(n) ","0","FunctionDeclarationOperator","1","4","fac","n"
635311223587217097,"Parsed as literal","fac"
635311223587217097,"Parsed as literal","n"
635311223587217097,"ParseInternal"," n * @fac(n-1)","10","TimesOperator","10","14"," n "," @fac(n-1)"
635311223587217097,"Parsed as literal"," n "
635311223587227097,"ParseInternal"," @fac(n-1)","14","FunctionCallOperator","16","19","fac","n-1"
635311223587227097,"Parsed as literal","fac"
635311223587227097,"ParseInternal","n-1","19","MinusOperator","19","21","n","1"
635311223587237098,"Parsed as literal","n"
635311223587237098,"Parsed as literal","1"
635311223587237098,"ParseInternal","@pow(num,0) -> 1","0","AssignmentOperator","0","14","@pow(num,0) "," 1"
635311223587237098,"ParseInternal","@pow(num,0) ","0","FunctionCallOperator","1","4","pow","num,0"
635311223587247099,"Parsed as literal","pow"
635311223587247099,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311223587247099,"Parsed as literal","num"
635311223587247099,"Parsed as literal","0"
635311223587257099,"Parsed as literal"," 1"
635311223587257099,"Invalid operator","@pow(num,0) -> 1","0"
635311223587257099,"ParseInternal","@pow(num,0) ","0","FunctionDeclarationOperator","1","4","pow","num,0"
635311223587257099,"Parsed as literal","pow"
635311223587267100,"ParseInternal","num,0","4","CommaOperator","4","8","num","0"
635311223587267100,"Parsed as literal","num"
635311223587267100,"Parsed as literal","0"
635311223587267100,"Parsed as literal"," 1"
635311223587277100,"ParseInternal","@pow(num,1) -> num","0","AssignmentOperator","0","14","@pow(num,1) "," num"
635311223587277100,"ParseInternal","@pow(num,1) ","0","FunctionCallOperator","1","4","pow","num,1"
635311223587277100,"Parsed as literal","pow"
635311223587287101,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311223587287101,"Parsed as literal","num"
635311223587287101,"Parsed as literal","1"
635311223587287101,"Parsed as literal"," num"
635311223587297101,"Invalid operator","@pow(num,1) -> num","0"
635311223587297101,"ParseInternal","@pow(num,1) ","0","FunctionDeclarationOperator","1","4","pow","num,1"
635311223587297101,"Parsed as literal","pow"
635311223587297101,"ParseInternal","num,1","4","CommaOperator","4","8","num","1"
635311223587307102,"Parsed as literal","num"
635311223587307102,"Parsed as literal","1"
635311223587307102,"Parsed as literal"," num"
635311223587307102,"ParseInternal","@pow(num, power) -> num * @pow(num,power-1)","0","AssignmentOperator","0","19","@pow(num, power) "," num * @pow(num,power-1)"
635311223587317103,"ParseInternal","@pow(num, power) ","0","FunctionCallOperator","1","4","pow","num, power"
635311223587317103,"Parsed as literal","pow"
635311223587317103,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311223587317103,"Parsed as literal","num"
635311223587327103,"Parsed as literal"," power"
635311223587327103,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311223587327103,"Parsed as literal"," num "
635311223587337104,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311223587337104,"Parsed as literal","pow"
635311223587337104,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311223587337104,"Parsed as literal","num"
635311223587347104,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311223587347104,"Parsed as literal","power"
635311223587347104,"Parsed as literal","1"
635311223587347104,"Invalid operator","@pow(num, power) -> num * @pow(num,power-1)","0"
635311223587357105,"ParseInternal","@pow(num, power) ","0","FunctionDeclarationOperator","1","4","pow","num, power"
635311223587357105,"Parsed as literal","pow"
635311223587357105,"ParseInternal","num, power","4","CommaOperator","4","8","num"," power"
635311223587357105,"Parsed as literal","num"
635311223587367105,"Parsed as literal"," power"
635311223587367105,"ParseInternal"," num * @pow(num,power-1)","19","TimesOperator","19","25"," num "," @pow(num,power-1)"
635311223587367105,"Parsed as literal"," num "
635311223587367105,"ParseInternal"," @pow(num,power-1)","25","FunctionCallOperator","27","30","pow","num,power-1"
635311223587377106,"Parsed as literal","pow"
635311223587377106,"ParseInternal","num,power-1","30","CommaOperator","30","34","num","power-1"
635311223587377106,"Parsed as literal","num"
635311223587377106,"ParseInternal","power-1","34","MinusOperator","34","40","power","1"
635311223587387107,"Parsed as literal","power"
635311223587387107,"Parsed as literal","1"
635311223587387107,"ParseInternal","@upArrow(a,b,1) -> @pow(a,b)","0","AssignmentOperator","0","18","@upArrow(a,b,1) "," @pow(a,b)"
635311223587397107,"ParseInternal","@upArrow(a,b,1) ","0","FunctionCallOperator","1","8","upArrow","a,b,1"
635311223587397107,"Parsed as literal","upArrow"
635311223587397107,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311223587397107,"Parsed as literal","a"
635311223587407108,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311223587407108,"Parsed as literal","b"
635311223587407108,"Parsed as literal","1"
635311223587407108,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311223587417108,"Parsed as literal","pow"
635311223587417108,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311223587417108,"Parsed as literal","a"
635311223587417108,"Parsed as literal","b"
635311223587427109,"Invalid operator","@upArrow(a,b,1) -> @pow(a,b)","0"
635311223587427109,"ParseInternal","@upArrow(a,b,1) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,1"
635311223587427109,"Parsed as literal","upArrow"
635311223587427109,"ParseInternal","a,b,1","8","CommaOperator","8","10","a","b,1"
635311223587437109,"Parsed as literal","a"
635311223587437109,"ParseInternal","b,1","10","CommaOperator","10","12","b","1"
635311223587437109,"Parsed as literal","b"
635311223587437109,"Parsed as literal","1"
635311223587447110,"ParseInternal"," @pow(a,b)","18","FunctionCallOperator","20","23","pow","a,b"
635311223587447110,"Parsed as literal","pow"
635311223587447110,"ParseInternal","a,b","23","CommaOperator","23","25","a","b"
635311223587457111,"Parsed as literal","a"
635311223587457111,"Parsed as literal","b"
635311223587457111,"ParseInternal","@upArrow(a,1,n) -> a","0","AssignmentOperator","0","18","@upArrow(a,1,n) "," a"
635311223587457111,"ParseInternal","@upArrow(a,1,n) ","0","FunctionCallOperator","1","8","upArrow","a,1,n"
635311223587467111,"Parsed as literal","upArrow"
635311223587467111,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311223587467111,"Parsed as literal","a"
635311223587467111,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311223587477112,"Parsed as literal","1"
635311223587477112,"Parsed as literal","n"
635311223587477112,"Parsed as literal"," a"
635311223587477112,"Invalid operator","@upArrow(a,1,n) -> a","0"
635311223587487112,"ParseInternal","@upArrow(a,1,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,1,n"
635311223587487112,"Parsed as literal","upArrow"
635311223587487112,"ParseInternal","a,1,n","8","CommaOperator","8","10","a","1,n"
635311223587487112,"Parsed as literal","a"
635311223587497113,"ParseInternal","1,n","10","CommaOperator","10","12","1","n"
635311223587497113,"Parsed as literal","1"
635311223587497113,"Parsed as literal","n"
635311223587507113,"Parsed as literal"," a"
635311223587507113,"ParseInternal","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0","AssignmentOperator","0","18","@upArrow(a,b,n) "," @upArrow(a, @upArrow(a,b-1,n),n-1)"
635311223587507113,"ParseInternal","@upArrow(a,b,n) ","0","FunctionCallOperator","1","8","upArrow","a,b,n"
635311223587507113,"Parsed as literal","upArrow"
635311223587517114,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311223587517114,"Parsed as literal","a"
635311223587517114,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311223587517114,"Parsed as literal","b"
635311223587527115,"Parsed as literal","n"
635311223587527115,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311223587527115,"Parsed as literal","upArrow"
635311223587537115,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311223587537115,"Parsed as literal","a"
635311223587537115,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311223587537115,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311223587547116,"Parsed as literal","upArrow"
635311223587547116,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311223587547116,"Parsed as literal","a"
635311223587547116,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311223587557116,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311223587557116,"Parsed as literal","b"
635311223587557116,"Parsed as literal","1"
635311223587557116,"Parsed as literal","n"
635311223587567117,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311223587567117,"Parsed as literal","n"
635311223587567117,"Parsed as literal","1"
635311223587577117,"Invalid operator","@upArrow(a,b,n) -> @upArrow(a, @upArrow(a,b-1,n),n-1)","0"
635311223587577117,"ParseInternal","@upArrow(a,b,n) ","0","FunctionDeclarationOperator","1","8","upArrow","a,b,n"
635311223587577117,"Parsed as literal","upArrow"
635311223587577117,"ParseInternal","a,b,n","8","CommaOperator","8","10","a","b,n"
635311223587587118,"Parsed as literal","a"
635311223587587118,"ParseInternal","b,n","10","CommaOperator","10","12","b","n"
635311223587587118,"Parsed as literal","b"
635311223587587118,"Parsed as literal","n"
635311223587597119,"ParseInternal"," @upArrow(a, @upArrow(a,b-1,n),n-1)","18","FunctionCallOperator","20","27","upArrow","a, @upArrow(a,b-1,n),n-1"
635311223587597119,"Parsed as literal","upArrow"
635311223587597119,"ParseInternal","a, @upArrow(a,b-1,n),n-1","27","CommaOperator","27","29","a"," @upArrow(a,b-1,n),n-1"
635311223587597119,"Parsed as literal","a"
635311223587607119,"ParseInternal"," @upArrow(a,b-1,n),n-1","29","CommaOperator","29","48"," @upArrow(a,b-1,n)","n-1"
635311223587607119,"ParseInternal"," @upArrow(a,b-1,n)","29","FunctionCallOperator","31","38","upArrow","a,b-1,n"
635311223587607119,"Parsed as literal","upArrow"
635311223587617120,"ParseInternal","a,b-1,n","38","CommaOperator","38","40","a","b-1,n"
635311223587617120,"Parsed as literal","a"
635311223587617120,"ParseInternal","b-1,n","40","CommaOperator","40","44","b-1","n"
635311223587617120,"ParseInternal","b-1","40","MinusOperator","40","42","b","1"
635311223587627120,"Parsed as literal","b"
635311223587627120,"Parsed as literal","1"
635311223587627120,"Parsed as literal","n"
635311223587627120,"ParseInternal","n-1","48","MinusOperator","48","50","n","1"
635311223587637121,"Parsed as literal","n"
635311223587637121,"Parsed as literal","1"
635311223587637121,"ParseInternal","@graham(0) -> 4","0","AssignmentOperator","0","13","@graham(0) "," 4"
635311223587637121,"ParseInternal","@graham(0) ","0","FunctionCallOperator","1","7","graham","0"
635311223587647121,"Parsed as literal","graham"
635311223587647121,"Parsed as literal","0"
635311223587647121,"Parsed as literal"," 4"
635311223587647121,"Invalid operator","@graham(0) -> 4","0"
635311223587657122,"ParseInternal","@graham(0) ","0","FunctionDeclarationOperator","1","7","graham","0"
635311223587657122,"Parsed as literal","graham"
635311223587657122,"Parsed as literal","0"
635311223587667123,"Parsed as literal"," 4"
635311223587667123,"ParseInternal","@graham(n) -> @upArrow(3,3,@graham(n-1))","0","AssignmentOperator","0","13","@graham(n) "," @upArrow(3,3,@graham(n-1))"
635311223587667123,"ParseInternal","@graham(n) ","0","FunctionCallOperator","1","7","graham","n"
635311223587667123,"Parsed as literal","graham"
635311223587677123,"Parsed as literal","n"
635311223587677123,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311223587677123,"Parsed as literal","upArrow"
635311223587677123,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311223587687124,"Parsed as literal","3"
635311223587687124,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311223587687124,"Parsed as literal","3"
635311223587697124,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311223587697124,"Parsed as literal","graham"
635311223587697124,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311223587697124,"Parsed as literal","n"
635311223587707125,"Parsed as literal","1"
635311223587707125,"Invalid operator","@graham(n) -> @upArrow(3,3,@graham(n-1))","0"
635311223587707125,"ParseInternal","@graham(n) ","0","FunctionDeclarationOperator","1","7","graham","n"
635311223587707125,"Parsed as literal","graham"
635311223587717125,"Parsed as literal","n"
635311223587717125,"ParseInternal"," @upArrow(3,3,@graham(n-1))","13","FunctionCallOperator","15","22","upArrow","3,3,@graham(n-1)"
635311223587717125,"Parsed as literal","upArrow"
635311223587717125,"ParseInternal","3,3,@graham(n-1)","22","CommaOperator","22","24","3","3,@graham(n-1)"
635311223587727126,"Parsed as literal","3"
635311223587727126,"ParseInternal","3,@graham(n-1)","24","CommaOperator","24","26","3","@graham(n-1)"
635311223587727126,"Parsed as literal","3"
635311223587737127,"ParseInternal","@graham(n-1)","26","FunctionCallOperator","27","33","graham","n-1"
635311223587737127,"Parsed as literal","graham"
635311223587737127,"ParseInternal","n-1","33","MinusOperator","33","35","n","1"
635311223587737127,"Parsed as literal","n"
635311223587747127,"Parsed as literal","1"
635311223587747127,"ParseInternal","@grahamsNumber() -> @graham(64)","0","AssignmentOperator","0","19","@grahamsNumber() "," @graham(64)"
635311223587747127,"ParseInternal","@grahamsNumber() ","0","FunctionCallOperator","1","14","grahamsNumber","[]"
635311223587747127,"Parsed as literal","grahamsNumber"
635311223587757128,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311223587757128,"Parsed as literal",""
635311223587757128,"Parsed as literal",""
635311223587757128,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311223587767128,"Parsed as literal","graham"
635311223587767128,"Parsed as literal","64"
635311223587767128,"Invalid operator","@grahamsNumber() -> @graham(64)","0"
635311223587777129,"ParseInternal","@grahamsNumber() ","0","FunctionDeclarationOperator","1","14","grahamsNumber","[]"
635311223587777129,"Parsed as literal","grahamsNumber"
635311223587777129,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311223587777129,"Parsed as literal",""
635311223587787129,"Parsed as literal",""
635311223587787129,"ParseInternal"," @graham(64)","19","FunctionCallOperator","21","27","graham","64"
635311223587787129,"Parsed as literal","graham"
635311223587787129,"Parsed as literal","64"
635311223587797130,"ParseInternal","@ack(0,n) -> n + 1","0","AssignmentOperator","0","12","@ack(0,n) "," n + 1"
635311223587797130,"ParseInternal","@ack(0,n) ","0","FunctionCallOperator","1","4","ack","0,n"
635311223587797130,"Parsed as literal","ack"
635311223587797130,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311223587807131,"Parsed as literal","0"
635311223587807131,"Parsed as literal","n"
635311223587807131,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311223587807131,"Parsed as literal"," n "
635311223587817131,"Parsed as literal"," 1"
635311223587817131,"Invalid operator","@ack(0,n) -> n + 1","0"
635311223587817131,"ParseInternal","@ack(0,n) ","0","FunctionDeclarationOperator","1","4","ack","0,n"
635311223587817131,"Parsed as literal","ack"
635311223587827132,"ParseInternal","0,n","4","CommaOperator","4","6","0","n"
635311223587827132,"Parsed as literal","0"
635311223587827132,"Parsed as literal","n"
635311223587827132,"ParseInternal"," n + 1","12","PlusOperator","12","16"," n "," 1"
635311223587837132,"Parsed as literal"," n "
635311223587837132,"Parsed as literal"," 1"
635311223587837132,"ParseInternal","@ack(m|m>0,0) -> @ack(m-1,1)","0","AssignmentOperator","0","16","@ack(m|m>0,0) "," @ack(m-1,1)"
635311223587847133,"ParseInternal","@ack(m|m>0,0) ","0","FunctionCallOperator","1","4","ack","m|m>0,0"
635311223587847133,"Parsed as literal","ack"
635311223587847133,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311223587847133,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311223587857133,"Parsed as literal","m"
635311223587857133,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311223587857133,"Parsed as literal","m"
635311223587857133,"Parsed as literal","0"
635311223587867134,"Parsed as literal","0"
635311223587877135,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311223587877135,"Parsed as literal","ack"
635311223587877135,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311223587877135,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311223587887135,"Parsed as literal","m"
635311223587887135,"Parsed as literal","1"
635311223587887135,"Parsed as literal","1"
635311223587887135,"Invalid operator","@ack(m|m>0,0) -> @ack(m-1,1)","0"
635311223587897136,"ParseInternal","@ack(m|m>0,0) ","0","FunctionDeclarationOperator","1","4","ack","m|m>0,0"
635311223587897136,"Parsed as literal","ack"
635311223587897136,"ParseInternal","m|m>0,0","4","CommaOperator","4","10","m|m>0","0"
635311223587897136,"ParseInternal","m|m>0","4","PatternOperator","4","6","m","m>0"
635311223587907136,"Parsed as literal","m"
635311223587907136,"ParseInternal","m>0","6","GreaterThanOperator","6","8","m","0"
635311223587907136,"Parsed as literal","m"
635311223587907136,"Parsed as literal","0"
635311223587917137,"Parsed as literal","0"
635311223587917137,"ParseInternal"," @ack(m-1,1)","16","FunctionCallOperator","18","21","ack","m-1,1"
635311223587917137,"Parsed as literal","ack"
635311223587927137,"ParseInternal","m-1,1","21","CommaOperator","21","25","m-1","1"
635311223587927137,"ParseInternal","m-1","21","MinusOperator","21","23","m","1"
635311223587927137,"Parsed as literal","m"
635311223587927137,"Parsed as literal","1"
635311223587937138,"Parsed as literal","1"
635311223587937138,"ParseInternal","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0","AssignmentOperator","0","12","@ack(m,n) "," @ack(m-1,@ack(m,n-1))"
635311223587937138,"ParseInternal","@ack(m,n) ","0","FunctionCallOperator","1","4","ack","m,n"
635311223587947139,"Parsed as literal","ack"
635311223587947139,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311223587947139,"Parsed as literal","m"
635311223587947139,"Parsed as literal","n"
635311223587957139,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311223587957139,"Parsed as literal","ack"
635311223587957139,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311223587957139,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311223587967140,"Parsed as literal","m"
635311223587967140,"Parsed as literal","1"
635311223587967140,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311223587967140,"Parsed as literal","ack"
635311223587977140,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311223587977140,"Parsed as literal","m"
635311223587977140,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311223587977140,"Parsed as literal","n"
635311223587987141,"Parsed as literal","1"
635311223587987141,"Invalid operator","@ack(m,n) -> @ack(m-1,@ack(m,n-1))","0"
635311223587987141,"ParseInternal","@ack(m,n) ","0","FunctionDeclarationOperator","1","4","ack","m,n"
635311223587987141,"Parsed as literal","ack"
635311223587997141,"ParseInternal","m,n","4","CommaOperator","4","6","m","n"
635311223587997141,"Parsed as literal","m"
635311223587997141,"Parsed as literal","n"
635311223588007142,"ParseInternal"," @ack(m-1,@ack(m,n-1))","12","FunctionCallOperator","14","17","ack","m-1,@ack(m,n-1)"
635311223588007142,"Parsed as literal","ack"
635311223588007142,"ParseInternal","m-1,@ack(m,n-1)","17","CommaOperator","17","21","m-1","@ack(m,n-1)"
635311223588007142,"ParseInternal","m-1","17","MinusOperator","17","19","m","1"
635311223588017143,"Parsed as literal","m"
635311223588017143,"Parsed as literal","1"
635311223588017143,"ParseInternal","@ack(m,n-1)","21","FunctionCallOperator","22","25","ack","m,n-1"
635311223588017143,"Parsed as literal","ack"
635311223588027143,"ParseInternal","m,n-1","25","CommaOperator","25","27","m","n-1"
635311223588027143,"Parsed as literal","m"
635311223588027143,"ParseInternal","n-1","27","MinusOperator","27","29","n","1"
635311223588027143,"Parsed as literal","n"
635311223588037144,"Parsed as literal","1"
635311223588037144,"ParseInternal","@acker(m,n,0) -> m+n","0","AssignmentOperator","0","16","@acker(m,n,0) "," m+n"
635311223588037144,"ParseInternal","@acker(m,n,0) ","0","FunctionCallOperator","1","6","acker","m,n,0"
635311223588047144,"Parsed as literal","acker"
635311223588047144,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311223588047144,"Parsed as literal","m"
635311223588047144,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311223588057145,"Parsed as literal","n"
635311223588057145,"Parsed as literal","0"
635311223588057145,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311223588057145,"Parsed as literal"," m"
635311223588067145,"Parsed as literal","n"
635311223588067145,"Invalid operator","@acker(m,n,0) -> m+n","0"
635311223588067145,"ParseInternal","@acker(m,n,0) ","0","FunctionDeclarationOperator","1","6","acker","m,n,0"
635311223588067145,"Parsed as literal","acker"
635311223588077146,"ParseInternal","m,n,0","6","CommaOperator","6","8","m","n,0"
635311223588077146,"Parsed as literal","m"
635311223588077146,"ParseInternal","n,0","8","CommaOperator","8","10","n","0"
635311223588077146,"Parsed as literal","n"
635311223588087147,"Parsed as literal","0"
635311223588087147,"ParseInternal"," m+n","16","PlusOperator","16","19"," m","n"
635311223588087147,"Parsed as literal"," m"
635311223588097147,"Parsed as literal","n"
635311223588097147,"ParseInternal","@acker(m,0,1) -> 0","0","AssignmentOperator","0","16","@acker(m,0,1) "," 0"
635311223588097147,"ParseInternal","@acker(m,0,1) ","0","FunctionCallOperator","1","6","acker","m,0,1"
635311223588097147,"Parsed as literal","acker"
635311223588107148,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311223588107148,"Parsed as literal","m"
635311223588107148,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311223588107148,"Parsed as literal","0"
635311223588117148,"Parsed as literal","1"
635311223588117148,"Parsed as literal"," 0"
635311223588117148,"Invalid operator","@acker(m,0,1) -> 0","0"
635311223588117148,"ParseInternal","@acker(m,0,1) ","0","FunctionDeclarationOperator","1","6","acker","m,0,1"
635311223588127149,"Parsed as literal","acker"
635311223588127149,"ParseInternal","m,0,1","6","CommaOperator","6","8","m","0,1"
635311223588127149,"Parsed as literal","m"
635311223588127149,"ParseInternal","0,1","8","CommaOperator","8","10","0","1"
635311223588137149,"Parsed as literal","0"
635311223588137149,"Parsed as literal","1"
635311223588137149,"Parsed as literal"," 0"
635311223588147150,"ParseInternal","@acker(m,0,2) -> 1","0","AssignmentOperator","0","16","@acker(m,0,2) "," 1"
635311223588147150,"ParseInternal","@acker(m,0,2) ","0","FunctionCallOperator","1","6","acker","m,0,2"
635311223588147150,"Parsed as literal","acker"
635311223588147150,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311223588157151,"Parsed as literal","m"
635311223588157151,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311223588157151,"Parsed as literal","0"
635311223588157151,"Parsed as literal","2"
635311223588167151,"Parsed as literal"," 1"
635311223588167151,"Invalid operator","@acker(m,0,2) -> 1","0"
635311223588167151,"ParseInternal","@acker(m,0,2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,2"
635311223588167151,"Parsed as literal","acker"
635311223588177152,"ParseInternal","m,0,2","6","CommaOperator","6","8","m","0,2"
635311223588177152,"Parsed as literal","m"
635311223588177152,"ParseInternal","0,2","8","CommaOperator","8","10","0","2"
635311223588177152,"Parsed as literal","0"
635311223588187152,"Parsed as literal","2"
635311223588187152,"Parsed as literal"," 1"
635311223588187152,"ParseInternal","@acker(m,0,p|p>2) -> m","0","AssignmentOperator","0","20","@acker(m,0,p|p>2) "," m"
635311223588187152,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionCallOperator","1","6","acker","m,0,p|p>2"
635311223588197153,"Parsed as literal","acker"
635311223588197153,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311223588197153,"Parsed as literal","m"
635311223588197153,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311223588207153,"Parsed as literal","0"
635311223588207153,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311223588207153,"Parsed as literal","p"
635311223588217154,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311223588217154,"Parsed as literal","p"
635311223588217154,"Parsed as literal","2"
635311223588217154,"Parsed as literal"," m"
635311223588227155,"Invalid operator","@acker(m,0,p|p>2) -> m","0"
635311223588227155,"ParseInternal","@acker(m,0,p|p>2) ","0","FunctionDeclarationOperator","1","6","acker","m,0,p|p>2"
635311223588227155,"Parsed as literal","acker"
635311223588227155,"ParseInternal","m,0,p|p>2","6","CommaOperator","6","8","m","0,p|p>2"
635311223588237155,"Parsed as literal","m"
635311223588237155,"ParseInternal","0,p|p>2","8","CommaOperator","8","10","0","p|p>2"
635311223588237155,"Parsed as literal","0"
635311223588237155,"ParseInternal","p|p>2","10","PatternOperator","10","12","p","p>2"
635311223588247156,"Parsed as literal","p"
635311223588247156,"ParseInternal","p>2","12","GreaterThanOperator","12","14","p","2"
635311223588247156,"Parsed as literal","p"
635311223588247156,"Parsed as literal","2"
635311223588257156,"Parsed as literal"," m"
635311223588257156,"ParseInternal","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0","AssignmentOperator","0","24","@acker(m,n|n>0,p|p>0) "," @acker(m,@acker(m,n-1,p),p-1)"
635311223588257156,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionCallOperator","1","6","acker","m,n|n>0,p|p>0"
635311223588267157,"Parsed as literal","acker"
635311223588267157,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311223588267157,"Parsed as literal","m"
635311223588267157,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311223588277157,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311223588277157,"Parsed as literal","n"
635311223588277157,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311223588277157,"Parsed as literal","n"
635311223588287158,"Parsed as literal","0"
635311223588287158,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311223588287158,"Parsed as literal","p"
635311223588287158,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311223588297159,"Parsed as literal","p"
635311223588297159,"Parsed as literal","0"
635311223588297159,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311223588297159,"Parsed as literal","acker"
635311223588307159,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311223588307159,"Parsed as literal","m"
635311223588307159,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311223588317160,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311223588317160,"Parsed as literal","acker"
635311223588317160,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311223588317160,"Parsed as literal","m"
635311223588327160,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311223588327160,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311223588327160,"Parsed as literal","n"
635311223588327160,"Parsed as literal","1"
635311223588337161,"Parsed as literal","p"
635311223588337161,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311223588337161,"Parsed as literal","p"
635311223588337161,"Parsed as literal","1"
635311223588347162,"Invalid operator","@acker(m,n|n>0,p|p>0) -> @acker(m,@acker(m,n-1,p),p-1)","0"
635311223588347162,"ParseInternal","@acker(m,n|n>0,p|p>0) ","0","FunctionDeclarationOperator","1","6","acker","m,n|n>0,p|p>0"
635311223588347162,"Parsed as literal","acker"
635311223588357162,"ParseInternal","m,n|n>0,p|p>0","6","CommaOperator","6","8","m","n|n>0,p|p>0"
635311223588357162,"Parsed as literal","m"
635311223588357162,"ParseInternal","n|n>0,p|p>0","8","CommaOperator","8","14","n|n>0","p|p>0"
635311223588357162,"ParseInternal","n|n>0","8","PatternOperator","8","10","n","n>0"
635311223588367163,"Parsed as literal","n"
635311223588367163,"ParseInternal","n>0","10","GreaterThanOperator","10","12","n","0"
635311223588367163,"Parsed as literal","n"
635311223588367163,"Parsed as literal","0"
635311223588377163,"ParseInternal","p|p>0","14","PatternOperator","14","16","p","p>0"
635311223588377163,"Parsed as literal","p"
635311223588377163,"ParseInternal","p>0","16","GreaterThanOperator","16","18","p","0"
635311223588377163,"Parsed as literal","p"
635311223588387164,"Parsed as literal","0"
635311223588387164,"ParseInternal"," @acker(m,@acker(m,n-1,p),p-1)","24","FunctionCallOperator","26","31","acker","m,@acker(m,n-1,p),p-1"
635311223588387164,"Parsed as literal","acker"
635311223588397164,"ParseInternal","m,@acker(m,n-1,p),p-1","31","CommaOperator","31","33","m","@acker(m,n-1,p),p-1"
635311223588397164,"Parsed as literal","m"
635311223588397164,"ParseInternal","@acker(m,n-1,p),p-1","33","CommaOperator","33","49","@acker(m,n-1,p)","p-1"
635311223588397164,"ParseInternal","@acker(m,n-1,p)","33","FunctionCallOperator","34","39","acker","m,n-1,p"
635311223588407165,"Parsed as literal","acker"
635311223588407165,"ParseInternal","m,n-1,p","39","CommaOperator","39","41","m","n-1,p"
635311223588407165,"Parsed as literal","m"
635311223588407165,"ParseInternal","n-1,p","41","CommaOperator","41","45","n-1","p"
635311223588417166,"ParseInternal","n-1","41","MinusOperator","41","43","n","1"
635311223588417166,"Parsed as literal","n"
635311223588417166,"Parsed as literal","1"
635311223588417166,"Parsed as literal","p"
635311223588427166,"ParseInternal","p-1","49","MinusOperator","49","51","p","1"
635311223588427166,"Parsed as literal","p"
635311223588427166,"Parsed as literal","1"
635311223588437167,"ParseInternal","@hyper(0,a,b) -> b+1","0","AssignmentOperator","0","16","@hyper(0,a,b) "," b+1"
635311223588437167,"ParseInternal","@hyper(0,a,b) ","0","FunctionCallOperator","1","6","hyper","0,a,b"
635311223588437167,"Parsed as literal","hyper"
635311223588437167,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311223588447167,"Parsed as literal","0"
635311223588447167,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311223588447167,"Parsed as literal","a"
635311223588447167,"Parsed as literal","b"
635311223588457168,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311223588457168,"Parsed as literal"," b"
635311223588457168,"Parsed as literal","1"
635311223588457168,"Invalid operator","@hyper(0,a,b) -> b+1","0"
635311223588467168,"ParseInternal","@hyper(0,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","0,a,b"
635311223588467168,"Parsed as literal","hyper"
635311223588467168,"ParseInternal","0,a,b","6","CommaOperator","6","8","0","a,b"
635311223588467168,"Parsed as literal","0"
635311223588477169,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311223588477169,"Parsed as literal","a"
635311223588477169,"Parsed as literal","b"
635311223588477169,"ParseInternal"," b+1","16","PlusOperator","16","19"," b","1"
635311223588487170,"Parsed as literal"," b"
635311223588487170,"Parsed as literal","1"
635311223588487170,"ParseInternal","@hyper(1,a,0) -> a","0","AssignmentOperator","0","16","@hyper(1,a,0) "," a"
635311223588497170,"ParseInternal","@hyper(1,a,0) ","0","FunctionCallOperator","1","6","hyper","1,a,0"
635311223588497170,"Parsed as literal","hyper"
635311223588497170,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311223588497170,"Parsed as literal","1"
635311223588507171,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311223588507171,"Parsed as literal","a"
635311223588507171,"Parsed as literal","0"
635311223588507171,"Parsed as literal"," a"
635311223588517171,"Invalid operator","@hyper(1,a,0) -> a","0"
635311223588517171,"ParseInternal","@hyper(1,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","1,a,0"
635311223588517171,"Parsed as literal","hyper"
635311223588517171,"ParseInternal","1,a,0","6","CommaOperator","6","8","1","a,0"
635311223588527172,"Parsed as literal","1"
635311223588527172,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311223588527172,"Parsed as literal","a"
635311223588527172,"Parsed as literal","0"
635311223588537172,"Parsed as literal"," a"
635311223588537172,"ParseInternal","@hyper(2,a,0) -> 0","0","AssignmentOperator","0","16","@hyper(2,a,0) "," 0"
635311223588537172,"ParseInternal","@hyper(2,a,0) ","0","FunctionCallOperator","1","6","hyper","2,a,0"
635311223588537172,"Parsed as literal","hyper"
635311223588547173,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311223588547173,"Parsed as literal","2"
635311223588547173,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311223588547173,"Parsed as literal","a"
635311223588557174,"Parsed as literal","0"
635311223588557174,"Parsed as literal"," 0"
635311223588557174,"Invalid operator","@hyper(2,a,0) -> 0","0"
635311223588567174,"ParseInternal","@hyper(2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","2,a,0"
635311223588567174,"Parsed as literal","hyper"
635311223588567174,"ParseInternal","2,a,0","6","CommaOperator","6","8","2","a,0"
635311223588567174,"Parsed as literal","2"
635311223588577175,"ParseInternal","a,0","8","CommaOperator","8","10","a","0"
635311223588577175,"Parsed as literal","a"
635311223588577175,"Parsed as literal","0"
635311223588577175,"Parsed as literal"," 0"
635311223588587175,"ParseInternal","@hyper(n|n>2,a,0) -> 1","0","AssignmentOperator","0","20","@hyper(n|n>2,a,0) "," 1"
635311223588587175,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionCallOperator","1","6","hyper","n|n>2,a,0"
635311223588587175,"Parsed as literal","hyper"
635311223588587175,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311223588597176,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311223588597176,"Parsed as literal","n"
635311223588597176,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311223588607176,"Parsed as literal","n"
635311223588607176,"Parsed as literal","2"
635311223588607176,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311223588607176,"Parsed as literal","a"
635311223588617177,"Parsed as literal","0"
635311223588617177,"Parsed as literal"," 1"
635311223588617177,"Invalid operator","@hyper(n|n>2,a,0) -> 1","0"
635311223588617177,"ParseInternal","@hyper(n|n>2,a,0) ","0","FunctionDeclarationOperator","1","6","hyper","n|n>2,a,0"
635311223588627178,"Parsed as literal","hyper"
635311223588627178,"ParseInternal","n|n>2,a,0","6","CommaOperator","6","12","n|n>2","a,0"
635311223588627178,"ParseInternal","n|n>2","6","PatternOperator","6","8","n","n>2"
635311223588627178,"Parsed as literal","n"
635311223588637178,"ParseInternal","n>2","8","GreaterThanOperator","8","10","n","2"
635311223588637178,"Parsed as literal","n"
635311223588637178,"Parsed as literal","2"
635311223588637178,"ParseInternal","a,0","12","CommaOperator","12","14","a","0"
635311223588647179,"Parsed as literal","a"
635311223588647179,"Parsed as literal","0"
635311223588647179,"Parsed as literal"," 1"
635311223588657179,"ParseInternal","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0","AssignmentOperator","0","16","@hyper(n,a,b) "," @hyper(n-1,a,@hyper(n,a,b-1))"
635311223588657179,"ParseInternal","@hyper(n,a,b) ","0","FunctionCallOperator","1","6","hyper","n,a,b"
635311223588657179,"Parsed as literal","hyper"
635311223588657179,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311223588667180,"Parsed as literal","n"
635311223588667180,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311223588667180,"Parsed as literal","a"
635311223588667180,"Parsed as literal","b"
635311223588677180,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311223588677180,"Parsed as literal","hyper"
635311223588677180,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311223588677180,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311223588687181,"Parsed as literal","n"
635311223588687181,"Parsed as literal","1"
635311223588687181,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311223588687181,"Parsed as literal","a"
635311223588697182,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311223588697182,"Parsed as literal","hyper"
635311223588697182,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311223588707182,"Parsed as literal","n"
635311223588707182,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311223588707182,"Parsed as literal","a"
635311223588707182,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311223588717183,"Parsed as literal","b"
635311223588717183,"Parsed as literal","1"
635311223588717183,"Invalid operator","@hyper(n,a,b) -> @hyper(n-1,a,@hyper(n,a,b-1))","0"
635311223588717183,"ParseInternal","@hyper(n,a,b) ","0","FunctionDeclarationOperator","1","6","hyper","n,a,b"
635311223588727183,"Parsed as literal","hyper"
635311223588727183,"ParseInternal","n,a,b","6","CommaOperator","6","8","n","a,b"
635311223588727183,"Parsed as literal","n"
635311223588727183,"ParseInternal","a,b","8","CommaOperator","8","10","a","b"
635311223588737184,"Parsed as literal","a"
635311223588737184,"Parsed as literal","b"
635311223588737184,"ParseInternal"," @hyper(n-1,a,@hyper(n,a,b-1))","16","FunctionCallOperator","18","23","hyper","n-1,a,@hyper(n,a,b-1)"
635311223588737184,"Parsed as literal","hyper"
635311223588747184,"ParseInternal","n-1,a,@hyper(n,a,b-1)","23","CommaOperator","23","27","n-1","a,@hyper(n,a,b-1)"
635311223588747184,"ParseInternal","n-1","23","MinusOperator","23","25","n","1"
635311223588747184,"Parsed as literal","n"
635311223588747184,"Parsed as literal","1"
635311223588757185,"ParseInternal","a,@hyper(n,a,b-1)","27","CommaOperator","27","29","a","@hyper(n,a,b-1)"
635311223588757185,"Parsed as literal","a"
635311223588757185,"ParseInternal","@hyper(n,a,b-1)","29","FunctionCallOperator","30","35","hyper","n,a,b-1"
635311223588757185,"Parsed as literal","hyper"
635311223588767186,"ParseInternal","n,a,b-1","35","CommaOperator","35","37","n","a,b-1"
635311223588767186,"Parsed as literal","n"
635311223588767186,"ParseInternal","a,b-1","37","CommaOperator","37","39","a","b-1"
635311223588777186,"Parsed as literal","a"
635311223588777186,"ParseInternal","b-1","39","MinusOperator","39","41","b","1"
635311223588777186,"Parsed as literal","b"
635311223588777186,"Parsed as literal","1"
635311223588787187,"ParseInternal","@sudan(0,x,y) -> x + y","0","AssignmentOperator","0","16","@sudan(0,x,y) "," x + y"
635311223588787187,"ParseInternal","@sudan(0,x,y) ","0","FunctionCallOperator","1","6","sudan","0,x,y"
635311223588787187,"Parsed as literal","sudan"
635311223588787187,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311223588797187,"Parsed as literal","0"
635311223588797187,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311223588797187,"Parsed as literal","x"
635311223588797187,"Parsed as literal","y"
635311223588807188,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311223588807188,"Parsed as literal"," x "
635311223588807188,"Parsed as literal"," y"
635311223588817188,"Invalid operator","@sudan(0,x,y) -> x + y","0"
635311223588817188,"ParseInternal","@sudan(0,x,y) ","0","FunctionDeclarationOperator","1","6","sudan","0,x,y"
635311223588817188,"Parsed as literal","sudan"
635311223588817188,"ParseInternal","0,x,y","6","CommaOperator","6","8","0","x,y"
635311223588827189,"Parsed as literal","0"
635311223588827189,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311223588827189,"Parsed as literal","x"
635311223588827189,"Parsed as literal","y"
635311223588837190,"ParseInternal"," x + y","16","PlusOperator","16","20"," x "," y"
635311223588837190,"Parsed as literal"," x "
635311223588837190,"Parsed as literal"," y"
635311223588847190,"ParseInternal","@sudan(n,0) -> x","0","AssignmentOperator","0","14","@sudan(n,0) "," x"
635311223588847190,"ParseInternal","@sudan(n,0) ","0","FunctionCallOperator","1","6","sudan","n,0"
635311223588847190,"Parsed as literal","sudan"
635311223588847190,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311223588857191,"Parsed as literal","n"
635311223588857191,"Parsed as literal","0"
635311223588867191,"Parsed as literal"," x"
635311223588867191,"Invalid operator","@sudan(n,0) -> x","0"
635311223588867191,"ParseInternal","@sudan(n,0) ","0","FunctionDeclarationOperator","1","6","sudan","n,0"
635311223588867191,"Parsed as literal","sudan"
635311223588877192,"ParseInternal","n,0","6","CommaOperator","6","8","n","0"
635311223588877192,"Parsed as literal","n"
635311223588877192,"Parsed as literal","0"
635311223588877192,"Parsed as literal"," x"
635311223588887192,"ParseInternal","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0","AssignmentOperator","0","15","@sudan(n,x,y)"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))"
635311223588887192,"ParseInternal","@sudan(n,x,y)","0","FunctionCallOperator","1","6","sudan","n,x,y"
635311223588887192,"Parsed as literal","sudan"
635311223588897193,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311223588897193,"Parsed as literal","n"
635311223588897193,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311223588897193,"Parsed as literal","x"
635311223588907194,"Parsed as literal","y"
635311223588907194,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311223588907194,"Parsed as literal","sudan"
635311223588917194,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311223588917194,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311223588917194,"Parsed as literal","n"
635311223588917194,"Parsed as literal","1"
635311223588927195,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311223588927195,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311223588927195,"Parsed as literal","sudan"
635311223588927195,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311223588937195,"Parsed as literal","n"
635311223588937195,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311223588937195,"Parsed as literal","x"
635311223588937195,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311223588947196,"Parsed as literal","y"
635311223588947196,"Parsed as literal","1"
635311223588947196,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311223588947196,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311223588957196,"Parsed as literal","sudan"
635311223588957196,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311223588957196,"Parsed as literal","n"
635311223588967197,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311223588967197,"Parsed as literal","x"
635311223588967197,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311223588967197,"Parsed as literal","y"
635311223588967197,"Parsed as literal","1"
635311223588977198,"Parsed as literal","y"
635311223588977198,"Invalid operator","@sudan(n,x,y)-> @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","0"
635311223588977198,"ParseInternal","@sudan(n,x,y)","0","FunctionDeclarationOperator","1","6","sudan","n,x,y"
635311223588987198,"Parsed as literal","sudan"
635311223588987198,"ParseInternal","n,x,y","6","CommaOperator","6","8","n","x,y"
635311223588987198,"Parsed as literal","n"
635311223588987198,"ParseInternal","x,y","8","CommaOperator","8","10","x","y"
635311223588997199,"Parsed as literal","x"
635311223588997199,"Parsed as literal","y"
635311223588997199,"ParseInternal"," @sudan(n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y))","15","FunctionCallOperator","17","22","sudan","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311223588997199,"Parsed as literal","sudan"
635311223589007199,"ParseInternal","n-1,@sudan(n,x,y-1),@sudan(n,x,y-1)+y","22","CommaOperator","22","26","n-1","@sudan(n,x,y-1),@sudan(n,x,y-1)+y"
635311223589007199,"ParseInternal","n-1","22","MinusOperator","22","24","n","1"
635311223589007199,"Parsed as literal","n"
635311223589007199,"Parsed as literal","1"
635311223589017200,"ParseInternal","@sudan(n,x,y-1),@sudan(n,x,y-1)+y","26","CommaOperator","26","42","@sudan(n,x,y-1)","@sudan(n,x,y-1)+y"
635311223589017200,"ParseInternal","@sudan(n,x,y-1)","26","FunctionCallOperator","27","32","sudan","n,x,y-1"
635311223589017200,"Parsed as literal","sudan"
635311223589027200,"ParseInternal","n,x,y-1","32","CommaOperator","32","34","n","x,y-1"
635311223589027200,"Parsed as literal","n"
635311223589027200,"ParseInternal","x,y-1","34","CommaOperator","34","36","x","y-1"
635311223589027200,"Parsed as literal","x"
635311223589037201,"ParseInternal","y-1","36","MinusOperator","36","38","y","1"
635311223589037201,"Parsed as literal","y"
635311223589037201,"Parsed as literal","1"
635311223589037201,"ParseInternal","@sudan(n,x,y-1)+y","42","PlusOperator","42","58","@sudan(n,x,y-1)","y"
635311223589047202,"ParseInternal","@sudan(n,x,y-1)","42","FunctionCallOperator","43","48","sudan","n,x,y-1"
635311223589047202,"Parsed as literal","sudan"
635311223589047202,"ParseInternal","n,x,y-1","48","CommaOperator","48","50","n","x,y-1"
635311223589057202,"Parsed as literal","n"
635311223589057202,"ParseInternal","x,y-1","50","CommaOperator","50","52","x","y-1"
635311223589057202,"Parsed as literal","x"
635311223589057202,"ParseInternal","y-1","52","MinusOperator","52","54","y","1"
635311223589067203,"Parsed as literal","y"
635311223589067203,"Parsed as literal","1"
635311223589067203,"Parsed as literal","y"
635311223589067203,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311223589077203,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311223589077203,"StepEvaluate","->","Changed","Declared @naturalNumbers"
635311223589077203,"StepEvaluate","Declared @naturalNumbers","Unchanged","Declared @naturalNumbers"
635311223589077203,"StepEvaluate","->","Changed","Declared @max"
635311223589087204,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311223589087204,"StepEvaluate","->","Changed","Declared @max"
635311223589087204,"StepEvaluate","Declared @max","Unchanged","Declared @max"
635311223589087204,"StepEvaluate","->","Changed","Declared @random"
635311223589097204,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311223589097204,"StepEvaluate","->","Changed","Declared @random"
635311223589097204,"StepEvaluate","Declared @random","Unchanged","Declared @random"
635311223589097204,"StepEvaluate","->","Changed","Declared @gcd"
635311223589107205,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311223589107205,"StepEvaluate","->","Changed","Declared @gcd"
635311223589107205,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311223589107205,"StepEvaluate","->","Changed","Declared @gcd"
635311223589117206,"StepEvaluate","Declared @gcd","Unchanged","Declared @gcd"
635311223589117206,"StepEvaluate","->","Changed","Declared @fib"
635311223589117206,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311223589117206,"StepEvaluate","->","Changed","Declared @fib"
635311223589127206,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311223589127206,"StepEvaluate","->","Changed","Declared @fib"
635311223589127206,"StepEvaluate","Declared @fib","Unchanged","Declared @fib"
635311223589127206,"StepEvaluate","->","Changed","Declared @fib2"
635311223589137207,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311223589137207,"StepEvaluate","->","Changed","Declared @fib2"
635311223589137207,"StepEvaluate","Declared @fib2","Unchanged","Declared @fib2"
635311223589137207,"StepEvaluate","->","Changed","Declared @fac"
635311223589137207,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311223589147207,"StepEvaluate","->","Changed","Declared @fac"
635311223589147207,"StepEvaluate","Declared @fac","Unchanged","Declared @fac"
635311223589147207,"StepEvaluate","->","Changed","Declared @pow"
635311223589147207,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311223589157208,"StepEvaluate","->","Changed","Declared @pow"
635311223589157208,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311223589157208,"StepEvaluate","->","Changed","Declared @pow"
635311223589157208,"StepEvaluate","Declared @pow","Unchanged","Declared @pow"
635311223589167208,"StepEvaluate","->","Changed","Declared @upArrow"
635311223589167208,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311223589167208,"StepEvaluate","->","Changed","Declared @upArrow"
635311223589167208,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311223589177209,"StepEvaluate","->","Changed","Declared @upArrow"
635311223589177209,"StepEvaluate","Declared @upArrow","Unchanged","Declared @upArrow"
635311223589177209,"StepEvaluate","->","Changed","Declared @graham"
635311223589177209,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311223589187210,"StepEvaluate","->","Changed","Declared @graham"
635311223589187210,"StepEvaluate","Declared @graham","Unchanged","Declared @graham"
635311223589187210,"StepEvaluate","->","Changed","Declared @grahamsNumber"
635311223589187210,"StepEvaluate","Declared @grahamsNumber","Unchanged","Declared @grahamsNumber"
635311223589197210,"StepEvaluate","->","Changed","Declared @ack"
635311223589197210,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311223589197210,"StepEvaluate","->","Changed","Declared @ack"
635311223589197210,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311223589207211,"StepEvaluate","->","Changed","Declared @ack"
635311223589207211,"StepEvaluate","Declared @ack","Unchanged","Declared @ack"
635311223589207211,"StepEvaluate","->","Changed","Declared @acker"
635311223589207211,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311223589217211,"StepEvaluate","->","Changed","Declared @acker"
635311223589217211,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311223589217211,"StepEvaluate","->","Changed","Declared @acker"
635311223589217211,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311223589227212,"StepEvaluate","->","Changed","Declared @acker"
635311223589227212,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311223589227212,"StepEvaluate","->","Changed","Declared @acker"
635311223589227212,"StepEvaluate","Declared @acker","Unchanged","Declared @acker"
635311223589237212,"StepEvaluate","->","Changed","Declared @hyper"
635311223589237212,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311223589237212,"StepEvaluate","->","Changed","Declared @hyper"
635311223589237212,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311223589247213,"StepEvaluate","->","Changed","Declared @hyper"
635311223589247213,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311223589247213,"StepEvaluate","->","Changed","Declared @hyper"
635311223589257214,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311223589257214,"StepEvaluate","->","Changed","Declared @hyper"
635311223589257214,"StepEvaluate","Declared @hyper","Unchanged","Declared @hyper"
635311223589257214,"StepEvaluate","->","Changed","Declared @sudan"
635311223589257214,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311223589267214,"StepEvaluate","->","Changed","Declared @sudan"
635311223589267214,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311223589267214,"StepEvaluate","->","Changed","Declared @sudan"
635311223589267214,"StepEvaluate","Declared @sudan","Unchanged","Declared @sudan"
635311223589277215,"StepEvaluate","[]","Changed","File imported"
635311223589277215,"StepEvaluate","File imported","Unchanged","File imported"
635311223589277215,"StepEvaluate","@","Changed","@"
635311223589277215,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223589287215,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223589287215,"StepEvaluate",",","Unchanged",","
635311223589287215,"StepEvaluate","@Arg","Changed","@Arg-M"
635311223589287215,"StepEvaluate","SEL@import","Unchanged","SEL@import"
635311223589297216,"StepEvaluate","PAT@-M","Changed","[]"
635311223589297216,"StepEvaluate","SEL@import","Changed","[]"
635311223589297216,"StepEvaluate","@","Changed","[]"
635311223589307216,"ParseInternal","@quickSort([]) -> []","0","AssignmentOperator","0","17","@quickSort([]) "," []"
635311223589307216,"ParseInternal","@quickSort([]) ","0","FunctionCallOperator","1","10","quickSort","[]"
635311223589307216,"Parsed as literal","quickSort"
635311223589307216,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311223589317217,"Parsed as literal",""
635311223589317217,"Parsed as literal",""
635311223589317217,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311223589317217,"Parsed as literal",""
635311223589327218,"Parsed as literal",""
635311223589327218,"Invalid operator","@quickSort([]) -> []","0"
635311223589327218,"ParseInternal","@quickSort([]) ","0","FunctionDeclarationOperator","1","10","quickSort","[]"
635311223589327218,"Parsed as literal","quickSort"
635311223589337218,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311223589337218,"Parsed as literal",""
635311223589337218,"Parsed as literal",""
635311223589337218,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311223589347219,"Parsed as literal",""
635311223589347219,"Parsed as literal",""
635311223589347219,"ParseInternal","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0","AssignmentOperator","0","19","@quickSort(list) "," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311223589357219,"ParseInternal","@quickSort(list) ","0","FunctionCallOperator","1","10","quickSort","list"
635311223589357219,"Parsed as literal","quickSort"
635311223589357219,"Parsed as literal","list"
635311223589367220,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311223589367220,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311223589367220,"Parsed as literal","quickSort"
635311223589377220,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311223589377220,"Parsed as literal","filter"
635311223589377220,"ParseInternal","@(i) -> i < h:list,t:list","37","AssignmentOperator","37","44","@(i) "," i < h:list,t:list"
635311223589377220,"ParseInternal","@(i) ","37","FunctionCallOperator","38","38","","i"
635311223589387221,"Parsed as literal",""
635311223589387221,"Parsed as literal","i"
635311223589387221,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311223589387221,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311223589397222,"Parsed as literal"," i "
635311223589397222,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311223589397222,"Parsed as literal"," "
635311223589397222,"Parsed as literal","list"
635311223589407222,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311223589407222,"Parsed as literal",""
635311223589407222,"Parsed as literal","list"
635311223589407222,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311223589417223,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311223589417223,"Parsed as literal",""
635311223589417223,"Parsed as literal","i"
635311223589427223,"ParseInternal"," i < h:list,t:list","44","CommaOperator","44","56"," i < h:list","t:list"
635311223589427223,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311223589427223,"Parsed as literal"," i "
635311223589427223,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311223589437224,"Parsed as literal"," "
635311223589437224,"Parsed as literal","list"
635311223589437224,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311223589437224,"Parsed as literal",""
635311223589447224,"Parsed as literal","list"
635311223589447224,"Invalid operator","@(i) -> i < h:list,t:list","37"
635311223589447224,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311223589447224,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311223589457225,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311223589457225,"Parsed as literal",""
635311223589457225,"Parsed as literal","i"
635311223589457225,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311223589467226,"Parsed as literal"," i "
635311223589467226,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311223589467226,"Parsed as literal"," "
635311223589467226,"Parsed as literal","list"
635311223589477226,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311223589477226,"Parsed as literal",""
635311223589477226,"Parsed as literal","list"
635311223589487227,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311223589487227,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311223589487227,"Parsed as literal"," "
635311223589487227,"Parsed as literal","list "
635311223589497227,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311223589497227,"Parsed as literal","quickSort"
635311223589497227,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311223589497227,"Parsed as literal","filter"
635311223589507228,"ParseInternal","@(i) -> i > h:list-1,t:list","95","AssignmentOperator","95","102","@(i) "," i > h:list-1,t:list"
635311223589507228,"ParseInternal","@(i) ","95","FunctionCallOperator","96","96","","i"
635311223589507228,"Parsed as literal",""
635311223589507228,"Parsed as literal","i"
635311223589517228,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311223589517228,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311223589517228,"Parsed as literal"," i "
635311223589527229,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311223589527229,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311223589527229,"Parsed as literal"," "
635311223589527229,"Parsed as literal","list"
635311223589537230,"Parsed as literal","1"
635311223589537230,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311223589537230,"Parsed as literal",""
635311223589537230,"Parsed as literal","list"
635311223589547230,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311223589547230,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311223589547230,"Parsed as literal",""
635311223589547230,"Parsed as literal","i"
635311223589557231,"ParseInternal"," i > h:list-1,t:list","102","CommaOperator","102","116"," i > h:list-1","t:list"
635311223589557231,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311223589557231,"Parsed as literal"," i "
635311223589557231,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311223589567231,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311223589567231,"Parsed as literal"," "
635311223589567231,"Parsed as literal","list"
635311223589567231,"Parsed as literal","1"
635311223589577232,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311223589577232,"Parsed as literal",""
635311223589577232,"Parsed as literal","list"
635311223589577232,"Invalid operator","@(i) -> i > h:list-1,t:list","95"
635311223589587232,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311223589587232,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311223589587232,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311223589587232,"Parsed as literal",""
635311223589597233,"Parsed as literal","i"
635311223589597233,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311223589597233,"Parsed as literal"," i "
635311223589607234,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311223589607234,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311223589607234,"Parsed as literal"," "
635311223589607234,"Parsed as literal","list"
635311223589617234,"Parsed as literal","1"
635311223589617234,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311223589617234,"Parsed as literal",""
635311223589617234,"Parsed as literal","list"
635311223589627235,"Invalid operator","@quickSort(list) -> @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","0"
635311223589627235,"ParseInternal","@quickSort(list) ","0","FunctionDeclarationOperator","1","10","quickSort","list"
635311223589627235,"Parsed as literal","quickSort"
635311223589627235,"Parsed as literal","list"
635311223589637235,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) & h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","19","ConcatOperator","19","68"," @quickSort(@filter(@(i) -> i < h:list,t:list)) "," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311223589637235,"ParseInternal"," @quickSort(@filter(@(i) -> i < h:list,t:list)) ","19","FunctionCallOperator","21","30","quickSort","@filter(@(i) -> i < h:list,t:list)"
635311223589637235,"Parsed as literal","quickSort"
635311223589647236,"ParseInternal","@filter(@(i) -> i < h:list,t:list)","30","FunctionCallOperator","31","37","filter","@(i) -> i < h:list,t:list"
635311223589647236,"Parsed as literal","filter"
635311223589647236,"ParseInternal","@(i) -> i < h:list,t:list","37","CommaOperator","37","56","@(i) -> i < h:list","t:list"
635311223589657236,"ParseInternal","@(i) -> i < h:list","37","AnonAssignmentOperator","37","44","@(i) "," i < h:list"
635311223589657236,"ParseInternal","@(i) ","37","FunctionDeclarationOperator","38","38","","i"
635311223589657236,"Parsed as literal",""
635311223589657236,"Parsed as literal","i"
635311223589667237,"ParseInternal"," i < h:list","44","LessThanOperator","44","48"," i "," h:list"
635311223589667237,"Parsed as literal"," i "
635311223589667237,"ParseInternal"," h:list","48","HeadOperator","48","51"," ","list"
635311223589667237,"Parsed as literal"," "
635311223589677238,"Parsed as literal","list"
635311223589677238,"ParseInternal","t:list","56","TailOperator","56","58","","list"
635311223589677238,"Parsed as literal",""
635311223589677238,"Parsed as literal","list"
635311223589687238,"ParseInternal"," h:list & @quickSort(@filter(@(i) -> i > h:list-1,t:list))","68","ConcatOperator","68","77"," h:list "," @quickSort(@filter(@(i) -> i > h:list-1,t:list))"
635311223589687238,"ParseInternal"," h:list ","68","HeadOperator","68","71"," ","list "
635311223589687238,"Parsed as literal"," "
635311223589687238,"Parsed as literal","list "
635311223589697239,"ParseInternal"," @quickSort(@filter(@(i) -> i > h:list-1,t:list))","77","FunctionCallOperator","79","88","quickSort","@filter(@(i) -> i > h:list-1,t:list)"
635311223589697239,"Parsed as literal","quickSort"
635311223589697239,"ParseInternal","@filter(@(i) -> i > h:list-1,t:list)","88","FunctionCallOperator","89","95","filter","@(i) -> i > h:list-1,t:list"
635311223589707239,"Parsed as literal","filter"
635311223589707239,"ParseInternal","@(i) -> i > h:list-1,t:list","95","CommaOperator","95","116","@(i) -> i > h:list-1","t:list"
635311223589707239,"ParseInternal","@(i) -> i > h:list-1","95","AnonAssignmentOperator","95","102","@(i) "," i > h:list-1"
635311223589707239,"ParseInternal","@(i) ","95","FunctionDeclarationOperator","96","96","","i"
635311223589717240,"Parsed as literal",""
635311223589717240,"Parsed as literal","i"
635311223589717240,"ParseInternal"," i > h:list-1","102","GreaterThanOperator","102","106"," i "," h:list-1"
635311223589717240,"Parsed as literal"," i "
635311223589727240,"ParseInternal"," h:list-1","106","MinusOperator","106","114"," h:list","1"
635311223589727240,"ParseInternal"," h:list","106","HeadOperator","106","109"," ","list"
635311223589727240,"Parsed as literal"," "
635311223589727240,"Parsed as literal","list"
635311223589737241,"Parsed as literal","1"
635311223589737241,"ParseInternal","t:list","116","TailOperator","116","118","","list"
635311223589737241,"Parsed as literal",""
635311223589737241,"Parsed as literal","list"
635311223589747242,"ParseInternal","@mergeSort([]) -> []","0","AssignmentOperator","0","17","@mergeSort([]) "," []"
635311223589747242,"ParseInternal","@mergeSort([]) ","0","FunctionCallOperator","1","10","mergeSort","[]"
635311223589747242,"Parsed as literal","mergeSort"
635311223589757242,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311223589757242,"Parsed as literal",""
635311223589757242,"Parsed as literal",""
635311223589757242,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311223589767243,"Parsed as literal",""
635311223589777243,"Parsed as literal",""
635311223589777243,"Invalid operator","@mergeSort([]) -> []","0"
635311223589787244,"ParseInternal","@mergeSort([]) ","0","FunctionDeclarationOperator","1","10","mergeSort","[]"
635311223589787244,"Parsed as literal","mergeSort"
635311223589787244,"ParseInternal","[]","10","OpenBracketOperator","10","10","",""
635311223589797244,"Parsed as literal",""
635311223589797244,"Parsed as literal",""
635311223589797244,"ParseInternal"," []","17","OpenBracketOperator","18","17","",""
635311223589797244,"Parsed as literal",""
635311223589807245,"Parsed as literal",""
635311223589807245,"ParseInternal","@mergeSort(list|t:list=[]) -> h:list","0","AssignmentOperator","0","29","@mergeSort(list|t:list=[]) "," h:list"
635311223589807245,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionCallOperator","1","10","mergeSort","list|t:list=[]"
635311223589807245,"Parsed as literal","mergeSort"
635311223589817246,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311223589817246,"Parsed as literal","list"
635311223589817246,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311223589817246,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311223589827246,"Parsed as literal",""
635311223589827246,"Parsed as literal","list"
635311223589827246,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311223589827246,"Parsed as literal",""
635311223589837247,"Parsed as literal",""
635311223589837247,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311223589837247,"Parsed as literal"," "
635311223589847247,"Parsed as literal","list"
635311223589847247,"Invalid operator","@mergeSort(list|t:list=[]) -> h:list","0"
635311223589847247,"ParseInternal","@mergeSort(list|t:list=[]) ","0","FunctionDeclarationOperator","1","10","mergeSort","list|t:list=[]"
635311223589847247,"Parsed as literal","mergeSort"
635311223589857248,"ParseInternal","list|t:list=[]","10","PatternOperator","10","15","list","t:list=[]"
635311223589857248,"Parsed as literal","list"
635311223589857248,"ParseInternal","t:list=[]","15","EqualityOperator","15","22","t:list","[]"
635311223589857248,"ParseInternal","t:list","15","TailOperator","15","17","","list"
635311223589867248,"Parsed as literal",""
635311223589867248,"Parsed as literal","list"
635311223589867248,"ParseInternal","[]","22","OpenBracketOperator","22","22","",""
635311223589867248,"Parsed as literal",""
635311223589877249,"Parsed as literal",""
635311223589877249,"ParseInternal"," h:list","29","HeadOperator","29","32"," ","list"
635311223589877249,"Parsed as literal"," "
635311223589877249,"Parsed as literal","list"
635311223589887250,"ParseInternal","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0","AssignmentOperator","0","19","@mergeSort(list) "," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))"
635311223589887250,"ParseInternal","@mergeSort(list) ","0","FunctionCallOperator","1","10","mergeSort","list"
635311223589887250,"Parsed as literal","mergeSort"
635311223589897250,"Parsed as literal","list"
635311223589897250,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311223589897250,"Parsed as literal","merge"
635311223589907251,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311223589907251,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311223589907251,"Parsed as literal","mergeSort"
635311223589917251,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311223589917251,"Parsed as literal","take"
635311223589917251,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311223589917251,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311223589927252,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311223589927252,"Parsed as literal","count"
635311223589927252,"Parsed as literal","list"
635311223589927252,"Parsed as literal","2"
635311223589937252,"Parsed as literal","list"
635311223589937252,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311223589937252,"Parsed as literal","mergeSort"
635311223589947253,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311223589947253,"Parsed as literal","skip"
635311223589947253,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311223589947253,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311223589957254,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311223589957254,"Parsed as literal","count"
635311223589957254,"Parsed as literal","list"
635311223589957254,"Parsed as literal","2"
635311223589967254,"Parsed as literal","list"
635311223589967254,"Invalid operator","@mergeSort(list) -> @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","0"
635311223589967254,"ParseInternal","@mergeSort(list) ","0","FunctionDeclarationOperator","1","10","mergeSort","list"
635311223589967254,"Parsed as literal","mergeSort"
635311223589977255,"Parsed as literal","list"
635311223589977255,"ParseInternal"," @merge(@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list)))","19","FunctionCallOperator","21","26","merge","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))"
635311223589977255,"Parsed as literal","merge"
635311223589987255,"ParseInternal","@mergeSort(@take(@count(list)/2,list)), @mergeSort(@skip(@count(list)/2,list))","26","CommaOperator","26","65","@mergeSort(@take(@count(list)/2,list))"," @mergeSort(@skip(@count(list)/2,list))"
635311223589987255,"ParseInternal","@mergeSort(@take(@count(list)/2,list))","26","FunctionCallOperator","27","36","mergeSort","@take(@count(list)/2,list)"
635311223589987255,"Parsed as literal","mergeSort"
635311223589997256,"ParseInternal","@take(@count(list)/2,list)","36","FunctionCallOperator","37","41","take","@count(list)/2,list"
635311223589997256,"Parsed as literal","take"
635311223589997256,"ParseInternal","@count(list)/2,list","41","CommaOperator","41","56","@count(list)/2","list"
635311223589997256,"ParseInternal","@count(list)/2","41","DivisionOperator","41","54","@count(list)","2"
635311223590007256,"ParseInternal","@count(list)","41","FunctionCallOperator","42","47","count","list"
635311223590007256,"Parsed as literal","count"
635311223590007256,"Parsed as literal","list"
635311223590007256,"Parsed as literal","2"
635311223590017257,"Parsed as literal","list"
635311223590017257,"ParseInternal"," @mergeSort(@skip(@count(list)/2,list))","65","FunctionCallOperator","67","76","mergeSort","@skip(@count(list)/2,list)"
635311223590017257,"Parsed as literal","mergeSort"
635311223590027258,"ParseInternal","@skip(@count(list)/2,list)","76","FunctionCallOperator","77","81","skip","@count(list)/2,list"
635311223590027258,"Parsed as literal","skip"
635311223590027258,"ParseInternal","@count(list)/2,list","81","CommaOperator","81","96","@count(list)/2","list"
635311223590027258,"ParseInternal","@count(list)/2","81","DivisionOperator","81","94","@count(list)","2"
635311223590037258,"ParseInternal","@count(list)","81","FunctionCallOperator","82","87","count","list"
635311223590037258,"Parsed as literal","count"
635311223590037258,"Parsed as literal","list"
635311223590037258,"Parsed as literal","2"
635311223590047259,"Parsed as literal","list"
635311223590047259,"ParseInternal","@merge([],list) -> list","0","AssignmentOperator","0","18","@merge([],list) "," list"
635311223590047259,"ParseInternal","@merge([],list) ","0","FunctionCallOperator","1","6","merge","[],list"
635311223590057259,"Parsed as literal","merge"
635311223590057259,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311223590057259,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311223590057259,"Parsed as literal",""
635311223590067260,"Parsed as literal",""
635311223590067260,"Parsed as literal","list"
635311223590067260,"Parsed as literal"," list"
635311223590077260,"Invalid operator","@merge([],list) -> list","0"
635311223590077260,"ParseInternal","@merge([],list) ","0","FunctionDeclarationOperator","1","6","merge","[],list"
635311223590077260,"Parsed as literal","merge"
635311223590077260,"ParseInternal","[],list","6","CommaOperator","6","9","[]","list"
635311223590087261,"ParseInternal","[]","6","OpenBracketOperator","6","6","",""
635311223590087261,"Parsed as literal",""
635311223590087261,"Parsed as literal",""
635311223590087261,"Parsed as literal","list"
635311223590097262,"Parsed as literal"," list"
635311223590097262,"ParseInternal","@merge(list,[]) -> list","0","AssignmentOperator","0","18","@merge(list,[]) "," list"
635311223590097262,"ParseInternal","@merge(list,[]) ","0","FunctionCallOperator","1","6","merge","list,[]"
635311223590097262,"Parsed as literal","merge"
635311223590107262,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311223590107262,"Parsed as literal","list"
635311223590107262,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311223590107262,"Parsed as literal",""
635311223590117263,"Parsed as literal",""
635311223590117263,"Parsed as literal"," list"
635311223590117263,"Invalid operator","@merge(list,[]) -> list","0"
635311223590127263,"ParseInternal","@merge(list,[]) ","0","FunctionDeclarationOperator","1","6","merge","list,[]"
635311223590127263,"Parsed as literal","merge"
635311223590127263,"ParseInternal","list,[]","6","CommaOperator","6","11","list","[]"
635311223590127263,"Parsed as literal","list"
635311223590137264,"ParseInternal","[]","11","OpenBracketOperator","11","11","",""
635311223590137264,"Parsed as literal",""
635311223590137264,"Parsed as literal",""
635311223590137264,"Parsed as literal"," list"
635311223590147264,"ParseInternal","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0","AssignmentOperator","0","46","@merge(left,right | not (h:left > h:right)) "," h:left & @merge(t:left,right)"
635311223590147264,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionCallOperator","1","6","merge","left,right | not (h:left > h:right)"
635311223590147264,"Parsed as literal","merge"
635311223590147264,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311223590157265,"Parsed as literal","left"
635311223590157265,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311223590157265,"Parsed as literal","right "
635311223590167266,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311223590167266,"Parsed as literal"," "
635311223590167266,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311223590167266,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311223590177266,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311223590177266,"Parsed as literal",""
635311223590177266,"Parsed as literal","left "
635311223590177266,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311223590187267,"Parsed as literal"," "
635311223590187267,"Parsed as literal","right"
635311223590187267,"Parsed as literal",""
635311223590187267,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311223590197267,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311223590197267,"Parsed as literal"," "
635311223590197267,"Parsed as literal","left "
635311223590207268,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311223590207268,"Parsed as literal","merge"
635311223590207268,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311223590207268,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311223590217268,"Parsed as literal",""
635311223590217268,"Parsed as literal","left"
635311223590217268,"Parsed as literal","right"
635311223590217268,"Invalid operator","@merge(left,right | not (h:left > h:right)) -> h:left & @merge(t:left,right)","0"
635311223590227269,"ParseInternal","@merge(left,right | not (h:left > h:right)) ","0","FunctionDeclarationOperator","1","6","merge","left,right | not (h:left > h:right)"
635311223590227269,"Parsed as literal","merge"
635311223590227269,"ParseInternal","left,right | not (h:left > h:right)","6","CommaOperator","6","11","left","right | not (h:left > h:right)"
635311223590227269,"Parsed as literal","left"
635311223590237270,"ParseInternal","right | not (h:left > h:right)","11","PatternOperator","11","18","right "," not (h:left > h:right)"
635311223590237270,"Parsed as literal","right "
635311223590237270,"ParseInternal"," not (h:left > h:right)","18","NotOperator","18","23"," ","(h:left > h:right)"
635311223590237270,"Parsed as literal"," "
635311223590247270,"ParseInternal","(h:left > h:right)","23","OpenParenOperator","23","23","h:left > h:right",""
635311223590247270,"ParseInternal","h:left > h:right","23","GreaterThanOperator","23","31","h:left "," h:right"
635311223590247270,"ParseInternal","h:left ","23","HeadOperator","23","25","","left "
635311223590247270,"Parsed as literal",""
635311223590257271,"Parsed as literal","left "
635311223590257271,"ParseInternal"," h:right","31","HeadOperator","31","34"," ","right"
635311223590257271,"Parsed as literal"," "
635311223590257271,"Parsed as literal","right"
635311223590267271,"Parsed as literal",""
635311223590267271,"ParseInternal"," h:left & @merge(t:left,right)","46","ConcatOperator","46","55"," h:left "," @merge(t:left,right)"
635311223590267271,"ParseInternal"," h:left ","46","HeadOperator","46","49"," ","left "
635311223590277272,"Parsed as literal"," "
635311223590277272,"Parsed as literal","left "
635311223590277272,"ParseInternal"," @merge(t:left,right)","55","FunctionCallOperator","57","62","merge","t:left,right"
635311223590277272,"Parsed as literal","merge"
635311223590287272,"ParseInternal","t:left,right","62","CommaOperator","62","69","t:left","right"
635311223590287272,"ParseInternal","t:left","62","TailOperator","62","64","","left"
635311223590287272,"Parsed as literal",""
635311223590287272,"Parsed as literal","left"
635311223590297273,"Parsed as literal","right"
635311223590297273,"ParseInternal","@merge(left,right) -> h:right & @merge(left,t:right)","0","AssignmentOperator","0","21","@merge(left,right) "," h:right & @merge(left,t:right)"
635311223590297273,"ParseInternal","@merge(left,right) ","0","FunctionCallOperator","1","6","merge","left,right"
635311223590307274,"Parsed as literal","merge"
635311223590307274,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311223590307274,"Parsed as literal","left"
635311223590307274,"Parsed as literal","right"
635311223590317274,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311223590317274,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311223590317274,"Parsed as literal"," "
635311223590317274,"Parsed as literal","right "
635311223590327275,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311223590327275,"Parsed as literal","merge"
635311223590327275,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311223590327275,"Parsed as literal","left"
635311223590337275,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311223590337275,"Parsed as literal",""
635311223590337275,"Parsed as literal","right"
635311223590337275,"Invalid operator","@merge(left,right) -> h:right & @merge(left,t:right)","0"
635311223590347276,"ParseInternal","@merge(left,right) ","0","FunctionDeclarationOperator","1","6","merge","left,right"
635311223590347276,"Parsed as literal","merge"
635311223590347276,"ParseInternal","left,right","6","CommaOperator","6","11","left","right"
635311223590347276,"Parsed as literal","left"
635311223590357276,"Parsed as literal","right"
635311223590357276,"ParseInternal"," h:right & @merge(left,t:right)","21","ConcatOperator","21","31"," h:right "," @merge(left,t:right)"
635311223590357276,"ParseInternal"," h:right ","21","HeadOperator","21","24"," ","right "
635311223590357276,"Parsed as literal"," "
635311223590367277,"Parsed as literal","right "
635311223590367277,"ParseInternal"," @merge(left,t:right)","31","FunctionCallOperator","33","38","merge","left,t:right"
635311223590367277,"Parsed as literal","merge"
635311223590377278,"ParseInternal","left,t:right","38","CommaOperator","38","43","left","t:right"
635311223590377278,"Parsed as literal","left"
635311223590377278,"ParseInternal","t:right","43","TailOperator","43","45","","right"
635311223590377278,"Parsed as literal",""
635311223590387278,"Parsed as literal","right"
635311223590387278,"ParseInternal","@bubbleSort(list|@isSorted(list)) -> list","0","AssignmentOperator","0","36","@bubbleSort(list|@isSorted(list)) "," list"
635311223590387278,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionCallOperator","1","11","bubbleSort","list|@isSorted(list)"
635311223590387278,"Parsed as literal","bubbleSort"
635311223590397279,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311223590397279,"Parsed as literal","list"
635311223590397279,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311223590397279,"Parsed as literal","isSorted"
635311223590407279,"Parsed as literal","list"
635311223590407279,"Parsed as literal"," list"
635311223590407279,"Invalid operator","@bubbleSort(list|@isSorted(list)) -> list","0"
635311223590407279,"ParseInternal","@bubbleSort(list|@isSorted(list)) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list|@isSorted(list)"
635311223590417280,"Parsed as literal","bubbleSort"
635311223590417280,"ParseInternal","list|@isSorted(list)","11","PatternOperator","11","16","list","@isSorted(list)"
635311223590417280,"Parsed as literal","list"
635311223590427280,"ParseInternal","@isSorted(list)","16","FunctionCallOperator","17","25","isSorted","list"
635311223590427280,"Parsed as literal","isSorted"
635311223590427280,"Parsed as literal","list"
635311223590427280,"Parsed as literal"," list"
635311223590437281,"ParseInternal","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0","AssignmentOperator","0","20","@bubbleSort(list) "," @bubbleSort(@bubbleSortPass(list))"
635311223590437281,"ParseInternal","@bubbleSort(list) ","0","FunctionCallOperator","1","11","bubbleSort","list"
635311223590437281,"Parsed as literal","bubbleSort"
635311223590437281,"Parsed as literal","list"
635311223590447282,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311223590447282,"Parsed as literal","bubbleSort"
635311223590447282,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311223590457282,"Parsed as literal","bubbleSortPass"
635311223590457282,"Parsed as literal","list"
635311223590457282,"Invalid operator","@bubbleSort(list) -> @bubbleSort(@bubbleSortPass(list))","0"
635311223590457282,"ParseInternal","@bubbleSort(list) ","0","FunctionDeclarationOperator","1","11","bubbleSort","list"
635311223590467283,"Parsed as literal","bubbleSort"
635311223590467283,"Parsed as literal","list"
635311223590467283,"ParseInternal"," @bubbleSort(@bubbleSortPass(list))","20","FunctionCallOperator","22","32","bubbleSort","@bubbleSortPass(list)"
635311223590467283,"Parsed as literal","bubbleSort"
635311223590477283,"ParseInternal","@bubbleSortPass(list)","32","FunctionCallOperator","33","47","bubbleSortPass","list"
635311223590477283,"Parsed as literal","bubbleSortPass"
635311223590477283,"Parsed as literal","list"
635311223590487284,"ParseInternal","@bubbleSortPass([]) -> []","0","AssignmentOperator","0","22","@bubbleSortPass([]) "," []"
635311223590487284,"ParseInternal","@bubbleSortPass([]) ","0","FunctionCallOperator","1","15","bubbleSortPass","[]"
635311223590487284,"Parsed as literal","bubbleSortPass"
635311223590497284,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311223590497284,"Parsed as literal",""
635311223590497284,"Parsed as literal",""
635311223590497284,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311223590507285,"Parsed as literal",""
635311223590507285,"Parsed as literal",""
635311223590507285,"Invalid operator","@bubbleSortPass([]) -> []","0"
635311223590507285,"ParseInternal","@bubbleSortPass([]) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","[]"
635311223590517286,"Parsed as literal","bubbleSortPass"
635311223590517286,"ParseInternal","[]","15","OpenBracketOperator","15","15","",""
635311223590517286,"Parsed as literal",""
635311223590517286,"Parsed as literal",""
635311223590527286,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311223590527286,"Parsed as literal",""
635311223590527286,"Parsed as literal",""
635311223590527286,"ParseInternal","@bubbleSortPass(list|t:list = []) -> h:list","0","AssignmentOperator","0","36","@bubbleSortPass(list|t:list = []) "," h:list"
635311223590537287,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|t:list = []"
635311223590537287,"Parsed as literal","bubbleSortPass"
635311223590537287,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311223590547287,"Parsed as literal","list"
635311223590547287,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311223590547287,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311223590547287,"Parsed as literal",""
635311223590557288,"Parsed as literal","list "
635311223590557288,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311223590557288,"Parsed as literal",""
635311223590557288,"Parsed as literal",""
635311223590567288,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311223590567288,"Parsed as literal"," "
635311223590567288,"Parsed as literal","list"
635311223590567288,"Invalid operator","@bubbleSortPass(list|t:list = []) -> h:list","0"
635311223590577289,"ParseInternal","@bubbleSortPass(list|t:list = []) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|t:list = []"
635311223590577289,"Parsed as literal","bubbleSortPass"
635311223590577289,"ParseInternal","list|t:list = []","15","PatternOperator","15","20","list","t:list = []"
635311223590577289,"Parsed as literal","list"
635311223590587290,"ParseInternal","t:list = []","20","EqualityOperator","20","28","t:list "," []"
635311223590587290,"ParseInternal","t:list ","20","TailOperator","20","22","","list "
635311223590587290,"Parsed as literal",""
635311223590587290,"Parsed as literal","list "
635311223590597290,"ParseInternal"," []","28","OpenBracketOperator","29","28","",""
635311223590597290,"Parsed as literal",""
635311223590597290,"Parsed as literal",""
635311223590607291,"ParseInternal"," h:list","36","HeadOperator","36","39"," ","list"
635311223590607291,"Parsed as literal"," "
635311223590607291,"Parsed as literal","list"
635311223590607291,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0","AssignmentOperator","0","42","@bubbleSortPass(list|h:list < h:t:list) "," h:list & @bubbleSortPass(t:list)"
635311223590617291,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311223590617291,"Parsed as literal","bubbleSortPass"
635311223590617291,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311223590617291,"Parsed as literal","list"
635311223590627292,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311223590627292,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311223590627292,"Parsed as literal",""
635311223590627292,"Parsed as literal","list "
635311223590637292,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311223590637292,"Parsed as literal"," "
635311223590637292,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311223590637292,"Parsed as literal",""
635311223590647293,"Parsed as literal","list"
635311223590647293,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311223590647293,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311223590647293,"Parsed as literal"," "
635311223590657294,"Parsed as literal","list "
635311223590657294,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311223590657294,"Parsed as literal","bubbleSortPass"
635311223590667294,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311223590667294,"Parsed as literal",""
635311223590667294,"Parsed as literal","list"
635311223590667294,"Invalid operator","@bubbleSortPass(list|h:list < h:t:list) -> h:list & @bubbleSortPass(t:list)","0"
635311223590677295,"ParseInternal","@bubbleSortPass(list|h:list < h:t:list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list|h:list < h:t:list"
635311223590677295,"Parsed as literal","bubbleSortPass"
635311223590677295,"ParseInternal","list|h:list < h:t:list","15","PatternOperator","15","20","list","h:list < h:t:list"
635311223590677295,"Parsed as literal","list"
635311223590687295,"ParseInternal","h:list < h:t:list","20","LessThanOperator","20","28","h:list "," h:t:list"
635311223590687295,"ParseInternal","h:list ","20","HeadOperator","20","22","","list "
635311223590687295,"Parsed as literal",""
635311223590687295,"Parsed as literal","list "
635311223590697296,"ParseInternal"," h:t:list","28","HeadOperator","28","31"," ","t:list"
635311223590697296,"Parsed as literal"," "
635311223590697296,"ParseInternal","t:list","31","TailOperator","31","33","","list"
635311223590697296,"Parsed as literal",""
635311223590707296,"Parsed as literal","list"
635311223590707296,"ParseInternal"," h:list & @bubbleSortPass(t:list)","42","ConcatOperator","42","51"," h:list "," @bubbleSortPass(t:list)"
635311223590707296,"ParseInternal"," h:list ","42","HeadOperator","42","45"," ","list "
635311223590707296,"Parsed as literal"," "
635311223590717297,"Parsed as literal","list "
635311223590717297,"ParseInternal"," @bubbleSortPass(t:list)","51","FunctionCallOperator","53","67","bubbleSortPass","t:list"
635311223590717297,"Parsed as literal","bubbleSortPass"
635311223590717297,"ParseInternal","t:list","67","TailOperator","67","69","","list"
635311223590727298,"Parsed as literal",""
635311223590727298,"Parsed as literal","list"
635311223590727298,"ParseInternal","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0","AssignmentOperator","0","24","@bubbleSortPass(list) "," h:t:list & @bubbleSortPass(h:list & t:t:list)"
635311223590727298,"ParseInternal","@bubbleSortPass(list) ","0","FunctionCallOperator","1","15","bubbleSortPass","list"
635311223590737298,"Parsed as literal","bubbleSortPass"
635311223590737298,"Parsed as literal","list"
635311223590737298,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311223590747299,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311223590747299,"Parsed as literal"," "
635311223590747299,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311223590747299,"Parsed as literal",""
635311223590757299,"Parsed as literal","list "
635311223590757299,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311223590757299,"Parsed as literal","bubbleSortPass"
635311223590767300,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311223590767300,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311223590767300,"Parsed as literal",""
635311223590767300,"Parsed as literal","list "
635311223590777300,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311223590777300,"Parsed as literal"," "
635311223590777300,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311223590777300,"Parsed as literal",""
635311223590787301,"Parsed as literal","list"
635311223590787301,"Invalid operator","@bubbleSortPass(list) -> h:t:list & @bubbleSortPass(h:list & t:t:list)","0"
635311223590787301,"ParseInternal","@bubbleSortPass(list) ","0","FunctionDeclarationOperator","1","15","bubbleSortPass","list"
635311223590797302,"Parsed as literal","bubbleSortPass"
635311223590797302,"Parsed as literal","list"
635311223590797302,"ParseInternal"," h:t:list & @bubbleSortPass(h:list & t:t:list)","24","ConcatOperator","24","35"," h:t:list "," @bubbleSortPass(h:list & t:t:list)"
635311223590797302,"ParseInternal"," h:t:list ","24","HeadOperator","24","27"," ","t:list "
635311223590807302,"Parsed as literal"," "
635311223590807302,"ParseInternal","t:list ","27","TailOperator","27","29","","list "
635311223590807302,"Parsed as literal",""
635311223590807302,"Parsed as literal","list "
635311223590817303,"ParseInternal"," @bubbleSortPass(h:list & t:t:list)","35","FunctionCallOperator","37","51","bubbleSortPass","h:list & t:t:list"
635311223590817303,"Parsed as literal","bubbleSortPass"
635311223590817303,"ParseInternal","h:list & t:t:list","51","ConcatOperator","51","59","h:list "," t:t:list"
635311223590817303,"ParseInternal","h:list ","51","HeadOperator","51","53","","list "
635311223590827303,"Parsed as literal",""
635311223590827303,"Parsed as literal","list "
635311223590827303,"ParseInternal"," t:t:list","59","TailOperator","59","62"," ","t:list"
635311223590827303,"Parsed as literal"," "
635311223590837304,"ParseInternal","t:list","62","TailOperator","62","64","","list"
635311223590837304,"Parsed as literal",""
635311223590837304,"Parsed as literal","list"
635311223590837304,"ParseInternal","@isSorted([]) -> true","0","AssignmentOperator","0","16","@isSorted([]) "," true"
635311223590847305,"ParseInternal","@isSorted([]) ","0","FunctionCallOperator","1","9","isSorted","[]"
635311223590847305,"Parsed as literal","isSorted"
635311223590847305,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311223590847305,"Parsed as literal",""
635311223590857305,"Parsed as literal",""
635311223590857305,"Parsed as literal"," true"
635311223590857305,"Invalid operator","@isSorted([]) -> true","0"
635311223590867306,"ParseInternal","@isSorted([]) ","0","FunctionDeclarationOperator","1","9","isSorted","[]"
635311223590867306,"Parsed as literal","isSorted"
635311223590867306,"ParseInternal","[]","9","OpenBracketOperator","9","9","",""
635311223590867306,"Parsed as literal",""
635311223590877306,"Parsed as literal",""
635311223590877306,"Parsed as literal"," true"
635311223590877306,"ParseInternal","@isSorted(list|t:list = []) -> true","0","AssignmentOperator","0","30","@isSorted(list|t:list = []) "," true"
635311223590877306,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionCallOperator","1","9","isSorted","list|t:list = []"
635311223590887307,"Parsed as literal","isSorted"
635311223590887307,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311223590887307,"Parsed as literal","list"
635311223590887307,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311223590897307,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311223590897307,"Parsed as literal",""
635311223590897307,"Parsed as literal","list "
635311223590897307,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311223590907308,"Parsed as literal",""
635311223590907308,"Parsed as literal",""
635311223590907308,"Parsed as literal"," true"
635311223590917309,"Invalid operator","@isSorted(list|t:list = []) -> true","0"
635311223590917309,"ParseInternal","@isSorted(list|t:list = []) ","0","FunctionDeclarationOperator","1","9","isSorted","list|t:list = []"
635311223590917309,"Parsed as literal","isSorted"
635311223590917309,"ParseInternal","list|t:list = []","9","PatternOperator","9","14","list","t:list = []"
635311223590927309,"Parsed as literal","list"
635311223590927309,"ParseInternal","t:list = []","14","EqualityOperator","14","22","t:list "," []"
635311223590927309,"ParseInternal","t:list ","14","TailOperator","14","16","","list "
635311223590927309,"Parsed as literal",""
635311223590937310,"Parsed as literal","list "
635311223590937310,"ParseInternal"," []","22","OpenBracketOperator","23","22","",""
635311223590937310,"Parsed as literal",""
635311223590937310,"Parsed as literal",""
635311223590947310,"Parsed as literal"," true"
635311223590947310,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0","AssignmentOperator","0","42","@isSorted(list|not (h:list > h:t:list)) "," @isSorted(t:list)"
635311223590947310,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionCallOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311223590957311,"Parsed as literal","isSorted"
635311223590957311,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311223590957311,"Parsed as literal","list"
635311223590957311,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311223590967311,"Parsed as literal",""
635311223590967311,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311223590967311,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311223590977312,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311223590977312,"Parsed as literal",""
635311223590977312,"Parsed as literal","list "
635311223590987313,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311223590987313,"Parsed as literal"," "
635311223590987313,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311223590987313,"Parsed as literal",""
635311223590997313,"Parsed as literal","list"
635311223590997313,"Parsed as literal",""
635311223590997313,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311223591007314,"Parsed as literal","isSorted"
635311223591007314,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311223591007314,"Parsed as literal",""
635311223591007314,"Parsed as literal","list"
635311223591017314,"Invalid operator","@isSorted(list|not (h:list > h:t:list)) -> @isSorted(t:list)","0"
635311223591017314,"ParseInternal","@isSorted(list|not (h:list > h:t:list)) ","0","FunctionDeclarationOperator","1","9","isSorted","list|not (h:list > h:t:list)"
635311223591017314,"Parsed as literal","isSorted"
635311223591027315,"ParseInternal","list|not (h:list > h:t:list)","9","PatternOperator","9","14","list","not (h:list > h:t:list)"
635311223591027315,"Parsed as literal","list"
635311223591027315,"ParseInternal","not (h:list > h:t:list)","14","NotOperator","14","18","","(h:list > h:t:list)"
635311223591037315,"Parsed as literal",""
635311223591037315,"ParseInternal","(h:list > h:t:list)","18","OpenParenOperator","18","18","h:list > h:t:list",""
635311223591037315,"ParseInternal","h:list > h:t:list","18","GreaterThanOperator","18","26","h:list "," h:t:list"
635311223591037315,"ParseInternal","h:list ","18","HeadOperator","18","20","","list "
635311223591047316,"Parsed as literal",""
635311223591047316,"Parsed as literal","list "
635311223591047316,"ParseInternal"," h:t:list","26","HeadOperator","26","29"," ","t:list"
635311223591057317,"Parsed as literal"," "
635311223591057317,"ParseInternal","t:list","29","TailOperator","29","31","","list"
635311223591057317,"Parsed as literal",""
635311223591057317,"Parsed as literal","list"
635311223591067317,"Parsed as literal",""
635311223591067317,"ParseInternal"," @isSorted(t:list)","42","FunctionCallOperator","44","52","isSorted","t:list"
635311223591067317,"Parsed as literal","isSorted"
635311223591067317,"ParseInternal","t:list","52","TailOperator","52","54","","list"
635311223591077318,"Parsed as literal",""
635311223591077318,"Parsed as literal","list"
635311223591077318,"ParseInternal","@isSorted(list) -> false","0","AssignmentOperator","0","18","@isSorted(list) "," false"
635311223591087318,"ParseInternal","@isSorted(list) ","0","FunctionCallOperator","1","9","isSorted","list"
635311223591087318,"Parsed as literal","isSorted"
635311223591087318,"Parsed as literal","list"
635311223591087318,"Parsed as literal"," false"
635311223591097319,"Invalid operator","@isSorted(list) -> false","0"
635311223591097319,"ParseInternal","@isSorted(list) ","0","FunctionDeclarationOperator","1","9","isSorted","list"
635311223591097319,"Parsed as literal","isSorted"
635311223591097319,"Parsed as literal","list"
635311223591107319,"Parsed as literal"," false"
635311223591107319,"ParseInternal","@insertionSort([]) -> []","0","AssignmentOperator","0","21","@insertionSort([]) "," []"
635311223591107319,"ParseInternal","@insertionSort([]) ","0","FunctionCallOperator","1","14","insertionSort","[]"
635311223591117320,"Parsed as literal","insertionSort"
635311223591117320,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311223591117320,"Parsed as literal",""
635311223591117320,"Parsed as literal",""
635311223591127321,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311223591127321,"Parsed as literal",""
635311223591127321,"Parsed as literal",""
635311223591127321,"Invalid operator","@insertionSort([]) -> []","0"
635311223591137321,"ParseInternal","@insertionSort([]) ","0","FunctionDeclarationOperator","1","14","insertionSort","[]"
635311223591137321,"Parsed as literal","insertionSort"
635311223591137321,"ParseInternal","[]","14","OpenBracketOperator","14","14","",""
635311223591137321,"Parsed as literal",""
635311223591147322,"Parsed as literal",""
635311223591147322,"ParseInternal"," []","21","OpenBracketOperator","22","21","",""
635311223591147322,"Parsed as literal",""
635311223591147322,"Parsed as literal",""
635311223591157322,"ParseInternal","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0","AssignmentOperator","0","23","@insertionSort(list) "," @insert(h:list, @insertionSort(t:list))"
635311223591157322,"ParseInternal","@insertionSort(list) ","0","FunctionCallOperator","1","14","insertionSort","list"
635311223591157322,"Parsed as literal","insertionSort"
635311223591167323,"Parsed as literal","list"
635311223591167323,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311223591167323,"Parsed as literal","insert"
635311223591167323,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311223591177323,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311223591177323,"Parsed as literal",""
635311223591177323,"Parsed as literal","list"
635311223591177323,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311223591187324,"Parsed as literal","insertionSort"
635311223591187324,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311223591187324,"Parsed as literal",""
635311223591187324,"Parsed as literal","list"
635311223591197325,"Invalid operator","@insertionSort(list) -> @insert(h:list, @insertionSort(t:list))","0"
635311223591197325,"ParseInternal","@insertionSort(list) ","0","FunctionDeclarationOperator","1","14","insertionSort","list"
635311223591197325,"Parsed as literal","insertionSort"
635311223591197325,"Parsed as literal","list"
635311223591207325,"ParseInternal"," @insert(h:list, @insertionSort(t:list))","23","FunctionCallOperator","25","31","insert","h:list, @insertionSort(t:list)"
635311223591207325,"Parsed as literal","insert"
635311223591207325,"ParseInternal","h:list, @insertionSort(t:list)","31","CommaOperator","31","38","h:list"," @insertionSort(t:list)"
635311223591217326,"ParseInternal","h:list","31","HeadOperator","31","33","","list"
635311223591217326,"Parsed as literal",""
635311223591217326,"Parsed as literal","list"
635311223591217326,"ParseInternal"," @insertionSort(t:list)","38","FunctionCallOperator","40","53","insertionSort","t:list"
635311223591227326,"Parsed as literal","insertionSort"
635311223591227326,"ParseInternal","t:list","53","TailOperator","53","55","","list"
635311223591227326,"Parsed as literal",""
635311223591227326,"Parsed as literal","list"
635311223591237327,"ParseInternal","@insert(item,[]) -> item","0","AssignmentOperator","0","19","@insert(item,[]) "," item"
635311223591237327,"ParseInternal","@insert(item,[]) ","0","FunctionCallOperator","1","7","insert","item,[]"
635311223591237327,"Parsed as literal","insert"
635311223591237327,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311223591247327,"Parsed as literal","item"
635311223591247327,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311223591247327,"Parsed as literal",""
635311223591247327,"Parsed as literal",""
635311223591257328,"Parsed as literal"," item"
635311223591257328,"Invalid operator","@insert(item,[]) -> item","0"
635311223591257328,"ParseInternal","@insert(item,[]) ","0","FunctionDeclarationOperator","1","7","insert","item,[]"
635311223591267329,"Parsed as literal","insert"
635311223591267329,"ParseInternal","item,[]","7","CommaOperator","7","12","item","[]"
635311223591267329,"Parsed as literal","item"
635311223591267329,"ParseInternal","[]","12","OpenBracketOperator","12","12","",""
635311223591277329,"Parsed as literal",""
635311223591277329,"Parsed as literal",""
635311223591277329,"Parsed as literal"," item"
635311223591277329,"ParseInternal","@insert(item,list | item < h:list) -> item & list","0","AssignmentOperator","0","37","@insert(item,list | item < h:list) "," item & list"
635311223591287330,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionCallOperator","1","7","insert","item,list | item < h:list"
635311223591287330,"Parsed as literal","insert"
635311223591287330,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311223591287330,"Parsed as literal","item"
635311223591297330,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311223591297330,"Parsed as literal","list "
635311223591297330,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311223591297330,"Parsed as literal"," item "
635311223591307331,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311223591307331,"Parsed as literal"," "
635311223591307331,"Parsed as literal","list"
635311223591317331,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311223591317331,"Parsed as literal"," item "
635311223591317331,"Parsed as literal"," list"
635311223591317331,"Invalid operator","@insert(item,list | item < h:list) -> item & list","0"
635311223591327332,"ParseInternal","@insert(item,list | item < h:list) ","0","FunctionDeclarationOperator","1","7","insert","item,list | item < h:list"
635311223591327332,"Parsed as literal","insert"
635311223591327332,"ParseInternal","item,list | item < h:list","7","CommaOperator","7","12","item","list | item < h:list"
635311223591327332,"Parsed as literal","item"
635311223591337333,"ParseInternal","list | item < h:list","12","PatternOperator","12","18","list "," item < h:list"
635311223591337333,"Parsed as literal","list "
635311223591337333,"ParseInternal"," item < h:list","18","LessThanOperator","18","25"," item "," h:list"
635311223591337333,"Parsed as literal"," item "
635311223591347333,"ParseInternal"," h:list","25","HeadOperator","25","28"," ","list"
635311223591347333,"Parsed as literal"," "
635311223591347333,"Parsed as literal","list"
635311223591347333,"ParseInternal"," item & list","37","ConcatOperator","37","44"," item "," list"
635311223591357334,"Parsed as literal"," item "
635311223591357334,"Parsed as literal"," list"
635311223591367334,"ParseInternal","@insert(item,list) -> h:list & @insert(item,t:list)","0","AssignmentOperator","0","21","@insert(item,list) "," h:list & @insert(item,t:list)"
635311223591367334,"ParseInternal","@insert(item,list) ","0","FunctionCallOperator","1","7","insert","item,list"
635311223591367334,"Parsed as literal","insert"
635311223591367334,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311223591377335,"Parsed as literal","item"
635311223591377335,"Parsed as literal","list"
635311223591377335,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311223591377335,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311223591387335,"Parsed as literal"," "
635311223591387335,"Parsed as literal","list "
635311223591387335,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311223591387335,"Parsed as literal","insert"
635311223591397336,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311223591397336,"Parsed as literal","item"
635311223591397336,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311223591407337,"Parsed as literal",""
635311223591407337,"Parsed as literal","list"
635311223591407337,"Invalid operator","@insert(item,list) -> h:list & @insert(item,t:list)","0"
635311223591407337,"ParseInternal","@insert(item,list) ","0","FunctionDeclarationOperator","1","7","insert","item,list"
635311223591417337,"Parsed as literal","insert"
635311223591447339,"ParseInternal","item,list","7","CommaOperator","7","12","item","list"
635311223591447339,"Parsed as literal","item"
635311223591447339,"Parsed as literal","list"
635311223591447339,"ParseInternal"," h:list & @insert(item,t:list)","21","ConcatOperator","21","30"," h:list "," @insert(item,t:list)"
635311223591457339,"ParseInternal"," h:list ","21","HeadOperator","21","24"," ","list "
635311223591457339,"Parsed as literal"," "
635311223591457339,"Parsed as literal","list "
635311223591467340,"ParseInternal"," @insert(item,t:list)","30","FunctionCallOperator","32","38","insert","item,t:list"
635311223591467340,"Parsed as literal","insert"
635311223591467340,"ParseInternal","item,t:list","38","CommaOperator","38","43","item","t:list"
635311223591477341,"Parsed as literal","item"
635311223591477341,"ParseInternal","t:list","43","TailOperator","43","45","","list"
635311223591477341,"Parsed as literal",""
635311223591477341,"Parsed as literal","list"
635311223591487341,"StepEvaluate","->","Changed","Declared @quickSort"
635311223591487341,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311223591487341,"StepEvaluate","->","Changed","Declared @quickSort"
635311223591487341,"StepEvaluate","Declared @quickSort","Unchanged","Declared @quickSort"
635311223591497342,"StepEvaluate","->","Changed","Declared @mergeSort"
635311223591497342,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311223591497342,"StepEvaluate","->","Changed","Declared @mergeSort"
635311223591497342,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311223591507342,"StepEvaluate","->","Changed","Declared @mergeSort"
635311223591507342,"StepEvaluate","Declared @mergeSort","Unchanged","Declared @mergeSort"
635311223591507342,"StepEvaluate","->","Changed","Declared @merge"
635311223591507342,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311223591517343,"StepEvaluate","->","Changed","Declared @merge"
635311223591517343,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311223591517343,"StepEvaluate","->","Changed","Declared @merge"
635311223591517343,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311223591527343,"StepEvaluate","->","Changed","Declared @merge"
635311223591527343,"StepEvaluate","Declared @merge","Unchanged","Declared @merge"
635311223591527343,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311223591527343,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311223591537344,"StepEvaluate","->","Changed","Declared @bubbleSort"
635311223591537344,"StepEvaluate","Declared @bubbleSort","Unchanged","Declared @bubbleSort"
635311223591537344,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311223591537344,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311223591547345,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311223591547345,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311223591547345,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311223591547345,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311223591557345,"StepEvaluate","->","Changed","Declared @bubbleSortPass"
635311223591557345,"StepEvaluate","Declared @bubbleSortPass","Unchanged","Declared @bubbleSortPass"
635311223591557345,"StepEvaluate","->","Changed","Declared @isSorted"
635311223591557345,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311223591567346,"StepEvaluate","->","Changed","Declared @isSorted"
635311223591567346,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311223591567346,"StepEvaluate","->","Changed","Declared @isSorted"
635311223591567346,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311223591577346,"StepEvaluate","->","Changed","Declared @isSorted"
635311223591577346,"StepEvaluate","Declared @isSorted","Unchanged","Declared @isSorted"
635311223591577346,"StepEvaluate","->","Changed","Declared @insertionSort"
635311223591577346,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311223591587347,"StepEvaluate","->","Changed","Declared @insertionSort"
635311223591587347,"StepEvaluate","Declared @insertionSort","Unchanged","Declared @insertionSort"
635311223591587347,"StepEvaluate","->","Changed","Declared @insert"
635311223591587347,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311223591597347,"StepEvaluate","->","Changed","Declared @insert"
635311223591597347,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311223591597347,"StepEvaluate","->","Changed","Declared @insert"
635311223591597347,"StepEvaluate","Declared @insert","Unchanged","Declared @insert"
635311223591597347,"StepEvaluate","[]","Changed","File imported"
635311223591607348,"StepEvaluate","File imported","Unchanged","File imported"
635311223591607348,"StepEvaluate","[]","Changed","File imported"
635311223591607348,"StepEvaluate","File imported","Unchanged","File imported"
635311223591607348,"ParseInternal","@fib(-1)","0","FunctionCallOperator","1","4","fib","-1"
635311223591617349,"Parsed as literal","fib"
635311223591617349,"ParseInternal","-1","4","MinusOperator","4","5","","1"
635311223591617349,"Parsed as literal",""
635311223591627349,"Parsed as literal","1"
635311223600057831,"StepEvaluate","@","Changed","@"
635311223600077832,"StepEvaluate","SEL@fib","Unchanged","SEL@fib"
635311223600087833,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223600317846,"StepEvaluate",",","Unchanged",","
635311223600327847,"StepEvaluate","@Arg","Unchanged","@Arg"
635311223600327847,"StepEvaluate","0","Unchanged","0"
635311223600337847,"StepEvaluate","@","Unchanged","@"
635311223600337847,"StepEvaluate","fib","Unchanged","fib"
635311223600337847,"StepEvaluate",",","Unchanged",","
635311223600347848,"StepEvaluate","-","Unchanged","-"
635311223600347848,"StepEvaluate","1","Unchanged","1"
635311223613328590,"StepEvaluate","SEL@fib","Unchanged","SEL@fib"
635311223613338591,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223613348592,"StepEvaluate",",","Unchanged",","
635311223613358592,"StepEvaluate","@Arg","Unchanged","@Arg"
635311223613368593,"StepEvaluate","0","Unchanged","0"
635311223613368593,"StepEvaluate","@","Unchanged","@"
635311223613378593,"StepEvaluate","fib","Unchanged","fib"
635311223613388594,"StepEvaluate",",","Unchanged",","
635311223613398594,"StepEvaluate","-","Unchanged","-"
635311223613408595,"StepEvaluate","1","Unchanged","1"
635311223619568947,"StepEvaluate","SEL@fib","Unchanged","SEL@fib"
635311223619588948,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223619588948,"StepEvaluate",",","Unchanged",","
635311223619598949,"StepEvaluate","@Arg","Unchanged","@Arg"
635311223619608950,"StepEvaluate","0","Unchanged","0"
635311223619618950,"StepEvaluate","@","Unchanged","@"
635311223619618950,"StepEvaluate","fib","Unchanged","fib"
635311223619628951,"StepEvaluate",",","Unchanged",","
635311223619638951,"StepEvaluate","-","Unchanged","-"
635311223619638951,"StepEvaluate","1","Unchanged","1"
635311223622769130,"StepEvaluate","SEL@fib","Unchanged","SEL@fib"
635311223622779131,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223622789131,"StepEvaluate",",","Unchanged",","
635311223622799132,"StepEvaluate","@Arg","Unchanged","@Arg"
635311223622809133,"StepEvaluate","0","Unchanged","0"
635311223622809133,"StepEvaluate","@","Unchanged","@"
635311223622819133,"StepEvaluate","fib","Unchanged","fib"
635311223622829134,"StepEvaluate",",","Unchanged",","
635311223622839134,"StepEvaluate","-","Unchanged","-"
635311223622839134,"StepEvaluate","1","Unchanged","1"
635311223624639237,"StepEvaluate","SEL@fib","Unchanged","SEL@fib"
635311223624659238,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223624669239,"StepEvaluate",",","Unchanged",","
635311223624879251,"StepEvaluate","@Arg","Unchanged","@Arg"
635311223624889252,"StepEvaluate","0","Unchanged","0"
635311223624899252,"StepEvaluate","@","Unchanged","@"
635311223624909253,"StepEvaluate","fib","Unchanged","fib"
635311223624909253,"StepEvaluate",",","Unchanged",","
635311223624919253,"StepEvaluate","-","Unchanged","-"
635311223624929254,"StepEvaluate","1","Unchanged","1"
635311223626359336,"StepEvaluate","SEL@fib","Unchanged","SEL@fib"
635311223626379337,"StepEvaluate","PAT@","Unchanged","PAT@"
635311223626389337,"StepEvaluate",",","Unchanged",","
635311223626399338,"StepEvaluate","@Arg","Unchanged","@Arg"
635311223626409339,"StepEvaluate","0","Unchanged","0"
635311223626419339,"StepEvaluate","@","Unchanged","@"
635311223626419339,"StepEvaluate","fib","Unchanged","fib"
635311223626429340,"StepEvaluate",",","Unchanged",","
635311223626439340,"StepEvaluate","-","Unchanged","-"
635311223626439340,"StepEvaluate","1","Unchanged","1"
